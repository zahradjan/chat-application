import { default as parseDuration } from "parse-duration";
export const command: string;
export const describe: string;
export const builder: {
    'dry-run': {
        type: string;
        describe: string;
        default: boolean;
    };
    timeout: {
        type: string;
        coerce: typeof parseDuration;
    };
};
/**
 * @param {object} argv
 * @param {import('../../../types').Context} argv.ctx
 * @param {string} argv.profile
 * @param {boolean} argv.dryRun
 * @param {number} argv.timeout
 */
export function handler({ ctx, profile, dryRun, timeout }: {
    ctx: import("../../../types").Context;
    profile: string;
    dryRun: boolean;
    timeout: number;
}): Promise<void>;
/**
 * @param {object} argv
 * @param {import('../../../types').Context} argv.ctx
 * @param {string} argv.profile
 * @param {boolean} argv.dryRun
 * @param {number} argv.timeout
 */
export function handler({ ctx, profile, dryRun, timeout }: {
    ctx: import("../../../types").Context;
    profile: string;
    dryRun: boolean;
    timeout: number;
}): Promise<void>;
//# sourceMappingURL=apply.d.ts.map
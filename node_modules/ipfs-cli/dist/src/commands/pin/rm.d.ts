import { default as parseDuration } from "parse-duration";
export const command: string;
export const describe: string;
export const builder: {
    recursive: {
        type: string;
        alias: string;
        default: boolean;
        describe: string;
    };
    'cid-base': {
        describe: string;
        type: string;
        default: string;
    };
    timeout: {
        type: string;
        coerce: typeof parseDuration;
    };
};
/**
 * @param {object} argv
 * @param {import('../../types').Context} argv.ctx
 * @param {string[]} argv.ipfsPath
 * @param {boolean} argv.recursive
 * @param {string} argv.cidBase
 * @param {number} argv.timeout
 */
export function handler({ ctx, ipfsPath, timeout, recursive, cidBase }: {
    ctx: import("../../types").Context;
    ipfsPath: string[];
    recursive: boolean;
    cidBase: string;
    timeout: number;
}): Promise<void>;
/**
 * @param {object} argv
 * @param {import('../../types').Context} argv.ctx
 * @param {string[]} argv.ipfsPath
 * @param {boolean} argv.recursive
 * @param {string} argv.cidBase
 * @param {number} argv.timeout
 */
export function handler({ ctx, ipfsPath, timeout, recursive, cidBase }: {
    ctx: import("../../types").Context;
    ipfsPath: string[];
    recursive: boolean;
    cidBase: string;
    timeout: number;
}): Promise<void>;
//# sourceMappingURL=rm.d.ts.map
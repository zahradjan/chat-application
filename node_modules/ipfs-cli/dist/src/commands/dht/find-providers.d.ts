import { default as parseDuration } from "parse-duration";
export const command: string;
export const describe: string;
export const builder: {
    key: {
        type: string;
        coerce: (value: any) => import("multiformats/cid").CID | undefined;
    };
    'num-providers': {
        alias: string;
        describe: string;
        default: number;
        type: string;
    };
    timeout: {
        type: string;
        coerce: typeof parseDuration;
    };
};
/**
 * @param {object} argv
 * @param {import('../../types').Context} argv.ctx
 * @param {import('multiformats/cid').CID} argv.key
 * @param {number} argv.numProviders
 * @param {number} argv.timeout
 */
export function handler({ ctx: { ipfs, print }, key, numProviders, timeout }: {
    ctx: import("../../types").Context;
    key: import("multiformats/cid").CID;
    numProviders: number;
    timeout: number;
}): Promise<void>;
/**
 * @param {object} argv
 * @param {import('../../types').Context} argv.ctx
 * @param {import('multiformats/cid').CID} argv.key
 * @param {number} argv.numProviders
 * @param {number} argv.timeout
 */
export function handler({ ctx: { ipfs, print }, key, numProviders, timeout }: {
    ctx: import("../../types").Context;
    key: import("multiformats/cid").CID;
    numProviders: number;
    timeout: number;
}): Promise<void>;
//# sourceMappingURL=find-providers.d.ts.map
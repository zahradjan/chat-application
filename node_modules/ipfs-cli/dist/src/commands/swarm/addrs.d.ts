export const command: string;
export const describe: string;
/**
 * @param {import('yargs').Argv} yargs
 */
export function builder(yargs: import("yargs").Argv<any>): import("yargs").Argv<import("yargs").Omit<any, "timeout"> & {
    timeout: string | undefined;
}>;
/**
 * @param {import('yargs').Argv} yargs
 */
export function builder(yargs: import("yargs").Argv<any>): import("yargs").Argv<import("yargs").Omit<any, "timeout"> & {
    timeout: string | undefined;
}>;
/**
 * @param {object} argv
 * @param {import('../../types').Context} argv.ctx
 * @param {number} argv.timeout
 */
export function handler({ ctx: { ipfs, print }, timeout }: {
    ctx: import("../../types").Context;
    timeout: number;
}): Promise<void>;
/**
 * @param {object} argv
 * @param {import('../../types').Context} argv.ctx
 * @param {number} argv.timeout
 */
export function handler({ ctx: { ipfs, print }, timeout }: {
    ctx: import("../../types").Context;
    timeout: number;
}): Promise<void>;
//# sourceMappingURL=addrs.d.ts.map
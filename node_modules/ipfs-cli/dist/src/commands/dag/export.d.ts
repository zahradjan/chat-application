export type IPFS = import('ipfs-core-types').IPFS;
import { default as parseDuration } from "parse-duration";
declare const command: string;
declare const describe: string;
declare namespace builder {
    namespace timeout {
        export const type: string;
        export { parseDuration as coerce };
    }
}
/**
 * @param {object} argv
 * @param {import('../../types').Context} argv.ctx
 * @param {string} argv.rootcid
 * @param {number} argv.timeout
 */
declare function handler({ ctx: { ipfs, print }, rootcid, timeout }: {
    ctx: import("../../types").Context;
    rootcid: string;
    timeout: number;
}): Promise<void>;
/**
 * @param {object} argv
 * @param {import('../../types').Context} argv.ctx
 * @param {string} argv.rootcid
 * @param {number} argv.timeout
 */
declare function handler({ ctx: { ipfs, print }, rootcid, timeout }: {
    ctx: import("../../types").Context;
    rootcid: string;
    timeout: number;
}): Promise<void>;
export {};
//# sourceMappingURL=export.d.ts.map
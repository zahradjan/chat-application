{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar configure = require('../../lib/configure');\n\nvar toUrlSearchParams = require('../../lib/to-url-search-params');\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {NamePubsubAPI[\"subs\"]}\n   */\n  function subs() {\n    return _subs.apply(this, arguments);\n  }\n\n  function _subs() {\n    _subs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n          res,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return api.post('name/pubsub/subs', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(options),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data.Strings || []);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _subs.apply(this, arguments);\n  }\n\n  return subs;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","module","exports","api","subs","options","post","signal","searchParams","headers","res","json","data","Strings"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/name/pubsub/subs.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../../lib/configure')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"subs\"]}\n   */\n  async function subs (options = {}) {\n    const res = await api.post('name/pubsub/subs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Strings || []\n  }\n  return subs\n})\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAzB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,gCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAChC;AACF;AACA;EAHkC,SAIjBC,IAJiB;IAAA;EAAA;;EAAA;IAAA,mEAIhC;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAqBC,OAArB,2DAA+B,EAA/B;cAAA;cAAA,OACoBF,GAAG,CAACG,IAAJ,CAAS,kBAAT,EAA6B;gBAC7CC,MAAM,EAAEF,OAAO,CAACE,MAD6B;gBAE7CC,YAAY,EAAER,iBAAiB,CAACK,OAAD,CAFc;gBAG7CI,OAAO,EAAEJ,OAAO,CAACI;cAH4B,CAA7B,CADpB;;YAAA;cACQC,GADR;cAAA;cAAA,OAMqBA,GAAG,CAACC,IAAJ,EANrB;;YAAA;cAMQC,IANR;cAAA,iCAQSA,IAAI,CAACC,OAAL,IAAgB,EARzB;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJgC;IAAA;EAAA;;EAchC,OAAOT,IAAP;AACD,CAfyB,CAA1B"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict'; // @ts-ignore no types\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _createForOfIteratorHelper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar toUri = require('multiaddr-to-uri');\n\nvar debug = require('debug');\n\nvar shuffle = require('array-shuffle');\n\nvar _require = require('native-abort-controller'),\n    AbortController = _require.AbortController;\n\nvar preload = require('./runtime/preload-nodejs');\n/** @type {typeof import('hashlru').default} */\n// @ts-ignore - hashlru has incorrect typedefs\n\n\nvar hashlru = require('hashlru');\n\nvar log = Object.assign(debug('ipfs:preload'), {\n  error: debug('ipfs:preload:error')\n});\n/**\n * @param {import('./types').PreloadOptions} [options]\n */\n\nvar createPreloader = function createPreloader() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  options.enabled = Boolean(options.enabled);\n  options.addresses = options.addresses || [];\n  options.cache = options.cache || 1000;\n\n  if (!options.enabled || !options.addresses.length) {\n    log('preload disabled');\n\n    var _api = function _api() {};\n\n    return Object.assign(_api, {\n      start: function start() {},\n      stop: function stop() {}\n    });\n  }\n\n  var stopped = true;\n  /** @type {AbortController[]} */\n\n  var requests = [];\n  var apiUris = options.addresses.map(toUri); // Avoid preloading the same CID over and over again\n\n  var cache = hashlru(options.cache);\n  /**\n   * @type {import('./types').Preload}\n   */\n\n  var api = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid) {\n      var path, fallbackApiUris, success, now, _iterator, _step, _loop, _ret;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n\n              if (!stopped) {\n                _context2.next = 3;\n                break;\n              }\n\n              throw new Error(\"preload \".concat(cid, \" but preloader is not started\"));\n\n            case 3:\n              path = cid.toString();\n\n              if (!cache.has(path)) {\n                _context2.next = 6;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 6:\n              // make sure we don't preload this again any time soon\n              cache.set(path, true);\n              fallbackApiUris = shuffle(apiUris);\n              success = false;\n              now = Date.now();\n              _iterator = _createForOfIteratorHelper(fallbackApiUris);\n              _context2.prev = 11;\n              _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n                var uri, controller;\n                return _regeneratorRuntime().wrap(function _loop$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        uri = _step.value;\n\n                        if (!stopped) {\n                          _context.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"preload aborted for \".concat(path));\n\n                      case 3:\n                        /** @type {AbortController} */\n                        controller = void 0;\n                        _context.prev = 4;\n                        controller = new AbortController();\n                        requests = requests.concat(controller);\n                        _context.next = 9;\n                        return preload(\"\".concat(uri, \"/api/v0/refs?r=true&arg=\").concat(encodeURIComponent(path)), {\n                          signal: controller.signal\n                        });\n\n                      case 9:\n                        success = true;\n                        _context.next = 15;\n                        break;\n\n                      case 12:\n                        _context.prev = 12;\n                        _context.t0 = _context[\"catch\"](4);\n                        if (_context.t0.type !== 'aborted') log.error(_context.t0);\n\n                      case 15:\n                        _context.prev = 15;\n                        requests = requests.filter(function (r) {\n                          return r !== controller;\n                        });\n                        return _context.finish(15);\n\n                      case 18:\n                        if (!success) {\n                          _context.next = 20;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\", \"break\");\n\n                      case 20:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _loop, null, [[4, 12, 15, 18]]);\n              });\n\n              _iterator.s();\n\n            case 14:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 21;\n                break;\n              }\n\n              return _context2.delegateYield(_loop(), \"t0\", 16);\n\n            case 16:\n              _ret = _context2.t0;\n\n              if (!(_ret === \"break\")) {\n                _context2.next = 19;\n                break;\n              }\n\n              return _context2.abrupt(\"break\", 21);\n\n            case 19:\n              _context2.next = 14;\n              break;\n\n            case 21:\n              _context2.next = 26;\n              break;\n\n            case 23:\n              _context2.prev = 23;\n              _context2.t1 = _context2[\"catch\"](11);\n\n              _iterator.e(_context2.t1);\n\n            case 26:\n              _context2.prev = 26;\n\n              _iterator.f();\n\n              return _context2.finish(26);\n\n            case 29:\n              log(\"\".concat(success ? '' : 'un', \"successfully preloaded \").concat(path, \" in \").concat(Date.now() - now, \"ms\"));\n              _context2.next = 35;\n              break;\n\n            case 32:\n              _context2.prev = 32;\n              _context2.t2 = _context2[\"catch\"](0);\n              log.error(_context2.t2);\n\n            case 35:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee, null, [[0, 32], [11, 23, 26, 29]]);\n    }));\n\n    return function api(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /**\n   * @returns {void}\n   */\n\n\n  api.start = function () {\n    stopped = false;\n  };\n  /**\n   * @returns {void}\n   */\n\n\n  api.stop = function () {\n    stopped = true;\n    log(\"aborting \".concat(requests.length, \" pending preload request(s)\"));\n    requests.forEach(function (r) {\n      return r.abort();\n    });\n    requests = [];\n  };\n\n  return api;\n};\n\nmodule.exports = createPreloader;","map":{"version":3,"names":["toUri","require","debug","shuffle","AbortController","preload","hashlru","log","Object","assign","error","createPreloader","options","enabled","Boolean","addresses","cache","length","api","start","stop","stopped","requests","apiUris","map","cid","Error","path","toString","has","set","fallbackApiUris","success","now","Date","uri","controller","concat","encodeURIComponent","signal","type","filter","r","forEach","abort","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/preload.js"],"sourcesContent":["'use strict'\n\n// @ts-ignore no types\nconst toUri = require('multiaddr-to-uri')\nconst debug = require('debug')\nconst shuffle = require('array-shuffle')\nconst { AbortController } = require('native-abort-controller')\nconst preload = require('./runtime/preload-nodejs')\n/** @type {typeof import('hashlru').default} */\n// @ts-ignore - hashlru has incorrect typedefs\nconst hashlru = require('hashlru')\n\nconst log = Object.assign(\n  debug('ipfs:preload'),\n  { error: debug('ipfs:preload:error') }\n)\n\n/**\n * @param {import('./types').PreloadOptions} [options]\n */\nconst createPreloader = (options = {}) => {\n  options.enabled = Boolean(options.enabled)\n  options.addresses = options.addresses || []\n  options.cache = options.cache || 1000\n\n  if (!options.enabled || !options.addresses.length) {\n    log('preload disabled')\n    const api = () => {}\n    return Object.assign(api, {\n      start: () => {},\n      stop: () => {}\n    })\n  }\n\n  let stopped = true\n  /** @type {AbortController[]} */\n  let requests = []\n  const apiUris = options.addresses.map(toUri)\n\n  // Avoid preloading the same CID over and over again\n  const cache = hashlru(options.cache)\n\n  /**\n   * @type {import('./types').Preload}\n   */\n  const api = async cid => {\n    try {\n      if (stopped) {\n        throw new Error(`preload ${cid} but preloader is not started`)\n      }\n\n      const path = cid.toString()\n\n      if (cache.has(path)) {\n        // we've preloaded this recently, don't preload it again\n        return\n      }\n\n      // make sure we don't preload this again any time soon\n      cache.set(path, true)\n\n      const fallbackApiUris = shuffle(apiUris)\n      let success = false\n      const now = Date.now()\n\n      for (const uri of fallbackApiUris) {\n        if (stopped) throw new Error(`preload aborted for ${path}`)\n        /** @type {AbortController} */\n        let controller\n\n        try {\n          controller = new AbortController()\n          requests = requests.concat(controller)\n          await preload(`${uri}/api/v0/refs?r=true&arg=${encodeURIComponent(path)}`, { signal: controller.signal })\n          success = true\n        } catch (err) {\n          if (err.type !== 'aborted') log.error(err)\n        } finally {\n          requests = requests.filter(r => r !== controller)\n        }\n\n        if (success) break\n      }\n\n      log(`${success ? '' : 'un'}successfully preloaded ${path} in ${Date.now() - now}ms`)\n    } catch (err) {\n      log.error(err)\n    }\n  }\n\n  /**\n   * @returns {void}\n   */\n  api.start = () => {\n    stopped = false\n  }\n\n  /**\n   * @returns {void}\n   */\n  api.stop = () => {\n    stopped = true\n    log(`aborting ${requests.length} pending preload request(s)`)\n    requests.forEach(r => r.abort())\n    requests = []\n  }\n\n  return api\n}\n\nmodule.exports = createPreloader\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar LamportClock = /*#__PURE__*/function () {\n  function LamportClock(id, time) {\n    _classCallCheck(this, LamportClock);\n\n    this.id = id;\n    this.time = time || 0;\n  }\n\n  _createClass(LamportClock, [{\n    key: \"tick\",\n    value: function tick() {\n      return new LamportClock(this.id, ++this.time);\n    }\n  }, {\n    key: \"merge\",\n    value: function merge(clock) {\n      this.time = Math.max(this.time, clock.time);\n      return new LamportClock(this.id, this.time);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new LamportClock(this.id, this.time);\n    }\n  }], [{\n    key: \"compare\",\n    value: function compare(a, b) {\n      // Calculate the \"distance\" based on the clock, ie. lower or greater\n      var dist = a.time - b.time; // If the sequence number is the same (concurrent events),\n      // and the IDs are different, take the one with a \"lower\" id\n\n      if (dist === 0 && a.id !== b.id) return a.id < b.id ? -1 : 1;\n      return dist;\n    }\n  }]);\n\n  return LamportClock;\n}();\n\nmodule.exports = LamportClock;","map":{"version":3,"names":["LamportClock","id","time","clock","Math","max","a","b","dist","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-log/src/lamport-clock.js"],"sourcesContent":["'use strict'\n\nclass LamportClock {\n  constructor (id, time) {\n    this.id = id\n    this.time = time || 0\n  }\n\n  tick () {\n    return new LamportClock(this.id, ++this.time)\n  }\n\n  merge (clock) {\n    this.time = Math.max(this.time, clock.time)\n    return new LamportClock(this.id, this.time)\n  }\n\n  clone () {\n    return new LamportClock(this.id, this.time)\n  }\n\n  static compare (a, b) {\n    // Calculate the \"distance\" based on the clock, ie. lower or greater\n    const dist = a.time - b.time\n\n    // If the sequence number is the same (concurrent events),\n    // and the IDs are different, take the one with a \"lower\" id\n    if (dist === 0 && a.id !== b.id) return a.id < b.id ? -1 : 1\n\n    return dist\n  }\n}\n\nmodule.exports = LamportClock\n"],"mappings":"AAAA;;;;;;IAEMA,Y;EACJ,sBAAaC,EAAb,EAAiBC,IAAjB,EAAuB;IAAA;;IACrB,KAAKD,EAAL,GAAUA,EAAV;IACA,KAAKC,IAAL,GAAYA,IAAI,IAAI,CAApB;EACD;;;;WAED,gBAAQ;MACN,OAAO,IAAIF,YAAJ,CAAiB,KAAKC,EAAtB,EAA0B,EAAE,KAAKC,IAAjC,CAAP;IACD;;;WAED,eAAOC,KAAP,EAAc;MACZ,KAAKD,IAAL,GAAYE,IAAI,CAACC,GAAL,CAAS,KAAKH,IAAd,EAAoBC,KAAK,CAACD,IAA1B,CAAZ;MACA,OAAO,IAAIF,YAAJ,CAAiB,KAAKC,EAAtB,EAA0B,KAAKC,IAA/B,CAAP;IACD;;;WAED,iBAAS;MACP,OAAO,IAAIF,YAAJ,CAAiB,KAAKC,EAAtB,EAA0B,KAAKC,IAA/B,CAAP;IACD;;;WAED,iBAAgBI,CAAhB,EAAmBC,CAAnB,EAAsB;MACpB;MACA,IAAMC,IAAI,GAAGF,CAAC,CAACJ,IAAF,GAASK,CAAC,CAACL,IAAxB,CAFoB,CAIpB;MACA;;MACA,IAAIM,IAAI,KAAK,CAAT,IAAcF,CAAC,CAACL,EAAF,KAASM,CAAC,CAACN,EAA7B,EAAiC,OAAOK,CAAC,CAACL,EAAF,GAAOM,CAAC,CAACN,EAAT,GAAc,CAAC,CAAf,GAAmB,CAA1B;MAEjC,OAAOO,IAAP;IACD;;;;;;AAGHC,MAAM,CAACC,OAAP,GAAiBV,YAAjB"},"metadata":{},"sourceType":"script"}
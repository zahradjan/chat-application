{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar cp = require('./cp');\n\nvar rm = require('./rm');\n\nvar mergeOptions = require('merge-options').bind({\n  ignoreUndefined: true\n});\n\nvar withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @typedef {import('multiformats/cid').CIDVersion} CIDVersion\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} parents\n * @property {boolean} flush\n * @property {CIDVersion} cidVersion\n * @property {string} hashAlg\n * @property {number} shardSplitThreshold\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\n\n\nvar defaultOptions = {\n  parents: false,\n  flush: true,\n  cidVersion: 0,\n  hashAlg: 'sha2-256',\n  shardSplitThreshold: 1000\n};\n/**\n * @param {MfsContext} context\n */\n\nmodule.exports = function (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API[\"mv\"]}\n   */\n  function mfsMv(_x, _x2) {\n    return _mfsMv.apply(this, arguments);\n  }\n\n  function _mfsMv() {\n    _mfsMv = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(from, to) {\n      var options,\n          opts,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n\n              /** @type {DefaultOptions} */\n              opts = mergeOptions(defaultOptions, options);\n              _context.next = 4;\n              return cp(context)(from, to, opts);\n\n            case 4:\n              _context.next = 6;\n              return rm(context)(from, _objectSpread(_objectSpread({}, opts), {}, {\n                recursive: true\n              }));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _mfsMv.apply(this, arguments);\n  }\n\n  return withTimeoutOption(mfsMv);\n};","map":{"version":3,"names":["cp","require","rm","mergeOptions","bind","ignoreUndefined","withTimeoutOption","defaultOptions","parents","flush","cidVersion","hashAlg","shardSplitThreshold","module","exports","context","mfsMv","from","to","options","opts","recursive"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/files/mv.js"],"sourcesContent":["'use strict'\n\nconst cp = require('./cp')\nconst rm = require('./rm')\nconst mergeOptions = require('merge-options').bind({ ignoreUndefined: true })\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @typedef {import('multiformats/cid').CIDVersion} CIDVersion\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} parents\n * @property {boolean} flush\n * @property {CIDVersion} cidVersion\n * @property {string} hashAlg\n * @property {number} shardSplitThreshold\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  parents: false,\n  flush: true,\n  cidVersion: 0,\n  hashAlg: 'sha2-256',\n  shardSplitThreshold: 1000\n}\n\n/**\n * @param {MfsContext} context\n */\nmodule.exports = (context) => {\n  /**\n   * @type {import('ipfs-core-types/src/files').API[\"mv\"]}\n   */\n  async function mfsMv (from, to, options = {}) {\n    /** @type {DefaultOptions} */\n    const opts = mergeOptions(defaultOptions, options)\n\n    await cp(context)(from, to, opts)\n    await rm(context)(from, {\n      ...opts,\n      recursive: true\n    })\n  }\n\n  return withTimeoutOption(mfsMv)\n}\n"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,EAAE,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAME,YAAY,GAAGF,OAAO,CAAC,eAAD,CAAP,CAAyBG,IAAzB,CAA8B;EAAEC,eAAe,EAAE;AAAnB,CAA9B,CAArB;;AACA,IAAMC,iBAAiB,GAAGL,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACA,IAAMM,cAAc,GAAG;EACrBC,OAAO,EAAE,KADY;EAErBC,KAAK,EAAE,IAFc;EAGrBC,UAAU,EAAE,CAHS;EAIrBC,OAAO,EAAE,UAJY;EAKrBC,mBAAmB,EAAE;AALA,CAAvB;AAQA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAACC,OAAD,EAAa;EAC5B;AACF;AACA;EAH8B,SAIbC,KAJa;IAAA;EAAA;;EAAA;IAAA,oEAI5B,iBAAsBC,IAAtB,EAA4BC,EAA5B;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAgCC,OAAhC,2DAA0C,EAA1C;;cACE;cACMC,IAFR,GAEejB,YAAY,CAACI,cAAD,EAAiBY,OAAjB,CAF3B;cAAA;cAAA,OAIQnB,EAAE,CAACe,OAAD,CAAF,CAAYE,IAAZ,EAAkBC,EAAlB,EAAsBE,IAAtB,CAJR;;YAAA;cAAA;cAAA,OAKQlB,EAAE,CAACa,OAAD,CAAF,CAAYE,IAAZ,kCACDG,IADC;gBAEJC,SAAS,EAAE;cAFP,GALR;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJ4B;IAAA;EAAA;;EAe5B,OAAOf,iBAAiB,CAACU,KAAD,CAAxB;AACD,CAhBD"},"metadata":{},"sourceType":"script"}
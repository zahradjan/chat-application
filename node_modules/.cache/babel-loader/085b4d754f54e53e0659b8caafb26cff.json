{"ast":null,"code":"var _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('event-iterator'),\n    EventIterator = _require2.EventIterator; // copied from github.com/feross/buffer\n// Some ArrayBuffers are not passing the instanceof check, so we need to do a bit more work :(\n\n\nfunction isArrayBuffer(obj) {\n  return obj instanceof ArrayBuffer || obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' && typeof obj.byteLength === 'number';\n}\n\nmodule.exports = function (socket) {\n  var removeListener = socket.removeEventListener || socket.removeListener;\n\n  var source = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var messages, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, data;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            messages = new EventIterator(function (_ref) {\n              var push = _ref.push,\n                  stop = _ref.stop,\n                  fail = _ref.fail;\n              socket.addEventListener('message', push);\n              socket.addEventListener('error', fail);\n              socket.addEventListener('close', stop);\n              return function () {\n                removeListener.call(socket, 'message', push);\n                removeListener.call(socket, 'error', fail);\n                removeListener.call(socket, 'close', stop);\n              };\n            }, {\n              highWaterMark: Infinity\n            });\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context.prev = 3;\n            _iterator = _asyncIterator(messages);\n\n          case 5:\n            _context.next = 7;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 7:\n            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n              _context.next = 14;\n              break;\n            }\n\n            data = _step.value.data;\n            _context.next = 11;\n            return isArrayBuffer(data) ? Buffer.from(data) : data;\n\n          case 11:\n            _iteratorAbruptCompletion = false;\n            _context.next = 5;\n            break;\n\n          case 14:\n            _context.next = 20;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](3);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 20:\n            _context.prev = 20;\n            _context.prev = 21;\n\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context.next = 25;\n              break;\n            }\n\n            _context.next = 25;\n            return _awaitAsyncGenerator(_iterator.return());\n\n          case 25:\n            _context.prev = 25;\n\n            if (!_didIteratorError) {\n              _context.next = 28;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 28:\n            return _context.finish(25);\n\n          case 29:\n            return _context.finish(20);\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 16, 20, 30], [21,, 25, 29]]);\n  }))();\n\n  var connected = socket.readyState === 1;\n  var connError;\n  socket.addEventListener('open', function () {\n    connected = true;\n    connError = null;\n  });\n  socket.addEventListener('close', function () {\n    connected = false;\n    connError = null;\n  });\n  socket.addEventListener('error', function (err) {\n    if (!connected) connError = err;\n  });\n\n  source.connected = function () {\n    return new Promise(function (resolve, reject) {\n      if (connected) return resolve();\n      if (connError) return reject(connError);\n\n      var cleanUp = function cleanUp(cont) {\n        removeListener.call(socket, 'open', onOpen);\n        removeListener.call(socket, 'error', onError);\n        cont();\n      };\n\n      var onOpen = function onOpen() {\n        return cleanUp(resolve);\n      };\n\n      var onError = function onError(err) {\n        return cleanUp(function () {\n          return reject(err);\n        });\n      };\n\n      socket.addEventListener('open', onOpen);\n      socket.addEventListener('error', onError);\n    });\n  };\n\n  return source;\n};","map":{"version":3,"names":["require","Buffer","EventIterator","isArrayBuffer","obj","ArrayBuffer","constructor","name","byteLength","module","exports","socket","removeListener","removeEventListener","source","messages","push","stop","fail","addEventListener","call","highWaterMark","Infinity","data","from","connected","readyState","connError","err","Promise","resolve","reject","cleanUp","cont","onOpen","onError"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/it-ws/source.js"],"sourcesContent":["const { Buffer } = require('buffer')\nconst { EventIterator } = require('event-iterator')\n\n// copied from github.com/feross/buffer\n// Some ArrayBuffers are not passing the instanceof check, so we need to do a bit more work :(\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\nmodule.exports = socket => {\n  const removeListener = socket.removeEventListener || socket.removeListener\n\n  const source = (async function * () {\n    const messages = new EventIterator(\n      ({ push, stop, fail }) => {\n        socket.addEventListener('message', push)\n        socket.addEventListener('error', fail)\n        socket.addEventListener('close', stop)\n\n        return () => {\n          removeListener.call(socket, 'message', push)\n          removeListener.call(socket, 'error', fail)\n          removeListener.call(socket, 'close', stop)\n        }\n      },\n      { highWaterMark: Infinity }\n    )\n\n    for await (const { data } of messages) {\n      yield isArrayBuffer(data) ? Buffer.from(data) : data\n    }\n  })()\n\n  let connected = socket.readyState === 1\n  let connError\n\n  socket.addEventListener('open', () => {\n    connected = true\n    connError = null\n  })\n\n  socket.addEventListener('close', () => {\n    connected = false\n    connError = null\n  })\n\n  socket.addEventListener('error', err => {\n    if (!connected) connError = err\n  })\n\n  source.connected = () => new Promise((resolve, reject) => {\n    if (connected) return resolve()\n    if (connError) return reject(connError)\n\n    const cleanUp = cont => {\n      removeListener.call(socket, 'open', onOpen)\n      removeListener.call(socket, 'error', onError)\n      cont()\n    }\n\n    const onOpen = () => cleanUp(resolve)\n    const onError = err => cleanUp(() => reject(err))\n\n    socket.addEventListener('open', onOpen)\n    socket.addEventListener('error', onError)\n  })\n\n  return source\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
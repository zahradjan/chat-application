{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MessageDeliveries = exports.DeliveryRecordStatus = void 0;\n\nvar constants_1 = require(\"../constants\");\n\nvar denque_1 = __importDefault(require(\"denque\"));\n\nvar utils_1 = require(\"../utils\");\n\nvar DeliveryRecordStatus;\n\n(function (DeliveryRecordStatus) {\n  /**\n   * we don't know (yet) if the message is valid\n   */\n  DeliveryRecordStatus[DeliveryRecordStatus[\"unknown\"] = 0] = \"unknown\";\n  /**\n   * we know the message is valid\n   */\n\n  DeliveryRecordStatus[DeliveryRecordStatus[\"valid\"] = 1] = \"valid\";\n  /**\n   * we know the message is invalid\n   */\n\n  DeliveryRecordStatus[DeliveryRecordStatus[\"invalid\"] = 2] = \"invalid\";\n  /**\n   * we were instructed by the validator to ignore the message\n   */\n\n  DeliveryRecordStatus[DeliveryRecordStatus[\"ignored\"] = 3] = \"ignored\";\n})(DeliveryRecordStatus = exports.DeliveryRecordStatus || (exports.DeliveryRecordStatus = {}));\n/**\n * Map of message ID to DeliveryRecord\n *\n * Maintains an internal queue for efficient gc of old messages\n */\n\n\nvar MessageDeliveries = /*#__PURE__*/function () {\n  function MessageDeliveries() {\n    _classCallCheck(this, MessageDeliveries);\n\n    this.records = new Map();\n    this.queue = new denque_1.default();\n  }\n\n  _createClass(MessageDeliveries, [{\n    key: \"ensureRecord\",\n    value: function ensureRecord(msgId) {\n      var msgIdStr = utils_1.messageIdToString(msgId);\n      var drec = this.records.get(msgIdStr);\n\n      if (drec) {\n        return drec;\n      } // record doesn't exist yet\n      // create record\n\n\n      drec = {\n        status: DeliveryRecordStatus.unknown,\n        firstSeen: Date.now(),\n        validated: 0,\n        peers: new Set()\n      };\n      this.records.set(msgIdStr, drec); // and add msgId to the queue\n\n      var entry = {\n        msgId: msgIdStr,\n        expire: Date.now() + constants_1.TimeCacheDuration\n      };\n      this.queue.push(entry);\n      return drec;\n    }\n  }, {\n    key: \"gc\",\n    value: function gc() {\n      var now = Date.now(); // queue is sorted by expiry time\n      // remove expired messages, remove from queue until first un-expired message found\n\n      var head = this.queue.peekFront();\n\n      while (head && head.expire < now) {\n        this.records.delete(head.msgId);\n        this.queue.shift();\n        head = this.queue.peekFront();\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.records.clear();\n      this.queue.clear();\n    }\n  }]);\n\n  return MessageDeliveries;\n}();\n\nexports.MessageDeliveries = MessageDeliveries;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","MessageDeliveries","DeliveryRecordStatus","constants_1","require","denque_1","utils_1","records","Map","queue","default","msgId","msgIdStr","messageIdToString","drec","get","status","unknown","firstSeen","Date","now","validated","peers","Set","set","entry","expire","TimeCacheDuration","push","head","peekFront","delete","shift","clear"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p-gossipsub/src/score/message-deliveries.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageDeliveries = exports.DeliveryRecordStatus = void 0;\nconst constants_1 = require(\"../constants\");\nconst denque_1 = __importDefault(require(\"denque\"));\nconst utils_1 = require(\"../utils\");\nvar DeliveryRecordStatus;\n(function (DeliveryRecordStatus) {\n    /**\n     * we don't know (yet) if the message is valid\n     */\n    DeliveryRecordStatus[DeliveryRecordStatus[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * we know the message is valid\n     */\n    DeliveryRecordStatus[DeliveryRecordStatus[\"valid\"] = 1] = \"valid\";\n    /**\n     * we know the message is invalid\n     */\n    DeliveryRecordStatus[DeliveryRecordStatus[\"invalid\"] = 2] = \"invalid\";\n    /**\n     * we were instructed by the validator to ignore the message\n     */\n    DeliveryRecordStatus[DeliveryRecordStatus[\"ignored\"] = 3] = \"ignored\";\n})(DeliveryRecordStatus = exports.DeliveryRecordStatus || (exports.DeliveryRecordStatus = {}));\n/**\n * Map of message ID to DeliveryRecord\n *\n * Maintains an internal queue for efficient gc of old messages\n */\nclass MessageDeliveries {\n    constructor() {\n        this.records = new Map();\n        this.queue = new denque_1.default();\n    }\n    ensureRecord(msgId) {\n        const msgIdStr = utils_1.messageIdToString(msgId);\n        let drec = this.records.get(msgIdStr);\n        if (drec) {\n            return drec;\n        }\n        // record doesn't exist yet\n        // create record\n        drec = {\n            status: DeliveryRecordStatus.unknown,\n            firstSeen: Date.now(),\n            validated: 0,\n            peers: new Set()\n        };\n        this.records.set(msgIdStr, drec);\n        // and add msgId to the queue\n        const entry = {\n            msgId: msgIdStr,\n            expire: Date.now() + constants_1.TimeCacheDuration\n        };\n        this.queue.push(entry);\n        return drec;\n    }\n    gc() {\n        const now = Date.now();\n        // queue is sorted by expiry time\n        // remove expired messages, remove from queue until first un-expired message found\n        let head = this.queue.peekFront();\n        while (head && head.expire < now) {\n            this.records.delete(head.msgId);\n            this.queue.shift();\n            head = this.queue.peekFront();\n        }\n    }\n    clear() {\n        this.records.clear();\n        this.queue.clear();\n    }\n}\nexports.MessageDeliveries = MessageDeliveries;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar BufferList = require('bl/BufferList');\n\nvar _require2 = require('iso-constants'),\n    S_IFMT = _require2.S_IFMT,\n    S_IFBLK = _require2.S_IFBLK,\n    S_IFCHR = _require2.S_IFCHR,\n    S_IFDIR = _require2.S_IFDIR,\n    S_IFIFO = _require2.S_IFIFO,\n    S_IFLNK = _require2.S_IFLNK;\n\nvar concat = require('it-concat');\n\nvar Headers = require('./pack-headers');\n\nvar DMODE = parseInt('755', 8);\nvar FMODE = parseInt('644', 8);\nvar END_OF_TAR = Buffer.alloc(1024);\n\nfunction modeToType(mode) {\n  switch (mode & S_IFMT) {\n    case S_IFBLK:\n      return 'block-device';\n\n    case S_IFCHR:\n      return 'character-device';\n\n    case S_IFDIR:\n      return 'directory';\n\n    case S_IFIFO:\n      return 'fifo';\n\n    case S_IFLNK:\n      return 'symlink';\n  }\n\n  return 'file';\n}\n\nfunction getPadding(size) {\n  size &= 511;\n  if (size) return new BufferList(END_OF_TAR.slice(0, 512 - size));\n}\n\nfunction encode(header) {\n  if (!header.pax) {\n    var encoded = Headers.encode(header);\n    if (encoded) return encoded;\n  }\n\n  return encodePax(header);\n}\n\nfunction encodePax(header) {\n  var paxHeader = Headers.encodePax({\n    name: header.name,\n    linkname: header.linkname,\n    pax: header.pax\n  });\n  var newHeader = {\n    name: 'PaxHeader',\n    mode: header.mode,\n    uid: header.uid,\n    gid: header.gid,\n    size: paxHeader.length,\n    mtime: header.mtime,\n    type: 'pax-header',\n    linkname: header.linkname && 'PaxHeader',\n    uname: header.uname,\n    gname: header.gname,\n    devmajor: header.devmajor,\n    devminor: header.devminor\n  };\n  return new BufferList([Headers.encode(newHeader), paxHeader, getPadding(paxHeader.length), Headers.encode(_objectSpread(_objectSpread({}, newHeader), {}, {\n    size: header.size,\n    type: header.type\n  }))]);\n}\n\nmodule.exports = function () {\n  return /*#__PURE__*/function () {\n    var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n      var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, _step$value, header, body, written, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, chunk, overflow;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 2;\n              _iterator = _asyncIterator(source);\n\n            case 4:\n              _context.next = 6;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 6:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 71;\n                break;\n              }\n\n              _step$value = _step.value, header = _step$value.header, body = _step$value.body;\n              if (!header.size || header.type === 'symlink') header.size = 0;\n              if (!header.type) header.type = modeToType(header.mode);\n              if (!header.mode) header.mode = header.type === 'directory' ? DMODE : FMODE;\n              if (!header.uid) header.uid = 0;\n              if (!header.gid) header.gid = 0;\n              if (!header.mtime) header.mtime = new Date();\n              if (typeof body === 'string') body = Buffer.from(body);\n\n              if (!(Buffer.isBuffer(body) || BufferList.isBufferList(body))) {\n                _context.next = 20;\n                break;\n              }\n\n              header.size = body.length;\n              _context.next = 19;\n              return new BufferList([encode(header), body, getPadding(header.size)]);\n\n            case 19:\n              return _context.abrupt(\"continue\", 68);\n\n            case 20:\n              if (!(header.type === 'symlink' && !header.linkname)) {\n                _context.next = 27;\n                break;\n              }\n\n              _context.next = 23;\n              return _awaitAsyncGenerator(concat(body));\n\n            case 23:\n              header.linkname = _context.sent.toString();\n              _context.next = 26;\n              return encode(header);\n\n            case 26:\n              return _context.abrupt(\"continue\", 68);\n\n            case 27:\n              _context.next = 29;\n              return encode(header);\n\n            case 29:\n              if (!(header.type !== 'file' && header.type !== 'contiguous-file')) {\n                _context.next = 31;\n                break;\n              }\n\n              return _context.abrupt(\"continue\", 68);\n\n            case 31:\n              written = 0;\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context.prev = 34;\n              _iterator2 = _asyncIterator(body);\n\n            case 36:\n              _context.next = 38;\n              return _awaitAsyncGenerator(_iterator2.next());\n\n            case 38:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context.sent).done)) {\n                _context.next = 46;\n                break;\n              }\n\n              chunk = _step2.value;\n              written += chunk.length;\n              _context.next = 43;\n              return BufferList.isBufferList(chunk) ? chunk : new BufferList(chunk);\n\n            case 43:\n              _iteratorAbruptCompletion2 = false;\n              _context.next = 36;\n              break;\n\n            case 46:\n              _context.next = 52;\n              break;\n\n            case 48:\n              _context.prev = 48;\n              _context.t0 = _context[\"catch\"](34);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t0;\n\n            case 52:\n              _context.prev = 52;\n              _context.prev = 53;\n\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context.next = 57;\n                break;\n              }\n\n              _context.next = 57;\n              return _awaitAsyncGenerator(_iterator2.return());\n\n            case 57:\n              _context.prev = 57;\n\n              if (!_didIteratorError2) {\n                _context.next = 60;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 60:\n              return _context.finish(57);\n\n            case 61:\n              return _context.finish(52);\n\n            case 62:\n              if (!(written !== header.size)) {\n                _context.next = 64;\n                break;\n              }\n\n              throw new Error('size mismatch');\n\n            case 64:\n              overflow = getPadding(header.size);\n\n              if (!overflow) {\n                _context.next = 68;\n                break;\n              }\n\n              _context.next = 68;\n              return overflow;\n\n            case 68:\n              _iteratorAbruptCompletion = false;\n              _context.next = 4;\n              break;\n\n            case 71:\n              _context.next = 77;\n              break;\n\n            case 73:\n              _context.prev = 73;\n              _context.t1 = _context[\"catch\"](2);\n              _didIteratorError = true;\n              _iteratorError = _context.t1;\n\n            case 77:\n              _context.prev = 77;\n              _context.prev = 78;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 82;\n                break;\n              }\n\n              _context.next = 82;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 82:\n              _context.prev = 82;\n\n              if (!_didIteratorError) {\n                _context.next = 85;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 85:\n              return _context.finish(82);\n\n            case 86:\n              return _context.finish(77);\n\n            case 87:\n              _context.next = 89;\n              return new BufferList(END_OF_TAR);\n\n            case 89:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 73, 77, 87], [34, 48, 52, 62], [53,, 57, 61], [78,, 82, 86]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"names":["require","Buffer","BufferList","S_IFMT","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","concat","Headers","DMODE","parseInt","FMODE","END_OF_TAR","alloc","modeToType","mode","getPadding","size","slice","encode","header","pax","encoded","encodePax","paxHeader","name","linkname","newHeader","uid","gid","length","mtime","type","uname","gname","devmajor","devminor","module","exports","source","body","Date","from","isBuffer","isBufferList","toString","written","chunk","Error","overflow"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/it-tar/pack.js"],"sourcesContent":["const { Buffer } = require('buffer')\nconst BufferList = require('bl/BufferList')\nconst { S_IFMT, S_IFBLK, S_IFCHR, S_IFDIR, S_IFIFO, S_IFLNK } = require('iso-constants')\nconst concat = require('it-concat')\nconst Headers = require('./pack-headers')\n\nconst DMODE = parseInt('755', 8)\nconst FMODE = parseInt('644', 8)\n\nconst END_OF_TAR = Buffer.alloc(1024)\n\nfunction modeToType (mode) {\n  switch (mode & S_IFMT) {\n    case S_IFBLK: return 'block-device'\n    case S_IFCHR: return 'character-device'\n    case S_IFDIR: return 'directory'\n    case S_IFIFO: return 'fifo'\n    case S_IFLNK: return 'symlink'\n  }\n  return 'file'\n}\n\nfunction getPadding (size) {\n  size &= 511\n  if (size) return new BufferList(END_OF_TAR.slice(0, 512 - size))\n}\n\nfunction encode (header) {\n  if (!header.pax) {\n    const encoded = Headers.encode(header)\n    if (encoded) return encoded\n  }\n  return encodePax(header)\n}\n\nfunction encodePax (header) {\n  const paxHeader = Headers.encodePax({\n    name: header.name,\n    linkname: header.linkname,\n    pax: header.pax\n  })\n\n  const newHeader = {\n    name: 'PaxHeader',\n    mode: header.mode,\n    uid: header.uid,\n    gid: header.gid,\n    size: paxHeader.length,\n    mtime: header.mtime,\n    type: 'pax-header',\n    linkname: header.linkname && 'PaxHeader',\n    uname: header.uname,\n    gname: header.gname,\n    devmajor: header.devmajor,\n    devminor: header.devminor\n  }\n\n  return new BufferList([\n    Headers.encode(newHeader),\n    paxHeader,\n    getPadding(paxHeader.length),\n    Headers.encode({ ...newHeader, size: header.size, type: header.type })\n  ])\n}\n\nmodule.exports = () => async function * (source) {\n  for await (let { header, body } of source) {\n    if (!header.size || header.type === 'symlink') header.size = 0\n    if (!header.type) header.type = modeToType(header.mode)\n    if (!header.mode) header.mode = header.type === 'directory' ? DMODE : FMODE\n    if (!header.uid) header.uid = 0\n    if (!header.gid) header.gid = 0\n    if (!header.mtime) header.mtime = new Date()\n\n    if (typeof body === 'string') body = Buffer.from(body)\n\n    if (Buffer.isBuffer(body) || BufferList.isBufferList(body)) {\n      header.size = body.length\n      yield new BufferList([encode(header), body, getPadding(header.size)])\n      continue\n    }\n\n    if (header.type === 'symlink' && !header.linkname) {\n      header.linkname = (await concat(body)).toString()\n      yield encode(header)\n      continue\n    }\n\n    yield encode(header)\n\n    if (header.type !== 'file' && header.type !== 'contiguous-file') {\n      continue\n    }\n\n    let written = 0\n    for await (const chunk of body) {\n      written += chunk.length\n      yield BufferList.isBufferList(chunk) ? chunk : new BufferList(chunk)\n    }\n\n    if (written !== header.size) { // corrupting tar\n      throw new Error('size mismatch')\n    }\n\n    const overflow = getPadding(header.size)\n    if (overflow) yield overflow\n  }\n\n  yield new BufferList(END_OF_TAR)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
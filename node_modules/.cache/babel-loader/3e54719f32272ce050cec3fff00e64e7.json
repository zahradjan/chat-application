{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _require = require('interface-datastore'),\n    Key = _require.Key,\n    Errors = _require.Errors;\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\n\nvar CONFIG_KEY = new Key('/config');\nvar VERSION_KEY = new Key('/version');\n/**\n * Level dbs wrap level dbs that wrap level dbs. Find a level-js\n * instance in the chain if one exists.\n *\n * @param {Datastore} store\n * @returns {Datastore | undefined}\n */\n\nfunction findLevelJs(store) {\n  var db = store; // @ts-ignore\n\n  while (db.db || db.child) {\n    // @ts-ignore\n    db = db.db || db.child; // `Level` is only present in the browser, in node it is LevelDOWN\n    // @ts-ignore\n\n    if (db.type === 'level-js' || db.constructor.name === 'Level') {\n      return db;\n    }\n  }\n}\n/**\n * @param {Key} key\n * @param {function (Key): Promise<boolean>} has\n * @param {Datastore} store\n * @returns {Promise<boolean>}\n */\n\n\nfunction hasWithFallback(_x, _x2, _x3) {\n  return _hasWithFallback.apply(this, arguments);\n}\n/**\n * @param {import('interface-datastore').Key} key\n * @param {function (Key): Promise<Uint8Array>} get\n * @param {function (Key): Promise<boolean>} has\n * @param {import('interface-datastore').Datastore} store\n * @returns {Promise<Uint8Array>}\n */\n\n\nfunction _hasWithFallback() {\n  _hasWithFallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key, has, store) {\n    var result, levelJs;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return has(key);\n\n          case 2:\n            result = _context.sent;\n\n            if (!result) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", result);\n\n          case 5:\n            // Newer versions of level.js changed the key type from Uint8Array|string\n            // to Uint8Array  so fall back to trying Uint8Arrays if we are using level.js\n            // and the string version of the key did not work\n            levelJs = findLevelJs(store);\n\n            if (levelJs) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 8:\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n              // @ts-ignore\n              var req = levelJs.store('readonly').get(key.toString());\n\n              req.transaction.onabort = function () {\n                reject(req.transaction.error);\n              };\n\n              req.transaction.oncomplete = function () {\n                resolve(Boolean(req.result));\n              };\n            }));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _hasWithFallback.apply(this, arguments);\n}\n\nfunction getWithFallback(_x4, _x5, _x6, _x7) {\n  return _getWithFallback.apply(this, arguments);\n}\n/**\n * @param {Datastore} store\n */\n\n\nfunction _getWithFallback() {\n  _getWithFallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(key, get, has, store) {\n    var levelJs;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return has(key);\n\n          case 2:\n            if (!_context2.sent) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", get(key));\n\n          case 4:\n            // Newer versions of level.js changed the key type from Uint8Array|string\n            // to Uint8Array so fall back to trying Uint8Arrays if we are using level.js\n            // and the string version of the key did not work\n            levelJs = findLevelJs(store);\n\n            if (levelJs) {\n              _context2.next = 7;\n              break;\n            }\n\n            throw Errors.notFoundError();\n\n          case 7:\n            return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n              // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n              // @ts-ignore\n              var req = levelJs.store('readonly').get(key.toString());\n\n              req.transaction.onabort = function () {\n                reject(req.transaction.error);\n              };\n\n              req.transaction.oncomplete = function () {\n                if (req.result) {\n                  return resolve(req.result);\n                }\n\n                reject(Errors.notFoundError());\n              };\n            }));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getWithFallback.apply(this, arguments);\n}\n\nfunction wrapStore(store) {\n  // necessary since level-js@5 cannot read keys from level-js@4 and earlier\n  var originalGet = store.get.bind(store);\n  var originalHas = store.has.bind(store);\n  /**\n   * @param {Key} key\n   */\n\n  store.get = function (key) {\n    return getWithFallback(key, originalGet, originalHas, store);\n  };\n  /**\n   * @param {Key} key\n   */\n\n\n  store.has = function (key) {\n    return hasWithFallback(key, originalHas, store);\n  };\n\n  return store;\n}\n/**\n * @param {import('./types').Backends} backends\n */\n\n\nfunction wrapBackends(backends) {\n  return _objectSpread(_objectSpread({}, backends), {}, {\n    root: wrapStore(backends.root),\n    datastore: wrapStore(backends.datastore),\n    pins: wrapStore(backends.pins),\n    keys: wrapStore(backends.keys)\n  });\n}\n\nmodule.exports = {\n  wrapBackends: wrapBackends,\n  hasWithFallback: hasWithFallback,\n  getWithFallback: getWithFallback,\n  findLevelJs: findLevelJs,\n  CONFIG_KEY: CONFIG_KEY,\n  VERSION_KEY: VERSION_KEY\n};","map":{"version":3,"names":["require","Key","Errors","CONFIG_KEY","VERSION_KEY","findLevelJs","store","db","child","type","constructor","name","hasWithFallback","key","has","result","levelJs","Promise","resolve","reject","req","get","toString","transaction","onabort","error","oncomplete","Boolean","getWithFallback","notFoundError","wrapStore","originalGet","bind","originalHas","wrapBackends","backends","root","datastore","pins","keys","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-repo-migrations/src/utils.js"],"sourcesContent":["'use strict'\n\nconst {\n  Key,\n  Errors\n} = require('interface-datastore')\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\nconst CONFIG_KEY = new Key('/config')\nconst VERSION_KEY = new Key('/version')\n\n/**\n * Level dbs wrap level dbs that wrap level dbs. Find a level-js\n * instance in the chain if one exists.\n *\n * @param {Datastore} store\n * @returns {Datastore | undefined}\n */\nfunction findLevelJs (store) {\n  let db = store\n\n  // @ts-ignore\n  while (db.db || db.child) {\n    // @ts-ignore\n    db = db.db || db.child\n\n    // `Level` is only present in the browser, in node it is LevelDOWN\n    // @ts-ignore\n    if (db.type === 'level-js' || db.constructor.name === 'Level') {\n      return db\n    }\n  }\n}\n\n/**\n * @param {Key} key\n * @param {function (Key): Promise<boolean>} has\n * @param {Datastore} store\n * @returns {Promise<boolean>}\n */\nasync function hasWithFallback (key, has, store) {\n  const result = await has(key)\n\n  if (result) {\n    return result\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array  so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    return false\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      resolve(Boolean(req.result))\n    }\n  })\n}\n\n/**\n * @param {import('interface-datastore').Key} key\n * @param {function (Key): Promise<Uint8Array>} get\n * @param {function (Key): Promise<boolean>} has\n * @param {import('interface-datastore').Datastore} store\n * @returns {Promise<Uint8Array>}\n */\nasync function getWithFallback (key, get, has, store) {\n  if (await has(key)) {\n    return get(key)\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    throw Errors.notFoundError()\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      if (req.result) {\n        return resolve(req.result)\n      }\n\n      reject(Errors.notFoundError())\n    }\n  })\n}\n\n/**\n * @param {Datastore} store\n */\nfunction wrapStore (store) {\n  // necessary since level-js@5 cannot read keys from level-js@4 and earlier\n  const originalGet = store.get.bind(store)\n  const originalHas = store.has.bind(store)\n  /**\n   * @param {Key} key\n   */\n  store.get = (key) => getWithFallback(key, originalGet, originalHas, store)\n  /**\n   * @param {Key} key\n   */\n  store.has = (key) => hasWithFallback(key, originalHas, store)\n\n  return store\n}\n\n/**\n * @param {import('./types').Backends} backends\n */\nfunction wrapBackends (backends) {\n  return {\n    ...backends,\n    root: wrapStore(backends.root),\n    datastore: wrapStore(backends.datastore),\n    pins: wrapStore(backends.pins),\n    keys: wrapStore(backends.keys)\n  }\n}\n\nmodule.exports = {\n  wrapBackends,\n  hasWithFallback,\n  getWithFallback,\n  findLevelJs,\n  CONFIG_KEY,\n  VERSION_KEY\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n\nconst toCidAndPath = require('ipfs-core-utils/src/to-cid-and-path');\n\nconst {\n  resolvePath\n} = require('../../utils');\n/**\n * @param {Object} config\n * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\n\n\nmodule.exports = _ref => {\n  let {\n    repo,\n    codecs,\n    preload\n  } = _ref;\n\n  /**\n   * @type {import('ipfs-core-types/src/dag').API[\"resolve\"]}\n   */\n  async function dagResolve(ipfsPath) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      cid\n    } = toCidAndPath(ipfsPath);\n\n    if (options.preload !== false) {\n      preload(cid);\n    }\n\n    return resolvePath(repo, codecs, ipfsPath, options);\n  }\n\n  return withTimeoutOption(dagResolve);\n};","map":{"version":3,"names":["withTimeoutOption","require","toCidAndPath","resolvePath","module","exports","repo","codecs","preload","dagResolve","ipfsPath","options","cid"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/dag/resolve.js"],"sourcesContent":["'use strict'\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\nconst toCidAndPath = require('ipfs-core-utils/src/to-cid-and-path')\nconst { resolvePath } = require('../../utils')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nmodule.exports = ({ repo, codecs, preload }) => {\n  /**\n   * @type {import('ipfs-core-types/src/dag').API[\"resolve\"]}\n   */\n  async function dagResolve (ipfsPath, options = {}) {\n    const {\n      cid\n    } = toCidAndPath(ipfsPath)\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    return resolvePath(repo, codecs, ipfsPath, options)\n  }\n\n  return withTimeoutOption(dagResolve)\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,yCAAD,CAAjC;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,qCAAD,CAA5B;;AACA,MAAM;EAAEE;AAAF,IAAkBF,OAAO,CAAC,aAAD,CAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,QAA+B;EAAA,IAA9B;IAAEC,IAAF;IAAQC,MAAR;IAAgBC;EAAhB,CAA8B;;EAC9C;AACF;AACA;EACE,eAAeC,UAAf,CAA2BC,QAA3B,EAAmD;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IACjD,MAAM;MACJC;IADI,IAEFV,YAAY,CAACQ,QAAD,CAFhB;;IAIA,IAAIC,OAAO,CAACH,OAAR,KAAoB,KAAxB,EAA+B;MAC7BA,OAAO,CAACI,GAAD,CAAP;IACD;;IAED,OAAOT,WAAW,CAACG,IAAD,EAAOC,MAAP,EAAeG,QAAf,EAAyBC,OAAzB,CAAlB;EACD;;EAED,OAAOX,iBAAiB,CAACS,UAAD,CAAxB;AACD,CAjBD"},"metadata":{},"sourceType":"script"}
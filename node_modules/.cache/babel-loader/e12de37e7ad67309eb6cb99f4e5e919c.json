{"ast":null,"code":"import { get, makeAutoObservable, runInAction, toJS } from \"mobx\";\nimport { Message } from \"./Message.js\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nimport { v4 as uuidv4 } from \"uuid\";\nexport class ChatRoom {\n  constructor(rootStore, roomName) {\n    this.roomId = uuidv4();\n    this.rootStore = rootStore;\n    this.ipfsNode = rootStore.dataStore.ipfsNode;\n    this.pubsub = rootStore.dataStore.ipfsNode.pubsub;\n    this.orbitDb = rootStore.dataStore.orbitDb;\n    this.roomName = roomName;\n    this.chatRoomMessages = [];\n    makeAutoObservable(this);\n  }\n\n  async init() {\n    await this.connectToChatRoom();\n    await this.loadMsgDb();\n    await this.setMessagesFromDb();\n  }\n\n  async loadMsgDb() {\n    this.chatMessagesDb = await this.orbitDb.feed(`${this.roomName}-messages`);\n    await this.chatMessagesDb.load();\n  }\n\n  async setMessagesFromDb() {\n    // if (this.chatRoomMessages !== []) return;\n    const all = await toJS(this.chatMessagesDb.all); // console.log(toJS(this.chatRoomMessages));\n\n    runInAction(() => {\n      all.map(e => {\n        // console.log(e.payload.value);\n        return this.chatRoomMessages.push(e.payload.value);\n      });\n    });\n  }\n\n  async connectToChatRoom() {\n    runInAction(async () => {\n      // await this.pubsub.unsubscribe(this.roomName, (msg) => console.log(msg));\n      await this.pubsub.subscribe(this.roomName, await this.getMessage.bind(this));\n    });\n  }\n\n  async sendMessageToChatRoom(msg) {\n    console.log(\"Msg in sending: \" + msg); //TODO:messages here\n    // const date = new Date(Date.now());\n    // const message = new Message(msg.from, msg, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from));\n\n    const stringifyMessage = JSON.stringify(msg);\n    runInAction(async () => {\n      await this.pubsub.publish(this.roomName, stringifyMessage);\n    });\n  }\n\n  async getMessage(msg) {\n    // console.log(typeof msg.data);\n    console.log(msg.data); //TODO: nevim proc ale kdyz je to zprava odeslana ze stejneho peeru tak je to string a jinak je to object\n\n    if (typeof msg.data === \"object\") msg.data = new TextDecoder().decode(msg.data);\n    const parsedMsg = JSON.parse(msg.data);\n    const user = this.rootStore.sessionStore._user;\n    console.log(parsedMsg);\n\n    if (msg.data.includes(\"path\")) {\n      let file = await this.retrieveFileFromIpfs(parsedMsg.path);\n      console.log(file);\n      parsedMsg[\"file\"] = file;\n    }\n\n    parsedMsg[\"user\"] = user;\n    console.log(parsedMsg);\n    const date = new Date(Date.now());\n    const message = new Message(msg.from, parsedMsg, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from));\n    console.log(message);\n    await this.saveMessage(message);\n  }\n\n  async saveMessage(message) {\n    runInAction(async () => {\n      this.chatRoomMessages.push(message);\n      await this.chatMessagesDb.add(message);\n    });\n  }\n\n  async uploadFile(filesContent) {\n    //TODO: maybe Multiple files if interested\n    console.log(filesContent[0]);\n    console.log(filesContent[0].name.split(\".\").pop());\n    const result = await this.ipfsNode.add(filesContent[0]);\n    console.log(result);\n    const fileMessage = {\n      fileName: filesContent[0].name,\n      path: result.path\n    };\n    console.log(fileMessage);\n    this.sendMessageToChatRoom(fileMessage);\n  }\n\n  getFileExtension(fileName) {\n    return fileName.split(\".\").pop();\n  }\n\n  fileIsImage(fileName) {\n    const match = fileName.match(/\\.(jpg|jpeg|png|gif)$/i);\n    console.log(match);\n    return match !== null;\n  }\n\n  async retrieveFileFromIpfs(path) {\n    const ipfsFile = await this.ipfsNode.cat(path);\n    console.log(ipfsFile);\n    let file;\n    const content = [];\n\n    for await (const chunk of ipfsFile) {\n      content.push(chunk);\n    }\n\n    console.log(content);\n    const blob = new Blob(content); //TODO: lepsi ukladat Blob protoze ty URL budou temporary\n\n    file = URL.createObjectURL(blob);\n    return file;\n  }\n\n}","map":{"version":3,"names":["get","makeAutoObservable","runInAction","toJS","Message","AvatarGenerator","v4","uuidv4","ChatRoom","constructor","rootStore","roomName","roomId","ipfsNode","dataStore","pubsub","orbitDb","chatRoomMessages","init","connectToChatRoom","loadMsgDb","setMessagesFromDb","chatMessagesDb","feed","load","all","map","e","push","payload","value","subscribe","getMessage","bind","sendMessageToChatRoom","msg","console","log","stringifyMessage","JSON","stringify","publish","data","TextDecoder","decode","parsedMsg","parse","user","sessionStore","_user","includes","file","retrieveFileFromIpfs","path","date","Date","now","message","from","getHours","getMinutes","generateRandomAvatar","saveMessage","add","uploadFile","filesContent","name","split","pop","result","fileMessage","fileName","getFileExtension","fileIsImage","match","ipfsFile","cat","content","chunk","blob","Blob","URL","createObjectURL"],"sources":["C:/Users/zajan/GitHub/chatApplication/src/data/models/Room.js"],"sourcesContent":["import { get, makeAutoObservable, runInAction, toJS } from \"mobx\";\r\nimport { Message } from \"./Message.js\";\r\nimport { AvatarGenerator } from \"random-avatar-generator\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nexport class ChatRoom {\r\n  roomId;\r\n  pubsub;\r\n  ipfsNode;\r\n  orbitDb;\r\n  roomName;\r\n  textDecoder;\r\n  chatMessagesDb;\r\n  chatRoomMessages;\r\n\r\n  constructor(rootStore, roomName) {\r\n    this.roomId = uuidv4();\r\n    this.rootStore = rootStore;\r\n    this.ipfsNode = rootStore.dataStore.ipfsNode;\r\n    this.pubsub = rootStore.dataStore.ipfsNode.pubsub;\r\n    this.orbitDb = rootStore.dataStore.orbitDb;\r\n    this.roomName = roomName;\r\n\r\n    this.chatRoomMessages = [];\r\n    makeAutoObservable(this);\r\n  }\r\n  async init() {\r\n    await this.connectToChatRoom();\r\n    await this.loadMsgDb();\r\n    await this.setMessagesFromDb();\r\n  }\r\n\r\n  async loadMsgDb() {\r\n    this.chatMessagesDb = await this.orbitDb.feed(`${this.roomName}-messages`);\r\n    await this.chatMessagesDb.load();\r\n  }\r\n\r\n  async setMessagesFromDb() {\r\n    // if (this.chatRoomMessages !== []) return;\r\n    const all = await toJS(this.chatMessagesDb.all);\r\n    // console.log(toJS(this.chatRoomMessages));\r\n    runInAction(() => {\r\n      all.map((e) => {\r\n        // console.log(e.payload.value);\r\n        return this.chatRoomMessages.push(e.payload.value);\r\n      });\r\n    });\r\n  }\r\n\r\n  async connectToChatRoom() {\r\n    runInAction(async () => {\r\n      // await this.pubsub.unsubscribe(this.roomName, (msg) => console.log(msg));\r\n      await this.pubsub.subscribe(this.roomName, await this.getMessage.bind(this));\r\n    });\r\n  }\r\n\r\n  async sendMessageToChatRoom(msg) {\r\n    console.log(\"Msg in sending: \" + msg);\r\n    //TODO:messages here\r\n    // const date = new Date(Date.now());\r\n    // const message = new Message(msg.from, msg, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from));\r\n    const stringifyMessage = JSON.stringify(msg);\r\n    runInAction(async () => {\r\n      await this.pubsub.publish(this.roomName, stringifyMessage);\r\n    });\r\n  }\r\n\r\n  async getMessage(msg) {\r\n    // console.log(typeof msg.data);\r\n    console.log(msg.data);\r\n    //TODO: nevim proc ale kdyz je to zprava odeslana ze stejneho peeru tak je to string a jinak je to object\r\n    if (typeof msg.data === \"object\") msg.data = new TextDecoder().decode(msg.data);\r\n    const parsedMsg = JSON.parse(msg.data);\r\n    const user = this.rootStore.sessionStore._user;\r\n    console.log(parsedMsg);\r\n    if (msg.data.includes(\"path\")) {\r\n      let file = await this.retrieveFileFromIpfs(parsedMsg.path);\r\n      console.log(file);\r\n      parsedMsg[\"file\"] = file;\r\n    }\r\n    parsedMsg[\"user\"] = user;\r\n    console.log(parsedMsg);\r\n    const date = new Date(Date.now());\r\n    const message = new Message(msg.from, parsedMsg, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from));\r\n    console.log(message);\r\n\r\n    await this.saveMessage(message);\r\n  }\r\n\r\n  async saveMessage(message) {\r\n    runInAction(async () => {\r\n      this.chatRoomMessages.push(message);\r\n      await this.chatMessagesDb.add(message);\r\n    });\r\n  }\r\n\r\n  async uploadFile(filesContent) {\r\n    //TODO: maybe Multiple files if interested\r\n    console.log(filesContent[0]);\r\n    console.log(filesContent[0].name.split(\".\").pop());\r\n    const result = await this.ipfsNode.add(filesContent[0]);\r\n    console.log(result);\r\n    const fileMessage = { fileName: filesContent[0].name, path: result.path };\r\n    console.log(fileMessage);\r\n    this.sendMessageToChatRoom(fileMessage);\r\n  }\r\n  getFileExtension(fileName) {\r\n    return fileName.split(\".\").pop();\r\n  }\r\n\r\n  fileIsImage(fileName) {\r\n    const match = fileName.match(/\\.(jpg|jpeg|png|gif)$/i);\r\n    console.log(match);\r\n    return match !== null;\r\n  }\r\n  async retrieveFileFromIpfs(path) {\r\n    const ipfsFile = await this.ipfsNode.cat(path);\r\n\r\n    console.log(ipfsFile);\r\n\r\n    let file;\r\n\r\n    const content = [];\r\n    for await (const chunk of ipfsFile) {\r\n      content.push(chunk);\r\n    }\r\n    console.log(content);\r\n\r\n    const blob = new Blob(content);\r\n    //TODO: lepsi ukladat Blob protoze ty URL budou temporary\r\n    file = URL.createObjectURL(blob);\r\n\r\n    return file;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
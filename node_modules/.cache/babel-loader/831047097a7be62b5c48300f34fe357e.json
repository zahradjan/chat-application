{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar toCamel = require('../../lib/object-to-camel');\n\nvar configure = require('../../lib/configure');\n\nvar toUrlSearchParams = require('../../lib/to-url-search-params');\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {NamePubsubAPI[\"state\"]}\n   */\n  function state() {\n    return _state.apply(this, arguments);\n  }\n\n  function _state() {\n    _state = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return api.post('name/pubsub/state', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(options),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.t0 = toCamel;\n              _context.next = 7;\n              return res.json();\n\n            case 7:\n              _context.t1 = _context.sent;\n              return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _state.apply(this, arguments);\n  }\n\n  return state;\n});","map":{"version":3,"names":["toCamel","require","configure","toUrlSearchParams","module","exports","api","state","options","post","signal","searchParams","headers","res","json"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/name/pubsub/state.js"],"sourcesContent":["'use strict'\n\nconst toCamel = require('../../lib/object-to-camel')\nconst configure = require('../../lib/configure')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"state\"]}\n   */\n  async function state (options = {}) {\n    const res = await api.post('name/pubsub/state', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    // @ts-ignore server output is not typed\n    return toCamel(await res.json())\n  }\n  return state\n})\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,2BAAD,CAAvB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAzB;;AACA,IAAME,iBAAiB,GAAGF,OAAO,CAAC,gCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAChC;AACF;AACA;EAHkC,SAIjBC,KAJiB;IAAA;EAAA;;EAAA;IAAA,oEAIhC;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAsBC,OAAtB,2DAAgC,EAAhC;cAAA;cAAA,OACoBF,GAAG,CAACG,IAAJ,CAAS,mBAAT,EAA8B;gBAC9CC,MAAM,EAAEF,OAAO,CAACE,MAD8B;gBAE9CC,YAAY,EAAER,iBAAiB,CAACK,OAAD,CAFe;gBAG9CI,OAAO,EAAEJ,OAAO,CAACI;cAH6B,CAA9B,CADpB;;YAAA;cACQC,GADR;cAAA,cAQSb,OART;cAAA;cAAA,OAQuBa,GAAG,CAACC,IAAJ,EARvB;;YAAA;cAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJgC;IAAA;EAAA;;EAchC,OAAOP,KAAP;AACD,CAfyB,CAA1B"},"metadata":{},"sourceType":"script"}
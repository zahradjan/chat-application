{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _require = require('interface-datastore'),\n    Key = _require.Key;\n\nvar MFS_ROOT_KEY = new Key('/local/filesroot');\n/**\n * @param {import('../../src/types').Backends} backends\n * @param {import('../../src/types').MigrationProgressCallback} onProgress\n */\n\nfunction storeMfsRootInDatastore(_x) {\n  return _storeMfsRootInDatastore.apply(this, arguments);\n}\n/**\n * @param {import('../../src/types').Backends} backends\n * @param {import('../../src/types').MigrationProgressCallback} onProgress\n */\n\n\nfunction _storeMfsRootInDatastore() {\n  _storeMfsRootInDatastore = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(backends) {\n    var onProgress,\n        root,\n        _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            onProgress = _args.length > 1 && _args[1] !== undefined ? _args[1] : function () {};\n            onProgress(100, 'Migrating MFS root to repo datastore');\n            _context.next = 4;\n            return backends.root.open();\n\n          case 4:\n            _context.next = 6;\n            return backends.datastore.open();\n\n          case 6:\n            _context.next = 8;\n            return backends.root.has(MFS_ROOT_KEY);\n\n          case 8:\n            if (!_context.sent) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.next = 11;\n            return backends.root.get(MFS_ROOT_KEY);\n\n          case 11:\n            root = _context.sent;\n            _context.next = 14;\n            return backends.datastore.put(MFS_ROOT_KEY, root);\n\n          case 14:\n            _context.next = 16;\n            return backends.root.delete(MFS_ROOT_KEY);\n\n          case 16:\n            _context.next = 18;\n            return backends.datastore.close();\n\n          case 18:\n            _context.next = 20;\n            return backends.root.close();\n\n          case 20:\n            onProgress(100, 'Stored MFS root in repo datastore');\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _storeMfsRootInDatastore.apply(this, arguments);\n}\n\nfunction storeMfsRootInRoot(_x2) {\n  return _storeMfsRootInRoot.apply(this, arguments);\n}\n/** @type {import('../../src/types').Migration} */\n\n\nfunction _storeMfsRootInRoot() {\n  _storeMfsRootInRoot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(backends) {\n    var onProgress,\n        root,\n        _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            onProgress = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : function () {};\n            onProgress(100, 'Migrating MFS root to repo root datastore');\n            _context2.next = 4;\n            return backends.root.open();\n\n          case 4:\n            _context2.next = 6;\n            return backends.datastore.open();\n\n          case 6:\n            _context2.next = 8;\n            return backends.datastore.has(MFS_ROOT_KEY);\n\n          case 8:\n            if (!_context2.sent) {\n              _context2.next = 16;\n              break;\n            }\n\n            _context2.next = 11;\n            return backends.datastore.get(MFS_ROOT_KEY);\n\n          case 11:\n            root = _context2.sent;\n            _context2.next = 14;\n            return backends.root.put(MFS_ROOT_KEY, root);\n\n          case 14:\n            _context2.next = 16;\n            return backends.datastore.delete(MFS_ROOT_KEY);\n\n          case 16:\n            _context2.next = 18;\n            return backends.datastore.close();\n\n          case 18:\n            _context2.next = 20;\n            return backends.root.close();\n\n          case 20:\n            onProgress(100, 'Stored MFS root in repo root datastore');\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _storeMfsRootInRoot.apply(this, arguments);\n}\n\nmodule.exports = {\n  version: 11,\n  description: 'Store mfs root in the datastore',\n  migrate: storeMfsRootInDatastore,\n  revert: storeMfsRootInRoot\n};","map":{"version":3,"names":["require","Key","MFS_ROOT_KEY","storeMfsRootInDatastore","backends","onProgress","root","open","datastore","has","get","put","delete","close","storeMfsRootInRoot","module","exports","version","description","migrate","revert"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-repo-migrations/migrations/migration-11/index.js"],"sourcesContent":["'use strict'\n\nconst { Key } = require('interface-datastore')\n\nconst MFS_ROOT_KEY = new Key('/local/filesroot')\n\n/**\n * @param {import('../../src/types').Backends} backends\n * @param {import('../../src/types').MigrationProgressCallback} onProgress\n */\nasync function storeMfsRootInDatastore (backends, onProgress = () => {}) {\n  onProgress(100, 'Migrating MFS root to repo datastore')\n\n  await backends.root.open()\n  await backends.datastore.open()\n\n  if (await backends.root.has(MFS_ROOT_KEY)) {\n    const root = await backends.root.get(MFS_ROOT_KEY)\n    await backends.datastore.put(MFS_ROOT_KEY, root)\n    await backends.root.delete(MFS_ROOT_KEY)\n  }\n\n  await backends.datastore.close()\n  await backends.root.close()\n\n  onProgress(100, 'Stored MFS root in repo datastore')\n}\n\n/**\n * @param {import('../../src/types').Backends} backends\n * @param {import('../../src/types').MigrationProgressCallback} onProgress\n */\nasync function storeMfsRootInRoot (backends, onProgress = () => {}) {\n  onProgress(100, 'Migrating MFS root to repo root datastore')\n\n  await backends.root.open()\n  await backends.datastore.open()\n\n  if (await backends.datastore.has(MFS_ROOT_KEY)) {\n    const root = await backends.datastore.get(MFS_ROOT_KEY)\n    await backends.root.put(MFS_ROOT_KEY, root)\n    await backends.datastore.delete(MFS_ROOT_KEY)\n  }\n\n  await backends.datastore.close()\n  await backends.root.close()\n\n  onProgress(100, 'Stored MFS root in repo root datastore')\n}\n\n/** @type {import('../../src/types').Migration} */\nmodule.exports = {\n  version: 11,\n  description: 'Store mfs root in the datastore',\n  migrate: storeMfsRootInDatastore,\n  revert: storeMfsRootInRoot\n}\n"],"mappings":"AAAA;;;;;;AAEA,eAAgBA,OAAO,CAAC,qBAAD,CAAvB;AAAA,IAAQC,GAAR,YAAQA,GAAR;;AAEA,IAAMC,YAAY,GAAG,IAAID,GAAJ,CAAQ,kBAAR,CAArB;AAEA;AACA;AACA;AACA;;SACeE,uB;;;AAkBf;AACA;AACA;AACA;;;;wFArBA,iBAAwCC,QAAxC;IAAA;IAAA;IAAA;IAAA;MAAA;QAAA;UAAA;YAAkDC,UAAlD,2DAA+D,YAAM,CAAE,CAAvE;YACEA,UAAU,CAAC,GAAD,EAAM,sCAAN,CAAV;YADF;YAAA,OAGQD,QAAQ,CAACE,IAAT,CAAcC,IAAd,EAHR;;UAAA;YAAA;YAAA,OAIQH,QAAQ,CAACI,SAAT,CAAmBD,IAAnB,EAJR;;UAAA;YAAA;YAAA,OAMYH,QAAQ,CAACE,IAAT,CAAcG,GAAd,CAAkBP,YAAlB,CANZ;;UAAA;YAAA;cAAA;cAAA;YAAA;;YAAA;YAAA,OAOuBE,QAAQ,CAACE,IAAT,CAAcI,GAAd,CAAkBR,YAAlB,CAPvB;;UAAA;YAOUI,IAPV;YAAA;YAAA,OAQUF,QAAQ,CAACI,SAAT,CAAmBG,GAAnB,CAAuBT,YAAvB,EAAqCI,IAArC,CARV;;UAAA;YAAA;YAAA,OASUF,QAAQ,CAACE,IAAT,CAAcM,MAAd,CAAqBV,YAArB,CATV;;UAAA;YAAA;YAAA,OAYQE,QAAQ,CAACI,SAAT,CAAmBK,KAAnB,EAZR;;UAAA;YAAA;YAAA,OAaQT,QAAQ,CAACE,IAAT,CAAcO,KAAd,EAbR;;UAAA;YAeER,UAAU,CAAC,GAAD,EAAM,mCAAN,CAAV;;UAfF;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;SAsBeS,kB;;;AAkBf;;;;mFAlBA,kBAAmCV,QAAnC;IAAA;IAAA;IAAA;IAAA;MAAA;QAAA;UAAA;YAA6CC,UAA7C,8DAA0D,YAAM,CAAE,CAAlE;YACEA,UAAU,CAAC,GAAD,EAAM,2CAAN,CAAV;YADF;YAAA,OAGQD,QAAQ,CAACE,IAAT,CAAcC,IAAd,EAHR;;UAAA;YAAA;YAAA,OAIQH,QAAQ,CAACI,SAAT,CAAmBD,IAAnB,EAJR;;UAAA;YAAA;YAAA,OAMYH,QAAQ,CAACI,SAAT,CAAmBC,GAAnB,CAAuBP,YAAvB,CANZ;;UAAA;YAAA;cAAA;cAAA;YAAA;;YAAA;YAAA,OAOuBE,QAAQ,CAACI,SAAT,CAAmBE,GAAnB,CAAuBR,YAAvB,CAPvB;;UAAA;YAOUI,IAPV;YAAA;YAAA,OAQUF,QAAQ,CAACE,IAAT,CAAcK,GAAd,CAAkBT,YAAlB,EAAgCI,IAAhC,CARV;;UAAA;YAAA;YAAA,OASUF,QAAQ,CAACI,SAAT,CAAmBI,MAAnB,CAA0BV,YAA1B,CATV;;UAAA;YAAA;YAAA,OAYQE,QAAQ,CAACI,SAAT,CAAmBK,KAAnB,EAZR;;UAAA;YAAA;YAAA,OAaQT,QAAQ,CAACE,IAAT,CAAcO,KAAd,EAbR;;UAAA;YAeER,UAAU,CAAC,GAAD,EAAM,wCAAN,CAAV;;UAfF;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAmBAU,MAAM,CAACC,OAAP,GAAiB;EACfC,OAAO,EAAE,EADM;EAEfC,WAAW,EAAE,iCAFE;EAGfC,OAAO,EAAEhB,uBAHM;EAIfiB,MAAM,EAAEN;AAJO,CAAjB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar errcode = require('err-code');\n\nvar _require = require('uint8arrays/to-string'),\n    uint8ArrayToString = _require.toString;\n\nvar _require2 = require('uint8arrays/from-string'),\n    uint8ArrayFromString = _require2.fromString;\n/**\n * @typedef {import('interface-datastore').Key} Key\n */\n\n\nvar namespace = '/record/';\n/**\n * @param {Uint8Array} buf\n */\n\nfunction encodeBase32(buf) {\n  return uint8ArrayToString(buf, 'base32');\n}\n/**\n * converts a binary record key to a pubsub topic key\n *\n * @param {Uint8Array | string} key\n */\n\n\nfunction keyToTopic(key) {\n  // Record-store keys are arbitrary binary. However, pubsub requires UTF-8 string topic IDs\n  // Encodes to \"/record/base64url(key)\"\n  if (typeof key === 'string' || key instanceof String) {\n    key = uint8ArrayFromString(key.toString());\n  }\n\n  var b64url = uint8ArrayToString(key, 'base64url');\n  return \"\".concat(namespace).concat(b64url);\n}\n/**\n * converts a pubsub topic key to a binary record key\n *\n * @param {string} topic\n */\n\n\nfunction topicToKey(topic) {\n  if (topic.substring(0, namespace.length) !== namespace) {\n    throw errcode(new Error('topic received is not from a record'), 'ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE');\n  }\n\n  var key = topic.substring(namespace.length);\n  return uint8ArrayFromString(key, 'base64url');\n}\n\nmodule.exports = {\n  encodeBase32: encodeBase32,\n  keyToTopic: keyToTopic,\n  topicToKey: topicToKey\n};","map":{"version":3,"names":["errcode","require","uint8ArrayToString","toString","uint8ArrayFromString","fromString","namespace","encodeBase32","buf","keyToTopic","key","String","b64url","topicToKey","topic","substring","length","Error","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/datastore-pubsub/src/utils.js"],"sourcesContent":["'use strict'\n\nconst errcode = require('err-code')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\n\n/**\n * @typedef {import('interface-datastore').Key} Key\n */\n\nconst namespace = '/record/'\n\n/**\n * @param {Uint8Array} buf\n */\nfunction encodeBase32 (buf) {\n  return uint8ArrayToString(buf, 'base32')\n}\n\n/**\n * converts a binary record key to a pubsub topic key\n *\n * @param {Uint8Array | string} key\n */\nfunction keyToTopic (key) {\n  // Record-store keys are arbitrary binary. However, pubsub requires UTF-8 string topic IDs\n  // Encodes to \"/record/base64url(key)\"\n  if (typeof key === 'string' || key instanceof String) {\n    key = uint8ArrayFromString(key.toString())\n  }\n\n  const b64url = uint8ArrayToString(key, 'base64url')\n\n  return `${namespace}${b64url}`\n}\n\n/**\n * converts a pubsub topic key to a binary record key\n *\n * @param {string} topic\n */\nfunction topicToKey (topic) {\n  if (topic.substring(0, namespace.length) !== namespace) {\n    throw errcode(new Error('topic received is not from a record'), 'ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE')\n  }\n\n  const key = topic.substring(namespace.length)\n\n  return uint8ArrayFromString(key, 'base64url')\n}\n\nmodule.exports = {\n  encodeBase32,\n  keyToTopic,\n  topicToKey\n}\n"],"mappings":"AAAA;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,eAAyCA,OAAO,CAAC,uBAAD,CAAhD;AAAA,IAAkBC,kBAAlB,YAAQC,QAAR;;AACA,gBAA6CF,OAAO,CAAC,yBAAD,CAApD;AAAA,IAAoBG,oBAApB,aAAQC,UAAR;AAEA;AACA;AACA;;;AAEA,IAAMC,SAAS,GAAG,UAAlB;AAEA;AACA;AACA;;AACA,SAASC,YAAT,CAAuBC,GAAvB,EAA4B;EAC1B,OAAON,kBAAkB,CAACM,GAAD,EAAM,QAAN,CAAzB;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASC,UAAT,CAAqBC,GAArB,EAA0B;EACxB;EACA;EACA,IAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,YAAYC,MAA9C,EAAsD;IACpDD,GAAG,GAAGN,oBAAoB,CAACM,GAAG,CAACP,QAAJ,EAAD,CAA1B;EACD;;EAED,IAAMS,MAAM,GAAGV,kBAAkB,CAACQ,GAAD,EAAM,WAAN,CAAjC;EAEA,iBAAUJ,SAAV,SAAsBM,MAAtB;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;EAC1B,IAAIA,KAAK,CAACC,SAAN,CAAgB,CAAhB,EAAmBT,SAAS,CAACU,MAA7B,MAAyCV,SAA7C,EAAwD;IACtD,MAAMN,OAAO,CAAC,IAAIiB,KAAJ,CAAU,qCAAV,CAAD,EAAmD,wCAAnD,CAAb;EACD;;EAED,IAAMP,GAAG,GAAGI,KAAK,CAACC,SAAN,CAAgBT,SAAS,CAACU,MAA1B,CAAZ;EAEA,OAAOZ,oBAAoB,CAACM,GAAD,EAAM,WAAN,CAA3B;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiB;EACfZ,YAAY,EAAZA,YADe;EAEfE,UAAU,EAAVA,UAFe;EAGfI,UAAU,EAAVA;AAHe,CAAjB"},"metadata":{},"sourceType":"script"}
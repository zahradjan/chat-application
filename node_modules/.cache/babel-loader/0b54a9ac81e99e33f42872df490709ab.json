{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar configure = require('./lib/configure');\n\nvar toUrlSearchParams = require('./lib/to-url-search-params');\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {RootAPI[\"commands\"]}\n   */\n  var commands = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return api.post('commands', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(options),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res.json());\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function commands() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return commands;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","module","exports","api","commands","options","post","signal","searchParams","headers","res","json"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/commands.js"],"sourcesContent":["'use strict'\n\nconst configure = require('./lib/configure')\nconst toUrlSearchParams = require('./lib/to-url-search-params')\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RootAPI[\"commands\"]}\n   */\n  const commands = async (options = {}) => {\n    const res = await api.post('commands', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return commands\n})\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,4BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAChC;AACF;AACA;EACE,IAAMC,QAAQ;IAAA,sEAAG;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAOC,OAAP,2DAAiB,EAAjB;cAAA;cAAA,OACGF,GAAG,CAACG,IAAJ,CAAS,UAAT,EAAqB;gBACrCC,MAAM,EAAEF,OAAO,CAACE,MADqB;gBAErCC,YAAY,EAAER,iBAAiB,CAACK,OAAD,CAFM;gBAGrCI,OAAO,EAAEJ,OAAO,CAACI;cAHoB,CAArB,CADH;;YAAA;cACTC,GADS;cAAA,iCAORA,GAAG,CAACC,IAAJ,EAPQ;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAARP,QAAQ;MAAA;IAAA;EAAA,GAAd;;EASA,OAAOA,QAAP;AACD,CAdyB,CAA1B"},"metadata":{},"sourceType":"script"}
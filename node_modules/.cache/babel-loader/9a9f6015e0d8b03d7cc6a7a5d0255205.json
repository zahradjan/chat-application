{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar PeerId = require('peer-id');\n\nvar _require = require('multiaddr'),\n    Multiaddr = _require.Multiaddr;\n\nvar mafmt = require('mafmt');\n\nvar _require2 = require('events'),\n    EventEmitter = _require2.EventEmitter;\n\nvar debug = require('debug');\n\nvar log = Object.assign(debug('libp2p:bootstrap'), {\n  error: debug('libp2p:bootstrap:error')\n});\n/**\n * Emits 'peer' events on a regular interval for each peer in the provided list.\n */\n\nvar Bootstrap = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Bootstrap, _EventEmitter);\n\n  var _super = _createSuper(Bootstrap);\n\n  /**\n   * Constructs a new Bootstrap.\n   *\n   * @param {Object} options\n   * @param {Array<string>} options.list - the list of peer addresses in multi-address format\n   * @param {number} [options.interval = 10000] - the interval between emitting addresses in milliseconds\n   *\n   */\n  function Bootstrap() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      list: []\n    };\n\n    _classCallCheck(this, Bootstrap);\n\n    if (!options.list || !options.list.length) {\n      throw new Error('Bootstrap requires a list of peer addresses');\n    }\n\n    _this = _super.call(this);\n    _this._list = options.list;\n    _this._interval = options.interval || 10000;\n    _this._timer = null;\n    return _this;\n  }\n  /**\n   * Start emitting events.\n   */\n\n\n  _createClass(Bootstrap, [{\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      if (this._timer) {\n        return;\n      }\n\n      this._timer = setInterval(function () {\n        return _this2._discoverBootstrapPeers();\n      }, this._interval);\n      log('Starting bootstrap node discovery');\n\n      this._discoverBootstrapPeers();\n    }\n    /**\n     * Emit each address in the list as a PeerInfo.\n     */\n\n  }, {\n    key: \"_discoverBootstrapPeers\",\n    value: function _discoverBootstrapPeers() {\n      var _this3 = this;\n\n      if (!this._timer) {\n        return;\n      }\n\n      this._list.forEach(function (candidate) {\n        if (!mafmt.P2P.matches(candidate)) {\n          return log.error('Invalid multiaddr');\n        }\n\n        var ma = new Multiaddr(candidate);\n        var peerIdStr = ma.getPeerId();\n\n        if (!peerIdStr) {\n          log.error('Invalid bootstrap multiaddr without peer id');\n          return;\n        }\n\n        var peerId = PeerId.createFromB58String(peerIdStr);\n\n        try {\n          _this3.emit('peer', {\n            id: peerId,\n            multiaddrs: [ma]\n          });\n        } catch (err) {\n          log.error('Invalid bootstrap peer id', err);\n        }\n      });\n    }\n    /**\n     * Stop emitting events.\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this._timer) clearInterval(this._timer);\n      this._timer = null;\n    }\n  }]);\n\n  return Bootstrap;\n}(EventEmitter);\n\nexports = module.exports = Bootstrap;\nexports.tag = 'bootstrap';","map":{"version":3,"names":["PeerId","require","Multiaddr","mafmt","EventEmitter","debug","log","Object","assign","error","Bootstrap","options","list","length","Error","_list","_interval","interval","_timer","setInterval","_discoverBootstrapPeers","forEach","candidate","P2P","matches","ma","peerIdStr","getPeerId","peerId","createFromB58String","emit","id","multiaddrs","err","clearInterval","exports","module","tag"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p-bootstrap/src/index.js"],"sourcesContent":["'use strict'\n\nconst PeerId = require('peer-id')\nconst { Multiaddr } = require('multiaddr')\nconst mafmt = require('mafmt')\nconst { EventEmitter } = require('events')\nconst debug = require('debug')\n\nconst log = Object.assign(debug('libp2p:bootstrap'), {\n  error: debug('libp2p:bootstrap:error')\n})\n\n/**\n * Emits 'peer' events on a regular interval for each peer in the provided list.\n */\nclass Bootstrap extends EventEmitter {\n  /**\n   * Constructs a new Bootstrap.\n   *\n   * @param {Object} options\n   * @param {Array<string>} options.list - the list of peer addresses in multi-address format\n   * @param {number} [options.interval = 10000] - the interval between emitting addresses in milliseconds\n   *\n   */\n  constructor (options = { list: [] }) {\n    if (!options.list || !options.list.length) {\n      throw new Error('Bootstrap requires a list of peer addresses')\n    }\n    super()\n\n    this._list = options.list\n    this._interval = options.interval || 10000\n    this._timer = null\n  }\n\n  /**\n   * Start emitting events.\n   */\n  start () {\n    if (this._timer) {\n      return\n    }\n\n    this._timer = setInterval(() => this._discoverBootstrapPeers(), this._interval)\n    log('Starting bootstrap node discovery')\n    this._discoverBootstrapPeers()\n  }\n\n  /**\n   * Emit each address in the list as a PeerInfo.\n   */\n  _discoverBootstrapPeers () {\n    if (!this._timer) {\n      return\n    }\n\n    this._list.forEach((candidate) => {\n      if (!mafmt.P2P.matches(candidate)) {\n        return log.error('Invalid multiaddr')\n      }\n\n      const ma = new Multiaddr(candidate)\n      const peerIdStr = ma.getPeerId()\n\n      if (!peerIdStr) {\n        log.error('Invalid bootstrap multiaddr without peer id')\n        return\n      }\n\n      const peerId = PeerId.createFromB58String(peerIdStr)\n\n      try {\n        this.emit('peer', {\n          id: peerId,\n          multiaddrs: [ma]\n        })\n      } catch (err) {\n        log.error('Invalid bootstrap peer id', err)\n      }\n    })\n  }\n\n  /**\n   * Stop emitting events.\n   */\n  stop () {\n    if (this._timer) clearInterval(this._timer)\n    this._timer = null\n  }\n}\n\nexports = module.exports = Bootstrap\nexports.tag = 'bootstrap'\n"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,eAAsBA,OAAO,CAAC,WAAD,CAA7B;AAAA,IAAQC,SAAR,YAAQA,SAAR;;AACA,IAAMC,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AACA,gBAAyBA,OAAO,CAAC,QAAD,CAAhC;AAAA,IAAQG,YAAR,aAAQA,YAAR;;AACA,IAAMC,KAAK,GAAGJ,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMK,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAcH,KAAK,CAAC,kBAAD,CAAnB,EAAyC;EACnDI,KAAK,EAAEJ,KAAK,CAAC,wBAAD;AADuC,CAAzC,CAAZ;AAIA;AACA;AACA;;IACMK,S;;;;;EACJ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,qBAAqC;IAAA;;IAAA,IAAxBC,OAAwB,uEAAd;MAAEC,IAAI,EAAE;IAAR,CAAc;;IAAA;;IACnC,IAAI,CAACD,OAAO,CAACC,IAAT,IAAiB,CAACD,OAAO,CAACC,IAAR,CAAaC,MAAnC,EAA2C;MACzC,MAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;IACD;;IACD;IAEA,MAAKC,KAAL,GAAaJ,OAAO,CAACC,IAArB;IACA,MAAKI,SAAL,GAAiBL,OAAO,CAACM,QAAR,IAAoB,KAArC;IACA,MAAKC,MAAL,GAAc,IAAd;IARmC;EASpC;EAED;AACF;AACA;;;;;WACE,iBAAS;MAAA;;MACP,IAAI,KAAKA,MAAT,EAAiB;QACf;MACD;;MAED,KAAKA,MAAL,GAAcC,WAAW,CAAC;QAAA,OAAM,MAAI,CAACC,uBAAL,EAAN;MAAA,CAAD,EAAuC,KAAKJ,SAA5C,CAAzB;MACAV,GAAG,CAAC,mCAAD,CAAH;;MACA,KAAKc,uBAAL;IACD;IAED;AACF;AACA;;;;WACE,mCAA2B;MAAA;;MACzB,IAAI,CAAC,KAAKF,MAAV,EAAkB;QAChB;MACD;;MAED,KAAKH,KAAL,CAAWM,OAAX,CAAmB,UAACC,SAAD,EAAe;QAChC,IAAI,CAACnB,KAAK,CAACoB,GAAN,CAAUC,OAAV,CAAkBF,SAAlB,CAAL,EAAmC;UACjC,OAAOhB,GAAG,CAACG,KAAJ,CAAU,mBAAV,CAAP;QACD;;QAED,IAAMgB,EAAE,GAAG,IAAIvB,SAAJ,CAAcoB,SAAd,CAAX;QACA,IAAMI,SAAS,GAAGD,EAAE,CAACE,SAAH,EAAlB;;QAEA,IAAI,CAACD,SAAL,EAAgB;UACdpB,GAAG,CAACG,KAAJ,CAAU,6CAAV;UACA;QACD;;QAED,IAAMmB,MAAM,GAAG5B,MAAM,CAAC6B,mBAAP,CAA2BH,SAA3B,CAAf;;QAEA,IAAI;UACF,MAAI,CAACI,IAAL,CAAU,MAAV,EAAkB;YAChBC,EAAE,EAAEH,MADY;YAEhBI,UAAU,EAAE,CAACP,EAAD;UAFI,CAAlB;QAID,CALD,CAKE,OAAOQ,GAAP,EAAY;UACZ3B,GAAG,CAACG,KAAJ,CAAU,2BAAV,EAAuCwB,GAAvC;QACD;MACF,CAvBD;IAwBD;IAED;AACF;AACA;;;;WACE,gBAAQ;MACN,IAAI,KAAKf,MAAT,EAAiBgB,aAAa,CAAC,KAAKhB,MAAN,CAAb;MACjB,KAAKA,MAAL,GAAc,IAAd;IACD;;;;EAzEqBd,Y;;AA4ExB+B,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiBzB,SAA3B;AACAyB,OAAO,CAACE,GAAR,GAAc,WAAd"},"metadata":{},"sourceType":"script"}
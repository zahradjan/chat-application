{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _createForOfIteratorHelper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _require = require('multiformats/cid'),\n    CID = _require.CID;\n\nvar configure = require('../lib/configure');\n\nvar _require2 = require('ipfs-core-utils/src/pins/normalise-input'),\n    normaliseInput = _require2.normaliseInput;\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {PinAPI[\"addAll\"]}\n   */\n  function addAll(_x) {\n    return _addAll.apply(this, arguments);\n  }\n\n  function _addAll() {\n    _addAll = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n      var options,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _step$value,\n          path,\n          recursive,\n          metadata,\n          res,\n          _iteratorAbruptCompletion2,\n          _didIteratorError2,\n          _iteratorError2,\n          _iterator2,\n          _step2,\n          pin,\n          _iterator3,\n          _step3,\n          cid,\n          _args = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 3;\n              _iterator = _asyncIterator(normaliseInput(source));\n\n            case 5:\n              _context.next = 7;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 7:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 63;\n                break;\n              }\n\n              _step$value = _step.value, path = _step$value.path, recursive = _step$value.recursive, metadata = _step$value.metadata;\n              _context.next = 11;\n              return _awaitAsyncGenerator(api.post('pin/add', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread(_objectSpread({}, options), {}, {\n                  arg: path,\n                  recursive: recursive,\n                  metadata: metadata ? JSON.stringify(metadata) : undefined,\n                  stream: true\n                })),\n                headers: options.headers\n              }));\n\n            case 11:\n              res = _context.sent;\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context.prev = 14;\n              _iterator2 = _asyncIterator(res.ndjson());\n\n            case 16:\n              _context.next = 18;\n              return _awaitAsyncGenerator(_iterator2.next());\n\n            case 18:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context.sent).done)) {\n                _context.next = 44;\n                break;\n              }\n\n              pin = _step2.value;\n\n              if (!pin.Pins) {\n                _context.next = 39;\n                break;\n              }\n\n              // non-streaming response\n              _iterator3 = _createForOfIteratorHelper(pin.Pins);\n              _context.prev = 22;\n\n              _iterator3.s();\n\n            case 24:\n              if ((_step3 = _iterator3.n()).done) {\n                _context.next = 30;\n                break;\n              }\n\n              cid = _step3.value;\n              _context.next = 28;\n              return CID.parse(cid);\n\n            case 28:\n              _context.next = 24;\n              break;\n\n            case 30:\n              _context.next = 35;\n              break;\n\n            case 32:\n              _context.prev = 32;\n              _context.t0 = _context[\"catch\"](22);\n\n              _iterator3.e(_context.t0);\n\n            case 35:\n              _context.prev = 35;\n\n              _iterator3.f();\n\n              return _context.finish(35);\n\n            case 38:\n              return _context.abrupt(\"continue\", 41);\n\n            case 39:\n              _context.next = 41;\n              return CID.parse(pin);\n\n            case 41:\n              _iteratorAbruptCompletion2 = false;\n              _context.next = 16;\n              break;\n\n            case 44:\n              _context.next = 50;\n              break;\n\n            case 46:\n              _context.prev = 46;\n              _context.t1 = _context[\"catch\"](14);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t1;\n\n            case 50:\n              _context.prev = 50;\n              _context.prev = 51;\n\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context.next = 55;\n                break;\n              }\n\n              _context.next = 55;\n              return _awaitAsyncGenerator(_iterator2.return());\n\n            case 55:\n              _context.prev = 55;\n\n              if (!_didIteratorError2) {\n                _context.next = 58;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 58:\n              return _context.finish(55);\n\n            case 59:\n              return _context.finish(50);\n\n            case 60:\n              _iteratorAbruptCompletion = false;\n              _context.next = 5;\n              break;\n\n            case 63:\n              _context.next = 69;\n              break;\n\n            case 65:\n              _context.prev = 65;\n              _context.t2 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t2;\n\n            case 69:\n              _context.prev = 69;\n              _context.prev = 70;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 74;\n                break;\n              }\n\n              _context.next = 74;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 74:\n              _context.prev = 74;\n\n              if (!_didIteratorError) {\n                _context.next = 77;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 77:\n              return _context.finish(74);\n\n            case 78:\n              return _context.finish(69);\n\n            case 79:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 65, 69, 79], [14, 46, 50, 60], [22, 32, 35, 38], [51,, 55, 59], [70,, 74, 78]]);\n    }));\n    return _addAll.apply(this, arguments);\n  }\n\n  return addAll;\n});","map":{"version":3,"names":["require","CID","configure","normaliseInput","toUrlSearchParams","module","exports","api","addAll","source","options","path","recursive","metadata","post","signal","searchParams","arg","JSON","stringify","undefined","stream","headers","res","ndjson","pin","Pins","cid","parse"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/pin/add-all.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst configure = require('../lib/configure')\nconst { normaliseInput } = require('ipfs-core-utils/src/pins/normalise-input')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {PinAPI[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    for await (const { path, recursive, metadata } of normaliseInput(source)) {\n      const res = await api.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: path,\n          recursive,\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      })\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) { // non-streaming response\n          for (const cid of pin.Pins) {\n            yield CID.parse(cid)\n          }\n          continue\n        }\n\n        yield CID.parse(pin)\n      }\n    }\n  }\n  return addAll\n})\n"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,eAAgBA,OAAO,CAAC,kBAAD,CAAvB;AAAA,IAAQC,GAAR,YAAQA,GAAR;;AACA,IAAMC,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,gBAA2BA,OAAO,CAAC,0CAAD,CAAlC;AAAA,IAAQG,cAAR,aAAQA,cAAR;;AACA,IAAMC,iBAAiB,GAAGJ,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAK,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAChC;AACF;AACA;EAHkC,SAIfC,MAJe;IAAA;EAAA;;EAAA;IAAA,uEAIhC,iBAAyBC,MAAzB;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAiCC,OAAjC,2DAA2C,EAA3C;cAAA;cAAA;cAAA;cAAA,2BACoDP,cAAc,CAACM,MAAD,CADlE;;YAAA;cAAA;cAAA;;YAAA;cAAA;gBAAA;gBAAA;cAAA;;cAAA,2BACqBE,IADrB,eACqBA,IADrB,EAC2BC,SAD3B,eAC2BA,SAD3B,EACsCC,QADtC,eACsCA,QADtC;cAAA;cAAA,4BAEsBN,GAAG,CAACO,IAAJ,CAAS,SAAT,EAAoB;gBACpCC,MAAM,EAAEL,OAAO,CAACK,MADoB;gBAEpCC,YAAY,EAAEZ,iBAAiB,iCAC1BM,OAD0B;kBAE7BO,GAAG,EAAEN,IAFwB;kBAG7BC,SAAS,EAATA,SAH6B;kBAI7BC,QAAQ,EAAEA,QAAQ,GAAGK,IAAI,CAACC,SAAL,CAAeN,QAAf,CAAH,GAA8BO,SAJnB;kBAK7BC,MAAM,EAAE;gBALqB,GAFK;gBASpCC,OAAO,EAAEZ,OAAO,CAACY;cATmB,CAApB,CAFtB;;YAAA;cAEUC,GAFV;cAAA;cAAA;cAAA;cAAA,4BAc4BA,GAAG,CAACC,MAAJ,EAd5B;;YAAA;cAAA;cAAA;;YAAA;cAAA;gBAAA;gBAAA;cAAA;;cAcqBC,GAdrB;;cAAA,KAeUA,GAAG,CAACC,IAfd;gBAAA;gBAAA;cAAA;;cAesB;cAftB,wCAgB0BD,GAAG,CAACC,IAhB9B;cAAA;;cAAA;;YAAA;cAAA;gBAAA;gBAAA;cAAA;;cAgBmBC,GAhBnB;cAAA;cAiBU,OAAM1B,GAAG,CAAC2B,KAAJ,CAAUD,GAAV,CAAN;;YAjBV;cAAA;cAAA;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;cAAA;;YAAA;cAAA;;cAAA;;cAAA;;YAAA;cAAA;;YAAA;cAAA;cAsBM,OAAM1B,GAAG,CAAC2B,KAAJ,CAAUH,GAAV,CAAN;;YAtBN;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;cAAA;;YAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAAA;;YAAA;cAAA;;YAAA;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;cAAA;;YAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAAA;;YAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJgC;IAAA;EAAA;;EA8BhC,OAAOjB,MAAP;AACD,CA/ByB,CAA1B"},"metadata":{},"sourceType":"script"}
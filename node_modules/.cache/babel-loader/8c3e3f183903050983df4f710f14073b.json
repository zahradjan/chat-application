{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _require = require('multiformats/cid'),\n    CID = _require.CID;\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {ObjectAPI[\"links\"]}\n   */\n  function links(_x) {\n    return _links.apply(this, arguments);\n  }\n\n  function _links() {\n    _links = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid) {\n      var options,\n          res,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('object/links', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: \"\".concat(cid instanceof Uint8Array ? CID.decode(cid) : cid)\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n              return _context.abrupt(\"return\", (data.Links || []).map(function (\n              /** @type {any} */\n              l) {\n                return {\n                  Name: l.Name,\n                  Tsize: l.Size,\n                  Hash: CID.parse(l.Hash)\n                };\n              }));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _links.apply(this, arguments);\n  }\n\n  return links;\n});","map":{"version":3,"names":["require","CID","configure","toUrlSearchParams","module","exports","api","links","cid","options","post","signal","searchParams","arg","Uint8Array","decode","headers","res","json","data","Links","map","l","Name","Tsize","Size","Hash","parse"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/object/links.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ObjectAPI[\"links\"]}\n   */\n  async function links (cid, options = {}) {\n    const res = await api.post('object/links', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return (data.Links || []).map((/** @type {any} */ l) => ({\n      Name: l.Name,\n      Tsize: l.Size,\n      Hash: CID.parse(l.Hash)\n    }))\n  }\n  return links\n})\n"],"mappings":"AAAA;;;;;;;;AAEA,eAAgBA,OAAO,CAAC,kBAAD,CAAvB;AAAA,IAAQC,GAAR,YAAQA,GAAR;;AACA,IAAMC,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAI,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAChC;AACF;AACA;EAHkC,SAIjBC,KAJiB;IAAA;EAAA;;EAAA;IAAA,oEAIhC,iBAAsBC,GAAtB;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAA2BC,OAA3B,2DAAqC,EAArC;cAAA;cAAA,OACoBH,GAAG,CAACI,IAAJ,CAAS,cAAT,EAAyB;gBACzCC,MAAM,EAAEF,OAAO,CAACE,MADyB;gBAEzCC,YAAY,EAAET,iBAAiB;kBAC7BU,GAAG,YAAKL,GAAG,YAAYM,UAAf,GAA4Bb,GAAG,CAACc,MAAJ,CAAWP,GAAX,CAA5B,GAA8CA,GAAnD;gBAD0B,GAE1BC,OAF0B,EAFU;gBAMzCO,OAAO,EAAEP,OAAO,CAACO;cANwB,CAAzB,CADpB;;YAAA;cACQC,GADR;cAAA;cAAA,OASqBA,GAAG,CAACC,IAAJ,EATrB;;YAAA;cASQC,IATR;cAAA,iCAWS,CAACA,IAAI,CAACC,KAAL,IAAc,EAAf,EAAmBC,GAAnB,CAAuB;cAAC;cAAmBC,CAApB;gBAAA,OAA2B;kBACvDC,IAAI,EAAED,CAAC,CAACC,IAD+C;kBAEvDC,KAAK,EAAEF,CAAC,CAACG,IAF8C;kBAGvDC,IAAI,EAAEzB,GAAG,CAAC0B,KAAJ,CAAUL,CAAC,CAACI,IAAZ;gBAHiD,CAA3B;cAAA,CAAvB,CAXT;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJgC;IAAA;EAAA;;EAqBhC,OAAOnB,KAAP;AACD,CAtByB,CAA1B"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar configure = require('../lib/configure');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/src/multicodecs')} codecs\n * @param {import('../types').Options} options\n */\n\n\nmodule.exports = function (codecs, options) {\n  var fn = configure(function (api) {\n    var dagPut = require('../dag/put')(codecs, options);\n    /**\n     * @type {ObjectAPI[\"put\"]}\n     */\n\n\n    function put(_x) {\n      return _put.apply(this, arguments);\n    }\n\n    function _put() {\n      _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(obj) {\n        var options,\n            _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                return _context.abrupt(\"return\", dagPut(obj, _objectSpread(_objectSpread({}, options), {}, {\n                  format: 'dag-pb',\n                  hashAlg: 'sha2-256',\n                  version: 0\n                })));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _put.apply(this, arguments);\n    }\n\n    return put;\n  });\n  return fn(options);\n};","map":{"version":3,"names":["configure","require","module","exports","codecs","options","fn","api","dagPut","put","obj","format","hashAlg","version"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/object/put.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/src/multicodecs')} codecs\n * @param {import('../types').Options} options\n */\nmodule.exports = (codecs, options) => {\n  const fn = configure((api) => {\n    const dagPut = require('../dag/put')(codecs, options)\n\n    /**\n     * @type {ObjectAPI[\"put\"]}\n     */\n    async function put (obj, options = {}) {\n      return dagPut(obj, {\n        ...options,\n        format: 'dag-pb',\n        hashAlg: 'sha2-256',\n        version: 0\n      })\n    }\n    return put\n  })\n\n  return fn(options)\n}\n"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAACC,MAAD,EAASC,OAAT,EAAqB;EACpC,IAAMC,EAAE,GAAGN,SAAS,CAAC,UAACO,GAAD,EAAS;IAC5B,IAAMC,MAAM,GAAGP,OAAO,CAAC,YAAD,CAAP,CAAsBG,MAAtB,EAA8BC,OAA9B,CAAf;IAEA;AACJ;AACA;;;IALgC,SAMbI,GANa;MAAA;IAAA;;IAAA;MAAA,kEAM5B,iBAAoBC,GAApB;QAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAyBL,OAAzB,2DAAmC,EAAnC;gBAAA,iCACSG,MAAM,CAACE,GAAD,kCACRL,OADQ;kBAEXM,MAAM,EAAE,QAFG;kBAGXC,OAAO,EAAE,UAHE;kBAIXC,OAAO,EAAE;gBAJE,GADf;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAN4B;MAAA;IAAA;;IAc5B,OAAOJ,GAAP;EACD,CAfmB,CAApB;EAiBA,OAAOH,EAAE,CAACD,OAAD,CAAT;AACD,CAnBD"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var rawPipe = function rawPipe() {\n  var res;\n\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  while (fns.length) {\n    res = fns.shift()(res);\n  }\n\n  return res;\n};\n\nvar isIterable = function isIterable(obj) {\n  return obj && (typeof obj[Symbol.asyncIterator] === 'function' || typeof obj[Symbol.iterator] === 'function' || typeof obj.next === 'function' // Probably, right?\n  );\n};\n\nvar isDuplex = function isDuplex(obj) {\n  return obj && typeof obj.sink === 'function' && isIterable(obj.source);\n};\n\nvar duplexPipelineFn = function duplexPipelineFn(duplex) {\n  return function (source) {\n    duplex.sink(source); // TODO: error on sink side is unhandled rejection - this is the same as pull streams\n\n    return duplex.source;\n  };\n};\n\nvar pipe = function pipe() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  // Duplex at start: wrap in function and return duplex source\n  if (isDuplex(fns[0])) {\n    var duplex = fns[0];\n\n    fns[0] = function () {\n      return duplex.source;\n    }; // Iterable at start: wrap in function\n\n  } else if (isIterable(fns[0])) {\n    var source = fns[0];\n\n    fns[0] = function () {\n      return source;\n    };\n  }\n\n  if (fns.length > 1) {\n    // Duplex at end: use duplex sink\n    if (isDuplex(fns[fns.length - 1])) {\n      fns[fns.length - 1] = fns[fns.length - 1].sink;\n    }\n  }\n\n  if (fns.length > 2) {\n    // Duplex in the middle, consume source with duplex sink and return duplex source\n    for (var i = 1; i < fns.length - 1; i++) {\n      if (isDuplex(fns[i])) {\n        fns[i] = duplexPipelineFn(fns[i]);\n      }\n    }\n  }\n\n  return rawPipe.apply(void 0, fns);\n};\n\nmodule.exports = pipe;\nmodule.exports.pipe = pipe;\nmodule.exports.rawPipe = rawPipe;\nmodule.exports.isIterable = isIterable;\nmodule.exports.isDuplex = isDuplex;","map":{"version":3,"names":["rawPipe","res","fns","length","shift","isIterable","obj","Symbol","asyncIterator","iterator","next","isDuplex","sink","source","duplexPipelineFn","duplex","pipe","i","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/it-pipe/index.js"],"sourcesContent":["const rawPipe = (...fns) => {\n  let res\n  while (fns.length) {\n    res = fns.shift()(res)\n  }\n  return res\n}\n\nconst isIterable = obj => obj && (\n  typeof obj[Symbol.asyncIterator] === 'function' ||\n  typeof obj[Symbol.iterator] === 'function' ||\n  typeof obj.next === 'function' // Probably, right?\n)\n\nconst isDuplex = obj => obj && typeof obj.sink === 'function' && isIterable(obj.source)\n\nconst duplexPipelineFn = duplex => source => {\n  duplex.sink(source) // TODO: error on sink side is unhandled rejection - this is the same as pull streams\n  return duplex.source\n}\n\nconst pipe = (...fns) => {\n  // Duplex at start: wrap in function and return duplex source\n  if (isDuplex(fns[0])) {\n    const duplex = fns[0]\n    fns[0] = () => duplex.source\n  // Iterable at start: wrap in function\n  } else if (isIterable(fns[0])) {\n    const source = fns[0]\n    fns[0] = () => source\n  }\n\n  if (fns.length > 1) {\n    // Duplex at end: use duplex sink\n    if (isDuplex(fns[fns.length - 1])) {\n      fns[fns.length - 1] = fns[fns.length - 1].sink\n    }\n  }\n\n  if (fns.length > 2) {\n    // Duplex in the middle, consume source with duplex sink and return duplex source\n    for (let i = 1; i < fns.length - 1; i++) {\n      if (isDuplex(fns[i])) {\n        fns[i] = duplexPipelineFn(fns[i])\n      }\n    }\n  }\n\n  return rawPipe(...fns)\n}\n\nmodule.exports = pipe\nmodule.exports.pipe = pipe\nmodule.exports.rawPipe = rawPipe\nmodule.exports.isIterable = isIterable\nmodule.exports.isDuplex = isDuplex\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
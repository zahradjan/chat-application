{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nvar T = require('../../message').TYPES;\n/**\n *\n * @param {import('../../index')} dht\n */\n\n\nmodule.exports = function (dht) {\n  var _handlers;\n\n  var handlers = (_handlers = {}, _defineProperty(_handlers, T.GET_VALUE, require('./get-value')(dht)), _defineProperty(_handlers, T.PUT_VALUE, require('./put-value')(dht)), _defineProperty(_handlers, T.FIND_NODE, require('./find-node')(dht)), _defineProperty(_handlers, T.ADD_PROVIDER, require('./add-provider')(dht)), _defineProperty(_handlers, T.GET_PROVIDERS, require('./get-providers')(dht)), _defineProperty(_handlers, T.PING, require('./ping')(dht)), _handlers);\n  /**\n   * Get the message handler matching the passed in type.\n   *\n   * @param {number} type\n   */\n\n  function getMessageHandler(type) {\n    // @ts-ignore ts does not aknowledge number as an index type\n    return handlers[type];\n  }\n\n  return getMessageHandler;\n};","map":{"version":3,"names":["T","require","TYPES","module","exports","dht","handlers","GET_VALUE","PUT_VALUE","FIND_NODE","ADD_PROVIDER","GET_PROVIDERS","PING","getMessageHandler","type"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p-kad-dht/src/rpc/handlers/index.js"],"sourcesContent":["'use strict'\n\nconst T = require('../../message').TYPES\n\n/**\n *\n * @param {import('../../index')} dht\n */\nmodule.exports = (dht) => {\n  const handlers = {\n    [T.GET_VALUE]: require('./get-value')(dht),\n    [T.PUT_VALUE]: require('./put-value')(dht),\n    [T.FIND_NODE]: require('./find-node')(dht),\n    [T.ADD_PROVIDER]: require('./add-provider')(dht),\n    [T.GET_PROVIDERS]: require('./get-providers')(dht),\n    [T.PING]: require('./ping')(dht)\n  }\n\n  /**\n   * Get the message handler matching the passed in type.\n   *\n   * @param {number} type\n   */\n  function getMessageHandler (type) {\n    // @ts-ignore ts does not aknowledge number as an index type\n    return handlers[type]\n  }\n\n  return getMessageHandler\n}\n"],"mappings":"AAAA;;;;AAEA,IAAMA,CAAC,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,KAAnC;AAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAS;EAAA;;EACxB,IAAMC,QAAQ,+CACXN,CAAC,CAACO,SADS,EACGN,OAAO,CAAC,aAAD,CAAP,CAAuBI,GAAvB,CADH,8BAEXL,CAAC,CAACQ,SAFS,EAEGP,OAAO,CAAC,aAAD,CAAP,CAAuBI,GAAvB,CAFH,8BAGXL,CAAC,CAACS,SAHS,EAGGR,OAAO,CAAC,aAAD,CAAP,CAAuBI,GAAvB,CAHH,8BAIXL,CAAC,CAACU,YAJS,EAIMT,OAAO,CAAC,gBAAD,CAAP,CAA0BI,GAA1B,CAJN,8BAKXL,CAAC,CAACW,aALS,EAKOV,OAAO,CAAC,iBAAD,CAAP,CAA2BI,GAA3B,CALP,8BAMXL,CAAC,CAACY,IANS,EAMFX,OAAO,CAAC,QAAD,CAAP,CAAkBI,GAAlB,CANE,aAAd;EASA;AACF;AACA;AACA;AACA;;EACE,SAASQ,iBAAT,CAA4BC,IAA5B,EAAkC;IAChC;IACA,OAAOR,QAAQ,CAACQ,IAAD,CAAf;EACD;;EAED,OAAOD,iBAAP;AACD,CArBD"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar dir = require('./dir.js');\n\nvar index = require('./file/index.js');\n\nvar errCode = require('err-code');\n\nvar rabin = require('../chunker/rabin.js');\n\nvar fixedSize = require('../chunker/fixed-size.js');\n\nvar validateChunks = require('./validate-chunks.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nfunction isIterable(thing) {\n  return Symbol.iterator in thing;\n}\n\nfunction isAsyncIterable(thing) {\n  return Symbol.asyncIterator in thing;\n}\n\nfunction contentAsAsyncIterable(content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return async function* () {\n        yield content;\n      }();\n    } else if (isIterable(content)) {\n      return async function* () {\n        yield* content;\n      }();\n    } else if (isAsyncIterable(content)) {\n      return content;\n    }\n  } catch {\n    throw errCode__default[\"default\"](new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n  }\n\n  throw errCode__default[\"default\"](new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n}\n\nasync function* dagBuilder(source, blockstore, options) {\n  for await (const entry of source) {\n    if (entry.path) {\n      if (entry.path.substring(0, 2) === './') {\n        options.wrapWithDirectory = true;\n      }\n\n      entry.path = entry.path.split('/').filter(path => path && path !== '.').join('/');\n    }\n\n    if (entry.content) {\n      let chunker;\n\n      if (typeof options.chunker === 'function') {\n        chunker = options.chunker;\n      } else if (options.chunker === 'rabin') {\n        chunker = rabin;\n      } else {\n        chunker = fixedSize;\n      }\n\n      let chunkValidator;\n\n      if (typeof options.chunkValidator === 'function') {\n        chunkValidator = options.chunkValidator;\n      } else {\n        chunkValidator = validateChunks;\n      }\n\n      const file = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode,\n        content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n      };\n      yield () => index(file, blockstore, options);\n    } else if (entry.path) {\n      const dir$1 = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode\n      };\n      yield () => dir(dir$1, blockstore, options);\n    } else {\n      throw new Error('Import candidate must have content or path or both');\n    }\n  }\n}\n\nmodule.exports = dagBuilder;","map":{"version":3,"names":["dir","require","index","errCode","rabin","fixedSize","validateChunks","_interopDefaultLegacy","e","errCode__default","isIterable","thing","Symbol","iterator","isAsyncIterable","asyncIterator","contentAsAsyncIterable","content","Uint8Array","Error","dagBuilder","source","blockstore","options","entry","path","substring","wrapWithDirectory","split","filter","join","chunker","chunkValidator","file","mtime","mode","dir$1","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-unixfs-importer/cjs/src/dag-builder/index.js"],"sourcesContent":["'use strict';\n\nvar dir = require('./dir.js');\nvar index = require('./file/index.js');\nvar errCode = require('err-code');\nvar rabin = require('../chunker/rabin.js');\nvar fixedSize = require('../chunker/fixed-size.js');\nvar validateChunks = require('./validate-chunks.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nfunction isIterable(thing) {\n  return Symbol.iterator in thing;\n}\nfunction isAsyncIterable(thing) {\n  return Symbol.asyncIterator in thing;\n}\nfunction contentAsAsyncIterable(content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return async function* () {\n        yield content;\n      }();\n    } else if (isIterable(content)) {\n      return async function* () {\n        yield* content;\n      }();\n    } else if (isAsyncIterable(content)) {\n      return content;\n    }\n  } catch {\n    throw errCode__default[\"default\"](new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n  }\n  throw errCode__default[\"default\"](new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n}\nasync function* dagBuilder(source, blockstore, options) {\n  for await (const entry of source) {\n    if (entry.path) {\n      if (entry.path.substring(0, 2) === './') {\n        options.wrapWithDirectory = true;\n      }\n      entry.path = entry.path.split('/').filter(path => path && path !== '.').join('/');\n    }\n    if (entry.content) {\n      let chunker;\n      if (typeof options.chunker === 'function') {\n        chunker = options.chunker;\n      } else if (options.chunker === 'rabin') {\n        chunker = rabin;\n      } else {\n        chunker = fixedSize;\n      }\n      let chunkValidator;\n      if (typeof options.chunkValidator === 'function') {\n        chunkValidator = options.chunkValidator;\n      } else {\n        chunkValidator = validateChunks;\n      }\n      const file = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode,\n        content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n      };\n      yield () => index(file, blockstore, options);\n    } else if (entry.path) {\n      const dir$1 = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode\n      };\n      yield () => dir(dir$1, blockstore, options);\n    } else {\n      throw new Error('Import candidate must have content or path or both');\n    }\n  }\n}\n\nmodule.exports = dagBuilder;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
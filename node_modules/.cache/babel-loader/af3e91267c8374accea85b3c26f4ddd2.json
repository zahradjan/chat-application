{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _require = require('./utils'),\n    getPubsubRouting = _require.getPubsubRouting;\n\nvar withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('../../ipns')} config.ipns\n * @param {import('../../../types').Options} config.options\n */\n\n\nmodule.exports = function (_ref) {\n  var ipns = _ref.ipns,\n      options = _ref.options;\n  var experimental = options.EXPERIMENTAL;\n  /**\n   * @type {import('ipfs-core-types/src/name/pubsub').API[\"subs\"]}\n   */\n\n  function subs() {\n    return _subs.apply(this, arguments);\n  }\n\n  function _subs() {\n    _subs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n          pubsub,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              // eslint-disable-line require-await\n              pubsub = getPubsubRouting(ipns, experimental);\n              return _context.abrupt(\"return\", pubsub.getSubscriptions(options));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _subs.apply(this, arguments);\n  }\n\n  return withTimeoutOption(subs);\n};","map":{"version":3,"names":["require","getPubsubRouting","withTimeoutOption","module","exports","ipns","options","experimental","EXPERIMENTAL","subs","pubsub","getSubscriptions"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/name/pubsub/subs.js"],"sourcesContent":["'use strict'\n\nconst { getPubsubRouting } = require('./utils')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('../../ipns')} config.ipns\n * @param {import('../../../types').Options} config.options\n */\nmodule.exports = ({ ipns, options }) => {\n  const experimental = options.EXPERIMENTAL\n\n  /**\n   * @type {import('ipfs-core-types/src/name/pubsub').API[\"subs\"]}\n   */\n  async function subs (options = {}) { // eslint-disable-line require-await\n    const pubsub = getPubsubRouting(ipns, experimental)\n    return pubsub.getSubscriptions(options)\n  }\n\n  return withTimeoutOption(subs)\n}\n"],"mappings":"AAAA;;;;;;AAEA,eAA6BA,OAAO,CAAC,SAAD,CAApC;AAAA,IAAQC,gBAAR,YAAQA,gBAAR;;AACA,IAAMC,iBAAiB,GAAGF,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,gBAAuB;EAAA,IAApBC,IAAoB,QAApBA,IAAoB;EAAA,IAAdC,OAAc,QAAdA,OAAc;EACtC,IAAMC,YAAY,GAAGD,OAAO,CAACE,YAA7B;EAEA;AACF;AACA;;EALwC,SAMvBC,IANuB;IAAA;EAAA;;EAAA;IAAA,mEAMtC;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAqBH,OAArB,2DAA+B,EAA/B;cAAqC;cAC7BI,MADR,GACiBT,gBAAgB,CAACI,IAAD,EAAOE,YAAP,CADjC;cAAA,iCAESG,MAAM,CAACC,gBAAP,CAAwBL,OAAxB,CAFT;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CANsC;IAAA;EAAA;;EAWtC,OAAOJ,iBAAiB,CAACO,IAAD,CAAxB;AACD,CAZD"},"metadata":{},"sourceType":"script"}
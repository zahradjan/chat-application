{"ast":null,"code":"'use strict';\n\nconst log = require('debug')('ipfs:repo:migrator:repo:init');\n\nconst {\n  CONFIG_KEY,\n  VERSION_KEY\n} = require('../utils');\n\nconst {\n  MissingRepoOptionsError\n} = require('../errors');\n/**\n * @param {import('../types').Backends} backends\n */\n\n\nasync function isRepoInitialized(backends) {\n  if (!backends) {\n    throw new MissingRepoOptionsError('Please pass repo options when trying to open a repo');\n  }\n\n  const root = backends.root;\n\n  try {\n    await root.open();\n    const versionCheck = await root.has(VERSION_KEY);\n    const configCheck = await root.has(CONFIG_KEY);\n\n    if (!versionCheck || !configCheck) {\n      log(`Version entry present: ${versionCheck}`);\n      log(`Config entry present: ${configCheck}`);\n      return false;\n    }\n\n    return true;\n  } catch (e) {\n    log('While checking if repo is initialized error was thrown: ' + e.message);\n    return false;\n  } finally {\n    if (root !== undefined) {\n      try {\n        await root.close();\n      } catch {}\n    }\n  }\n}\n\nmodule.exports = {\n  isRepoInitialized\n};","map":{"version":3,"names":["log","require","CONFIG_KEY","VERSION_KEY","MissingRepoOptionsError","isRepoInitialized","backends","root","open","versionCheck","has","configCheck","e","message","undefined","close","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-repo-migrations/src/repo/init.js"],"sourcesContent":["'use strict'\n\nconst log = require('debug')('ipfs:repo:migrator:repo:init')\nconst { CONFIG_KEY, VERSION_KEY } = require('../utils')\nconst { MissingRepoOptionsError } = require('../errors')\n\n/**\n * @param {import('../types').Backends} backends\n */\nasync function isRepoInitialized (backends) {\n  if (!backends) {\n    throw new MissingRepoOptionsError('Please pass repo options when trying to open a repo')\n  }\n\n  const root = backends.root\n\n  try {\n    await root.open()\n    const versionCheck = await root.has(VERSION_KEY)\n    const configCheck = await root.has(CONFIG_KEY)\n    if (!versionCheck || !configCheck) {\n      log(`Version entry present: ${versionCheck}`)\n      log(`Config entry present: ${configCheck}`)\n      return false\n    }\n\n    return true\n  } catch (e) {\n    log('While checking if repo is initialized error was thrown: ' + e.message)\n    return false\n  } finally {\n    if (root !== undefined) {\n      try {\n        await root.close()\n      } catch {}\n    }\n  }\n}\n\nmodule.exports = {\n  isRepoInitialized\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,8BAAjB,CAAZ;;AACA,MAAM;EAAEC,UAAF;EAAcC;AAAd,IAA8BF,OAAO,CAAC,UAAD,CAA3C;;AACA,MAAM;EAAEG;AAAF,IAA8BH,OAAO,CAAC,WAAD,CAA3C;AAEA;AACA;AACA;;;AACA,eAAeI,iBAAf,CAAkCC,QAAlC,EAA4C;EAC1C,IAAI,CAACA,QAAL,EAAe;IACb,MAAM,IAAIF,uBAAJ,CAA4B,qDAA5B,CAAN;EACD;;EAED,MAAMG,IAAI,GAAGD,QAAQ,CAACC,IAAtB;;EAEA,IAAI;IACF,MAAMA,IAAI,CAACC,IAAL,EAAN;IACA,MAAMC,YAAY,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASP,WAAT,CAA3B;IACA,MAAMQ,WAAW,GAAG,MAAMJ,IAAI,CAACG,GAAL,CAASR,UAAT,CAA1B;;IACA,IAAI,CAACO,YAAD,IAAiB,CAACE,WAAtB,EAAmC;MACjCX,GAAG,CAAE,0BAAyBS,YAAa,EAAxC,CAAH;MACAT,GAAG,CAAE,yBAAwBW,WAAY,EAAtC,CAAH;MACA,OAAO,KAAP;IACD;;IAED,OAAO,IAAP;EACD,CAXD,CAWE,OAAOC,CAAP,EAAU;IACVZ,GAAG,CAAC,6DAA6DY,CAAC,CAACC,OAAhE,CAAH;IACA,OAAO,KAAP;EACD,CAdD,SAcU;IACR,IAAIN,IAAI,KAAKO,SAAb,EAAwB;MACtB,IAAI;QACF,MAAMP,IAAI,CAACQ,KAAL,EAAN;MACD,CAFD,CAEE,MAAM,CAAE;IACX;EACF;AACF;;AAEDC,MAAM,CAACC,OAAP,GAAiB;EACfZ;AADe,CAAjB"},"metadata":{},"sourceType":"script"}
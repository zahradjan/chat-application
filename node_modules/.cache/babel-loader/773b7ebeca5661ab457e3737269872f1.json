{"ast":null,"code":"'use strict';\n\nvar Buffer = require('buffer').Buffer;\n\nvar ta2str = function () {\n  if (global.TextDecoder) {\n    var decoder = new TextDecoder('utf-8');\n    return decoder.decode.bind(decoder);\n  } else {\n    return function ta2str(ta) {\n      return ta2buf(ta).toString();\n    };\n  }\n}();\n\nvar ab2str = function () {\n  if (global.TextDecoder) {\n    var decoder = new TextDecoder('utf-8');\n    return decoder.decode.bind(decoder);\n  } else {\n    return function ab2str(ab) {\n      return Buffer.from(ab).toString();\n    };\n  }\n}();\n\nfunction ta2buf(ta) {\n  var buf = Buffer.from(ta.buffer);\n\n  if (ta.byteLength === ta.buffer.byteLength) {\n    return buf;\n  } else {\n    return buf.slice(ta.byteOffset, ta.byteOffset + ta.byteLength);\n  }\n}\n\nmodule.exports = function (data, asBuffer) {\n  if (data instanceof Uint8Array) {\n    return asBuffer ? ta2buf(data) : ta2str(data);\n  } else if (data instanceof ArrayBuffer) {\n    return asBuffer ? Buffer.from(data) : ab2str(data);\n  } else {\n    return asBuffer ? Buffer.from(String(data)) : String(data);\n  }\n};","map":{"version":3,"names":["Buffer","require","ta2str","global","TextDecoder","decoder","decode","bind","ta","ta2buf","toString","ab2str","ab","from","buf","buffer","byteLength","slice","byteOffset","module","exports","data","asBuffer","Uint8Array","ArrayBuffer","String"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/level-js/util/deserialize.js"],"sourcesContent":["'use strict'\n\nconst Buffer = require('buffer').Buffer\nconst ta2str = (function () {\n  if (global.TextDecoder) {\n    const decoder = new TextDecoder('utf-8')\n    return decoder.decode.bind(decoder)\n  } else {\n    return function ta2str (ta) {\n      return ta2buf(ta).toString()\n    }\n  }\n})()\n\nconst ab2str = (function () {\n  if (global.TextDecoder) {\n    const decoder = new TextDecoder('utf-8')\n    return decoder.decode.bind(decoder)\n  } else {\n    return function ab2str (ab) {\n      return Buffer.from(ab).toString()\n    }\n  }\n})()\n\nfunction ta2buf (ta) {\n  const buf = Buffer.from(ta.buffer)\n\n  if (ta.byteLength === ta.buffer.byteLength) {\n    return buf\n  } else {\n    return buf.slice(ta.byteOffset, ta.byteOffset + ta.byteLength)\n  }\n}\n\nmodule.exports = function (data, asBuffer) {\n  if (data instanceof Uint8Array) {\n    return asBuffer ? ta2buf(data) : ta2str(data)\n  } else if (data instanceof ArrayBuffer) {\n    return asBuffer ? Buffer.from(data) : ab2str(data)\n  } else {\n    return asBuffer ? Buffer.from(String(data)) : String(data)\n  }\n}\n"],"mappings":"AAAA;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,MAAjC;;AACA,IAAME,MAAM,GAAI,YAAY;EAC1B,IAAIC,MAAM,CAACC,WAAX,EAAwB;IACtB,IAAMC,OAAO,GAAG,IAAID,WAAJ,CAAgB,OAAhB,CAAhB;IACA,OAAOC,OAAO,CAACC,MAAR,CAAeC,IAAf,CAAoBF,OAApB,CAAP;EACD,CAHD,MAGO;IACL,OAAO,SAASH,MAAT,CAAiBM,EAAjB,EAAqB;MAC1B,OAAOC,MAAM,CAACD,EAAD,CAAN,CAAWE,QAAX,EAAP;IACD,CAFD;EAGD;AACF,CATc,EAAf;;AAWA,IAAMC,MAAM,GAAI,YAAY;EAC1B,IAAIR,MAAM,CAACC,WAAX,EAAwB;IACtB,IAAMC,OAAO,GAAG,IAAID,WAAJ,CAAgB,OAAhB,CAAhB;IACA,OAAOC,OAAO,CAACC,MAAR,CAAeC,IAAf,CAAoBF,OAApB,CAAP;EACD,CAHD,MAGO;IACL,OAAO,SAASM,MAAT,CAAiBC,EAAjB,EAAqB;MAC1B,OAAOZ,MAAM,CAACa,IAAP,CAAYD,EAAZ,EAAgBF,QAAhB,EAAP;IACD,CAFD;EAGD;AACF,CATc,EAAf;;AAWA,SAASD,MAAT,CAAiBD,EAAjB,EAAqB;EACnB,IAAMM,GAAG,GAAGd,MAAM,CAACa,IAAP,CAAYL,EAAE,CAACO,MAAf,CAAZ;;EAEA,IAAIP,EAAE,CAACQ,UAAH,KAAkBR,EAAE,CAACO,MAAH,CAAUC,UAAhC,EAA4C;IAC1C,OAAOF,GAAP;EACD,CAFD,MAEO;IACL,OAAOA,GAAG,CAACG,KAAJ,CAAUT,EAAE,CAACU,UAAb,EAAyBV,EAAE,CAACU,UAAH,GAAgBV,EAAE,CAACQ,UAA5C,CAAP;EACD;AACF;;AAEDG,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,QAAhB,EAA0B;EACzC,IAAID,IAAI,YAAYE,UAApB,EAAgC;IAC9B,OAAOD,QAAQ,GAAGb,MAAM,CAACY,IAAD,CAAT,GAAkBnB,MAAM,CAACmB,IAAD,CAAvC;EACD,CAFD,MAEO,IAAIA,IAAI,YAAYG,WAApB,EAAiC;IACtC,OAAOF,QAAQ,GAAGtB,MAAM,CAACa,IAAP,CAAYQ,IAAZ,CAAH,GAAuBV,MAAM,CAACU,IAAD,CAA5C;EACD,CAFM,MAEA;IACL,OAAOC,QAAQ,GAAGtB,MAAM,CAACa,IAAP,CAAYY,MAAM,CAACJ,IAAD,CAAlB,CAAH,GAA+BI,MAAM,CAACJ,IAAD,CAApD;EACD;AACF,CARD"},"metadata":{},"sourceType":"script"}
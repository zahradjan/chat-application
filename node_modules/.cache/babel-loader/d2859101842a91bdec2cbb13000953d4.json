{"ast":null,"code":"import EventEmitter from 'events';\nimport { pipe } from 'it-pipe';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport PROTOCOL from './protocol.js';\nexport const emitter = new EventEmitter();\nexport function handle(libp2p) {\n  // can only register one handler for the protocol\n  libp2p.handle(PROTOCOL, handler).catch(err => {\n    if (err.code !== 'ERR_PROTOCOL_HANDLER_ALREADY_REGISTERED') {\n      console.error(err); // eslint-disable-line no-console\n    }\n  });\n}\nexport function unhandle(libp2p) {\n  libp2p.unhandle(PROTOCOL, handler);\n}\n\nfunction handler(_ref) {\n  let {\n    connection,\n    stream\n  } = _ref;\n  const peerId = connection.remotePeer.toString();\n  pipe(stream, async function (source) {\n    for await (const message of source) {\n      let msg;\n\n      try {\n        msg = JSON.parse(uint8ArrayToString(message));\n      } catch (err) {\n        emitter.emit('warning', err.message);\n        continue; // early\n      }\n\n      if (peerId !== msg.from.toString()) {\n        emitter.emit('warning', 'no peerid match ' + msg.from);\n        continue; // early\n      }\n\n      msg.data = uint8ArrayFromString(msg.data, 'hex');\n      msg.seqno = BigInt(msg.seqno);\n      emitter.emit(msg.topic, msg);\n    }\n  });\n}","map":{"version":3,"names":["EventEmitter","pipe","fromString","uint8ArrayFromString","toString","uint8ArrayToString","PROTOCOL","emitter","handle","libp2p","handler","catch","err","code","console","error","unhandle","connection","stream","peerId","remotePeer","source","message","msg","JSON","parse","emit","from","data","seqno","BigInt","topic"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-pubsub-room/src/direct-connection-handler.js"],"sourcesContent":["import EventEmitter from 'events'\nimport { pipe } from 'it-pipe'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport PROTOCOL from './protocol.js'\n\nexport const emitter = new EventEmitter()\n\nexport function handle (libp2p) {\n  // can only register one handler for the protocol\n  libp2p.handle(PROTOCOL, handler).catch(err => {\n    if (err.code !== 'ERR_PROTOCOL_HANDLER_ALREADY_REGISTERED') {\n      console.error(err) // eslint-disable-line no-console\n    }\n  })\n}\n\nexport function unhandle (libp2p) {\n  libp2p.unhandle(PROTOCOL, handler)\n}\n\nfunction handler ({ connection, stream }) {\n  const peerId = connection.remotePeer.toString()\n\n  pipe(\n    stream,\n    async function (source) {\n      for await (const message of source) {\n        let msg\n\n        try {\n          msg = JSON.parse(uint8ArrayToString(message))\n        } catch (err) {\n          emitter.emit('warning', err.message)\n          continue // early\n        }\n\n        if (peerId !== msg.from.toString()) {\n          emitter.emit('warning', 'no peerid match ' + msg.from)\n          continue // early\n        }\n\n        msg.data = uint8ArrayFromString(msg.data, 'hex')\n        msg.seqno = BigInt(msg.seqno)\n\n        emitter.emit(msg.topic, msg)\n      }\n    }\n  )\n}\n"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,QAAzB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,UAAU,IAAIC,oBAAvB,QAAmD,yBAAnD;AACA,SAASC,QAAQ,IAAIC,kBAArB,QAA+C,uBAA/C;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA,OAAO,MAAMC,OAAO,GAAG,IAAIP,YAAJ,EAAhB;AAEP,OAAO,SAASQ,MAAT,CAAiBC,MAAjB,EAAyB;EAC9B;EACAA,MAAM,CAACD,MAAP,CAAcF,QAAd,EAAwBI,OAAxB,EAAiCC,KAAjC,CAAuCC,GAAG,IAAI;IAC5C,IAAIA,GAAG,CAACC,IAAJ,KAAa,yCAAjB,EAA4D;MAC1DC,OAAO,CAACC,KAAR,CAAcH,GAAd,EAD0D,CACvC;IACpB;EACF,CAJD;AAKD;AAED,OAAO,SAASI,QAAT,CAAmBP,MAAnB,EAA2B;EAChCA,MAAM,CAACO,QAAP,CAAgBV,QAAhB,EAA0BI,OAA1B;AACD;;AAED,SAASA,OAAT,OAA0C;EAAA,IAAxB;IAAEO,UAAF;IAAcC;EAAd,CAAwB;EACxC,MAAMC,MAAM,GAAGF,UAAU,CAACG,UAAX,CAAsBhB,QAAtB,EAAf;EAEAH,IAAI,CACFiB,MADE,EAEF,gBAAgBG,MAAhB,EAAwB;IACtB,WAAW,MAAMC,OAAjB,IAA4BD,MAA5B,EAAoC;MAClC,IAAIE,GAAJ;;MAEA,IAAI;QACFA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWpB,kBAAkB,CAACiB,OAAD,CAA7B,CAAN;MACD,CAFD,CAEE,OAAOV,GAAP,EAAY;QACZL,OAAO,CAACmB,IAAR,CAAa,SAAb,EAAwBd,GAAG,CAACU,OAA5B;QACA,SAFY,CAEH;MACV;;MAED,IAAIH,MAAM,KAAKI,GAAG,CAACI,IAAJ,CAASvB,QAAT,EAAf,EAAoC;QAClCG,OAAO,CAACmB,IAAR,CAAa,SAAb,EAAwB,qBAAqBH,GAAG,CAACI,IAAjD;QACA,SAFkC,CAEzB;MACV;;MAEDJ,GAAG,CAACK,IAAJ,GAAWzB,oBAAoB,CAACoB,GAAG,CAACK,IAAL,EAAW,KAAX,CAA/B;MACAL,GAAG,CAACM,KAAJ,GAAYC,MAAM,CAACP,GAAG,CAACM,KAAL,CAAlB;MAEAtB,OAAO,CAACmB,IAAR,CAAaH,GAAG,CAACQ,KAAjB,EAAwBR,GAAxB;IACD;EACF,CAvBC,CAAJ;AAyBD"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar configure = require('./lib/configure');\n\nvar toUrlSearchParams = require('./lib/to-url-search-params');\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {RootAPI[\"dns\"]}\n   */\n  var dns = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(domain) {\n      var options,\n          res,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('dns', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: domain\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data.Path);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function dns(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return dns;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","module","exports","api","dns","domain","options","post","signal","searchParams","arg","headers","res","json","data","Path"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/dns.js"],"sourcesContent":["'use strict'\n\nconst configure = require('./lib/configure')\nconst toUrlSearchParams = require('./lib/to-url-search-params')\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RootAPI[\"dns\"]}\n   */\n  const dns = async (domain, options = {}) => {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: domain,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Path\n  }\n\n  return dns\n})\n"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,4BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAChC;AACF;AACA;EACE,IAAMC,GAAG;IAAA,sEAAG,iBAAOC,MAAP;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAeC,OAAf,2DAAyB,EAAzB;cAAA;cAAA,OACQH,GAAG,CAACI,IAAJ,CAAS,KAAT,EAAgB;gBAChCC,MAAM,EAAEF,OAAO,CAACE,MADgB;gBAEhCC,YAAY,EAAET,iBAAiB;kBAC7BU,GAAG,EAAEL;gBADwB,GAE1BC,OAF0B,EAFC;gBAMhCK,OAAO,EAAEL,OAAO,CAACK;cANe,CAAhB,CADR;;YAAA;cACJC,GADI;cAAA;cAAA,OASSA,GAAG,CAACC,IAAJ,EATT;;YAAA;cASJC,IATI;cAAA,iCAWHA,IAAI,CAACC,IAXF;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAHX,GAAG;MAAA;IAAA;EAAA,GAAT;;EAcA,OAAOA,GAAP;AACD,CAnByB,CAA1B"},"metadata":{},"sourceType":"script"}
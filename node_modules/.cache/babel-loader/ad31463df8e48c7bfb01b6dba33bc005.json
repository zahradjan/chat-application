{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {SwarmAPI[\"disconnect\"]}\n   */\n  function disconnect(_x) {\n    return _disconnect.apply(this, arguments);\n  }\n\n  function _disconnect() {\n    _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(addr) {\n      var options,\n          res,\n          _yield$res$json,\n          Strings,\n          _args = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('swarm/disconnect', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: addr\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              _yield$res$json = _context.sent;\n              Strings = _yield$res$json.Strings;\n              return _context.abrupt(\"return\", Strings || []);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _disconnect.apply(this, arguments);\n  }\n\n  return disconnect;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","module","exports","api","disconnect","addr","options","post","signal","searchParams","arg","headers","res","json","Strings"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/swarm/disconnect.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {SwarmAPI[\"disconnect\"]}\n   */\n  async function disconnect (addr, options = {}) {\n    const res = await api.post('swarm/disconnect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return disconnect\n})\n"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAChC;AACF;AACA;EAHkC,SAIjBC,UAJiB;IAAA;EAAA;;EAAA;IAAA,yEAIhC,iBAA2BC,IAA3B;MAAA;MAAA;MAAA;MAAA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAiCC,OAAjC,2DAA2C,EAA3C;cAAA;cAAA,OACoBH,GAAG,CAACI,IAAJ,CAAS,kBAAT,EAA6B;gBAC7CC,MAAM,EAAEF,OAAO,CAACE,MAD6B;gBAE7CC,YAAY,EAAET,iBAAiB;kBAC7BU,GAAG,EAAEL;gBADwB,GAE1BC,OAF0B,EAFc;gBAM7CK,OAAO,EAAEL,OAAO,CAACK;cAN4B,CAA7B,CADpB;;YAAA;cACQC,GADR;cAAA;cAAA,OAS4BA,GAAG,CAACC,IAAJ,EAT5B;;YAAA;cAAA;cASUC,OATV,mBASUA,OATV;cAAA,iCAWSA,OAAO,IAAI,EAXpB;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJgC;IAAA;EAAA;;EAiBhC,OAAOV,UAAP;AACD,CAlByB,CAA1B"},"metadata":{},"sourceType":"script"}
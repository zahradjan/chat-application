{"ast":null,"code":"import { makeAutoObservable, runInAction, toJS } from \"mobx\";\nimport { Message } from \"./Message.js\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nexport class ChatRoom {\n  constructor(ipfsNode, pubsub, orbitDb, roomName) {\n    this.ipfsNode = ipfsNode;\n    this.pubsub = pubsub;\n    this.orbitDb = orbitDb;\n    this.roomName = roomName;\n    this.textDecoder = new TextDecoder();\n    this.chatRoomMessages = [];\n    makeAutoObservable(this);\n  }\n\n  async init() {\n    await this.connectToChatRoom();\n    await this.loadMsgDb();\n    await this.setMessagesFromDb();\n  }\n\n  async loadMsgDb() {\n    this.chatMessagesDb = await this.orbitDb.feed(`${this.roomName}-messages`);\n    await this.chatMessagesDb.load();\n  }\n\n  async setMessagesFromDb() {\n    const entries = [];\n    const all = await toJS(this.chatMessagesDb.all);\n    all.map(e => entries.push(e.payload.value));\n    this.chatRoomMessages = entries;\n  }\n\n  async connectToChatRoom() {\n    runInAction(async () => {\n      await this.pubsub.unsubscribe(this.roomName, msg => console.log(msg));\n      await this.pubsub.subscribe(this.roomName, await this.echo.bind(this));\n    });\n  }\n\n  async sendMessageToChatRoom(msg) {\n    console.log(\"Msg in sending: \" + msg); //TODO:messages here\n    // const date = new Date(Date.now());\n    // const message = new Message(msg.from, msg, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from));\n\n    const stringifyMessage = JSON.stringify(msg);\n    runInAction(async () => {\n      await this.pubsub.publish(this.roomName, stringifyMessage);\n    });\n  }\n\n  async uploadFile(filesContent) {\n    //TODO: maybe Multiple files if interested\n    console.log(filesContent[0]);\n    console.log(filesContent[0].name.split(\".\").pop());\n    const result = await this.ipfsNode.add(filesContent[0]);\n    console.log(result);\n    const fileMessage = {\n      fileName: filesContent[0].name,\n      path: result.path\n    };\n    console.log(fileMessage);\n    this.sendMessageToChatRoom(fileMessage);\n  }\n\n  getFileExtension(fileName) {\n    return fileName.split(\".\").pop();\n  }\n\n  async retrieveFileFromIpfs(path, mimeType) {\n    const ipfsFile = await this.ipfsNode.cat(path);\n    console.log(ipfsFile);\n    this.ipfsNode.files.ls(path, function (err, files) {\n      files.forEach(file => {\n        console.log(file.path);\n        console.log(\"File content >> \", file.content.toString(\"utf8\"));\n      });\n    });\n    let file; // const blobToBase64 = (blob) => {\n    //   const reader = new FileReader();\n    //   reader.readAsDataURL(blob);\n    //   return new Promise((resolve) => {\n    //     reader.onloadend = () => {\n    //       resolve(reader.result);\n    //     };\n    //   });\n    // };\n    // let content = [];\n    // for await (const chunk of ipfsFile) {\n    //   content.push(chunk);\n    // }\n    // var buffer = Buffer.from(content);\n    // console.log(this.textDecoder.decode(content));\n    // file = new Blob(content);\n\n    console.log(mimeType);\n    const content = [];\n\n    for await (const chunk of ipfsFile) {\n      // console.log(chunk);\n      const text = this.textDecoder.decode(chunk);\n      content.push(text);\n    } // const data = this.base64ToArrayBuffer(content);\n    // console.log(data);\n\n\n    const blob = new Blob(content, {\n      type: \"application/\" + mimeType\n    });\n    file = blob;\n    return file;\n  }\n\n  base64ToArrayBuffer(data) {\n    var binaryString = window.atob(data);\n    var binaryLen = binaryString.length;\n    var bytes = new Uint8Array(binaryLen);\n\n    for (var i = 0; i < binaryLen; i++) {\n      var ascii = binaryString.charCodeAt(i);\n      bytes[i] = ascii;\n    }\n\n    return bytes;\n  }\n\n  async echo(msg) {\n    // console.log(typeof msg.data);\n    console.log(msg.data); //TODO: nevim proc ale kdyz je to zprava odeslana ze stejneho peeru tak je to string a jinak je to object\n\n    if (typeof msg.data === \"object\") msg.data = this.textDecoder.decode(msg.data);\n    const parsedMsg = JSON.parse(msg.data);\n    console.log(parsedMsg);\n\n    if (msg.data.includes(\"path\")) {\n      let file = await this.retrieveFileFromIpfs(parsedMsg.path, this.getFileExtension(parsedMsg.fileName));\n      console.log(file);\n      parsedMsg[\"filePath\"] = file;\n    }\n\n    console.log(parsedMsg);\n    const date = new Date(Date.now());\n    const message = new Message(msg.from, parsedMsg, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from));\n    console.log(message); // const parsedMessage = JSON.parse(msg.data);\n    // console.log(parsedMessage);\n\n    await this.saveMessage(message);\n  }\n\n  async saveMessage(message) {\n    // await this.chatMessagesDb.add(message);\n    this.chatRoomMessages.push(message);\n  }\n\n}","map":{"version":3,"names":["makeAutoObservable","runInAction","toJS","Message","AvatarGenerator","ChatRoom","constructor","ipfsNode","pubsub","orbitDb","roomName","textDecoder","TextDecoder","chatRoomMessages","init","connectToChatRoom","loadMsgDb","setMessagesFromDb","chatMessagesDb","feed","load","entries","all","map","e","push","payload","value","unsubscribe","msg","console","log","subscribe","echo","bind","sendMessageToChatRoom","stringifyMessage","JSON","stringify","publish","uploadFile","filesContent","name","split","pop","result","add","fileMessage","fileName","path","getFileExtension","retrieveFileFromIpfs","mimeType","ipfsFile","cat","files","ls","err","forEach","file","content","toString","chunk","text","decode","blob","Blob","type","base64ToArrayBuffer","data","binaryString","window","atob","binaryLen","length","bytes","Uint8Array","i","ascii","charCodeAt","parsedMsg","parse","includes","date","Date","now","message","from","getHours","getMinutes","generateRandomAvatar","saveMessage"],"sources":["C:/Users/zajan/GitHub/chatApplication/src/data/models/Room.js"],"sourcesContent":["import { makeAutoObservable, runInAction, toJS } from \"mobx\";\r\nimport { Message } from \"./Message.js\";\r\nimport { AvatarGenerator } from \"random-avatar-generator\";\r\nexport class ChatRoom {\r\n  pubsub;\r\n  ipfsNode;\r\n  orbitDb;\r\n  roomName;\r\n  textDecoder;\r\n  chatMessagesDb;\r\n  chatRoomMessages;\r\n\r\n  constructor(ipfsNode, pubsub, orbitDb, roomName) {\r\n    this.ipfsNode = ipfsNode;\r\n    this.pubsub = pubsub;\r\n    this.orbitDb = orbitDb;\r\n    this.roomName = roomName;\r\n    this.textDecoder = new TextDecoder();\r\n    this.chatRoomMessages = [];\r\n    makeAutoObservable(this);\r\n  }\r\n  async init() {\r\n    await this.connectToChatRoom();\r\n    await this.loadMsgDb();\r\n    await this.setMessagesFromDb();\r\n  }\r\n\r\n  async loadMsgDb() {\r\n    this.chatMessagesDb = await this.orbitDb.feed(`${this.roomName}-messages`);\r\n    await this.chatMessagesDb.load();\r\n  }\r\n\r\n  async setMessagesFromDb() {\r\n    const entries = [];\r\n    const all = await toJS(this.chatMessagesDb.all);\r\n    all.map((e) => entries.push(e.payload.value));\r\n    this.chatRoomMessages = entries;\r\n  }\r\n\r\n  async connectToChatRoom() {\r\n    runInAction(async () => {\r\n      await this.pubsub.unsubscribe(this.roomName, (msg) => console.log(msg));\r\n      await this.pubsub.subscribe(this.roomName, await this.echo.bind(this));\r\n    });\r\n  }\r\n\r\n  async sendMessageToChatRoom(msg) {\r\n    console.log(\"Msg in sending: \" + msg);\r\n    //TODO:messages here\r\n    // const date = new Date(Date.now());\r\n    // const message = new Message(msg.from, msg, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from));\r\n    const stringifyMessage = JSON.stringify(msg);\r\n    runInAction(async () => {\r\n      await this.pubsub.publish(this.roomName, stringifyMessage);\r\n    });\r\n  }\r\n\r\n  async uploadFile(filesContent) {\r\n    //TODO: maybe Multiple files if interested\r\n    console.log(filesContent[0]);\r\n    console.log(filesContent[0].name.split(\".\").pop());\r\n    const result = await this.ipfsNode.add(filesContent[0]);\r\n    console.log(result);\r\n    const fileMessage = { fileName: filesContent[0].name, path: result.path };\r\n    console.log(fileMessage);\r\n    this.sendMessageToChatRoom(fileMessage);\r\n  }\r\n  getFileExtension(fileName) {\r\n    return fileName.split(\".\").pop();\r\n  }\r\n\r\n  async retrieveFileFromIpfs(path, mimeType) {\r\n    const ipfsFile = await this.ipfsNode.cat(path);\r\n\r\n    console.log(ipfsFile);\r\n\r\n    this.ipfsNode.files.ls(path, function (err, files) {\r\n      files.forEach((file) => {\r\n        console.log(file.path);\r\n        console.log(\"File content >> \", file.content.toString(\"utf8\"));\r\n      });\r\n    });\r\n\r\n    let file;\r\n    // const blobToBase64 = (blob) => {\r\n    //   const reader = new FileReader();\r\n    //   reader.readAsDataURL(blob);\r\n    //   return new Promise((resolve) => {\r\n    //     reader.onloadend = () => {\r\n    //       resolve(reader.result);\r\n    //     };\r\n    //   });\r\n    // };\r\n    // let content = [];\r\n    // for await (const chunk of ipfsFile) {\r\n    //   content.push(chunk);\r\n    // }\r\n    // var buffer = Buffer.from(content);\r\n    // console.log(this.textDecoder.decode(content));\r\n    // file = new Blob(content);\r\n    console.log(mimeType);\r\n    const content = [];\r\n    for await (const chunk of ipfsFile) {\r\n      // console.log(chunk);\r\n      const text = this.textDecoder.decode(chunk);\r\n      content.push(text);\r\n    }\r\n\r\n    // const data = this.base64ToArrayBuffer(content);\r\n    // console.log(data);\r\n    const blob = new Blob(content, { type: \"application/\" + mimeType });\r\n\r\n    file = blob;\r\n\r\n    return file;\r\n  }\r\n\r\n  base64ToArrayBuffer(data) {\r\n    var binaryString = window.atob(data);\r\n    var binaryLen = binaryString.length;\r\n    var bytes = new Uint8Array(binaryLen);\r\n    for (var i = 0; i < binaryLen; i++) {\r\n      var ascii = binaryString.charCodeAt(i);\r\n      bytes[i] = ascii;\r\n    }\r\n    return bytes;\r\n  }\r\n\r\n  async echo(msg) {\r\n    // console.log(typeof msg.data);\r\n    console.log(msg.data);\r\n    //TODO: nevim proc ale kdyz je to zprava odeslana ze stejneho peeru tak je to string a jinak je to object\r\n    if (typeof msg.data === \"object\") msg.data = this.textDecoder.decode(msg.data);\r\n    const parsedMsg = JSON.parse(msg.data);\r\n    console.log(parsedMsg);\r\n    if (msg.data.includes(\"path\")) {\r\n      let file = await this.retrieveFileFromIpfs(parsedMsg.path, this.getFileExtension(parsedMsg.fileName));\r\n      console.log(file);\r\n      parsedMsg[\"filePath\"] = file;\r\n    }\r\n    console.log(parsedMsg);\r\n    const date = new Date(Date.now());\r\n    const message = new Message(msg.from, parsedMsg, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from));\r\n\r\n    console.log(message);\r\n\r\n    // const parsedMessage = JSON.parse(msg.data);\r\n    // console.log(parsedMessage);\r\n    await this.saveMessage(message);\r\n  }\r\n\r\n  async saveMessage(message) {\r\n    // await this.chatMessagesDb.add(message);\r\n    this.chatRoomMessages.push(message);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nconst isPlainObject = require('is-plain-obj');\n\nmodule.exports = function (object) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isPlainObject(object) && !Array.isArray(object)) {\n    throw new TypeError('Expected a plain object or array');\n  }\n\n  const {\n    deep\n  } = options;\n  const seenInput = [];\n  const seenOutput = [];\n\n  const deepSortArray = array => {\n    const seenIndex = seenInput.indexOf(array);\n\n    if (seenIndex !== -1) {\n      return seenOutput[seenIndex];\n    }\n\n    const result = [];\n    seenInput.push(array);\n    seenOutput.push(result);\n    result.push(...array.map(item => {\n      if (Array.isArray(item)) {\n        return deepSortArray(item);\n      }\n\n      if (isPlainObject(item)) {\n        return sortKeys(item);\n      }\n\n      return item;\n    }));\n    return result;\n  };\n\n  const sortKeys = object => {\n    const seenIndex = seenInput.indexOf(object);\n\n    if (seenIndex !== -1) {\n      return seenOutput[seenIndex];\n    }\n\n    const result = {};\n    const keys = Object.keys(object).sort(options.compare);\n    seenInput.push(object);\n    seenOutput.push(result);\n\n    for (const key of keys) {\n      const value = object[key];\n      let newValue;\n\n      if (deep && Array.isArray(value)) {\n        newValue = deepSortArray(value);\n      } else {\n        newValue = deep && isPlainObject(value) ? sortKeys(value) : value;\n      }\n\n      Object.defineProperty(result, key, { ...Object.getOwnPropertyDescriptor(object, key),\n        value: newValue\n      });\n    }\n\n    return result;\n  };\n\n  if (Array.isArray(object)) {\n    return deep ? deepSortArray(object) : object.slice();\n  }\n\n  return sortKeys(object);\n};","map":{"version":3,"names":["isPlainObject","require","module","exports","object","options","Array","isArray","TypeError","deep","seenInput","seenOutput","deepSortArray","array","seenIndex","indexOf","result","push","map","item","sortKeys","keys","Object","sort","compare","key","value","newValue","defineProperty","getOwnPropertyDescriptor","slice"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/sort-keys/index.js"],"sourcesContent":["'use strict';\nconst isPlainObject = require('is-plain-obj');\n\nmodule.exports = (object, options = {}) => {\n\tif (!isPlainObject(object) && !Array.isArray(object)) {\n\t\tthrow new TypeError('Expected a plain object or array');\n\t}\n\n\tconst {deep} = options;\n\tconst seenInput = [];\n\tconst seenOutput = [];\n\n\tconst deepSortArray = array => {\n\t\tconst seenIndex = seenInput.indexOf(array);\n\n\t\tif (seenIndex !== -1) {\n\t\t\treturn seenOutput[seenIndex];\n\t\t}\n\n\t\tconst result = [];\n\t\tseenInput.push(array);\n\t\tseenOutput.push(result);\n\n\t\tresult.push(...array.map(item => {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\treturn deepSortArray(item);\n\t\t\t}\n\n\t\t\tif (isPlainObject(item)) {\n\t\t\t\treturn sortKeys(item);\n\t\t\t}\n\n\t\t\treturn item;\n\t\t}));\n\n\t\treturn result;\n\t};\n\n\tconst sortKeys = object => {\n\t\tconst seenIndex = seenInput.indexOf(object);\n\n\t\tif (seenIndex !== -1) {\n\t\t\treturn seenOutput[seenIndex];\n\t\t}\n\n\t\tconst result = {};\n\t\tconst keys = Object.keys(object).sort(options.compare);\n\n\t\tseenInput.push(object);\n\t\tseenOutput.push(result);\n\n\t\tfor (const key of keys) {\n\t\t\tconst value = object[key];\n\t\t\tlet newValue;\n\n\t\t\tif (deep && Array.isArray(value)) {\n\t\t\t\tnewValue = deepSortArray(value);\n\t\t\t} else {\n\t\t\t\tnewValue = deep && isPlainObject(value) ? sortKeys(value) : value;\n\t\t\t}\n\n\t\t\tObject.defineProperty(result, key, {\n\t\t\t\t...Object.getOwnPropertyDescriptor(object, key),\n\t\t\t\tvalue: newValue\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tif (Array.isArray(object)) {\n\t\treturn deep ? deepSortArray(object) : object.slice();\n\t}\n\n\treturn sortKeys(object);\n};\n"],"mappings":"AAAA;;AACA,MAAMA,aAAa,GAAGC,OAAO,CAAC,cAAD,CAA7B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAACC,MAAD,EAA0B;EAAA,IAAjBC,OAAiB,uEAAP,EAAO;;EAC1C,IAAI,CAACL,aAAa,CAACI,MAAD,CAAd,IAA0B,CAACE,KAAK,CAACC,OAAN,CAAcH,MAAd,CAA/B,EAAsD;IACrD,MAAM,IAAII,SAAJ,CAAc,kCAAd,CAAN;EACA;;EAED,MAAM;IAACC;EAAD,IAASJ,OAAf;EACA,MAAMK,SAAS,GAAG,EAAlB;EACA,MAAMC,UAAU,GAAG,EAAnB;;EAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;IAC9B,MAAMC,SAAS,GAAGJ,SAAS,CAACK,OAAV,CAAkBF,KAAlB,CAAlB;;IAEA,IAAIC,SAAS,KAAK,CAAC,CAAnB,EAAsB;MACrB,OAAOH,UAAU,CAACG,SAAD,CAAjB;IACA;;IAED,MAAME,MAAM,GAAG,EAAf;IACAN,SAAS,CAACO,IAAV,CAAeJ,KAAf;IACAF,UAAU,CAACM,IAAX,CAAgBD,MAAhB;IAEAA,MAAM,CAACC,IAAP,CAAY,GAAGJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;MAChC,IAAIb,KAAK,CAACC,OAAN,CAAcY,IAAd,CAAJ,EAAyB;QACxB,OAAOP,aAAa,CAACO,IAAD,CAApB;MACA;;MAED,IAAInB,aAAa,CAACmB,IAAD,CAAjB,EAAyB;QACxB,OAAOC,QAAQ,CAACD,IAAD,CAAf;MACA;;MAED,OAAOA,IAAP;IACA,CAVc,CAAf;IAYA,OAAOH,MAAP;EACA,CAxBD;;EA0BA,MAAMI,QAAQ,GAAGhB,MAAM,IAAI;IAC1B,MAAMU,SAAS,GAAGJ,SAAS,CAACK,OAAV,CAAkBX,MAAlB,CAAlB;;IAEA,IAAIU,SAAS,KAAK,CAAC,CAAnB,EAAsB;MACrB,OAAOH,UAAU,CAACG,SAAD,CAAjB;IACA;;IAED,MAAME,MAAM,GAAG,EAAf;IACA,MAAMK,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYjB,MAAZ,EAAoBmB,IAApB,CAAyBlB,OAAO,CAACmB,OAAjC,CAAb;IAEAd,SAAS,CAACO,IAAV,CAAeb,MAAf;IACAO,UAAU,CAACM,IAAX,CAAgBD,MAAhB;;IAEA,KAAK,MAAMS,GAAX,IAAkBJ,IAAlB,EAAwB;MACvB,MAAMK,KAAK,GAAGtB,MAAM,CAACqB,GAAD,CAApB;MACA,IAAIE,QAAJ;;MAEA,IAAIlB,IAAI,IAAIH,KAAK,CAACC,OAAN,CAAcmB,KAAd,CAAZ,EAAkC;QACjCC,QAAQ,GAAGf,aAAa,CAACc,KAAD,CAAxB;MACA,CAFD,MAEO;QACNC,QAAQ,GAAGlB,IAAI,IAAIT,aAAa,CAAC0B,KAAD,CAArB,GAA+BN,QAAQ,CAACM,KAAD,CAAvC,GAAiDA,KAA5D;MACA;;MAEDJ,MAAM,CAACM,cAAP,CAAsBZ,MAAtB,EAA8BS,GAA9B,EAAmC,EAClC,GAAGH,MAAM,CAACO,wBAAP,CAAgCzB,MAAhC,EAAwCqB,GAAxC,CAD+B;QAElCC,KAAK,EAAEC;MAF2B,CAAnC;IAIA;;IAED,OAAOX,MAAP;EACA,CA9BD;;EAgCA,IAAIV,KAAK,CAACC,OAAN,CAAcH,MAAd,CAAJ,EAA2B;IAC1B,OAAOK,IAAI,GAAGG,aAAa,CAACR,MAAD,CAAhB,GAA2BA,MAAM,CAAC0B,KAAP,EAAtC;EACA;;EAED,OAAOV,QAAQ,CAAChB,MAAD,CAAf;AACA,CAxED"},"metadata":{},"sourceType":"script"}
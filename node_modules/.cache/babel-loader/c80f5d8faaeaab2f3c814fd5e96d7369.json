{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\n\n\nmodule.exports = function (_ref) {\n  var repo = _ref.repo,\n      preload = _ref.preload;\n\n  var get = require('./get')({\n    repo: repo,\n    preload: preload\n  });\n  /**\n   * @type {import('ipfs-core-types/src/object').API[\"data\"]}\n   */\n\n\n  function data(_x) {\n    return _data.apply(this, arguments);\n  }\n\n  function _data() {\n    _data = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(multihash) {\n      var options,\n          node,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return get(multihash, options);\n\n            case 3:\n              node = _context.sent;\n              return _context.abrupt(\"return\", node.Data || new Uint8Array(0));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _data.apply(this, arguments);\n  }\n\n  return withTimeoutOption(data);\n};","map":{"version":3,"names":["withTimeoutOption","require","module","exports","repo","preload","get","data","multihash","options","node","Data","Uint8Array"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/object/data.js"],"sourcesContent":["'use strict'\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nmodule.exports = ({ repo, preload }) => {\n  const get = require('./get')({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object').API[\"data\"]}\n   */\n  async function data (multihash, options = {}) {\n    const node = await get(multihash, options)\n    return node.Data || new Uint8Array(0)\n  }\n\n  return withTimeoutOption(data)\n}\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,iBAAiB,GAAGC,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,gBAAuB;EAAA,IAApBC,IAAoB,QAApBA,IAAoB;EAAA,IAAdC,OAAc,QAAdA,OAAc;;EACtC,IAAMC,GAAG,GAAGL,OAAO,CAAC,OAAD,CAAP,CAAiB;IAAEG,IAAI,EAAJA,IAAF;IAAQC,OAAO,EAAPA;EAAR,CAAjB,CAAZ;EAEA;AACF;AACA;;;EALwC,SAMvBE,IANuB;IAAA;EAAA;;EAAA;IAAA,mEAMtC,iBAAqBC,SAArB;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAgCC,OAAhC,2DAA0C,EAA1C;cAAA;cAAA,OACqBH,GAAG,CAACE,SAAD,EAAYC,OAAZ,CADxB;;YAAA;cACQC,IADR;cAAA,iCAESA,IAAI,CAACC,IAAL,IAAa,IAAIC,UAAJ,CAAe,CAAf,CAFtB;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CANsC;IAAA;EAAA;;EAWtC,OAAOZ,iBAAiB,CAACO,IAAD,CAAxB;AACD,CAZD"},"metadata":{},"sourceType":"script"}
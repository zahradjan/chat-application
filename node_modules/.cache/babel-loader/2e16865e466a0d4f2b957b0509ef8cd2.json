{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\n\n\nmodule.exports = function (_ref) {\n  var repo = _ref.repo;\n\n  /**\n   * @type {import('ipfs-core-types/src/refs').API[\"local\"]}\n   */\n  function refsLocal() {\n    return _refsLocal.apply(this, arguments);\n  }\n\n  function _refsLocal() {\n    _refsLocal = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          cid,\n          _args = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 3;\n              _iterator = _asyncIterator(repo.blocks.queryKeys({}, {\n                signal: options.signal\n              }));\n\n            case 5:\n              _context.next = 7;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 7:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 14;\n                break;\n              }\n\n              cid = _step.value;\n              _context.next = 11;\n              return {\n                ref: cid.toString()\n              };\n\n            case 11:\n              _iteratorAbruptCompletion = false;\n              _context.next = 5;\n              break;\n\n            case 14:\n              _context.next = 20;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 20:\n              _context.prev = 20;\n              _context.prev = 21;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 25;\n                break;\n              }\n\n              _context.next = 25;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 25:\n              _context.prev = 25;\n\n              if (!_didIteratorError) {\n                _context.next = 28;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 28:\n              return _context.finish(25);\n\n            case 29:\n              return _context.finish(20);\n\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 16, 20, 30], [21,, 25, 29]]);\n    }));\n    return _refsLocal.apply(this, arguments);\n  }\n\n  return withTimeoutOption(refsLocal);\n};","map":{"version":3,"names":["withTimeoutOption","require","module","exports","repo","refsLocal","options","blocks","queryKeys","signal","cid","ref","toString"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/refs/local.js"],"sourcesContent":["'use strict'\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nmodule.exports = function ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/refs').API[\"local\"]}\n   */\n  async function * refsLocal (options = {}) {\n    for await (const cid of repo.blocks.queryKeys({}, { signal: options.signal })) {\n      yield { ref: cid.toString() }\n    }\n  }\n\n  return withTimeoutOption(refsLocal)\n}\n"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,iBAAiB,GAAGC,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,gBAAoB;EAAA,IAARC,IAAQ,QAARA,IAAQ;;EACnC;AACF;AACA;EAHqC,SAIlBC,SAJkB;IAAA;EAAA;;EAAA;IAAA,0EAInC;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAA4BC,OAA5B,2DAAsC,EAAtC;cAAA;cAAA;cAAA;cAAA,2BAC0BF,IAAI,CAACG,MAAL,CAAYC,SAAZ,CAAsB,EAAtB,EAA0B;gBAAEC,MAAM,EAAEH,OAAO,CAACG;cAAlB,CAA1B,CAD1B;;YAAA;cAAA;cAAA;;YAAA;cAAA;gBAAA;gBAAA;cAAA;;cACmBC,GADnB;cAAA;cAEI,OAAM;gBAAEC,GAAG,EAAED,GAAG,CAACE,QAAJ;cAAP,CAAN;;YAFJ;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;cAAA;;YAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAAA;;YAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJmC;IAAA;EAAA;;EAUnC,OAAOZ,iBAAiB,CAACK,SAAD,CAAxB;AACD,CAXD"},"metadata":{},"sourceType":"script"}
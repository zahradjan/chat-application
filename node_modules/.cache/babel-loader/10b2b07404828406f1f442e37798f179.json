{"ast":null,"code":"'use strict';\n\nconst {\n  CID\n} = require('multiformats/cid');\n\nconst errcode = require('err-code');\n\nconst utils = require('../../utils');\n/**\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('../../message')} Message\n */\n\n/**\n * @param {import('../../index')} dht\n */\n\n\nmodule.exports = dht => {\n  const log = utils.logger(dht.peerId, 'rpc:add-provider');\n  /**\n   * Process `AddProvider` DHT messages.\n   *\n   * @param {PeerId} peerId\n   * @param {Message} msg\n   */\n\n  async function addProvider(peerId, msg) {\n    // eslint-disable-line require-await\n    log('start');\n\n    if (!msg.key || msg.key.length === 0) {\n      throw errcode(new Error('Missing key'), 'ERR_MISSING_KEY');\n    }\n    /** @type {CID} */\n\n\n    let cid;\n\n    try {\n      cid = CID.decode(msg.key);\n    } catch (err) {\n      const errMsg = `Invalid CID: ${err.message}`;\n      throw errcode(new Error(errMsg), 'ERR_INVALID_CID');\n    }\n\n    msg.providerPeers.forEach(pi => {\n      // Ignore providers not from the originator\n      if (!pi.id.isEqual(peerId)) {\n        log('invalid provider peer %s from %s', pi.id.toB58String(), peerId.toB58String());\n        return;\n      }\n\n      if (pi.multiaddrs.length < 1) {\n        log('no valid addresses for provider %s. Ignore', peerId.toB58String());\n        return;\n      }\n\n      log('received provider %s for %s (addrs %s)', peerId.toB58String(), cid.toString(), pi.multiaddrs.map(m => m.toString()));\n\n      if (!dht._isSelf(pi.id)) {\n        // Add known address to peer store\n        dht.peerStore.addressBook.add(pi.id, pi.multiaddrs);\n        return dht.providers.addProvider(cid, pi.id);\n      }\n    }); // Previous versions of the JS DHT sent erroneous providers in the\n    // `providerPeers` field. In order to accommodate older clients that have\n    // this bug, we fall back to assuming the originator is the provider if\n    // we can't find any valid providers in the payload.\n    // https://github.com/libp2p/js-libp2p-kad-dht/pull/127\n    // https://github.com/libp2p/js-libp2p-kad-dht/issues/128\n\n    return dht.providers.addProvider(cid, peerId);\n  }\n\n  return addProvider;\n};","map":{"version":3,"names":["CID","require","errcode","utils","module","exports","dht","log","logger","peerId","addProvider","msg","key","length","Error","cid","decode","err","errMsg","message","providerPeers","forEach","pi","id","isEqual","toB58String","multiaddrs","toString","map","m","_isSelf","peerStore","addressBook","add","providers"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p-kad-dht/src/rpc/handlers/add-provider.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst errcode = require('err-code')\n\nconst utils = require('../../utils')\n\n/**\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('../../message')} Message\n */\n\n/**\n * @param {import('../../index')} dht\n */\nmodule.exports = (dht) => {\n  const log = utils.logger(dht.peerId, 'rpc:add-provider')\n  /**\n   * Process `AddProvider` DHT messages.\n   *\n   * @param {PeerId} peerId\n   * @param {Message} msg\n   */\n  async function addProvider (peerId, msg) { // eslint-disable-line require-await\n    log('start')\n\n    if (!msg.key || msg.key.length === 0) {\n      throw errcode(new Error('Missing key'), 'ERR_MISSING_KEY')\n    }\n\n    /** @type {CID} */\n    let cid\n    try {\n      cid = CID.decode(msg.key)\n    } catch (err) {\n      const errMsg = `Invalid CID: ${err.message}`\n      throw errcode(new Error(errMsg), 'ERR_INVALID_CID')\n    }\n\n    msg.providerPeers.forEach((pi) => {\n      // Ignore providers not from the originator\n      if (!pi.id.isEqual(peerId)) {\n        log('invalid provider peer %s from %s', pi.id.toB58String(), peerId.toB58String())\n        return\n      }\n\n      if (pi.multiaddrs.length < 1) {\n        log('no valid addresses for provider %s. Ignore', peerId.toB58String())\n        return\n      }\n\n      log('received provider %s for %s (addrs %s)', peerId.toB58String(), cid.toString(), pi.multiaddrs.map((m) => m.toString()))\n\n      if (!dht._isSelf(pi.id)) {\n        // Add known address to peer store\n        dht.peerStore.addressBook.add(pi.id, pi.multiaddrs)\n        return dht.providers.addProvider(cid, pi.id)\n      }\n    })\n\n    // Previous versions of the JS DHT sent erroneous providers in the\n    // `providerPeers` field. In order to accommodate older clients that have\n    // this bug, we fall back to assuming the originator is the provider if\n    // we can't find any valid providers in the payload.\n    // https://github.com/libp2p/js-libp2p-kad-dht/pull/127\n    // https://github.com/libp2p/js-libp2p-kad-dht/issues/128\n    return dht.providers.addProvider(cid, peerId)\n  }\n\n  return addProvider\n}\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAUC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;AAEA,MAAME,KAAK,GAAGF,OAAO,CAAC,aAAD,CAArB;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAkBC,GAAD,IAAS;EACxB,MAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAaF,GAAG,CAACG,MAAjB,EAAyB,kBAAzB,CAAZ;EACA;AACF;AACA;AACA;AACA;AACA;;EACE,eAAeC,WAAf,CAA4BD,MAA5B,EAAoCE,GAApC,EAAyC;IAAE;IACzCJ,GAAG,CAAC,OAAD,CAAH;;IAEA,IAAI,CAACI,GAAG,CAACC,GAAL,IAAYD,GAAG,CAACC,GAAJ,CAAQC,MAAR,KAAmB,CAAnC,EAAsC;MACpC,MAAMX,OAAO,CAAC,IAAIY,KAAJ,CAAU,aAAV,CAAD,EAA2B,iBAA3B,CAAb;IACD;IAED;;;IACA,IAAIC,GAAJ;;IACA,IAAI;MACFA,GAAG,GAAGf,GAAG,CAACgB,MAAJ,CAAWL,GAAG,CAACC,GAAf,CAAN;IACD,CAFD,CAEE,OAAOK,GAAP,EAAY;MACZ,MAAMC,MAAM,GAAI,gBAAeD,GAAG,CAACE,OAAQ,EAA3C;MACA,MAAMjB,OAAO,CAAC,IAAIY,KAAJ,CAAUI,MAAV,CAAD,EAAoB,iBAApB,CAAb;IACD;;IAEDP,GAAG,CAACS,aAAJ,CAAkBC,OAAlB,CAA2BC,EAAD,IAAQ;MAChC;MACA,IAAI,CAACA,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcf,MAAd,CAAL,EAA4B;QAC1BF,GAAG,CAAC,kCAAD,EAAqCe,EAAE,CAACC,EAAH,CAAME,WAAN,EAArC,EAA0DhB,MAAM,CAACgB,WAAP,EAA1D,CAAH;QACA;MACD;;MAED,IAAIH,EAAE,CAACI,UAAH,CAAcb,MAAd,GAAuB,CAA3B,EAA8B;QAC5BN,GAAG,CAAC,4CAAD,EAA+CE,MAAM,CAACgB,WAAP,EAA/C,CAAH;QACA;MACD;;MAEDlB,GAAG,CAAC,wCAAD,EAA2CE,MAAM,CAACgB,WAAP,EAA3C,EAAiEV,GAAG,CAACY,QAAJ,EAAjE,EAAiFL,EAAE,CAACI,UAAH,CAAcE,GAAd,CAAmBC,CAAD,IAAOA,CAAC,CAACF,QAAF,EAAzB,CAAjF,CAAH;;MAEA,IAAI,CAACrB,GAAG,CAACwB,OAAJ,CAAYR,EAAE,CAACC,EAAf,CAAL,EAAyB;QACvB;QACAjB,GAAG,CAACyB,SAAJ,CAAcC,WAAd,CAA0BC,GAA1B,CAA8BX,EAAE,CAACC,EAAjC,EAAqCD,EAAE,CAACI,UAAxC;QACA,OAAOpB,GAAG,CAAC4B,SAAJ,CAAcxB,WAAd,CAA0BK,GAA1B,EAA+BO,EAAE,CAACC,EAAlC,CAAP;MACD;IACF,CAnBD,EAhBuC,CAqCvC;IACA;IACA;IACA;IACA;IACA;;IACA,OAAOjB,GAAG,CAAC4B,SAAJ,CAAcxB,WAAd,CAA0BK,GAA1B,EAA+BN,MAA/B,CAAP;EACD;;EAED,OAAOC,WAAP;AACD,CAvDD"},"metadata":{},"sourceType":"script"}
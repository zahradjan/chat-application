{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar getPeerID = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(ipfs) {\n    var peerInfo;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ipfs.id();\n\n          case 2:\n            peerInfo = _context.sent;\n            return _context.abrupt(\"return\", peerInfo.id);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getPeerID(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = getPeerID;","map":{"version":3,"names":["getPeerID","ipfs","id","peerInfo","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-pubsub-1on1/src/get-peer-id.js"],"sourcesContent":["'use strict'\n\nconst getPeerID = async (ipfs) => {\n  const peerInfo = await ipfs.id()\n  return peerInfo.id\n}\n\nmodule.exports = getPeerID\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,SAAS;EAAA,sEAAG,iBAAOC,IAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACOA,IAAI,CAACC,EAAL,EADP;;UAAA;YACVC,QADU;YAAA,iCAETA,QAAQ,CAACD,EAFA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAATF,SAAS;IAAA;EAAA;AAAA,GAAf;;AAKAI,MAAM,CAACC,OAAP,GAAiBL,SAAjB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar errCode = require('err-code');\n\nvar fromString = require('uint8arrays/from-string');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nasync function* validateChunks(source) {\n  for await (const content of source) {\n    if (content.length === undefined) {\n      throw errCode__default[\"default\"](new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n\n    if (typeof content === 'string' || content instanceof String) {\n      yield fromString.fromString(content.toString());\n    } else if (Array.isArray(content)) {\n      yield Uint8Array.from(content);\n    } else if (content instanceof Uint8Array) {\n      yield content;\n    } else {\n      throw errCode__default[\"default\"](new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n  }\n}\n\nmodule.exports = validateChunks;","map":{"version":3,"names":["errCode","require","fromString","_interopDefaultLegacy","e","errCode__default","validateChunks","source","content","length","undefined","Error","String","toString","Array","isArray","Uint8Array","from","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-unixfs-importer/cjs/src/dag-builder/validate-chunks.js"],"sourcesContent":["'use strict';\n\nvar errCode = require('err-code');\nvar fromString = require('uint8arrays/from-string');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nasync function* validateChunks(source) {\n  for await (const content of source) {\n    if (content.length === undefined) {\n      throw errCode__default[\"default\"](new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n    if (typeof content === 'string' || content instanceof String) {\n      yield fromString.fromString(content.toString());\n    } else if (Array.isArray(content)) {\n      yield Uint8Array.from(content);\n    } else if (content instanceof Uint8Array) {\n      yield content;\n    } else {\n      throw errCode__default[\"default\"](new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n  }\n}\n\nmodule.exports = validateChunks;\n"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,yBAAD,CAAxB;;AAEA,SAASE,qBAAT,CAAgCC,CAAhC,EAAmC;EAAE,OAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;IAAE,WAAWA;EAAb,CAA1D;AAA6E;;AAElH,IAAIC,gBAAgB,GAAG,aAAaF,qBAAqB,CAACH,OAAD,CAAzD;;AAEA,gBAAgBM,cAAhB,CAA+BC,MAA/B,EAAuC;EACrC,WAAW,MAAMC,OAAjB,IAA4BD,MAA5B,EAAoC;IAClC,IAAIC,OAAO,CAACC,MAAR,KAAmBC,SAAvB,EAAkC;MAChC,MAAML,gBAAgB,CAAC,SAAD,CAAhB,CAA4B,IAAIM,KAAJ,CAAU,qBAAV,CAA5B,EAA8D,qBAA9D,CAAN;IACD;;IACD,IAAI,OAAOH,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,YAAYI,MAAtD,EAA8D;MAC5D,MAAMV,UAAU,CAACA,UAAX,CAAsBM,OAAO,CAACK,QAAR,EAAtB,CAAN;IACD,CAFD,MAEO,IAAIC,KAAK,CAACC,OAAN,CAAcP,OAAd,CAAJ,EAA4B;MACjC,MAAMQ,UAAU,CAACC,IAAX,CAAgBT,OAAhB,CAAN;IACD,CAFM,MAEA,IAAIA,OAAO,YAAYQ,UAAvB,EAAmC;MACxC,MAAMR,OAAN;IACD,CAFM,MAEA;MACL,MAAMH,gBAAgB,CAAC,SAAD,CAAhB,CAA4B,IAAIM,KAAJ,CAAU,qBAAV,CAA5B,EAA8D,qBAA9D,CAAN;IACD;EACF;AACF;;AAEDO,MAAM,CAACC,OAAP,GAAiBb,cAAjB"},"metadata":{},"sourceType":"script"}
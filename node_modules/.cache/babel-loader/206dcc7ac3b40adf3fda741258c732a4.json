{"ast":null,"code":"'use strict'; // The domain string used for peer records contained in a Envelope.\n\nconst domain = 'libp2p-peer-record'; // The type hint used to identify peer records in a Envelope.\n// Defined in https://github.com/multiformats/multicodec/blob/master/table.csv\n// with name \"libp2p-peer-record\"\n\nconst payloadType = Uint8Array.from([3, 1]);\nmodule.exports = {\n  ENVELOPE_DOMAIN_PEER_RECORD: domain,\n  ENVELOPE_PAYLOAD_TYPE_PEER_RECORD: payloadType\n};","map":{"version":3,"names":["domain","payloadType","Uint8Array","from","module","exports","ENVELOPE_DOMAIN_PEER_RECORD","ENVELOPE_PAYLOAD_TYPE_PEER_RECORD"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p/src/record/peer-record/consts.js"],"sourcesContent":["'use strict'\n\n// The domain string used for peer records contained in a Envelope.\nconst domain = 'libp2p-peer-record'\n\n// The type hint used to identify peer records in a Envelope.\n// Defined in https://github.com/multiformats/multicodec/blob/master/table.csv\n// with name \"libp2p-peer-record\"\nconst payloadType = Uint8Array.from([3, 1])\n\nmodule.exports = {\n  ENVELOPE_DOMAIN_PEER_RECORD: domain,\n  ENVELOPE_PAYLOAD_TYPE_PEER_RECORD: payloadType\n}\n"],"mappings":"AAAA,a,CAEA;;AACA,MAAMA,MAAM,GAAG,oBAAf,C,CAEA;AACA;AACA;;AACA,MAAMC,WAAW,GAAGC,UAAU,CAACC,IAAX,CAAgB,CAAC,CAAD,EAAI,CAAJ,CAAhB,CAApB;AAEAC,MAAM,CAACC,OAAP,GAAiB;EACfC,2BAA2B,EAAEN,MADd;EAEfO,iCAAiC,EAAEN;AAFpB,CAAjB"},"metadata":{},"sourceType":"script"}
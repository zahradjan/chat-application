{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar WantlistEntry = require('../wantlist').Entry;\n\nvar _require = require('multiformats/bases/base58'),\n    base58btc = _require.base58btc;\n\nmodule.exports = /*#__PURE__*/function (_Symbol$toStringTag) {\n  /**\n   * @param {import('multiformats').CID} cid\n   * @param {number} priority\n   * @param {import('./message').Message.Wantlist.WantType} wantType\n   * @param {boolean} [cancel]\n   * @param {boolean} [sendDontHave]\n   */\n  function BitswapMessageEntry(cid, priority, wantType, cancel, sendDontHave) {\n    _classCallCheck(this, BitswapMessageEntry);\n\n    this.entry = new WantlistEntry(cid, priority, wantType);\n    this.cancel = Boolean(cancel);\n    this.sendDontHave = Boolean(sendDontHave);\n  }\n\n  _createClass(BitswapMessageEntry, [{\n    key: \"cid\",\n    get: function get() {\n      return this.entry.cid;\n    },\n    set: function set(cid) {\n      this.entry.cid = cid;\n    }\n  }, {\n    key: \"priority\",\n    get: function get() {\n      return this.entry.priority;\n    },\n    set: function set(val) {\n      this.entry.priority = val;\n    }\n  }, {\n    key: \"wantType\",\n    get: function get() {\n      return this.entry.wantType;\n    },\n    set: function set(val) {\n      this.entry.wantType = val;\n    }\n  }, {\n    key: _Symbol$toStringTag,\n    get: function get() {\n      var cidStr = this.cid.toString(base58btc);\n      return \"BitswapMessageEntry \".concat(cidStr, \" <cancel: \").concat(this.cancel, \", priority: \").concat(this.priority, \">\");\n    }\n    /**\n     * @param {this} other\n     */\n\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.cancel === other.cancel && this.sendDontHave === other.sendDontHave && this.wantType === other.wantType && this.entry.equals(other.entry);\n    }\n  }]);\n\n  return BitswapMessageEntry;\n}(Symbol.toStringTag);","map":{"version":3,"names":["WantlistEntry","require","Entry","base58btc","module","exports","cid","priority","wantType","cancel","sendDontHave","entry","Boolean","val","cidStr","toString","other","equals","Symbol","toStringTag"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-bitswap/src/types/message/entry.js"],"sourcesContent":["'use strict'\n\nconst WantlistEntry = require('../wantlist').Entry\nconst { base58btc } = require('multiformats/bases/base58')\n\nmodule.exports = class BitswapMessageEntry {\n  /**\n   * @param {import('multiformats').CID} cid\n   * @param {number} priority\n   * @param {import('./message').Message.Wantlist.WantType} wantType\n   * @param {boolean} [cancel]\n   * @param {boolean} [sendDontHave]\n   */\n  constructor (cid, priority, wantType, cancel, sendDontHave) {\n    this.entry = new WantlistEntry(cid, priority, wantType)\n    this.cancel = Boolean(cancel)\n    this.sendDontHave = Boolean(sendDontHave)\n  }\n\n  get cid () {\n    return this.entry.cid\n  }\n\n  set cid (cid) {\n    this.entry.cid = cid\n  }\n\n  get priority () {\n    return this.entry.priority\n  }\n\n  set priority (val) {\n    this.entry.priority = val\n  }\n\n  get wantType () {\n    return this.entry.wantType\n  }\n\n  set wantType (val) {\n    this.entry.wantType = val\n  }\n\n  get [Symbol.toStringTag] () {\n    const cidStr = this.cid.toString(base58btc)\n    return `BitswapMessageEntry ${cidStr} <cancel: ${this.cancel}, priority: ${this.priority}>`\n  }\n\n  /**\n   * @param {this} other\n   */\n  equals (other) {\n    return (this.cancel === other.cancel) &&\n           (this.sendDontHave === other.sendDontHave) &&\n           (this.wantType === other.wantType) &&\n           this.entry.equals(other.entry)\n  }\n}\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,aAAa,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBC,KAA7C;;AACA,eAAsBD,OAAO,CAAC,2BAAD,CAA7B;AAAA,IAAQE,SAAR,YAAQA,SAAR;;AAEAC,MAAM,CAACC,OAAP;EACE;AACF;AACA;AACA;AACA;AACA;AACA;EACE,6BAAaC,GAAb,EAAkBC,QAAlB,EAA4BC,QAA5B,EAAsCC,MAAtC,EAA8CC,YAA9C,EAA4D;IAAA;;IAC1D,KAAKC,KAAL,GAAa,IAAIX,aAAJ,CAAkBM,GAAlB,EAAuBC,QAAvB,EAAiCC,QAAjC,CAAb;IACA,KAAKC,MAAL,GAAcG,OAAO,CAACH,MAAD,CAArB;IACA,KAAKC,YAAL,GAAoBE,OAAO,CAACF,YAAD,CAA3B;EACD;;EAZH;IAAA;IAAA,KAcE,eAAW;MACT,OAAO,KAAKC,KAAL,CAAWL,GAAlB;IACD,CAhBH;IAAA,KAkBE,aAASA,GAAT,EAAc;MACZ,KAAKK,KAAL,CAAWL,GAAX,GAAiBA,GAAjB;IACD;EApBH;IAAA;IAAA,KAsBE,eAAgB;MACd,OAAO,KAAKK,KAAL,CAAWJ,QAAlB;IACD,CAxBH;IAAA,KA0BE,aAAcM,GAAd,EAAmB;MACjB,KAAKF,KAAL,CAAWJ,QAAX,GAAsBM,GAAtB;IACD;EA5BH;IAAA;IAAA,KA8BE,eAAgB;MACd,OAAO,KAAKF,KAAL,CAAWH,QAAlB;IACD,CAhCH;IAAA,KAkCE,aAAcK,GAAd,EAAmB;MACjB,KAAKF,KAAL,CAAWH,QAAX,GAAsBK,GAAtB;IACD;EApCH;IAAA;IAAA,KAsCE,eAA4B;MAC1B,IAAMC,MAAM,GAAG,KAAKR,GAAL,CAASS,QAAT,CAAkBZ,SAAlB,CAAf;MACA,qCAA8BW,MAA9B,uBAAiD,KAAKL,MAAtD,yBAA2E,KAAKF,QAAhF;IACD;IAED;AACF;AACA;;EA7CA;IAAA;IAAA,OA8CE,gBAAQS,KAAR,EAAe;MACb,OAAQ,KAAKP,MAAL,KAAgBO,KAAK,CAACP,MAAvB,IACC,KAAKC,YAAL,KAAsBM,KAAK,CAACN,YAD7B,IAEC,KAAKF,QAAL,KAAkBQ,KAAK,CAACR,QAFzB,IAGA,KAAKG,KAAL,CAAWM,MAAX,CAAkBD,KAAK,CAACL,KAAxB,CAHP;IAID;EAnDH;;EAAA;AAAA,EAsCOO,MAAM,CAACC,WAtCd"},"metadata":{},"sourceType":"script"}
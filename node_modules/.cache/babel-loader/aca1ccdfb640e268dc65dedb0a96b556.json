{"ast":null,"code":"import IpfsPubsubPeerMonitor from \"ipfs-pubsub-peer-monitor\";\nimport { makeAutoObservable, runInAction, toJS } from \"mobx\";\nexport class ChannelStore {\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.channel = undefined;\n    this.peersDb = undefined;\n    this.peers = [];\n    makeAutoObservable(this);\n  }\n\n  async init(topic) {\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\n    runInAction(async () => {\n      this.channelName = topic;\n      this.channel = new IpfsPubsubPeerMonitor(this.rootStore.dataStore.ipfsNode.pubsub, topic);\n      await this.setPeersFromDb();\n      await this.listenForJoinedPeers();\n      await this.listenForLeftPeers();\n    });\n  }\n\n  async setPeersFromDb() {\n    const all = await toJS(this.peersDb.all);\n    runInAction(() => {\n      all.map(e => {\n        console.log(e.payload.value);\n        return this.peers.push(e.payload.value);\n      });\n    });\n  }\n\n  async listenForJoinedPeers() {\n    this.channel.on(\"join\", async peerJoined => {\n      console.log(\"Peer joined: \" + peerJoined);\n      console.log(`Peers on Pubsub ${this.channelName}: ` + (await this.channel.getPeers()));\n      await this.savePeer(peerJoined); // this.replicatePeersDB();\n    });\n  }\n\n  async listenForLeftPeers() {\n    this.channel.on(\"leave\", async peerLeft => {\n      console.log(\"Peer left: \" + peerLeft);\n      console.log(`Peers on Pubsub ${this.channelName}: ` + (await this.channel.getPeers()));\n      await this.removePeer(peerLeft);\n    });\n  }\n\n  async peerIsInDb(peer) {\n    return this.rootStore.dataStore.peersDb.iterator().collect().find(item => item.payload.value === peer);\n  }\n\n  async savePeer(peer) {\n    if (!(await this.peerIsInDb(peer))) {\n      this.peers.push(peer);\n      await this.rootStore.dataStore.peersDb.add(peer);\n    }\n  }\n\n  async removePeer(peer) {\n    const entry = await this.rootStore.dataStore.peersDb.iterator().collect().map(item => item.payload.value === peer ? item : undefined);\n    console.log(entry);\n\n    if (entry) {\n      await this.rootStore.dataStore.peersDb.remove(entry[0].hash);\n    }\n  }\n\n  replicatePeersDB() {\n    setTimeout(async () => {\n      const nodeId = await this.rootStore.dataStore.getPeerId();\n      const peersDbId = await this.rootStore.dataStore.getPeersDbId();\n      console.log(nodeId);\n      await this.rootStore.dataStore.peersDb.all.map(peer => {\n        const peerId = peer.payload.value;\n\n        if (peerId !== nodeId) {\n          console.log(\"jsem tu \");\n          console.log(peerId);\n          console.log(peersDbId);\n          const stringifyPayload = JSON.stringify({\n            peerDb: peersDbId\n          });\n          this.rootStore.dataStore.ipfsNode.pubsub.publish(peerId, stringifyPayload);\n        }\n      });\n    }, 2000);\n  }\n\n}","map":{"version":3,"names":["IpfsPubsubPeerMonitor","makeAutoObservable","runInAction","toJS","ChannelStore","constructor","rootStore","channel","undefined","peersDb","peers","init","topic","dataStore","ipfsNode","Error","orbitDb","channelName","pubsub","setPeersFromDb","listenForJoinedPeers","listenForLeftPeers","all","map","e","console","log","payload","value","push","on","peerJoined","getPeers","savePeer","peerLeft","removePeer","peerIsInDb","peer","iterator","collect","find","item","add","entry","remove","hash","replicatePeersDB","setTimeout","nodeId","getPeerId","peersDbId","getPeersDbId","peerId","stringifyPayload","JSON","stringify","peerDb","publish"],"sources":["C:/Users/zajan/GitHub/chatApplication/src/data/store/ChannelStore.js"],"sourcesContent":["import IpfsPubsubPeerMonitor from \"ipfs-pubsub-peer-monitor\";\r\nimport { makeAutoObservable, runInAction, toJS } from \"mobx\";\r\n\r\nexport class ChannelStore {\r\n  channel;\r\n  channelName;\r\n  peersDb;\r\n  peers;\r\n\r\n  constructor(rootStore) {\r\n    this.rootStore = rootStore;\r\n    this.channel = undefined;\r\n    this.peersDb = undefined;\r\n    this.peers = [];\r\n    makeAutoObservable(this);\r\n  }\r\n  async init(topic) {\r\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\r\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\r\n    runInAction(async () => {\r\n      this.channelName = topic;\r\n      this.channel = new IpfsPubsubPeerMonitor(this.rootStore.dataStore.ipfsNode.pubsub, topic);\r\n      await this.setPeersFromDb();\r\n      await this.listenForJoinedPeers();\r\n      await this.listenForLeftPeers();\r\n    });\r\n  }\r\n\r\n  async setPeersFromDb() {\r\n    const all = await toJS(this.peersDb.all);\r\n    runInAction(() => {\r\n      all.map((e) => {\r\n        console.log(e.payload.value);\r\n        return this.peers.push(e.payload.value);\r\n      });\r\n    });\r\n  }\r\n\r\n  async listenForJoinedPeers() {\r\n    this.channel.on(\"join\", async (peerJoined) => {\r\n      console.log(\"Peer joined: \" + peerJoined);\r\n      console.log(`Peers on Pubsub ${this.channelName}: ` + (await this.channel.getPeers()));\r\n      await this.savePeer(peerJoined);\r\n      // this.replicatePeersDB();\r\n    });\r\n  }\r\n\r\n  async listenForLeftPeers() {\r\n    this.channel.on(\"leave\", async (peerLeft) => {\r\n      console.log(\"Peer left: \" + peerLeft);\r\n      console.log(`Peers on Pubsub ${this.channelName}: ` + (await this.channel.getPeers()));\r\n      await this.removePeer(peerLeft);\r\n    });\r\n  }\r\n\r\n  async peerIsInDb(peer) {\r\n    return this.rootStore.dataStore.peersDb\r\n      .iterator()\r\n      .collect()\r\n      .find((item) => item.payload.value === peer);\r\n  }\r\n\r\n  async savePeer(peer) {\r\n    if (!(await this.peerIsInDb(peer))) {\r\n      this.peers.push(peer);\r\n      await this.rootStore.dataStore.peersDb.add(peer);\r\n    }\r\n  }\r\n  async removePeer(peer) {\r\n    const entry = await this.rootStore.dataStore.peersDb\r\n      .iterator()\r\n      .collect()\r\n      .map((item) => (item.payload.value === peer ? item : undefined));\r\n    console.log(entry);\r\n    if (entry) {\r\n      await this.rootStore.dataStore.peersDb.remove(entry[0].hash);\r\n    }\r\n  }\r\n\r\n  replicatePeersDB() {\r\n    setTimeout(async () => {\r\n      const nodeId = await this.rootStore.dataStore.getPeerId();\r\n      const peersDbId = await this.rootStore.dataStore.getPeersDbId();\r\n      console.log(nodeId);\r\n      await this.rootStore.dataStore.peersDb.all.map((peer) => {\r\n        const peerId = peer.payload.value;\r\n        if (peerId !== nodeId) {\r\n          console.log(\"jsem tu \");\r\n          console.log(peerId);\r\n          console.log(peersDbId);\r\n          const stringifyPayload = JSON.stringify({ peerDb: peersDbId });\r\n          this.rootStore.dataStore.ipfsNode.pubsub.publish(peerId, stringifyPayload);\r\n        }\r\n      });\r\n    }, 2000);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
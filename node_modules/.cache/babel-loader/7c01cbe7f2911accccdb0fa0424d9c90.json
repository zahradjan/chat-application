{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _inherits = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _require = require('interface-datastore'),\n    Key = _require.Key;\n\nvar readme = require('./shard-readme');\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('./types').Shard} Shard\n */\n\n\nvar PREFIX = '/repo/flatfs/shard/';\nvar SHARDING_FN = 'SHARDING';\nvar README_FN = '_README';\n/**\n * @implements {Shard}\n */\n\nvar ShardBase = /*#__PURE__*/function () {\n  /**\n   * @param {any} param\n   */\n  function ShardBase(param) {\n    _classCallCheck(this, ShardBase);\n\n    this.param = param;\n    this.name = 'base';\n    this._padding = '';\n  }\n  /**\n   * @param {string} s\n   */\n\n\n  _createClass(ShardBase, [{\n    key: \"fun\",\n    value: function fun(s) {\n      return 'implement me';\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(PREFIX, \"v1/\").concat(this.name, \"/\").concat(this.param);\n    }\n  }]);\n\n  return ShardBase;\n}();\n/**\n * @implements {Shard}\n */\n\n\nvar Prefix = /*#__PURE__*/function (_ShardBase) {\n  _inherits(Prefix, _ShardBase);\n\n  var _super = _createSuper(Prefix);\n\n  /**\n   * @param {number} prefixLen\n   */\n  function Prefix(prefixLen) {\n    var _this;\n\n    _classCallCheck(this, Prefix);\n\n    _this = _super.call(this, prefixLen);\n    _this._padding = ''.padStart(prefixLen, '_');\n    _this.name = 'prefix';\n    return _this;\n  }\n  /**\n   * @param {string} noslash\n   */\n\n\n  _createClass(Prefix, [{\n    key: \"fun\",\n    value: function fun(noslash) {\n      return (noslash + this._padding).slice(0, this.param);\n    }\n  }]);\n\n  return Prefix;\n}(ShardBase);\n\nvar Suffix = /*#__PURE__*/function (_ShardBase2) {\n  _inherits(Suffix, _ShardBase2);\n\n  var _super2 = _createSuper(Suffix);\n\n  /**\n   * @param {number} suffixLen\n   */\n  function Suffix(suffixLen) {\n    var _this2;\n\n    _classCallCheck(this, Suffix);\n\n    _this2 = _super2.call(this, suffixLen);\n    _this2._padding = ''.padStart(suffixLen, '_');\n    _this2.name = 'suffix';\n    return _this2;\n  }\n  /**\n   * @param {string} noslash\n   */\n\n\n  _createClass(Suffix, [{\n    key: \"fun\",\n    value: function fun(noslash) {\n      var s = this._padding + noslash;\n      return s.slice(s.length - this.param);\n    }\n  }]);\n\n  return Suffix;\n}(ShardBase);\n\nvar NextToLast = /*#__PURE__*/function (_ShardBase3) {\n  _inherits(NextToLast, _ShardBase3);\n\n  var _super3 = _createSuper(NextToLast);\n\n  /**\n   * @param {number} suffixLen\n   */\n  function NextToLast(suffixLen) {\n    var _this3;\n\n    _classCallCheck(this, NextToLast);\n\n    _this3 = _super3.call(this, suffixLen);\n    _this3._padding = ''.padStart(suffixLen + 1, '_');\n    _this3.name = 'next-to-last';\n    return _this3;\n  }\n  /**\n   * @param {string} noslash\n   */\n\n\n  _createClass(NextToLast, [{\n    key: \"fun\",\n    value: function fun(noslash) {\n      var s = this._padding + noslash;\n      var offset = s.length - this.param - 1;\n      return s.slice(offset, offset + this.param);\n    }\n  }]);\n\n  return NextToLast;\n}(ShardBase);\n/**\n * Convert a given string to the matching sharding function.\n *\n * @param {string} str\n * @returns {Shard}\n */\n\n\nfunction parseShardFun(str) {\n  str = str.trim();\n\n  if (str.length === 0) {\n    throw new Error('empty shard string');\n  }\n\n  if (!str.startsWith(PREFIX)) {\n    throw new Error(\"invalid or no path prefix: \".concat(str));\n  }\n\n  var parts = str.slice(PREFIX.length).split('/');\n  var version = parts[0];\n\n  if (version !== 'v1') {\n    throw new Error(\"expect 'v1' version, got '\".concat(version, \"'\"));\n  }\n\n  var name = parts[1];\n\n  if (!parts[2]) {\n    throw new Error('missing param');\n  }\n\n  var param = parseInt(parts[2], 10);\n\n  switch (name) {\n    case 'prefix':\n      return new Prefix(param);\n\n    case 'suffix':\n      return new Suffix(param);\n\n    case 'next-to-last':\n      return new NextToLast(param);\n\n    default:\n      throw new Error(\"unkown sharding function: \".concat(name));\n  }\n}\n/**\n * @param {string | Uint8Array} path\n * @param {Datastore} store\n */\n\n\nvar readShardFun = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(path, store) {\n    var key, get, res;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            key = new Key(path).child(new Key(SHARDING_FN)); // @ts-ignore\n\n            get = typeof store.getRaw === 'function' ? store.getRaw.bind(store) : store.get.bind(store);\n            _context.next = 4;\n            return get(key);\n\n          case 4:\n            res = _context.sent;\n            return _context.abrupt(\"return\", parseShardFun(new TextDecoder().decode(res || '').trim()));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function readShardFun(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = {\n  readme: readme,\n  parseShardFun: parseShardFun,\n  readShardFun: readShardFun,\n  Prefix: Prefix,\n  Suffix: Suffix,\n  NextToLast: NextToLast,\n  README_FN: README_FN,\n  SHARDING_FN: SHARDING_FN,\n  PREFIX: PREFIX\n};","map":{"version":3,"names":["require","Key","readme","PREFIX","SHARDING_FN","README_FN","ShardBase","param","name","_padding","s","Prefix","prefixLen","padStart","noslash","slice","Suffix","suffixLen","length","NextToLast","offset","parseShardFun","str","trim","Error","startsWith","parts","split","version","parseInt","readShardFun","path","store","key","child","get","getRaw","bind","res","TextDecoder","decode","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/datastore-core/src/shard.js"],"sourcesContent":["'use strict'\n\nconst { Key } = require('interface-datastore')\nconst readme = require('./shard-readme')\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('./types').Shard} Shard\n */\n\nconst PREFIX = '/repo/flatfs/shard/'\nconst SHARDING_FN = 'SHARDING'\nconst README_FN = '_README'\n\n/**\n * @implements {Shard}\n */\nclass ShardBase {\n  /**\n   * @param {any} param\n   */\n  constructor (param) {\n    this.param = param\n    this.name = 'base'\n    this._padding = ''\n  }\n\n  /**\n   * @param {string} s\n   */\n  fun (s) {\n    return 'implement me'\n  }\n\n  toString () {\n    return `${PREFIX}v1/${this.name}/${this.param}`\n  }\n}\n/**\n * @implements {Shard}\n */\nclass Prefix extends ShardBase {\n  /**\n   * @param {number} prefixLen\n   */\n  constructor (prefixLen) {\n    super(prefixLen)\n    this._padding = ''.padStart(prefixLen, '_')\n    this.name = 'prefix'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    return (noslash + this._padding).slice(0, this.param)\n  }\n}\n\nclass Suffix extends ShardBase {\n  /**\n   * @param {number} suffixLen\n   */\n  constructor (suffixLen) {\n    super(suffixLen)\n    this._padding = ''.padStart(suffixLen, '_')\n    this.name = 'suffix'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    const s = this._padding + noslash\n    return s.slice(s.length - this.param)\n  }\n}\n\nclass NextToLast extends ShardBase {\n  /**\n   * @param {number} suffixLen\n   */\n  constructor (suffixLen) {\n    super(suffixLen)\n    this._padding = ''.padStart(suffixLen + 1, '_')\n    this.name = 'next-to-last'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    const s = this._padding + noslash\n    const offset = s.length - this.param - 1\n    return s.slice(offset, offset + this.param)\n  }\n}\n\n/**\n * Convert a given string to the matching sharding function.\n *\n * @param {string} str\n * @returns {Shard}\n */\nfunction parseShardFun (str) {\n  str = str.trim()\n\n  if (str.length === 0) {\n    throw new Error('empty shard string')\n  }\n\n  if (!str.startsWith(PREFIX)) {\n    throw new Error(`invalid or no path prefix: ${str}`)\n  }\n\n  const parts = str.slice(PREFIX.length).split('/')\n  const version = parts[0]\n\n  if (version !== 'v1') {\n    throw new Error(`expect 'v1' version, got '${version}'`)\n  }\n\n  const name = parts[1]\n\n  if (!parts[2]) {\n    throw new Error('missing param')\n  }\n\n  const param = parseInt(parts[2], 10)\n\n  switch (name) {\n    case 'prefix':\n      return new Prefix(param)\n    case 'suffix':\n      return new Suffix(param)\n    case 'next-to-last':\n      return new NextToLast(param)\n    default:\n      throw new Error(`unkown sharding function: ${name}`)\n  }\n}\n\n/**\n * @param {string | Uint8Array} path\n * @param {Datastore} store\n */\nconst readShardFun = async (path, store) => {\n  const key = new Key(path).child(new Key(SHARDING_FN))\n  // @ts-ignore\n  const get = typeof store.getRaw === 'function' ? store.getRaw.bind(store) : store.get.bind(store)\n  const res = await get(key)\n  return parseShardFun(new TextDecoder().decode(res || '').trim())\n}\n\nmodule.exports = {\n  readme,\n  parseShardFun,\n  readShardFun,\n  Prefix,\n  Suffix,\n  NextToLast,\n  README_FN,\n  SHARDING_FN,\n  PREFIX\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
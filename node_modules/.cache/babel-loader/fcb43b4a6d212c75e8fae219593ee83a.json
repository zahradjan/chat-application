{"ast":null,"code":"'use strict';\n/**\n * Drains an (async) iterable discarding its' content and does not return\n * anything.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @returns {Promise<void>}\n */\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar drain = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, _;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context.prev = 2;\n            _iterator = _asyncIterator(source);\n\n          case 4:\n            _context.next = 6;\n            return _iterator.next();\n\n          case 6:\n            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n              _context.next = 11;\n              break;\n            }\n\n            _ = _step.value;\n\n          case 8:\n            _iteratorAbruptCompletion = false;\n            _context.next = 4;\n            break;\n\n          case 11:\n            _context.next = 17;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](2);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 17:\n            _context.prev = 17;\n            _context.prev = 18;\n\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context.next = 22;\n              break;\n            }\n\n            _context.next = 22;\n            return _iterator.return();\n\n          case 22:\n            _context.prev = 22;\n\n            if (!_didIteratorError) {\n              _context.next = 25;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 25:\n            return _context.finish(22);\n\n          case 26:\n            return _context.finish(17);\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 13, 17, 27], [18,, 22, 26]]);\n  }));\n\n  return function drain(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = drain;","map":{"version":3,"names":["drain","source","_","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/it-drain/index.js"],"sourcesContent":["'use strict'\n\n/**\n * Drains an (async) iterable discarding its' content and does not return\n * anything.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @returns {Promise<void>}\n */\nconst drain = async (source) => {\n  for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty\n}\n\nmodule.exports = drain\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AACA,IAAMA,KAAK;EAAA,sEAAG,iBAAOC,MAAP;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA;YAAA,2BACUA,MADV;;UAAA;YAAA;YAAA;;UAAA;YAAA;cAAA;cAAA;YAAA;;YACKC,CADL;;UAAA;YAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;;YAAA;cAAA;cAAA;YAAA;;YAAA;YAAA;;UAAA;YAAA;;YAAA;cAAA;cAAA;YAAA;;YAAA;;UAAA;YAAA;;UAAA;YAAA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAALF,KAAK;IAAA;EAAA;AAAA,GAAX;;AAIAG,MAAM,CAACC,OAAP,GAAiBJ,KAAjB"},"metadata":{},"sourceType":"script"}
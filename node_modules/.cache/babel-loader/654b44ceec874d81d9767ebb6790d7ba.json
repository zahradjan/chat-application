{"ast":null,"code":"'use strict';\n\nexports.toCallback = doWork => {\n  return function (input, callback) {\n    let res;\n\n    try {\n      res = doWork(input);\n    } catch (err) {\n      process.nextTick(callback, err);\n      return;\n    }\n\n    process.nextTick(callback, null, res);\n  };\n};\n\nexports.toBuf = (doWork, other) => input => {\n  let result = doWork(input, other);\n  return Buffer.from(result, 'hex');\n};\n\nexports.fromString = (doWork, other) => _input => {\n  const input = Buffer.isBuffer(_input) ? _input.toString() : _input;\n  return doWork(input, other);\n};\n\nexports.fromNumberTo32BitBuf = (doWork, other) => input => {\n  let number = doWork(input, other);\n  const bytes = new Array(4);\n\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff;\n    number = number >> 8;\n  }\n\n  return Buffer.from(bytes);\n};","map":{"version":3,"names":["exports","toCallback","doWork","input","callback","res","err","process","nextTick","toBuf","other","result","Buffer","from","fromString","_input","isBuffer","toString","fromNumberTo32BitBuf","number","bytes","Array","i"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/orbit-db-keystore/node_modules/multihashing-async/src/utils.js"],"sourcesContent":["'use strict'\n\nexports.toCallback = (doWork) => {\n  return function (input, callback) {\n    let res\n    try {\n      res = doWork(input)\n    } catch (err) {\n      process.nextTick(callback, err)\n      return\n    }\n\n    process.nextTick(callback, null, res)\n  }\n}\n\nexports.toBuf = (doWork, other) => (input) => {\n  let result = doWork(input, other)\n  return Buffer.from(result, 'hex')\n}\n\nexports.fromString = (doWork, other) => (_input) => {\n  const input = Buffer.isBuffer(_input) ? _input.toString() : _input\n  return doWork(input, other)\n}\n\nexports.fromNumberTo32BitBuf = (doWork, other) => (input) => {\n  let number = doWork(input, other)\n  const bytes = new Array(4)\n\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n\n  return Buffer.from(bytes)\n}\n"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAsBC,MAAD,IAAY;EAC/B,OAAO,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;IAChC,IAAIC,GAAJ;;IACA,IAAI;MACFA,GAAG,GAAGH,MAAM,CAACC,KAAD,CAAZ;IACD,CAFD,CAEE,OAAOG,GAAP,EAAY;MACZC,OAAO,CAACC,QAAR,CAAiBJ,QAAjB,EAA2BE,GAA3B;MACA;IACD;;IAEDC,OAAO,CAACC,QAAR,CAAiBJ,QAAjB,EAA2B,IAA3B,EAAiCC,GAAjC;EACD,CAVD;AAWD,CAZD;;AAcAL,OAAO,CAACS,KAAR,GAAgB,CAACP,MAAD,EAASQ,KAAT,KAAoBP,KAAD,IAAW;EAC5C,IAAIQ,MAAM,GAAGT,MAAM,CAACC,KAAD,EAAQO,KAAR,CAAnB;EACA,OAAOE,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoB,KAApB,CAAP;AACD,CAHD;;AAKAX,OAAO,CAACc,UAAR,GAAqB,CAACZ,MAAD,EAASQ,KAAT,KAAoBK,MAAD,IAAY;EAClD,MAAMZ,KAAK,GAAGS,MAAM,CAACI,QAAP,CAAgBD,MAAhB,IAA0BA,MAAM,CAACE,QAAP,EAA1B,GAA8CF,MAA5D;EACA,OAAOb,MAAM,CAACC,KAAD,EAAQO,KAAR,CAAb;AACD,CAHD;;AAKAV,OAAO,CAACkB,oBAAR,GAA+B,CAAChB,MAAD,EAASQ,KAAT,KAAoBP,KAAD,IAAW;EAC3D,IAAIgB,MAAM,GAAGjB,MAAM,CAACC,KAAD,EAAQO,KAAR,CAAnB;EACA,MAAMU,KAAK,GAAG,IAAIC,KAAJ,CAAU,CAAV,CAAd;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;IAC1BF,KAAK,CAACE,CAAD,CAAL,GAAWH,MAAM,GAAG,IAApB;IACAA,MAAM,GAAGA,MAAM,IAAI,CAAnB;EACD;;EAED,OAAOP,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAP;AACD,CAVD"},"metadata":{},"sourceType":"script"}
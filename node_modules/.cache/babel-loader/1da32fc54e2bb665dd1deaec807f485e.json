{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _asyncGeneratorDelegate = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js\").default;\n\nvar pushable = require('it-pushable');\n/**\n * Treat one or more iterables as a single iterable.\n *\n * Nb. sources are iterated over in parallel so the\n * order of emitted items is not guaranteed.\n *\n * @template T\n * @param {...AsyncIterable<T>|Iterable<T>} sources\n * @returns {AsyncIterable<T>}\n */\n\n\nvar merge = /*#__PURE__*/function () {\n  var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    var _len,\n        sources,\n        _key,\n        output,\n        _args3 = arguments;\n\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            for (_len = _args3.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n              sources[_key] = _args3[_key];\n            }\n\n            output = pushable();\n            setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n              return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.prev = 0;\n                      _context2.next = 3;\n                      return Promise.all(sources.map( /*#__PURE__*/function () {\n                        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n                          var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, item;\n\n                          return _regeneratorRuntime().wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  _iteratorAbruptCompletion = false;\n                                  _didIteratorError = false;\n                                  _context.prev = 2;\n                                  _iterator = _asyncIterator(source);\n\n                                case 4:\n                                  _context.next = 6;\n                                  return _iterator.next();\n\n                                case 6:\n                                  if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                                    _context.next = 12;\n                                    break;\n                                  }\n\n                                  item = _step.value;\n                                  output.push(item);\n\n                                case 9:\n                                  _iteratorAbruptCompletion = false;\n                                  _context.next = 4;\n                                  break;\n\n                                case 12:\n                                  _context.next = 18;\n                                  break;\n\n                                case 14:\n                                  _context.prev = 14;\n                                  _context.t0 = _context[\"catch\"](2);\n                                  _didIteratorError = true;\n                                  _iteratorError = _context.t0;\n\n                                case 18:\n                                  _context.prev = 18;\n                                  _context.prev = 19;\n\n                                  if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                                    _context.next = 23;\n                                    break;\n                                  }\n\n                                  _context.next = 23;\n                                  return _iterator.return();\n\n                                case 23:\n                                  _context.prev = 23;\n\n                                  if (!_didIteratorError) {\n                                    _context.next = 26;\n                                    break;\n                                  }\n\n                                  throw _iteratorError;\n\n                                case 26:\n                                  return _context.finish(23);\n\n                                case 27:\n                                  return _context.finish(18);\n\n                                case 28:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee, null, [[2, 14, 18, 28], [19,, 23, 27]]);\n                        }));\n\n                        return function (_x) {\n                          return _ref3.apply(this, arguments);\n                        };\n                      }()));\n\n                    case 3:\n                      output.end();\n                      _context2.next = 9;\n                      break;\n\n                    case 6:\n                      _context2.prev = 6;\n                      _context2.t0 = _context2[\"catch\"](0);\n                      output.end(_context2.t0);\n\n                    case 9:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2, null, [[0, 6]]);\n            })), 0);\n            return _context3.delegateYield(_asyncGeneratorDelegate(_asyncIterator(output), _awaitAsyncGenerator), \"t0\", 4);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function merge() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = merge;","map":{"version":3,"names":["pushable","require","merge","sources","output","setTimeout","Promise","all","map","source","item","push","end","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/it-merge/index.js"],"sourcesContent":["'use strict'\n\nconst pushable = require('it-pushable')\n\n/**\n * Treat one or more iterables as a single iterable.\n *\n * Nb. sources are iterated over in parallel so the\n * order of emitted items is not guaranteed.\n *\n * @template T\n * @param {...AsyncIterable<T>|Iterable<T>} sources\n * @returns {AsyncIterable<T>}\n */\nconst merge = async function * (...sources) {\n  const output = pushable()\n\n  setTimeout(async () => {\n    try {\n      await Promise.all(\n        sources.map(async (source) => {\n          for await (const item of source) {\n            output.push(item)\n          }\n        })\n      )\n\n      output.end()\n    } catch (/** @type {any} */ err) {\n      output.end(err)\n    }\n  }, 0)\n\n  yield * output\n}\n\nmodule.exports = merge\n"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMC,KAAK;EAAA,wEAAG;IAAA;IAAA;IAAA;IAAA;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA,2BAAqBC,OAArB;cAAqBA,OAArB;YAAA;;YACNC,MADM,GACGJ,QAAQ,EADX;YAGZK,UAAU,0EAAC;cAAA;gBAAA;kBAAA;oBAAA;sBAAA;sBAAA;sBAAA,OAEDC,OAAO,CAACC,GAAR,CACJJ,OAAO,CAACK,GAAR;wBAAA,uEAAY,iBAAOC,MAAP;0BAAA;;0BAAA;4BAAA;8BAAA;gCAAA;kCAAA;kCAAA;kCAAA;kCAAA,2BACeA,MADf;;gCAAA;kCAAA;kCAAA;;gCAAA;kCAAA;oCAAA;oCAAA;kCAAA;;kCACOC,IADP;kCAERN,MAAM,CAACO,IAAP,CAAYD,IAAZ;;gCAFQ;kCAAA;kCAAA;kCAAA;;gCAAA;kCAAA;kCAAA;;gCAAA;kCAAA;kCAAA;kCAAA;kCAAA;;gCAAA;kCAAA;kCAAA;;kCAAA;oCAAA;oCAAA;kCAAA;;kCAAA;kCAAA;;gCAAA;kCAAA;;kCAAA;oCAAA;oCAAA;kCAAA;;kCAAA;;gCAAA;kCAAA;;gCAAA;kCAAA;;gCAAA;gCAAA;kCAAA;8BAAA;4BAAA;0BAAA;wBAAA,CAAZ;;wBAAA;0BAAA;wBAAA;sBAAA,IADI,CAFC;;oBAAA;sBAUPN,MAAM,CAACQ,GAAP;sBAVO;sBAAA;;oBAAA;sBAAA;sBAAA;sBAYPR,MAAM,CAACQ,GAAP;;oBAZO;oBAAA;sBAAA;kBAAA;gBAAA;cAAA;YAAA,CAAD,IAcP,CAdO,CAAV;YAgBA,sEAAQR,MAAR;;UAnBY;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAALF,KAAK;IAAA;EAAA;AAAA,GAAX;;AAsBAW,MAAM,CAACC,OAAP,GAAiBZ,KAAjB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n/**\n * Consumes the passed iterator and returns the number of items it contained.\n *\n * @param {AsyncIterable<any> | Iterable<any>} iterator\n * @returns {Promise<number>}\n */\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar length = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(iterator) {\n    var count, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, _;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            count = 0;\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context.prev = 3;\n            _iterator = _asyncIterator(iterator);\n\n          case 5:\n            _context.next = 7;\n            return _iterator.next();\n\n          case 7:\n            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n              _context.next = 13;\n              break;\n            }\n\n            _ = _step.value;\n            // eslint-disable-line no-unused-vars\n            count++;\n\n          case 10:\n            _iteratorAbruptCompletion = false;\n            _context.next = 5;\n            break;\n\n          case 13:\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](3);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 19:\n            _context.prev = 19;\n            _context.prev = 20;\n\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context.next = 24;\n              break;\n            }\n\n            _context.next = 24;\n            return _iterator.return();\n\n          case 24:\n            _context.prev = 24;\n\n            if (!_didIteratorError) {\n              _context.next = 27;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 27:\n            return _context.finish(24);\n\n          case 28:\n            return _context.finish(19);\n\n          case 29:\n            return _context.abrupt(\"return\", count);\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 15, 19, 29], [20,, 24, 28]]);\n  }));\n\n  return function length(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = length;","map":{"version":3,"names":["length","iterator","count","_","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/it-length/index.js"],"sourcesContent":["'use strict'\n\n/**\n * Consumes the passed iterator and returns the number of items it contained.\n *\n * @param {AsyncIterable<any> | Iterable<any>} iterator\n * @returns {Promise<number>}\n */\nconst length = async (iterator) => {\n  let count = 0\n\n  for await (const _ of iterator) { // eslint-disable-line no-unused-vars\n    count++\n  }\n\n  return count\n}\n\nmodule.exports = length\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AACA,IAAMA,MAAM;EAAA,sEAAG,iBAAOC,QAAP;IAAA;;IAAA;MAAA;QAAA;UAAA;YACTC,KADS,GACD,CADC;YAAA;YAAA;YAAA;YAAA,2BAGSD,QAHT;;UAAA;YAAA;YAAA;;UAAA;YAAA;cAAA;cAAA;YAAA;;YAGIE,CAHJ;YAGqB;YAChCD,KAAK;;UAJM;YAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;;YAAA;cAAA;cAAA;YAAA;;YAAA;YAAA;;UAAA;YAAA;;YAAA;cAAA;cAAA;YAAA;;YAAA;;UAAA;YAAA;;UAAA;YAAA;;UAAA;YAAA,iCAONA,KAPM;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAANF,MAAM;IAAA;EAAA;AAAA,GAAZ;;AAUAI,MAAM,CAACC,OAAP,GAAiBL,MAAjB"},"metadata":{},"sourceType":"script"}
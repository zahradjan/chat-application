{"ast":null,"code":"'use strict';\n/**\n * Stop iteration after n items have been received.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} limit\n * @returns {AsyncIterable<T>}\n */\n\nconst take = async function* (source, limit) {\n  let items = 0;\n\n  if (limit < 1) {\n    return;\n  }\n\n  for await (const entry of source) {\n    yield entry;\n    items++;\n\n    if (items === limit) {\n      return;\n    }\n  }\n};\n\nmodule.exports = take;","map":{"version":3,"names":["take","source","limit","items","entry","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/it-take/index.js"],"sourcesContent":["'use strict'\n\n/**\n * Stop iteration after n items have been received.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} limit\n * @returns {AsyncIterable<T>}\n */\nconst take = async function * (source, limit) {\n  let items = 0\n\n  if (limit < 1) {\n    return\n  }\n\n  for await (const entry of source) {\n    yield entry\n\n    items++\n\n    if (items === limit) {\n      return\n    }\n  }\n}\n\nmodule.exports = take\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,IAAI,GAAG,iBAAkBC,MAAlB,EAA0BC,KAA1B,EAAiC;EAC5C,IAAIC,KAAK,GAAG,CAAZ;;EAEA,IAAID,KAAK,GAAG,CAAZ,EAAe;IACb;EACD;;EAED,WAAW,MAAME,KAAjB,IAA0BH,MAA1B,EAAkC;IAChC,MAAMG,KAAN;IAEAD,KAAK;;IAEL,IAAIA,KAAK,KAAKD,KAAd,EAAqB;MACnB;IACD;EACF;AACF,CAhBD;;AAkBAG,MAAM,CAACC,OAAP,GAAiBN,IAAjB"},"metadata":{},"sourceType":"script"}
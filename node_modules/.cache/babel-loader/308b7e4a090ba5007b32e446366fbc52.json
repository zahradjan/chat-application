{"ast":null,"code":"import { makeAutoObservable, runInAction, toJS } from \"mobx\";\nimport { Message } from \"./Message.js\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nexport class ChatRoom {\n  constructor(ipfsNode, pubsub, orbitDb, roomName) {\n    this.ipfsNode = ipfsNode;\n    this.pubsub = pubsub;\n    this.orbitDb = orbitDb;\n    this.roomName = roomName;\n    this.textDecoder = new TextDecoder();\n    this.chatRoomMessages = [];\n    makeAutoObservable(this);\n  }\n\n  async init() {\n    await this.connectToChatRoom();\n    await this.loadMsgDb();\n    await this.setMessagesFromDb();\n  }\n\n  async loadMsgDb() {\n    this.chatMessagesDb = await this.orbitDb.feed(`${this.roomName}-messages`);\n    await this.chatMessagesDb.load();\n  }\n\n  async setMessagesFromDb() {\n    const entries = [];\n    const all = await toJS(this.chatMessagesDb.all);\n    all.map(e => entries.push(e.payload.value));\n    this.chatRoomMessages = entries;\n  }\n\n  async connectToChatRoom() {\n    runInAction(async () => {\n      await this.pubsub.unsubscribe(this.roomName, msg => console.log(msg));\n      await this.pubsub.subscribe(this.roomName, await this.echo.bind(this));\n    });\n  }\n\n  async sendMessageToChatRoom(msg) {\n    console.log(\"Msg in sending: \" + msg); //TODO:messages here\n    // const date = new Date(Date.now());\n    // const message = new Message(msg.from, msg, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from));\n    // const stringifyMessage = JSON.stringify(message);\n\n    runInAction(async () => {\n      await this.pubsub.publish(this.roomName, msg);\n    });\n  }\n\n  async loadFile(filesContent) {\n    // const file = {}\n    const result = await this.ipfsNode.add(filesContent);\n    console.log(result);\n    const ipfsFile = await this.ipfsNode.cat(result.path);\n\n    for await (const buf of ipfsFile) {\n      const blob = new Blob(buf);\n      console.log(blob);\n      const file = new FileReader().readAsArrayBuffer(blob); // do something with buf\n\n      console.log(file);\n    } // this.chatMessagesDb.add(result.path);\n    // this.chatRoomMessages.push(result.path);\n\n  }\n\n  async echo(msg) {\n    // console.log(typeof msg.data);\n    console.log(msg); //TODO: nevim proc ale kdyz je to zprava odeslana ze stejneho peeru tak je to string a jinak je to object\n\n    if (typeof msg.data === \"object\") msg.data = this.textDecoder.decode(msg.data);\n    const date = new Date(Date.now());\n    const message = new Message(msg.from, msg.data, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from));\n    console.log(msg.data); // const parsedMessage = JSON.parse(msg.data);\n    // console.log(parsedMessage);\n\n    this.chatMessagesDb.add(message);\n    this.chatRoomMessages.push(message);\n  }\n\n}","map":{"version":3,"names":["makeAutoObservable","runInAction","toJS","Message","AvatarGenerator","ChatRoom","constructor","ipfsNode","pubsub","orbitDb","roomName","textDecoder","TextDecoder","chatRoomMessages","init","connectToChatRoom","loadMsgDb","setMessagesFromDb","chatMessagesDb","feed","load","entries","all","map","e","push","payload","value","unsubscribe","msg","console","log","subscribe","echo","bind","sendMessageToChatRoom","publish","loadFile","filesContent","result","add","ipfsFile","cat","path","buf","blob","Blob","file","FileReader","readAsArrayBuffer","data","decode","date","Date","now","message","from","getHours","getMinutes","generateRandomAvatar"],"sources":["C:/Users/zajan/GitHub/chatApplication/src/data/models/Room.js"],"sourcesContent":["import { makeAutoObservable, runInAction, toJS } from \"mobx\";\r\nimport { Message } from \"./Message.js\";\r\nimport { AvatarGenerator } from \"random-avatar-generator\";\r\nexport class ChatRoom {\r\n  pubsub;\r\n  ipfsNode;\r\n  orbitDb;\r\n  roomName;\r\n  textDecoder;\r\n  chatMessagesDb;\r\n  chatRoomMessages;\r\n\r\n  constructor(ipfsNode, pubsub, orbitDb, roomName) {\r\n    this.ipfsNode = ipfsNode;\r\n    this.pubsub = pubsub;\r\n    this.orbitDb = orbitDb;\r\n    this.roomName = roomName;\r\n    this.textDecoder = new TextDecoder();\r\n    this.chatRoomMessages = [];\r\n    makeAutoObservable(this);\r\n  }\r\n  async init() {\r\n    await this.connectToChatRoom();\r\n    await this.loadMsgDb();\r\n    await this.setMessagesFromDb();\r\n  }\r\n\r\n  async loadMsgDb() {\r\n    this.chatMessagesDb = await this.orbitDb.feed(`${this.roomName}-messages`);\r\n    await this.chatMessagesDb.load();\r\n  }\r\n\r\n  async setMessagesFromDb() {\r\n    const entries = [];\r\n    const all = await toJS(this.chatMessagesDb.all);\r\n    all.map((e) => entries.push(e.payload.value));\r\n    this.chatRoomMessages = entries;\r\n  }\r\n\r\n  async connectToChatRoom() {\r\n    runInAction(async () => {\r\n      await this.pubsub.unsubscribe(this.roomName, (msg) => console.log(msg));\r\n      await this.pubsub.subscribe(this.roomName, await this.echo.bind(this));\r\n    });\r\n  }\r\n\r\n  async sendMessageToChatRoom(msg) {\r\n    console.log(\"Msg in sending: \" + msg);\r\n    //TODO:messages here\r\n    // const date = new Date(Date.now());\r\n    // const message = new Message(msg.from, msg, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from));\r\n    // const stringifyMessage = JSON.stringify(message);\r\n    runInAction(async () => {\r\n      await this.pubsub.publish(this.roomName, msg);\r\n    });\r\n  }\r\n\r\n  async loadFile(filesContent) {\r\n    // const file = {}\r\n    const result = await this.ipfsNode.add(filesContent);\r\n\r\n    console.log(result);\r\n    const ipfsFile = await this.ipfsNode.cat(result.path);\r\n    for await (const buf of ipfsFile) {\r\n      const blob = new Blob(buf);\r\n      console.log(blob);\r\n      const file = new FileReader().readAsArrayBuffer(blob);\r\n      // do something with buf\r\n      console.log(file);\r\n    }\r\n    // this.chatMessagesDb.add(result.path);\r\n    // this.chatRoomMessages.push(result.path);\r\n  }\r\n\r\n  async echo(msg) {\r\n    // console.log(typeof msg.data);\r\n    console.log(msg);\r\n    //TODO: nevim proc ale kdyz je to zprava odeslana ze stejneho peeru tak je to string a jinak je to object\r\n    if (typeof msg.data === \"object\") msg.data = this.textDecoder.decode(msg.data);\r\n    const date = new Date(Date.now());\r\n    const message = new Message(msg.from, msg.data, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from));\r\n\r\n    console.log(msg.data);\r\n\r\n    // const parsedMessage = JSON.parse(msg.data);\r\n    // console.log(parsedMessage);\r\n    this.chatMessagesDb.add(message);\r\n    this.chatRoomMessages.push(message);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar varint = require('varint');\n\nvar BufferList = require('bl/BufferList');\n\nvar POOL_SIZE = 10 * 1024;\n\nvar Encoder = /*#__PURE__*/function () {\n  function Encoder() {\n    _classCallCheck(this, Encoder);\n\n    this._pool = new Uint8Array(POOL_SIZE);\n    this._poolOffset = 0;\n  }\n  /**\n   * Encodes the given message and returns it and its header\n   *\n   * @param {*} msg - The message object to encode\n   * @returns {Uint8Array|Uint8Array[]}\n   */\n\n\n  _createClass(Encoder, [{\n    key: \"write\",\n    value: function write(msg) {\n      var pool = this._pool;\n      var offset = this._poolOffset;\n      varint.encode(msg.id << 3 | msg.type, pool, offset);\n      offset += varint.encode.bytes;\n      varint.encode(msg.data ? msg.data.length : 0, pool, offset);\n      offset += varint.encode.bytes;\n      var header = pool.subarray(this._poolOffset, offset);\n\n      if (POOL_SIZE - offset < 100) {\n        this._pool = new Uint8Array(POOL_SIZE);\n        this._poolOffset = 0;\n      } else {\n        this._poolOffset = offset;\n      }\n\n      if (!msg.data) return header;\n      return [header, msg.data];\n    }\n  }]);\n\n  return Encoder;\n}();\n\nvar encoder = new Encoder(); // Encode one or more messages and yield a BufferList of encoded messages\n\nmodule.exports = function (source) {\n  return function () {\n    var _encode = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, msg;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 2;\n              _iterator = _asyncIterator(source);\n\n            case 4:\n              _context.next = 6;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 6:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 18;\n                break;\n              }\n\n              msg = _step.value;\n\n              if (!Array.isArray(msg)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 11;\n              return new BufferList(msg.map(function (m) {\n                return encoder.write(m);\n              }));\n\n            case 11:\n              _context.next = 15;\n              break;\n\n            case 13:\n              _context.next = 15;\n              return new BufferList(encoder.write(msg));\n\n            case 15:\n              _iteratorAbruptCompletion = false;\n              _context.next = 4;\n              break;\n\n            case 18:\n              _context.next = 24;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](2);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 24:\n              _context.prev = 24;\n              _context.prev = 25;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 29;\n                break;\n              }\n\n              _context.next = 29;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 29:\n              _context.prev = 29;\n\n              if (!_didIteratorError) {\n                _context.next = 32;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 32:\n              return _context.finish(29);\n\n            case 33:\n              return _context.finish(24);\n\n            case 34:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 20, 24, 34], [25,, 29, 33]]);\n    }));\n\n    function encode() {\n      return _encode.apply(this, arguments);\n    }\n\n    return encode;\n  }()();\n};","map":{"version":3,"names":["varint","require","BufferList","POOL_SIZE","Encoder","_pool","Uint8Array","_poolOffset","msg","pool","offset","encode","id","type","bytes","data","length","header","subarray","encoder","module","exports","source","Array","isArray","map","m","write"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p-mplex/src/coder/encode.browser.js"],"sourcesContent":["'use strict'\n\nconst varint = require('varint')\nconst BufferList = require('bl/BufferList')\n\nconst POOL_SIZE = 10 * 1024\n\nclass Encoder {\n  constructor () {\n    this._pool = new Uint8Array(POOL_SIZE)\n    this._poolOffset = 0\n  }\n\n  /**\n   * Encodes the given message and returns it and its header\n   *\n   * @param {*} msg - The message object to encode\n   * @returns {Uint8Array|Uint8Array[]}\n   */\n  write (msg) {\n    const pool = this._pool\n    let offset = this._poolOffset\n\n    varint.encode(msg.id << 3 | msg.type, pool, offset)\n    offset += varint.encode.bytes\n    varint.encode(msg.data ? msg.data.length : 0, pool, offset)\n    offset += varint.encode.bytes\n\n    const header = pool.subarray(this._poolOffset, offset)\n\n    if (POOL_SIZE - offset < 100) {\n      this._pool = new Uint8Array(POOL_SIZE)\n      this._poolOffset = 0\n    } else {\n      this._poolOffset = offset\n    }\n\n    if (!msg.data) return header\n\n    return [header, msg.data]\n  }\n}\n\nconst encoder = new Encoder()\n\n// Encode one or more messages and yield a BufferList of encoded messages\nmodule.exports = source => (async function * encode () {\n  for await (const msg of source) {\n    if (Array.isArray(msg)) {\n      yield new BufferList(msg.map(m => encoder.write(m)))\n    } else {\n      yield new BufferList(encoder.write(msg))\n    }\n  }\n})()\n"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAME,SAAS,GAAG,KAAK,IAAvB;;IAEMC,O;EACJ,mBAAe;IAAA;;IACb,KAAKC,KAAL,GAAa,IAAIC,UAAJ,CAAeH,SAAf,CAAb;IACA,KAAKI,WAAL,GAAmB,CAAnB;EACD;EAED;AACF;AACA;AACA;AACA;AACA;;;;;WACE,eAAOC,GAAP,EAAY;MACV,IAAMC,IAAI,GAAG,KAAKJ,KAAlB;MACA,IAAIK,MAAM,GAAG,KAAKH,WAAlB;MAEAP,MAAM,CAACW,MAAP,CAAcH,GAAG,CAACI,EAAJ,IAAU,CAAV,GAAcJ,GAAG,CAACK,IAAhC,EAAsCJ,IAAtC,EAA4CC,MAA5C;MACAA,MAAM,IAAIV,MAAM,CAACW,MAAP,CAAcG,KAAxB;MACAd,MAAM,CAACW,MAAP,CAAcH,GAAG,CAACO,IAAJ,GAAWP,GAAG,CAACO,IAAJ,CAASC,MAApB,GAA6B,CAA3C,EAA8CP,IAA9C,EAAoDC,MAApD;MACAA,MAAM,IAAIV,MAAM,CAACW,MAAP,CAAcG,KAAxB;MAEA,IAAMG,MAAM,GAAGR,IAAI,CAACS,QAAL,CAAc,KAAKX,WAAnB,EAAgCG,MAAhC,CAAf;;MAEA,IAAIP,SAAS,GAAGO,MAAZ,GAAqB,GAAzB,EAA8B;QAC5B,KAAKL,KAAL,GAAa,IAAIC,UAAJ,CAAeH,SAAf,CAAb;QACA,KAAKI,WAAL,GAAmB,CAAnB;MACD,CAHD,MAGO;QACL,KAAKA,WAAL,GAAmBG,MAAnB;MACD;;MAED,IAAI,CAACF,GAAG,CAACO,IAAT,EAAe,OAAOE,MAAP;MAEf,OAAO,CAACA,MAAD,EAAST,GAAG,CAACO,IAAb,CAAP;IACD;;;;;;AAGH,IAAMI,OAAO,GAAG,IAAIf,OAAJ,EAAhB,C,CAEA;;AACAgB,MAAM,CAACC,OAAP,GAAiB,UAAAC,MAAM;EAAA,OAAI;IAAA,2EAAC;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA;cAAA,2BACFA,MADE;;YAAA;cAAA;cAAA;;YAAA;cAAA;gBAAA;gBAAA;cAAA;;cACTd,GADS;;cAAA,KAEpBe,KAAK,CAACC,OAAN,CAAchB,GAAd,CAFoB;gBAAA;gBAAA;cAAA;;cAAA;cAGtB,OAAM,IAAIN,UAAJ,CAAeM,GAAG,CAACiB,GAAJ,CAAQ,UAAAC,CAAC;gBAAA,OAAIP,OAAO,CAACQ,KAAR,CAAcD,CAAd,CAAJ;cAAA,CAAT,CAAf,CAAN;;YAHsB;cAAA;cAAA;;YAAA;cAAA;cAKtB,OAAM,IAAIxB,UAAJ,CAAeiB,OAAO,CAACQ,KAAR,CAAcnB,GAAd,CAAf,CAAN;;YALsB;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;cAAA;;YAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAAA;;YAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAD;;IAAA,SAAkBG,MAAlB;MAAA;IAAA;;IAAA,OAAkBA,MAAlB;EAAA,KAAJ;AAAA,CAAvB"},"metadata":{},"sourceType":"script"}
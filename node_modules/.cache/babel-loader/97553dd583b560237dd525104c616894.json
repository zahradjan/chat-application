{"ast":null,"code":"'use strict';\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('../../types').NetworkService} config.network\n */\n\n\nmodule.exports = _ref => {\n  let {\n    network\n  } = _ref;\n\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API[\"wantlist\"]}\n   */\n  async function wantlist() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      bitswap\n    } = await network.use(options);\n    const list = bitswap.getWantlist();\n    return Array.from(list).map(e => e[1].cid);\n  }\n\n  return withTimeoutOption(wantlist);\n};","map":{"version":3,"names":["withTimeoutOption","require","module","exports","network","wantlist","options","bitswap","use","list","getWantlist","Array","from","map","e","cid"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/bitswap/wantlist.js"],"sourcesContent":["'use strict'\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('../../types').NetworkService} config.network\n */\nmodule.exports = ({ network }) => {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API[\"wantlist\"]}\n   */\n  async function wantlist (options = {}) {\n    const { bitswap } = await network.use(options)\n    const list = bitswap.getWantlist()\n\n    return Array.from(list).map(e => e[1].cid)\n  }\n\n  return withTimeoutOption(wantlist)\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,QAAiB;EAAA,IAAhB;IAAEC;EAAF,CAAgB;;EAChC;AACF;AACA;EACE,eAAeC,QAAf,GAAuC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IACrC,MAAM;MAAEC;IAAF,IAAc,MAAMH,OAAO,CAACI,GAAR,CAAYF,OAAZ,CAA1B;IACA,MAAMG,IAAI,GAAGF,OAAO,CAACG,WAAR,EAAb;IAEA,OAAOC,KAAK,CAACC,IAAN,CAAWH,IAAX,EAAiBI,GAAjB,CAAqBC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,GAA/B,CAAP;EACD;;EAED,OAAOf,iBAAiB,CAACK,QAAD,CAAxB;AACD,CAZD"},"metadata":{},"sourceType":"script"}
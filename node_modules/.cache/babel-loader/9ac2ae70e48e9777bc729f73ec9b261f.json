{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.XXHandshake = void 0;\n\nvar buffer_1 = require(\"buffer\");\n\nvar xx_1 = require(\"./handshakes/xx\");\n\nvar utils_1 = require(\"./utils\");\n\nvar logger_1 = require(\"./logger\");\n\nvar encoder_1 = require(\"./encoder\");\n\nvar XXHandshake = /*#__PURE__*/function () {\n  function XXHandshake(isInitiator, payload, prologue, staticKeypair, connection, remotePeer, handshake) {\n    _classCallCheck(this, XXHandshake);\n\n    this.isInitiator = isInitiator;\n    this.payload = payload;\n    this.prologue = prologue;\n    this.staticKeypair = staticKeypair;\n    this.connection = connection;\n\n    if (remotePeer) {\n      this.remotePeer = remotePeer;\n    }\n\n    this.xx = handshake !== null && handshake !== void 0 ? handshake : new xx_1.XX();\n    this.session = this.xx.initSession(this.isInitiator, this.prologue, this.staticKeypair);\n    this.remoteEarlyData = buffer_1.Buffer.alloc(0);\n  } // stage 0\n\n\n  _createClass(XXHandshake, [{\n    key: \"propose\",\n    value: function () {\n      var _propose = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var messageBuffer, receivedMessageBuffer, _this$xx$recvMessage, valid;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                logger_1.logLocalStaticKeys(this.session.hs.s);\n\n                if (!this.isInitiator) {\n                  _context.next = 9;\n                  break;\n                }\n\n                logger_1.logger('Stage 0 - Initiator starting to send first message.');\n                messageBuffer = this.xx.sendMessage(this.session, buffer_1.Buffer.alloc(0));\n                this.connection.writeLP(encoder_1.encode0(messageBuffer));\n                logger_1.logger('Stage 0 - Initiator finished sending first message.');\n                logger_1.logLocalEphemeralKeys(this.session.hs.e);\n                _context.next = 20;\n                break;\n\n              case 9:\n                logger_1.logger('Stage 0 - Responder waiting to receive first message...');\n                _context.t0 = encoder_1;\n                _context.next = 13;\n                return this.connection.readLP();\n\n              case 13:\n                _context.t1 = _context.sent.slice();\n                receivedMessageBuffer = _context.t0.decode0.call(_context.t0, _context.t1);\n                _this$xx$recvMessage = this.xx.recvMessage(this.session, receivedMessageBuffer), valid = _this$xx$recvMessage.valid;\n\n                if (valid) {\n                  _context.next = 18;\n                  break;\n                }\n\n                throw new Error('xx handshake stage 0 validation fail');\n\n              case 18:\n                logger_1.logger('Stage 0 - Responder received first message.');\n                logger_1.logRemoteEphemeralKey(this.session.hs.re);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function propose() {\n        return _propose.apply(this, arguments);\n      }\n\n      return propose;\n    }() // stage 1\n\n  }, {\n    key: \"exchange\",\n    value: function () {\n      var _exchange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var receivedMessageBuffer, _this$xx$recvMessage2, plaintext, valid, decodedPayload, err, messageBuffer;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.isInitiator) {\n                  _context2.next = 37;\n                  break;\n                }\n\n                logger_1.logger('Stage 1 - Initiator waiting to receive first message from responder...');\n                _context2.t0 = encoder_1;\n                _context2.next = 5;\n                return this.connection.readLP();\n\n              case 5:\n                _context2.t1 = _context2.sent.slice();\n                receivedMessageBuffer = _context2.t0.decode1.call(_context2.t0, _context2.t1);\n                _this$xx$recvMessage2 = this.xx.recvMessage(this.session, receivedMessageBuffer), plaintext = _this$xx$recvMessage2.plaintext, valid = _this$xx$recvMessage2.valid;\n\n                if (valid) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                throw new Error('xx handshake stage 1 validation fail');\n\n              case 10:\n                logger_1.logger('Stage 1 - Initiator received the message.');\n                logger_1.logRemoteEphemeralKey(this.session.hs.re);\n                logger_1.logRemoteStaticKey(this.session.hs.rs);\n                logger_1.logger(\"Initiator going to check remote's signature...\");\n                _context2.prev = 14;\n                _context2.next = 17;\n                return utils_1.decodePayload(plaintext);\n\n              case 17:\n                decodedPayload = _context2.sent;\n                _context2.t2 = this.remotePeer;\n\n                if (_context2.t2) {\n                  _context2.next = 23;\n                  break;\n                }\n\n                _context2.next = 22;\n                return utils_1.getPeerIdFromPayload(decodedPayload);\n\n              case 22:\n                _context2.t2 = _context2.sent;\n\n              case 23:\n                this.remotePeer = _context2.t2;\n                _context2.next = 26;\n                return utils_1.verifySignedPayload(this.session.hs.rs, decodedPayload, this.remotePeer);\n\n              case 26:\n                this.remotePeer = _context2.sent;\n                this.setRemoteEarlyData(decodedPayload.data);\n                _context2.next = 34;\n                break;\n\n              case 30:\n                _context2.prev = 30;\n                _context2.t3 = _context2[\"catch\"](14);\n                err = _context2.t3;\n                throw new Error(\"Error occurred while verifying signed payload: \".concat(err.message));\n\n              case 34:\n                logger_1.logger('All good with the signature!');\n                _context2.next = 42;\n                break;\n\n              case 37:\n                logger_1.logger('Stage 1 - Responder sending out first message with signed payload and static key.');\n                messageBuffer = this.xx.sendMessage(this.session, this.payload);\n                this.connection.writeLP(encoder_1.encode1(messageBuffer));\n                logger_1.logger('Stage 1 - Responder sent the second handshake message with signed payload.');\n                logger_1.logLocalEphemeralKeys(this.session.hs.e);\n\n              case 42:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[14, 30]]);\n      }));\n\n      function exchange() {\n        return _exchange.apply(this, arguments);\n      }\n\n      return exchange;\n    }() // stage 2\n\n  }, {\n    key: \"finish\",\n    value: function () {\n      var _finish = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var messageBuffer, receivedMessageBuffer, _this$xx$recvMessage3, plaintext, valid, decodedPayload, err;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.isInitiator) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                logger_1.logger('Stage 2 - Initiator sending third handshake message.');\n                messageBuffer = this.xx.sendMessage(this.session, this.payload);\n                this.connection.writeLP(encoder_1.encode2(messageBuffer));\n                logger_1.logger('Stage 2 - Initiator sent message with signed payload.');\n                _context3.next = 36;\n                break;\n\n              case 7:\n                logger_1.logger('Stage 2 - Responder waiting for third handshake message...');\n                _context3.t0 = encoder_1;\n                _context3.next = 11;\n                return this.connection.readLP();\n\n              case 11:\n                _context3.t1 = _context3.sent.slice();\n                receivedMessageBuffer = _context3.t0.decode2.call(_context3.t0, _context3.t1);\n                _this$xx$recvMessage3 = this.xx.recvMessage(this.session, receivedMessageBuffer), plaintext = _this$xx$recvMessage3.plaintext, valid = _this$xx$recvMessage3.valid;\n\n                if (valid) {\n                  _context3.next = 16;\n                  break;\n                }\n\n                throw new Error('xx handshake stage 2 validation fail');\n\n              case 16:\n                logger_1.logger('Stage 2 - Responder received the message, finished handshake.');\n                _context3.prev = 17;\n                _context3.next = 20;\n                return utils_1.decodePayload(plaintext);\n\n              case 20:\n                decodedPayload = _context3.sent;\n                _context3.t2 = this.remotePeer;\n\n                if (_context3.t2) {\n                  _context3.next = 26;\n                  break;\n                }\n\n                _context3.next = 25;\n                return utils_1.getPeerIdFromPayload(decodedPayload);\n\n              case 25:\n                _context3.t2 = _context3.sent;\n\n              case 26:\n                this.remotePeer = _context3.t2;\n                _context3.next = 29;\n                return utils_1.verifySignedPayload(this.session.hs.rs, decodedPayload, this.remotePeer);\n\n              case 29:\n                this.setRemoteEarlyData(decodedPayload.data);\n                _context3.next = 36;\n                break;\n\n              case 32:\n                _context3.prev = 32;\n                _context3.t3 = _context3[\"catch\"](17);\n                err = _context3.t3;\n                throw new Error(\"Error occurred while verifying signed payload: \".concat(err.message));\n\n              case 36:\n                logger_1.logCipherState(this.session);\n\n              case 37:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[17, 32]]);\n      }));\n\n      function finish() {\n        return _finish.apply(this, arguments);\n      }\n\n      return finish;\n    }()\n  }, {\n    key: \"encrypt\",\n    value: function encrypt(plaintext, session) {\n      var cs = this.getCS(session);\n      return this.xx.encryptWithAd(cs, buffer_1.Buffer.alloc(0), plaintext);\n    }\n  }, {\n    key: \"decrypt\",\n    value: function decrypt(ciphertext, session) {\n      var cs = this.getCS(session, false);\n      return this.xx.decryptWithAd(cs, buffer_1.Buffer.alloc(0), ciphertext);\n    }\n  }, {\n    key: \"getRemoteStaticKey\",\n    value: function getRemoteStaticKey() {\n      return this.session.hs.rs;\n    }\n  }, {\n    key: \"getCS\",\n    value: function getCS(session) {\n      var encryption = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (!session.cs1 || !session.cs2) {\n        throw new Error('Handshake not completed properly, cipher state does not exist.');\n      }\n\n      if (this.isInitiator) {\n        return encryption ? session.cs1 : session.cs2;\n      } else {\n        return encryption ? session.cs2 : session.cs1;\n      }\n    }\n  }, {\n    key: \"setRemoteEarlyData\",\n    value: function setRemoteEarlyData(data) {\n      if (data) {\n        this.remoteEarlyData = buffer_1.Buffer.from(data.buffer, data.byteOffset, data.length);\n      }\n    }\n  }]);\n\n  return XXHandshake;\n}();\n\nexports.XXHandshake = XXHandshake;","map":{"version":3,"mappings":"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","names":["XXHandshake","isInitiator","payload","prologue","staticKeypair","connection","remotePeer","handshake","xx","xx_1","session","initSession","remoteEarlyData","buffer_1","alloc","logger_1","hs","s","messageBuffer","sendMessage","writeLP","encoder_1","e","readLP","slice","receivedMessageBuffer","decode0","recvMessage","valid","Error","re","decode1","plaintext","rs","utils_1","decodedPayload","setRemoteEarlyData","data","err","message","decode2","cs","getCS","encryptWithAd","ciphertext","decryptWithAd","encryption","cs1","cs2","from","buffer","byteOffset","length","exports"],"sourceRoot":"","sources":["../../src/handshake-xx.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}
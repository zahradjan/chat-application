{"ast":null,"code":"const {\n  Buffer\n} = require('buffer');\n\nconst BufferList = require('bl/BufferList');\n\nconst {\n  S_IFMT,\n  S_IFBLK,\n  S_IFCHR,\n  S_IFDIR,\n  S_IFIFO,\n  S_IFLNK\n} = require('iso-constants');\n\nconst concat = require('it-concat');\n\nconst Headers = require('./pack-headers');\n\nconst DMODE = parseInt('755', 8);\nconst FMODE = parseInt('644', 8);\nconst END_OF_TAR = Buffer.alloc(1024);\n\nfunction modeToType(mode) {\n  switch (mode & S_IFMT) {\n    case S_IFBLK:\n      return 'block-device';\n\n    case S_IFCHR:\n      return 'character-device';\n\n    case S_IFDIR:\n      return 'directory';\n\n    case S_IFIFO:\n      return 'fifo';\n\n    case S_IFLNK:\n      return 'symlink';\n  }\n\n  return 'file';\n}\n\nfunction getPadding(size) {\n  size &= 511;\n  if (size) return new BufferList(END_OF_TAR.slice(0, 512 - size));\n}\n\nfunction encode(header) {\n  if (!header.pax) {\n    const encoded = Headers.encode(header);\n    if (encoded) return encoded;\n  }\n\n  return encodePax(header);\n}\n\nfunction encodePax(header) {\n  const paxHeader = Headers.encodePax({\n    name: header.name,\n    linkname: header.linkname,\n    pax: header.pax\n  });\n  const newHeader = {\n    name: 'PaxHeader',\n    mode: header.mode,\n    uid: header.uid,\n    gid: header.gid,\n    size: paxHeader.length,\n    mtime: header.mtime,\n    type: 'pax-header',\n    linkname: header.linkname && 'PaxHeader',\n    uname: header.uname,\n    gname: header.gname,\n    devmajor: header.devmajor,\n    devminor: header.devminor\n  };\n  return new BufferList([Headers.encode(newHeader), paxHeader, getPadding(paxHeader.length), Headers.encode({ ...newHeader,\n    size: header.size,\n    type: header.type\n  })]);\n}\n\nmodule.exports = () => async function* (source) {\n  for await (let {\n    header,\n    body\n  } of source) {\n    if (!header.size || header.type === 'symlink') header.size = 0;\n    if (!header.type) header.type = modeToType(header.mode);\n    if (!header.mode) header.mode = header.type === 'directory' ? DMODE : FMODE;\n    if (!header.uid) header.uid = 0;\n    if (!header.gid) header.gid = 0;\n    if (!header.mtime) header.mtime = new Date();\n    if (typeof body === 'string') body = Buffer.from(body);\n\n    if (Buffer.isBuffer(body) || BufferList.isBufferList(body)) {\n      header.size = body.length;\n      yield new BufferList([encode(header), body, getPadding(header.size)]);\n      continue;\n    }\n\n    if (header.type === 'symlink' && !header.linkname) {\n      header.linkname = (await concat(body)).toString();\n      yield encode(header);\n      continue;\n    }\n\n    yield encode(header);\n\n    if (header.type !== 'file' && header.type !== 'contiguous-file') {\n      continue;\n    }\n\n    let written = 0;\n\n    for await (const chunk of body) {\n      written += chunk.length;\n      yield BufferList.isBufferList(chunk) ? chunk : new BufferList(chunk);\n    }\n\n    if (written !== header.size) {\n      // corrupting tar\n      throw new Error('size mismatch');\n    }\n\n    const overflow = getPadding(header.size);\n    if (overflow) yield overflow;\n  }\n\n  yield new BufferList(END_OF_TAR);\n};","map":{"version":3,"names":["Buffer","require","BufferList","S_IFMT","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","concat","Headers","DMODE","parseInt","FMODE","END_OF_TAR","alloc","modeToType","mode","getPadding","size","slice","encode","header","pax","encoded","encodePax","paxHeader","name","linkname","newHeader","uid","gid","length","mtime","type","uname","gname","devmajor","devminor","module","exports","source","body","Date","from","isBuffer","isBufferList","toString","written","chunk","Error","overflow"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/it-tar/pack.js"],"sourcesContent":["const { Buffer } = require('buffer')\nconst BufferList = require('bl/BufferList')\nconst { S_IFMT, S_IFBLK, S_IFCHR, S_IFDIR, S_IFIFO, S_IFLNK } = require('iso-constants')\nconst concat = require('it-concat')\nconst Headers = require('./pack-headers')\n\nconst DMODE = parseInt('755', 8)\nconst FMODE = parseInt('644', 8)\n\nconst END_OF_TAR = Buffer.alloc(1024)\n\nfunction modeToType (mode) {\n  switch (mode & S_IFMT) {\n    case S_IFBLK: return 'block-device'\n    case S_IFCHR: return 'character-device'\n    case S_IFDIR: return 'directory'\n    case S_IFIFO: return 'fifo'\n    case S_IFLNK: return 'symlink'\n  }\n  return 'file'\n}\n\nfunction getPadding (size) {\n  size &= 511\n  if (size) return new BufferList(END_OF_TAR.slice(0, 512 - size))\n}\n\nfunction encode (header) {\n  if (!header.pax) {\n    const encoded = Headers.encode(header)\n    if (encoded) return encoded\n  }\n  return encodePax(header)\n}\n\nfunction encodePax (header) {\n  const paxHeader = Headers.encodePax({\n    name: header.name,\n    linkname: header.linkname,\n    pax: header.pax\n  })\n\n  const newHeader = {\n    name: 'PaxHeader',\n    mode: header.mode,\n    uid: header.uid,\n    gid: header.gid,\n    size: paxHeader.length,\n    mtime: header.mtime,\n    type: 'pax-header',\n    linkname: header.linkname && 'PaxHeader',\n    uname: header.uname,\n    gname: header.gname,\n    devmajor: header.devmajor,\n    devminor: header.devminor\n  }\n\n  return new BufferList([\n    Headers.encode(newHeader),\n    paxHeader,\n    getPadding(paxHeader.length),\n    Headers.encode({ ...newHeader, size: header.size, type: header.type })\n  ])\n}\n\nmodule.exports = () => async function * (source) {\n  for await (let { header, body } of source) {\n    if (!header.size || header.type === 'symlink') header.size = 0\n    if (!header.type) header.type = modeToType(header.mode)\n    if (!header.mode) header.mode = header.type === 'directory' ? DMODE : FMODE\n    if (!header.uid) header.uid = 0\n    if (!header.gid) header.gid = 0\n    if (!header.mtime) header.mtime = new Date()\n\n    if (typeof body === 'string') body = Buffer.from(body)\n\n    if (Buffer.isBuffer(body) || BufferList.isBufferList(body)) {\n      header.size = body.length\n      yield new BufferList([encode(header), body, getPadding(header.size)])\n      continue\n    }\n\n    if (header.type === 'symlink' && !header.linkname) {\n      header.linkname = (await concat(body)).toString()\n      yield encode(header)\n      continue\n    }\n\n    yield encode(header)\n\n    if (header.type !== 'file' && header.type !== 'contiguous-file') {\n      continue\n    }\n\n    let written = 0\n    for await (const chunk of body) {\n      written += chunk.length\n      yield BufferList.isBufferList(chunk) ? chunk : new BufferList(chunk)\n    }\n\n    if (written !== header.size) { // corrupting tar\n      throw new Error('size mismatch')\n    }\n\n    const overflow = getPadding(header.size)\n    if (overflow) yield overflow\n  }\n\n  yield new BufferList(END_OF_TAR)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _require = require('multiformats/bases/base64'),\n    base64 = _require.base64;\n\nvar ciphers = require('../ciphers/aes-gcm');\n\nmodule.exports = {\n  /**\n   * Attempts to decrypt a base64 encoded PrivateKey string\n   * with the given password. The privateKey must have been exported\n   * using the same password and underlying cipher (aes-gcm)\n   *\n   * @param {string} privateKey - A base64 encoded encrypted key\n   * @param {string} password\n   * @returns {Promise<Uint8Array>} The private key protobuf\n   */\n  import: function () {\n    var _import2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(privateKey, password) {\n      var encryptedKey, cipher;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              encryptedKey = base64.decode(privateKey);\n              cipher = ciphers.create();\n              _context.next = 4;\n              return cipher.decrypt(encryptedKey, password);\n\n            case 4:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function _import(_x, _x2) {\n      return _import2.apply(this, arguments);\n    }\n\n    return _import;\n  }()\n};","map":{"version":3,"names":["require","base64","ciphers","module","exports","import","privateKey","password","encryptedKey","decode","cipher","create","decrypt"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p-delegated-content-routing/node_modules/libp2p-crypto/src/keys/importer.js"],"sourcesContent":["'use strict'\n\nconst { base64 } = require('multiformats/bases/base64')\nconst ciphers = require('../ciphers/aes-gcm')\n\nmodule.exports = {\n  /**\n   * Attempts to decrypt a base64 encoded PrivateKey string\n   * with the given password. The privateKey must have been exported\n   * using the same password and underlying cipher (aes-gcm)\n   *\n   * @param {string} privateKey - A base64 encoded encrypted key\n   * @param {string} password\n   * @returns {Promise<Uint8Array>} The private key protobuf\n   */\n  import: async function (privateKey, password) {\n    const encryptedKey = base64.decode(privateKey)\n    const cipher = ciphers.create()\n    return await cipher.decrypt(encryptedKey, password)\n  }\n}\n"],"mappings":"AAAA;;;;;;AAEA,eAAmBA,OAAO,CAAC,2BAAD,CAA1B;AAAA,IAAQC,MAAR,YAAQA,MAAR;;AACA,IAAMC,OAAO,GAAGF,OAAO,CAAC,oBAAD,CAAvB;;AAEAG,MAAM,CAACC,OAAP,GAAiB;EACf;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,MAAM;IAAA,0EAAE,iBAAgBC,UAAhB,EAA4BC,QAA5B;MAAA;MAAA;QAAA;UAAA;YAAA;cACAC,YADA,GACeP,MAAM,CAACQ,MAAP,CAAcH,UAAd,CADf;cAEAI,MAFA,GAESR,OAAO,CAACS,MAAR,EAFT;cAAA;cAAA,OAGOD,MAAM,CAACE,OAAP,CAAeJ,YAAf,EAA6BD,QAA7B,CAHP;;YAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAF;;IAAA;MAAA;IAAA;;IAAA;EAAA;AAVS,CAAjB"},"metadata":{},"sourceType":"script"}
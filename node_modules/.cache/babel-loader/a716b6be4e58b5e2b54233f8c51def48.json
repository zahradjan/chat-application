{"ast":null,"code":"'use strict';\n\nconst Wantlist = require('../types/wantlist');\n/**\n * @typedef {import('multiformats').CID} CID\n */\n\n\nclass Ledger {\n  /**\n   * @param {import('peer-id')} peerId\n   */\n  constructor(peerId) {\n    this.partner = peerId;\n    this.wantlist = new Wantlist();\n    this.exchangeCount = 0;\n    this.sentToPeer = new Map();\n    this.accounting = {\n      bytesSent: 0,\n      bytesRecv: 0\n    };\n  }\n  /**\n   * @param {number} n\n   */\n\n\n  sentBytes(n) {\n    this.exchangeCount++;\n    this.lastExchange = new Date().getTime();\n    this.accounting.bytesSent += n;\n  }\n  /**\n   * @param {number} n\n   */\n\n\n  receivedBytes(n) {\n    this.exchangeCount++;\n    this.lastExchange = new Date().getTime();\n    this.accounting.bytesRecv += n;\n  }\n  /**\n   *\n   * @param {CID} cid\n   * @param {number} priority\n   * @param {import('../types/message/message').Message.Wantlist.WantType} wantType\n   * @returns {void}\n   */\n\n\n  wants(cid, priority, wantType) {\n    this.wantlist.add(cid, priority, wantType);\n  }\n  /**\n   * @param {CID} cid\n   * @returns {void}\n   */\n\n\n  cancelWant(cid) {\n    this.wantlist.remove(cid);\n  }\n  /**\n   * @param {CID} cid\n   */\n\n\n  wantlistContains(cid) {\n    return this.wantlist.get(cid);\n  }\n  /**\n   * @returns {number}\n   */\n\n\n  debtRatio() {\n    return this.accounting.bytesSent / (this.accounting.bytesRecv + 1); // +1 is to prevent division by zero\n  }\n\n}\n\nmodule.exports = Ledger;","map":{"version":3,"names":["Wantlist","require","Ledger","constructor","peerId","partner","wantlist","exchangeCount","sentToPeer","Map","accounting","bytesSent","bytesRecv","sentBytes","n","lastExchange","Date","getTime","receivedBytes","wants","cid","priority","wantType","add","cancelWant","remove","wantlistContains","get","debtRatio","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-bitswap/src/decision-engine/ledger.js"],"sourcesContent":["'use strict'\n\nconst Wantlist = require('../types/wantlist')\n\n/**\n * @typedef {import('multiformats').CID} CID\n */\n\nclass Ledger {\n  /**\n   * @param {import('peer-id')} peerId\n   */\n  constructor (peerId) {\n    this.partner = peerId\n    this.wantlist = new Wantlist()\n\n    this.exchangeCount = 0\n    this.sentToPeer = new Map()\n\n    this.accounting = {\n      bytesSent: 0,\n      bytesRecv: 0\n    }\n  }\n\n  /**\n   * @param {number} n\n   */\n  sentBytes (n) {\n    this.exchangeCount++\n    this.lastExchange = (new Date()).getTime()\n    this.accounting.bytesSent += n\n  }\n\n  /**\n   * @param {number} n\n   */\n  receivedBytes (n) {\n    this.exchangeCount++\n    this.lastExchange = (new Date()).getTime()\n    this.accounting.bytesRecv += n\n  }\n\n  /**\n   *\n   * @param {CID} cid\n   * @param {number} priority\n   * @param {import('../types/message/message').Message.Wantlist.WantType} wantType\n   * @returns {void}\n   */\n  wants (cid, priority, wantType) {\n    this.wantlist.add(cid, priority, wantType)\n  }\n\n  /**\n   * @param {CID} cid\n   * @returns {void}\n   */\n\n  cancelWant (cid) {\n    this.wantlist.remove(cid)\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  wantlistContains (cid) {\n    return this.wantlist.get(cid)\n  }\n\n  /**\n   * @returns {number}\n   */\n  debtRatio () {\n    return (this.accounting.bytesSent / (this.accounting.bytesRecv + 1)) // +1 is to prevent division by zero\n  }\n}\n\nmodule.exports = Ledger\n"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,mBAAD,CAAxB;AAEA;AACA;AACA;;;AAEA,MAAMC,MAAN,CAAa;EACX;AACF;AACA;EACEC,WAAW,CAAEC,MAAF,EAAU;IACnB,KAAKC,OAAL,GAAeD,MAAf;IACA,KAAKE,QAAL,GAAgB,IAAIN,QAAJ,EAAhB;IAEA,KAAKO,aAAL,GAAqB,CAArB;IACA,KAAKC,UAAL,GAAkB,IAAIC,GAAJ,EAAlB;IAEA,KAAKC,UAAL,GAAkB;MAChBC,SAAS,EAAE,CADK;MAEhBC,SAAS,EAAE;IAFK,CAAlB;EAID;EAED;AACF;AACA;;;EACEC,SAAS,CAAEC,CAAF,EAAK;IACZ,KAAKP,aAAL;IACA,KAAKQ,YAAL,GAAqB,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAApB;IACA,KAAKP,UAAL,CAAgBC,SAAhB,IAA6BG,CAA7B;EACD;EAED;AACF;AACA;;;EACEI,aAAa,CAAEJ,CAAF,EAAK;IAChB,KAAKP,aAAL;IACA,KAAKQ,YAAL,GAAqB,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAApB;IACA,KAAKP,UAAL,CAAgBE,SAAhB,IAA6BE,CAA7B;EACD;EAED;AACF;AACA;AACA;AACA;AACA;AACA;;;EACEK,KAAK,CAAEC,GAAF,EAAOC,QAAP,EAAiBC,QAAjB,EAA2B;IAC9B,KAAKhB,QAAL,CAAciB,GAAd,CAAkBH,GAAlB,EAAuBC,QAAvB,EAAiCC,QAAjC;EACD;EAED;AACF;AACA;AACA;;;EAEEE,UAAU,CAAEJ,GAAF,EAAO;IACf,KAAKd,QAAL,CAAcmB,MAAd,CAAqBL,GAArB;EACD;EAED;AACF;AACA;;;EACEM,gBAAgB,CAAEN,GAAF,EAAO;IACrB,OAAO,KAAKd,QAAL,CAAcqB,GAAd,CAAkBP,GAAlB,CAAP;EACD;EAED;AACF;AACA;;;EACEQ,SAAS,GAAI;IACX,OAAQ,KAAKlB,UAAL,CAAgBC,SAAhB,IAA6B,KAAKD,UAAL,CAAgBE,SAAhB,GAA4B,CAAzD,CAAR,CADW,CAC0D;EACtE;;AAnEU;;AAsEbiB,MAAM,CAACC,OAAP,GAAiB5B,MAAjB"},"metadata":{},"sourceType":"script"}
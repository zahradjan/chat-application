{"ast":null,"code":"'use strict';\n/* eslint-env browser */\n\nvar _slicedToArray = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _assertThisInitialized = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _inherits = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _require = require('multiaddr'),\n    Multiaddr = _require.Multiaddr;\n\nvar _require2 = require('ipfs-utils/src/env'),\n    isBrowser = _require2.isBrowser,\n    isWebWorker = _require2.isWebWorker,\n    isNode = _require2.isNode;\n\nvar _require3 = require('parse-duration'),\n    parseDuration = _require3.default;\n\nvar log = require('debug')('ipfs-http-client:lib:error-handler');\n\nvar HTTP = require('ipfs-utils/src/http');\n\nvar merge = require('merge-options').bind({\n  ignoreUndefined: true\n});\n\nvar toUrlString = require('ipfs-core-utils/src/to-url-string');\n\nvar http = require('http');\n\nvar https = require('https');\n\nvar DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http';\nvar DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost';\nvar DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001';\n/**\n * @typedef {import('ipfs-utils/src/types').HTTPOptions} HTTPOptions\n * @typedef {import('../types').Options} Options\n */\n\n/**\n * @param {Options|URL|Multiaddr|string} [options]\n * @returns {Options}\n */\n\nvar normalizeOptions = function normalizeOptions() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var url;\n  /** @type {Options} */\n\n  var opts = {};\n  var agent;\n\n  if (typeof options === 'string' || Multiaddr.isMultiaddr(options)) {\n    url = new URL(toUrlString(options));\n  } else if (options instanceof URL) {\n    url = options;\n  } else if (typeof options.url === 'string' || Multiaddr.isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url));\n    opts = options;\n  } else if (options.url instanceof URL) {\n    url = options.url;\n    opts = options;\n  } else {\n    opts = options || {};\n    var protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '');\n    var host = (opts.host || DEFAULT_HOST).split(':')[0];\n    var port = opts.port || DEFAULT_PORT;\n    url = new URL(\"\".concat(protocol, \"://\").concat(host, \":\").concat(port));\n  }\n\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath;\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0';\n  }\n\n  if (isNode) {\n    var Agent = url.protocol.startsWith('https') ? https.Agent : http.Agent;\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      // Similar to browsers which limit connections to six per host\n      maxSockets: 6\n    });\n  }\n\n  return _objectSpread(_objectSpread({}, opts), {}, {\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url: url,\n    agent: agent\n  });\n};\n/**\n * @param {Response} response\n */\n\n\nvar errorHandler = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(response) {\n    var msg, data, error;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(response.headers.get('Content-Type') || '').startsWith('application/json')) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 4;\n            return response.json();\n\n          case 4:\n            data = _context.sent;\n            log(data);\n            msg = data.Message || data.message;\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.next = 11;\n            return response.text();\n\n          case 11:\n            msg = _context.sent;\n\n          case 12:\n            _context.next = 18;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            log('Failed to parse error response', _context.t0); // Failed to extract/parse error message from response\n\n            msg = _context.t0.message;\n\n          case 18:\n            /** @type {Error} */\n            error = new HTTP.HTTPError(response);\n\n            if (msg) {\n              // This is what rs-ipfs returns where there's a timeout\n              if (msg.includes('deadline has elapsed')) {\n                error = new HTTP.TimeoutError();\n              } // This is what go-ipfs returns where there's a timeout\n\n\n              if (msg && msg.includes('context deadline exceeded')) {\n                error = new HTTP.TimeoutError();\n              }\n            } // This also gets returned\n\n\n            if (msg && msg.includes('request timed out')) {\n              error = new HTTP.TimeoutError();\n            } // If we managed to extract a message from the response, use it\n\n\n            if (msg) {\n              error.message = msg;\n            }\n\n            throw error;\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 14]]);\n  }));\n\n  return function errorHandler(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g;\n/**\n * @param {string} str\n */\n\nvar kebabCase = function kebabCase(str) {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase();\n  });\n};\n/**\n * @param {string | number} value\n */\n\n\nvar parseTimeout = function parseTimeout(value) {\n  return typeof value === 'string' ? parseDuration(value) : value;\n};\n\nvar Client = /*#__PURE__*/function (_HTTP) {\n  _inherits(Client, _HTTP);\n\n  var _super = _createSuper(Client);\n\n  /**\n   * @param {Options|URL|Multiaddr|string} [options]\n   */\n  function Client() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Client);\n\n    var opts = normalizeOptions(options);\n    _this = _super.call(this, {\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: \"\".concat(opts.url),\n      handleError: errorHandler,\n      transformSearchParams: function transformSearchParams(search) {\n        var out = new URLSearchParams(); // @ts-ignore https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams\n\n        var _iterator = _createForOfIteratorHelper(search),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _step$value = _slicedToArray(_step.value, 2),\n                key = _step$value[0],\n                value = _step$value[1];\n\n            if (value !== 'undefined' && value !== 'null' && key !== 'signal') {\n              out.append(kebabCase(key), value);\n            } // @ts-ignore server timeouts are strings\n\n\n            if (key === 'timeout' && !isNaN(value)) {\n              out.append(kebabCase(key), value);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        return out;\n      },\n      // @ts-ignore this can be a https agent or a http agent\n      agent: opts.agent\n    }); // @ts-ignore - cannot delete no-optional fields\n\n    delete _this.get; // @ts-ignore - cannot delete no-optional fields\n\n    delete _this.put; // @ts-ignore - cannot delete no-optional fields\n\n    delete _this.delete; // @ts-ignore - cannot delete no-optional fields\n\n    delete _this.options;\n    var fetch = _this.fetch;\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n\n    _this.fetch = function (resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = \"\".concat(opts.url, \"/\").concat(resource);\n      }\n\n      return fetch.call(_assertThisInitialized(_this), resource, merge(options, {\n        method: 'POST'\n      }));\n    };\n\n    return _this;\n  }\n\n  return _createClass(Client);\n}(HTTP);\n\nClient.errorHandler = errorHandler;\nmodule.exports = Client;","map":{"version":3,"names":["require","Multiaddr","isBrowser","isWebWorker","isNode","parseDuration","default","log","HTTP","merge","bind","ignoreUndefined","toUrlString","http","https","DEFAULT_PROTOCOL","location","protocol","DEFAULT_HOST","hostname","DEFAULT_PORT","port","normalizeOptions","options","url","opts","agent","isMultiaddr","URL","replace","host","split","apiPath","pathname","undefined","Agent","startsWith","keepAlive","maxSockets","Number","errorHandler","response","headers","get","json","data","msg","Message","message","text","error","HTTPError","includes","TimeoutError","KEBAB_REGEX","kebabCase","str","match","toLowerCase","parseTimeout","value","Client","timeout","base","handleError","transformSearchParams","search","out","URLSearchParams","key","append","isNaN","put","delete","fetch","resource","call","method","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/lib/core.js"],"sourcesContent":["'use strict'\n/* eslint-env browser */\nconst { Multiaddr } = require('multiaddr')\nconst { isBrowser, isWebWorker, isNode } = require('ipfs-utils/src/env')\nconst { default: parseDuration } = require('parse-duration')\nconst log = require('debug')('ipfs-http-client:lib:error-handler')\nconst HTTP = require('ipfs-utils/src/http')\nconst merge = require('merge-options').bind({ ignoreUndefined: true })\nconst toUrlString = require('ipfs-core-utils/src/to-url-string')\nconst http = require('http')\nconst https = require('https')\n\nconst DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http'\nconst DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost'\nconst DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001'\n\n/**\n * @typedef {import('ipfs-utils/src/types').HTTPOptions} HTTPOptions\n * @typedef {import('../types').Options} Options\n */\n\n/**\n * @param {Options|URL|Multiaddr|string} [options]\n * @returns {Options}\n */\nconst normalizeOptions = (options = {}) => {\n  let url\n  /** @type {Options} */\n  let opts = {}\n  let agent\n\n  if (typeof options === 'string' || Multiaddr.isMultiaddr(options)) {\n    url = new URL(toUrlString(options))\n  } else if (options instanceof URL) {\n    url = options\n  } else if (typeof options.url === 'string' || Multiaddr.isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url))\n    opts = options\n  } else if (options.url instanceof URL) {\n    url = options.url\n    opts = options\n  } else {\n    opts = options || {}\n\n    const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '')\n    const host = (opts.host || DEFAULT_HOST).split(':')[0]\n    const port = (opts.port || DEFAULT_PORT)\n\n    url = new URL(`${protocol}://${host}:${port}`)\n  }\n\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0'\n  }\n\n  if (isNode) {\n    const Agent = url.protocol.startsWith('https') ? https.Agent : http.Agent\n\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      // Similar to browsers which limit connections to six per host\n      maxSockets: 6\n    })\n  }\n\n  return {\n    ...opts,\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url,\n    agent\n  }\n}\n\n/**\n * @param {Response} response\n */\nconst errorHandler = async (response) => {\n  let msg\n\n  try {\n    if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {\n      const data = await response.json()\n      log(data)\n      msg = data.Message || data.message\n    } else {\n      msg = await response.text()\n    }\n  } catch (err) {\n    log('Failed to parse error response', err)\n    // Failed to extract/parse error message from response\n    msg = err.message\n  }\n\n  /** @type {Error} */\n  let error = new HTTP.HTTPError(response)\n\n  if (msg) {\n    // This is what rs-ipfs returns where there's a timeout\n    if (msg.includes('deadline has elapsed')) {\n      error = new HTTP.TimeoutError()\n    }\n\n    // This is what go-ipfs returns where there's a timeout\n    if (msg && msg.includes('context deadline exceeded')) {\n      error = new HTTP.TimeoutError()\n    }\n  }\n\n  // This also gets returned\n  if (msg && msg.includes('request timed out')) {\n    error = new HTTP.TimeoutError()\n  }\n\n  // If we managed to extract a message from the response, use it\n  if (msg) {\n    error.message = msg\n  }\n\n  throw error\n}\n\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g\n\n/**\n * @param {string} str\n */\nconst kebabCase = (str) => {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase()\n  })\n}\n\n/**\n * @param {string | number} value\n */\nconst parseTimeout = (value) => {\n  return typeof value === 'string' ? parseDuration(value) : value\n}\n\nclass Client extends HTTP {\n  /**\n   * @param {Options|URL|Multiaddr|string} [options]\n   */\n  constructor (options = {}) {\n    const opts = normalizeOptions(options)\n\n    super({\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: `${opts.url}`,\n      handleError: errorHandler,\n      transformSearchParams: (search) => {\n        const out = new URLSearchParams()\n\n        // @ts-ignore https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams\n        for (const [key, value] of search) {\n          if (\n            value !== 'undefined' &&\n            value !== 'null' &&\n            key !== 'signal'\n          ) {\n            out.append(kebabCase(key), value)\n          }\n\n          // @ts-ignore server timeouts are strings\n          if (key === 'timeout' && !isNaN(value)) {\n            out.append(kebabCase(key), value)\n          }\n        }\n\n        return out\n      },\n      // @ts-ignore this can be a https agent or a http agent\n      agent: opts.agent\n    })\n\n    // @ts-ignore - cannot delete no-optional fields\n    delete this.get\n    // @ts-ignore - cannot delete no-optional fields\n    delete this.put\n    // @ts-ignore - cannot delete no-optional fields\n    delete this.delete\n    // @ts-ignore - cannot delete no-optional fields\n    delete this.options\n\n    const fetch = this.fetch\n\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n    this.fetch = (resource, options = {}) => {\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = `${opts.url}/${resource}`\n      }\n\n      return fetch.call(this, resource, merge(options, {\n        method: 'POST'\n      }))\n    }\n  }\n}\n\nClient.errorHandler = errorHandler\n\nmodule.exports = Client\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
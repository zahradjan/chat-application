{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IK = void 0;\n\nconst buffer_1 = require(\"buffer\");\n\nconst utils_1 = require(\"../utils\");\n\nconst abstract_handshake_1 = require(\"./abstract-handshake\");\n\nclass IK extends abstract_handshake_1.AbstractHandshake {\n  initSession(initiator, prologue, s, rs) {\n    const psk = this.createEmptyKey();\n    let hs;\n\n    if (initiator) {\n      hs = this.initializeInitiator(prologue, s, rs, psk);\n    } else {\n      hs = this.initializeResponder(prologue, s, rs, psk);\n    }\n\n    return {\n      hs,\n      i: initiator,\n      mc: 0\n    };\n  }\n\n  sendMessage(session, message) {\n    let messageBuffer;\n\n    if (session.mc === 0) {\n      messageBuffer = this.writeMessageA(session.hs, message);\n    } else if (session.mc === 1) {\n      const {\n        messageBuffer: mb,\n        h,\n        cs1,\n        cs2\n      } = this.writeMessageB(session.hs, message);\n      messageBuffer = mb;\n      session.h = h;\n      session.cs1 = cs1;\n      session.cs2 = cs2;\n    } else if (session.mc > 1) {\n      if (session.i) {\n        if (!session.cs1) {\n          throw new Error('CS1 (cipher state) is not defined');\n        }\n\n        messageBuffer = this.writeMessageRegular(session.cs1, message);\n      } else {\n        if (!session.cs2) {\n          throw new Error('CS2 (cipher state) is not defined');\n        }\n\n        messageBuffer = this.writeMessageRegular(session.cs2, message);\n      }\n    } else {\n      throw new Error('Session invalid.');\n    }\n\n    session.mc++;\n    return messageBuffer;\n  }\n\n  recvMessage(session, message) {\n    let plaintext = buffer_1.Buffer.alloc(0);\n    let valid = false;\n\n    if (session.mc === 0) {\n      ({\n        plaintext,\n        valid\n      } = this.readMessageA(session.hs, message));\n    }\n\n    if (session.mc === 1) {\n      const {\n        plaintext: pt,\n        valid: v,\n        h,\n        cs1,\n        cs2\n      } = this.readMessageB(session.hs, message);\n      plaintext = pt;\n      valid = v;\n      session.h = h;\n      session.cs1 = cs1;\n      session.cs2 = cs2;\n    }\n\n    session.mc++;\n    return {\n      plaintext,\n      valid\n    };\n  }\n\n  writeMessageA(hs, payload) {\n    hs.e = utils_1.generateKeypair();\n    const ne = hs.e.publicKey;\n    this.mixHash(hs.ss, ne);\n    this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.rs));\n    const spk = buffer_1.Buffer.from(hs.s.publicKey);\n    const ns = this.encryptAndHash(hs.ss, spk);\n    this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.rs));\n    const ciphertext = this.encryptAndHash(hs.ss, payload);\n    return {\n      ne,\n      ns,\n      ciphertext\n    };\n  }\n\n  writeMessageB(hs, payload) {\n    hs.e = utils_1.generateKeypair();\n    const ne = hs.e.publicKey;\n    this.mixHash(hs.ss, ne);\n    this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.re));\n    this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.rs));\n    const ciphertext = this.encryptAndHash(hs.ss, payload);\n    const ns = this.createEmptyKey();\n    const messageBuffer = {\n      ne,\n      ns,\n      ciphertext\n    };\n    const {\n      cs1,\n      cs2\n    } = this.split(hs.ss);\n    return {\n      messageBuffer,\n      cs1,\n      cs2,\n      h: hs.ss.h\n    };\n  }\n\n  readMessageA(hs, message) {\n    if (utils_1.isValidPublicKey(message.ne)) {\n      hs.re = message.ne;\n    }\n\n    this.mixHash(hs.ss, hs.re);\n    this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.re));\n    const {\n      plaintext: ns,\n      valid: valid1\n    } = this.decryptAndHash(hs.ss, message.ns);\n\n    if (valid1 && ns.length === 32 && utils_1.isValidPublicKey(ns)) {\n      hs.rs = ns;\n    }\n\n    this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.rs));\n    const {\n      plaintext,\n      valid: valid2\n    } = this.decryptAndHash(hs.ss, message.ciphertext);\n    return {\n      plaintext,\n      valid: valid1 && valid2\n    };\n  }\n\n  readMessageB(hs, message) {\n    if (utils_1.isValidPublicKey(message.ne)) {\n      hs.re = message.ne;\n    }\n\n    this.mixHash(hs.ss, hs.re);\n\n    if (!hs.e) {\n      throw new Error('Handshake state should contain ephemeral key by now.');\n    }\n\n    this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.re));\n    this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.re));\n    const {\n      plaintext,\n      valid\n    } = this.decryptAndHash(hs.ss, message.ciphertext);\n    const {\n      cs1,\n      cs2\n    } = this.split(hs.ss);\n    return {\n      h: hs.ss.h,\n      valid,\n      plaintext,\n      cs1,\n      cs2\n    };\n  }\n\n  initializeInitiator(prologue, s, rs, psk) {\n    const name = 'Noise_IK_25519_ChaChaPoly_SHA256';\n    const ss = this.initializeSymmetric(name);\n    this.mixHash(ss, prologue);\n    this.mixHash(ss, rs);\n    const re = buffer_1.Buffer.alloc(32);\n    return {\n      ss,\n      s,\n      rs,\n      re,\n      psk\n    };\n  }\n\n  initializeResponder(prologue, s, rs, psk) {\n    const name = 'Noise_IK_25519_ChaChaPoly_SHA256';\n    const ss = this.initializeSymmetric(name);\n    this.mixHash(ss, prologue);\n    this.mixHash(ss, s.publicKey);\n    const re = buffer_1.Buffer.alloc(32);\n    return {\n      ss,\n      s,\n      rs,\n      re,\n      psk\n    };\n  }\n\n}\n\nexports.IK = IK;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAGA;;AACA;;AAGA,MAAaA,EAAb,SAAwBC,sCAAxB,CAAyC;EAChCC,WAAW,CAAEC,SAAF,EAAsBC,QAAtB,EAAyCC,CAAzC,EAAqDC,EAArD,EAAgE;IAChF,MAAMC,GAAG,GAAG,KAAKC,cAAL,EAAZ;IAEA,IAAIC,EAAJ;;IACA,IAAIN,SAAJ,EAAe;MACbM,EAAE,GAAG,KAAKC,mBAAL,CAAyBN,QAAzB,EAAmCC,CAAnC,EAAsCC,EAAtC,EAA0CC,GAA1C,CAAL;IACD,CAFD,MAEO;MACLE,EAAE,GAAG,KAAKE,mBAAL,CAAyBP,QAAzB,EAAmCC,CAAnC,EAAsCC,EAAtC,EAA0CC,GAA1C,CAAL;IACD;;IAED,OAAO;MACLE,EADK;MAELG,CAAC,EAAET,SAFE;MAGLU,EAAE,EAAE;IAHC,CAAP;EAKD;;EAEMC,WAAW,CAAEC,OAAF,EAAyBC,OAAzB,EAAuC;IACvD,IAAIC,aAAJ;;IACA,IAAIF,OAAO,CAACF,EAAR,KAAe,CAAnB,EAAsB;MACpBI,aAAa,GAAG,KAAKC,aAAL,CAAmBH,OAAO,CAACN,EAA3B,EAA+BO,OAA/B,CAAhB;IACD,CAFD,MAEO,IAAID,OAAO,CAACF,EAAR,KAAe,CAAnB,EAAsB;MAC3B,MAAM;QAAEI,aAAa,EAAEE,EAAjB;QAAqBC,CAArB;QAAwBC,GAAxB;QAA6BC;MAA7B,IAAqC,KAAKC,aAAL,CAAmBR,OAAO,CAACN,EAA3B,EAA+BO,OAA/B,CAA3C;MACAC,aAAa,GAAGE,EAAhB;MACAJ,OAAO,CAACK,CAAR,GAAYA,CAAZ;MACAL,OAAO,CAACM,GAAR,GAAcA,GAAd;MACAN,OAAO,CAACO,GAAR,GAAcA,GAAd;IACD,CANM,MAMA,IAAIP,OAAO,CAACF,EAAR,GAAa,CAAjB,EAAoB;MACzB,IAAIE,OAAO,CAACH,CAAZ,EAAe;QACb,IAAI,CAACG,OAAO,CAACM,GAAb,EAAkB;UAChB,MAAM,IAAIG,KAAJ,CAAU,mCAAV,CAAN;QACD;;QAEDP,aAAa,GAAG,KAAKQ,mBAAL,CAAyBV,OAAO,CAACM,GAAjC,EAAsCL,OAAtC,CAAhB;MACD,CAND,MAMO;QACL,IAAI,CAACD,OAAO,CAACO,GAAb,EAAkB;UAChB,MAAM,IAAIE,KAAJ,CAAU,mCAAV,CAAN;QACD;;QAEDP,aAAa,GAAG,KAAKQ,mBAAL,CAAyBV,OAAO,CAACO,GAAjC,EAAsCN,OAAtC,CAAhB;MACD;IACF,CAdM,MAcA;MACL,MAAM,IAAIQ,KAAJ,CAAU,kBAAV,CAAN;IACD;;IAEDT,OAAO,CAACF,EAAR;IACA,OAAOI,aAAP;EACD;;EAEMS,WAAW,CAAEX,OAAF,EAAyBC,OAAzB,EAA+C;IAC/D,IAAIW,SAAS,GAAGC,gBAAOC,KAAP,CAAa,CAAb,CAAhB;IAAiC,IAAIC,KAAK,GAAG,KAAZ;;IACjC,IAAIf,OAAO,CAACF,EAAR,KAAe,CAAnB,EAAsB;MACpB,CAAC;QAAEc,SAAF;QAAaG;MAAb,IAAuB,KAAKC,YAAL,CAAkBhB,OAAO,CAACN,EAA1B,EAA8BO,OAA9B,CAAxB;IACD;;IACD,IAAID,OAAO,CAACF,EAAR,KAAe,CAAnB,EAAsB;MACpB,MAAM;QAAEc,SAAS,EAAEK,EAAb;QAAiBF,KAAK,EAAEG,CAAxB;QAA2Bb,CAA3B;QAA8BC,GAA9B;QAAmCC;MAAnC,IAA2C,KAAKY,YAAL,CAAkBnB,OAAO,CAACN,EAA1B,EAA8BO,OAA9B,CAAjD;MACAW,SAAS,GAAGK,EAAZ;MACAF,KAAK,GAAGG,CAAR;MACAlB,OAAO,CAACK,CAAR,GAAYA,CAAZ;MACAL,OAAO,CAACM,GAAR,GAAcA,GAAd;MACAN,OAAO,CAACO,GAAR,GAAcA,GAAd;IACD;;IACDP,OAAO,CAACF,EAAR;IACA,OAAO;MAAEc,SAAF;MAAaG;IAAb,CAAP;EACD;;EAEOZ,aAAa,CAAET,EAAF,EAAsB0B,OAAtB,EAAoC;IACvD1B,EAAE,CAAC2B,CAAH,GAAOC,yBAAP;IACA,MAAMC,EAAE,GAAG7B,EAAE,CAAC2B,CAAH,CAAKG,SAAhB;IACA,KAAKC,OAAL,CAAa/B,EAAE,CAACgC,EAAhB,EAAoBH,EAApB;IACA,KAAKI,MAAL,CAAYjC,EAAE,CAACgC,EAAf,EAAmB,KAAKE,EAAL,CAAQlC,EAAE,CAAC2B,CAAH,CAAKQ,UAAb,EAAyBnC,EAAE,CAACH,EAA5B,CAAnB;IACA,MAAMuC,GAAG,GAAGjB,gBAAOkB,IAAP,CAAYrC,EAAE,CAACJ,CAAH,CAAKkC,SAAjB,CAAZ;IACA,MAAMQ,EAAE,GAAG,KAAKC,cAAL,CAAoBvC,EAAE,CAACgC,EAAvB,EAA2BI,GAA3B,CAAX;IAEA,KAAKH,MAAL,CAAYjC,EAAE,CAACgC,EAAf,EAAmB,KAAKE,EAAL,CAAQlC,EAAE,CAACJ,CAAH,CAAKuC,UAAb,EAAyBnC,EAAE,CAACH,EAA5B,CAAnB;IACA,MAAM2C,UAAU,GAAG,KAAKD,cAAL,CAAoBvC,EAAE,CAACgC,EAAvB,EAA2BN,OAA3B,CAAnB;IAEA,OAAO;MAAEG,EAAF;MAAMS,EAAN;MAAUE;IAAV,CAAP;EACD;;EAEO1B,aAAa,CAAEd,EAAF,EAAsB0B,OAAtB,EAAoC;IACvD1B,EAAE,CAAC2B,CAAH,GAAOC,yBAAP;IACA,MAAMC,EAAE,GAAG7B,EAAE,CAAC2B,CAAH,CAAKG,SAAhB;IACA,KAAKC,OAAL,CAAa/B,EAAE,CAACgC,EAAhB,EAAoBH,EAApB;IAEA,KAAKI,MAAL,CAAYjC,EAAE,CAACgC,EAAf,EAAmB,KAAKE,EAAL,CAAQlC,EAAE,CAAC2B,CAAH,CAAKQ,UAAb,EAAyBnC,EAAE,CAACyC,EAA5B,CAAnB;IACA,KAAKR,MAAL,CAAYjC,EAAE,CAACgC,EAAf,EAAmB,KAAKE,EAAL,CAAQlC,EAAE,CAAC2B,CAAH,CAAKQ,UAAb,EAAyBnC,EAAE,CAACH,EAA5B,CAAnB;IACA,MAAM2C,UAAU,GAAG,KAAKD,cAAL,CAAoBvC,EAAE,CAACgC,EAAvB,EAA2BN,OAA3B,CAAnB;IACA,MAAMY,EAAE,GAAG,KAAKvC,cAAL,EAAX;IACA,MAAMS,aAAa,GAAkB;MAAEqB,EAAF;MAAMS,EAAN;MAAUE;IAAV,CAArC;IACA,MAAM;MAAE5B,GAAF;MAAOC;IAAP,IAAe,KAAK6B,KAAL,CAAW1C,EAAE,CAACgC,EAAd,CAArB;IAEA,OAAO;MAAExB,aAAF;MAAiBI,GAAjB;MAAsBC,GAAtB;MAA2BF,CAAC,EAAEX,EAAE,CAACgC,EAAH,CAAMrB;IAApC,CAAP;EACD;;EAEOW,YAAY,CAAEtB,EAAF,EAAsBO,OAAtB,EAA4C;IAC9D,IAAIqB,yBAAiBrB,OAAO,CAACsB,EAAzB,CAAJ,EAAkC;MAChC7B,EAAE,CAACyC,EAAH,GAAQlC,OAAO,CAACsB,EAAhB;IACD;;IAED,KAAKE,OAAL,CAAa/B,EAAE,CAACgC,EAAhB,EAAoBhC,EAAE,CAACyC,EAAvB;IACA,KAAKR,MAAL,CAAYjC,EAAE,CAACgC,EAAf,EAAmB,KAAKE,EAAL,CAAQlC,EAAE,CAACJ,CAAH,CAAKuC,UAAb,EAAyBnC,EAAE,CAACyC,EAA5B,CAAnB;IACA,MAAM;MAAEvB,SAAS,EAAEoB,EAAb;MAAiBjB,KAAK,EAAEsB;IAAxB,IAAmC,KAAKC,cAAL,CAAoB5C,EAAE,CAACgC,EAAvB,EAA2BzB,OAAO,CAAC+B,EAAnC,CAAzC;;IACA,IAAIK,MAAM,IAAIL,EAAE,CAACO,MAAH,KAAc,EAAxB,IAA8BjB,yBAAiBU,EAAjB,CAAlC,EAAwD;MACtDtC,EAAE,CAACH,EAAH,GAAQyC,EAAR;IACD;;IACD,KAAKL,MAAL,CAAYjC,EAAE,CAACgC,EAAf,EAAmB,KAAKE,EAAL,CAAQlC,EAAE,CAACJ,CAAH,CAAKuC,UAAb,EAAyBnC,EAAE,CAACH,EAA5B,CAAnB;IACA,MAAM;MAAEqB,SAAF;MAAaG,KAAK,EAAEyB;IAApB,IAA+B,KAAKF,cAAL,CAAoB5C,EAAE,CAACgC,EAAvB,EAA2BzB,OAAO,CAACiC,UAAnC,CAArC;IACA,OAAO;MAAEtB,SAAF;MAAaG,KAAK,EAAGsB,MAAM,IAAIG;IAA/B,CAAP;EACD;;EAEOrB,YAAY,CAAEzB,EAAF,EAAsBO,OAAtB,EAA4C;IAC9D,IAAIqB,yBAAiBrB,OAAO,CAACsB,EAAzB,CAAJ,EAAkC;MAChC7B,EAAE,CAACyC,EAAH,GAAQlC,OAAO,CAACsB,EAAhB;IACD;;IAED,KAAKE,OAAL,CAAa/B,EAAE,CAACgC,EAAhB,EAAoBhC,EAAE,CAACyC,EAAvB;;IACA,IAAI,CAACzC,EAAE,CAAC2B,CAAR,EAAW;MACT,MAAM,IAAIZ,KAAJ,CAAU,sDAAV,CAAN;IACD;;IACD,KAAKkB,MAAL,CAAYjC,EAAE,CAACgC,EAAf,EAAmB,KAAKE,EAAL,CAAQlC,EAAE,CAAC2B,CAAH,CAAKQ,UAAb,EAAyBnC,EAAE,CAACyC,EAA5B,CAAnB;IACA,KAAKR,MAAL,CAAYjC,EAAE,CAACgC,EAAf,EAAmB,KAAKE,EAAL,CAAQlC,EAAE,CAACJ,CAAH,CAAKuC,UAAb,EAAyBnC,EAAE,CAACyC,EAA5B,CAAnB;IACA,MAAM;MAAEvB,SAAF;MAAaG;IAAb,IAAuB,KAAKuB,cAAL,CAAoB5C,EAAE,CAACgC,EAAvB,EAA2BzB,OAAO,CAACiC,UAAnC,CAA7B;IACA,MAAM;MAAE5B,GAAF;MAAOC;IAAP,IAAe,KAAK6B,KAAL,CAAW1C,EAAE,CAACgC,EAAd,CAArB;IAEA,OAAO;MAAErB,CAAC,EAAEX,EAAE,CAACgC,EAAH,CAAMrB,CAAX;MAAcU,KAAd;MAAqBH,SAArB;MAAgCN,GAAhC;MAAqCC;IAArC,CAAP;EACD;;EAEOZ,mBAAmB,CAAEN,QAAF,EAAqBC,CAArB,EAAiCC,EAAjC,EAA8CC,GAA9C,EAA0D;IACnF,MAAMiD,IAAI,GAAG,kCAAb;IACA,MAAMf,EAAE,GAAG,KAAKgB,mBAAL,CAAyBD,IAAzB,CAAX;IACA,KAAKhB,OAAL,CAAaC,EAAb,EAAiBrC,QAAjB;IACA,KAAKoC,OAAL,CAAaC,EAAb,EAAiBnC,EAAjB;IACA,MAAM4C,EAAE,GAAGtB,gBAAOC,KAAP,CAAa,EAAb,CAAX;IAEA,OAAO;MAAEY,EAAF;MAAMpC,CAAN;MAASC,EAAT;MAAa4C,EAAb;MAAiB3C;IAAjB,CAAP;EACD;;EAEOI,mBAAmB,CAAEP,QAAF,EAAqBC,CAArB,EAAiCC,EAAjC,EAA8CC,GAA9C,EAA0D;IACnF,MAAMiD,IAAI,GAAG,kCAAb;IACA,MAAMf,EAAE,GAAG,KAAKgB,mBAAL,CAAyBD,IAAzB,CAAX;IACA,KAAKhB,OAAL,CAAaC,EAAb,EAAiBrC,QAAjB;IACA,KAAKoC,OAAL,CAAaC,EAAb,EAAiBpC,CAAC,CAACkC,SAAnB;IACA,MAAMW,EAAE,GAAGtB,gBAAOC,KAAP,CAAa,EAAb,CAAX;IAEA,OAAO;MAAEY,EAAF;MAAMpC,CAAN;MAASC,EAAT;MAAa4C,EAAb;MAAiB3C;IAAjB,CAAP;EACD;;AAnJsC;;AAAzCmD","names":["IK","abstract_handshake_1","initSession","initiator","prologue","s","rs","psk","createEmptyKey","hs","initializeInitiator","initializeResponder","i","mc","sendMessage","session","message","messageBuffer","writeMessageA","mb","h","cs1","cs2","writeMessageB","Error","writeMessageRegular","recvMessage","plaintext","buffer_1","alloc","valid","readMessageA","pt","v","readMessageB","payload","e","utils_1","ne","publicKey","mixHash","ss","mixKey","dh","privateKey","spk","from","ns","encryptAndHash","ciphertext","re","split","valid1","decryptAndHash","length","valid2","name","initializeSymmetric","exports"],"sourceRoot":"","sources":["../../../src/handshakes/ik.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _asyncGeneratorDelegate = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js\").default;\n\nvar tempdir = require('ipfs-utils/src/temp-dir');\n\nvar all = require('it-all');\n/**\n * Collect all values from the iterable and sort them using\n * the passed sorter function\n *\n * @template T\n * @param {AsyncIterable<T> | Iterable<T>} iterable\n * @param {(a: T, b: T) => -1 | 0 | 1} sorter\n * @returns {AsyncIterable<T>}\n */\n\n\nvar sortAll = function sortAll(iterable, sorter) {\n  return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var values;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _awaitAsyncGenerator(all(iterable));\n\n          case 2:\n            values = _context.sent;\n            return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(values.sort(sorter)), _awaitAsyncGenerator), \"t0\", 4);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))();\n};\n/**\n * @param {string} s\n * @param {string} r\n */\n\n\nvar replaceStartWith = function replaceStartWith(s, r) {\n  var matcher = new RegExp('^' + r);\n  return s.replace(matcher, '');\n};\n\nmodule.exports = {\n  sortAll: sortAll,\n  tmpdir: tempdir,\n  replaceStartWith: replaceStartWith\n};","map":{"version":3,"names":["tempdir","require","all","sortAll","iterable","sorter","values","sort","replaceStartWith","s","r","matcher","RegExp","replace","module","exports","tmpdir"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/interface-datastore/src/utils.js"],"sourcesContent":["'use strict'\n\nconst tempdir = require('ipfs-utils/src/temp-dir')\nconst all = require('it-all')\n\n/**\n * Collect all values from the iterable and sort them using\n * the passed sorter function\n *\n * @template T\n * @param {AsyncIterable<T> | Iterable<T>} iterable\n * @param {(a: T, b: T) => -1 | 0 | 1} sorter\n * @returns {AsyncIterable<T>}\n */\nconst sortAll = (iterable, sorter) => {\n  return (async function * () {\n    const values = await all(iterable)\n    yield * values.sort(sorter)\n  })()\n}\n\n/**\n * @param {string} s\n * @param {string} r\n */\nconst replaceStartWith = (s, r) => {\n  const matcher = new RegExp('^' + r)\n  return s.replace(matcher, '')\n}\n\nmodule.exports = {\n  sortAll,\n  tmpdir: tempdir,\n  replaceStartWith\n}\n"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,QAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,EAAWC,MAAX,EAAsB;EACpC,OAAO,6DAAC;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,4BACeH,GAAG,CAACE,QAAD,CADlB;;UAAA;YACAE,MADA;YAEN,qEAAQA,MAAM,CAACC,IAAP,CAAYF,MAAZ,CAAR;;UAFM;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAD,IAAP;AAID,CALD;AAOA;AACA;AACA;AACA;;;AACA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAIC,CAAJ,EAAU;EACjC,IAAMC,OAAO,GAAG,IAAIC,MAAJ,CAAW,MAAMF,CAAjB,CAAhB;EACA,OAAOD,CAAC,CAACI,OAAF,CAAUF,OAAV,EAAmB,EAAnB,CAAP;AACD,CAHD;;AAKAG,MAAM,CAACC,OAAP,GAAiB;EACfZ,OAAO,EAAPA,OADe;EAEfa,MAAM,EAAEhB,OAFO;EAGfQ,gBAAgB,EAAhBA;AAHe,CAAjB"},"metadata":{},"sourceType":"script"}
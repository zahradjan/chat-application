{"ast":null,"code":"import IpfsPubsubPeerMonitor from \"ipfs-pubsub-peer-monitor\";\nimport { makeAutoObservable, runInAction, toJS } from \"mobx\";\nexport class ChannelStore {\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.channel = undefined;\n    makeAutoObservable(this);\n  }\n\n  async init(topic) {\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\n    runInAction(() => {\n      this.channelName = topic;\n      this.channel = new IpfsPubsubPeerMonitor(this.rootStore.ipfsNode.pubsub, topic);\n    });\n  }\n\n  async listenForJoinedPeers() {\n    this.channel.on(\"join\", async peerJoined => {\n      console.log(\"Peer joined: \" + peerJoined);\n      console.log(`Peers on Pubsub ${this.channelName}: ` + (await this.channel.getPeers()));\n    });\n  }\n\n  async listenForLeftPeers() {\n    this.channel.on(\"leave\", async peerLeft => {\n      console.log(\"Peer left: \" + peerLeft);\n      console.log(`Peers on Pubsub ${this.channelName}: ` + (await this.channel.getPeers()));\n    });\n  }\n\n}","map":{"version":3,"names":["IpfsPubsubPeerMonitor","makeAutoObservable","runInAction","toJS","ChannelStore","constructor","rootStore","channel","undefined","init","topic","dataStore","ipfsNode","Error","orbitDb","channelName","pubsub","listenForJoinedPeers","on","peerJoined","console","log","getPeers","listenForLeftPeers","peerLeft"],"sources":["C:/Users/zajan/GitHub/chatApplication/src/data/store/ChannelStore.js"],"sourcesContent":["import IpfsPubsubPeerMonitor from \"ipfs-pubsub-peer-monitor\";\r\nimport { makeAutoObservable, runInAction, toJS } from \"mobx\";\r\n\r\nexport class ChannelStore {\r\n  channel;\r\n  channelName;\r\n\r\n  constructor(rootStore) {\r\n    this.rootStore = rootStore;\r\n    this.channel = undefined;\r\n    makeAutoObservable(this);\r\n  }\r\n  async init(topic) {\r\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\r\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\r\n    runInAction(() => {\r\n      this.channelName = topic;\r\n      this.channel = new IpfsPubsubPeerMonitor(this.rootStore.ipfsNode.pubsub, topic);\r\n    });\r\n  }\r\n  async listenForJoinedPeers() {\r\n    this.channel.on(\"join\", async (peerJoined) => {\r\n      console.log(\"Peer joined: \" + peerJoined);\r\n      console.log(`Peers on Pubsub ${this.channelName}: ` + (await this.channel.getPeers()));\r\n    });\r\n  }\r\n  async listenForLeftPeers() {\r\n    this.channel.on(\"leave\", async (peerLeft) => {\r\n      console.log(\"Peer left: \" + peerLeft);\r\n      console.log(`Peers on Pubsub ${this.channelName}: ` + (await this.channel.getPeers()));\r\n    });\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,qBAAP,MAAkC,0BAAlC;AACA,SAASC,kBAAT,EAA6BC,WAA7B,EAA0CC,IAA1C,QAAsD,MAAtD;AAEA,OAAO,MAAMC,YAAN,CAAmB;EAIxBC,WAAW,CAACC,SAAD,EAAY;IACrB,KAAKA,SAAL,GAAiBA,SAAjB;IACA,KAAKC,OAAL,GAAeC,SAAf;IACAP,kBAAkB,CAAC,IAAD,CAAlB;EACD;;EACS,MAAJQ,IAAI,CAACC,KAAD,EAAQ;IAChB,IAAI,KAAKJ,SAAL,CAAeK,SAAf,CAAyBC,QAAzB,KAAsCJ,SAA1C,EAAqD,MAAMK,KAAK,CAAC,wBAAD,CAAX;IACrD,IAAI,KAAKP,SAAL,CAAeK,SAAf,CAAyBG,OAAzB,KAAqCN,SAAzC,EAAoD,MAAMK,KAAK,CAAC,sBAAD,CAAX;IACpDX,WAAW,CAAC,MAAM;MAChB,KAAKa,WAAL,GAAmBL,KAAnB;MACA,KAAKH,OAAL,GAAe,IAAIP,qBAAJ,CAA0B,KAAKM,SAAL,CAAeM,QAAf,CAAwBI,MAAlD,EAA0DN,KAA1D,CAAf;IACD,CAHU,CAAX;EAID;;EACyB,MAApBO,oBAAoB,GAAG;IAC3B,KAAKV,OAAL,CAAaW,EAAb,CAAgB,MAAhB,EAAwB,MAAOC,UAAP,IAAsB;MAC5CC,OAAO,CAACC,GAAR,CAAY,kBAAkBF,UAA9B;MACAC,OAAO,CAACC,GAAR,CAAa,mBAAkB,KAAKN,WAAY,IAApC,IAA2C,MAAM,KAAKR,OAAL,CAAae,QAAb,EAAjD,CAAZ;IACD,CAHD;EAID;;EACuB,MAAlBC,kBAAkB,GAAG;IACzB,KAAKhB,OAAL,CAAaW,EAAb,CAAgB,OAAhB,EAAyB,MAAOM,QAAP,IAAoB;MAC3CJ,OAAO,CAACC,GAAR,CAAY,gBAAgBG,QAA5B;MACAJ,OAAO,CAACC,GAAR,CAAa,mBAAkB,KAAKN,WAAY,IAApC,IAA2C,MAAM,KAAKR,OAAL,CAAae,QAAb,EAAjD,CAAZ;IACD,CAHD;EAID;;AA5BuB"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict'; // @ts-ignore private-ip does not publish types\n\nvar isIpPrivate = require('private-ip');\n/**\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * Check if a given multiaddr has a private address.\n *\n * @param {Multiaddr} ma\n * @returns {boolean}\n */\n\n\nfunction isPrivate(ma) {\n  var _ma$nodeAddress = ma.nodeAddress(),\n      address = _ma$nodeAddress.address;\n\n  return isIpPrivate(address);\n}\n\nmodule.exports = isPrivate;","map":{"version":3,"names":["isIpPrivate","require","isPrivate","ma","nodeAddress","address","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p-utils/src/multiaddr/is-private.js"],"sourcesContent":["'use strict'\n\n// @ts-ignore private-ip does not publish types\nconst isIpPrivate = require('private-ip')\n\n/**\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * Check if a given multiaddr has a private address.\n *\n * @param {Multiaddr} ma\n * @returns {boolean}\n */\nfunction isPrivate (ma) {\n  const { address } = ma.nodeAddress()\n\n  return isIpPrivate(address)\n}\n\nmodule.exports = isPrivate\n"],"mappings":"AAAA,a,CAEA;;AACA,IAAMA,WAAW,GAAGC,OAAO,CAAC,YAAD,CAA3B;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,SAAT,CAAoBC,EAApB,EAAwB;EACtB,sBAAoBA,EAAE,CAACC,WAAH,EAApB;EAAA,IAAQC,OAAR,mBAAQA,OAAR;;EAEA,OAAOL,WAAW,CAACK,OAAD,CAAlB;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBL,SAAjB"},"metadata":{},"sourceType":"script"}
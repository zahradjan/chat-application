{"ast":null,"code":"'use strict';\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar createWantlist = require('./wantlist');\n\nvar createWantlistForPeer = require('./wantlist-for-peer');\n\nvar createUnwant = require('./unwant');\n\nvar createStat = require('./stat');\n/**\n * @typedef {import('../../types').NetworkService} NetworkService\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n\nvar BitswapAPI = /*#__PURE__*/_createClass(\n/**\n * @param {Object} config\n * @param {NetworkService} config.network\n */\nfunction BitswapAPI(_ref) {\n  var network = _ref.network;\n\n  _classCallCheck(this, BitswapAPI);\n\n  this.wantlist = createWantlist({\n    network: network\n  });\n  this.wantlistForPeer = createWantlistForPeer({\n    network: network\n  });\n  this.unwant = createUnwant({\n    network: network\n  });\n  this.stat = createStat({\n    network: network\n  });\n});\n\nmodule.exports = BitswapAPI;","map":{"version":3,"names":["createWantlist","require","createWantlistForPeer","createUnwant","createStat","BitswapAPI","network","wantlist","wantlistForPeer","unwant","stat","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/bitswap/index.js"],"sourcesContent":["'use strict'\n\nconst createWantlist = require('./wantlist')\nconst createWantlistForPeer = require('./wantlist-for-peer')\nconst createUnwant = require('./unwant')\nconst createStat = require('./stat')\n\n/**\n * @typedef {import('../../types').NetworkService} NetworkService\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\nclass BitswapAPI {\n  /**\n   * @param {Object} config\n   * @param {NetworkService} config.network\n   */\n  constructor ({ network }) {\n    this.wantlist = createWantlist({ network })\n    this.wantlistForPeer = createWantlistForPeer({ network })\n    this.unwant = createUnwant({ network })\n    this.stat = createStat({ network })\n  }\n}\nmodule.exports = BitswapAPI\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,cAAc,GAAGC,OAAO,CAAC,YAAD,CAA9B;;AACA,IAAMC,qBAAqB,GAAGD,OAAO,CAAC,qBAAD,CAArC;;AACA,IAAME,YAAY,GAAGF,OAAO,CAAC,UAAD,CAA5B;;AACA,IAAMG,UAAU,GAAGH,OAAO,CAAC,QAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;;;IAEMI,U;AACJ;AACF;AACA;AACA;AACE,0BAA0B;EAAA,IAAXC,OAAW,QAAXA,OAAW;;EAAA;;EACxB,KAAKC,QAAL,GAAgBP,cAAc,CAAC;IAAEM,OAAO,EAAPA;EAAF,CAAD,CAA9B;EACA,KAAKE,eAAL,GAAuBN,qBAAqB,CAAC;IAAEI,OAAO,EAAPA;EAAF,CAAD,CAA5C;EACA,KAAKG,MAAL,GAAcN,YAAY,CAAC;IAAEG,OAAO,EAAPA;EAAF,CAAD,CAA1B;EACA,KAAKI,IAAL,GAAYN,UAAU,CAAC;IAAEE,OAAO,EAAPA;EAAF,CAAD,CAAtB;AACD,C;;AAEHK,MAAM,CAACC,OAAP,GAAiBP,UAAjB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _objectWithoutProperties = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _excluded = [\"timeout\", \"signal\", \"headers\"],\n    _excluded2 = [\"timeout\", \"signal\", \"headers\"],\n    _excluded3 = [\"timeout\", \"signal\", \"headers\"],\n    _excluded4 = [\"timeout\", \"signal\", \"headers\"];\n\nvar _require = require('multiformats/cid'),\n    CID = _require.CID;\n\nvar Client = require('../../lib/core');\n\nvar Service = require('./service');\n\nvar toUrlSearchParams = require('../../lib/to-url-search-params');\n/**\n * @typedef {import('../../types').Options} Options\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Pin} Pin\n * @typedef {import('ipfs-core-types/src/pin/remote').AddOptions} AddOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Query} Query\n * @typedef {import('ipfs-core-types/src/pin/remote').Status} Status\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n\nvar Remote = /*#__PURE__*/_createClass(\n/**\n * @param {Options} options\n */\nfunction Remote(options) {\n  _classCallCheck(this, Remote);\n\n  this.client = new Client(options);\n  /** @readonly */\n\n  this.service = new Service(options);\n});\n/**\n * @type {RemotePiningAPI[\"add\"]}\n */\n\n\nRemote.prototype.add = /*#__PURE__*/function () {\n  var _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid, _ref) {\n    var timeout, signal, headers, query, response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            timeout = _ref.timeout, signal = _ref.signal, headers = _ref.headers, query = _objectWithoutProperties(_ref, _excluded);\n            _context.next = 3;\n            return this.client.post('pin/remote/add', {\n              timeout: timeout,\n              signal: signal,\n              headers: headers,\n              searchParams: encodeAddParams(_objectSpread({\n                cid: cid\n              }, query))\n            });\n\n          case 3:\n            response = _context.sent;\n            _context.t0 = decodePin;\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  function add(_x2, _x3) {\n    return _add.apply(this, arguments);\n  }\n\n  return add;\n}();\n/**\n * @type {RemotePiningAPI[\"ls\"]}\n */\n\n\nRemote.prototype.ls = /*#__PURE__*/function () {\n  var _ls = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref2) {\n    var timeout, signal, headers, query, response, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, pin;\n\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            timeout = _ref2.timeout, signal = _ref2.signal, headers = _ref2.headers, query = _objectWithoutProperties(_ref2, _excluded2);\n            _context2.next = 3;\n            return _awaitAsyncGenerator(this.client.post('pin/remote/ls', {\n              timeout: timeout,\n              signal: signal,\n              headers: headers,\n              searchParams: encodeQuery(query)\n            }));\n\n          case 3:\n            response = _context2.sent;\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context2.prev = 6;\n            _iterator = _asyncIterator(response.ndjson());\n\n          case 8:\n            _context2.next = 10;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 10:\n            if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n              _context2.next = 17;\n              break;\n            }\n\n            pin = _step.value;\n            _context2.next = 14;\n            return decodePin(pin);\n\n          case 14:\n            _iteratorAbruptCompletion = false;\n            _context2.next = 8;\n            break;\n\n          case 17:\n            _context2.next = 23;\n            break;\n\n          case 19:\n            _context2.prev = 19;\n            _context2.t0 = _context2[\"catch\"](6);\n            _didIteratorError = true;\n            _iteratorError = _context2.t0;\n\n          case 23:\n            _context2.prev = 23;\n            _context2.prev = 24;\n\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context2.next = 28;\n              break;\n            }\n\n            _context2.next = 28;\n            return _awaitAsyncGenerator(_iterator.return());\n\n          case 28:\n            _context2.prev = 28;\n\n            if (!_didIteratorError) {\n              _context2.next = 31;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 31:\n            return _context2.finish(28);\n\n          case 32:\n            return _context2.finish(23);\n\n          case 33:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this, [[6, 19, 23, 33], [24,, 28, 32]]);\n  }));\n\n  function ls(_x) {\n    return _ls.apply(this, arguments);\n  }\n\n  return ls;\n}();\n/**\n * @type {RemotePiningAPI[\"rm\"]}\n */\n\n\nRemote.prototype.rm = /*#__PURE__*/function () {\n  var _rm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(_ref3) {\n    var timeout, signal, headers, query;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            timeout = _ref3.timeout, signal = _ref3.signal, headers = _ref3.headers, query = _objectWithoutProperties(_ref3, _excluded3);\n            _context3.next = 3;\n            return this.client.post('pin/remote/rm', {\n              timeout: timeout,\n              signal: signal,\n              headers: headers,\n              searchParams: encodeQuery(_objectSpread(_objectSpread({}, query), {}, {\n                all: false\n              }))\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n\n  function rm(_x4) {\n    return _rm.apply(this, arguments);\n  }\n\n  return rm;\n}();\n/**\n * @type {RemotePiningAPI[\"rmAll\"]}\n */\n\n\nRemote.prototype.rmAll = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(_ref4) {\n    var timeout, signal, headers, query;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            timeout = _ref4.timeout, signal = _ref4.signal, headers = _ref4.headers, query = _objectWithoutProperties(_ref4, _excluded4);\n            _context4.next = 3;\n            return this.client.post('pin/remote/rm', {\n              timeout: timeout,\n              signal: signal,\n              headers: headers,\n              searchParams: encodeQuery(_objectSpread(_objectSpread({}, query), {}, {\n                all: true\n              }))\n            });\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this);\n  }));\n\n  return function (_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n/**\n * @param {Object} json\n * @param {string} json.Name\n * @param {string} json.Cid\n * @param {Status} json.Status\n * @returns {Pin}\n */\n\n\nvar decodePin = function decodePin(_ref6) {\n  var name = _ref6.Name,\n      status = _ref6.Status,\n      cid = _ref6.Cid;\n  return {\n    cid: CID.parse(cid),\n    name: name,\n    status: status\n  };\n};\n/**\n * @param {any} service\n * @returns {string}\n */\n\n\nvar encodeService = function encodeService(service) {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\n/**\n * @param {any} cid\n * @returns {string}\n */\n\n\nvar encodeCID = function encodeCID(cid) {\n  if (CID.asCID(cid)) {\n    return cid.toString();\n  } else {\n    throw new TypeError(\"CID instance expected instead of \".concat(typeof cid));\n  }\n};\n/**\n * @param {Query & { all?: boolean }} query\n * @returns {URLSearchParams}\n */\n\n\nvar encodeQuery = function encodeQuery(_ref7) {\n  var service = _ref7.service,\n      cid = _ref7.cid,\n      name = _ref7.name,\n      status = _ref7.status,\n      all = _ref7.all;\n  var query = toUrlSearchParams({\n    service: encodeService(service),\n    name: name,\n    force: all ? true : undefined\n  });\n\n  if (cid) {\n    var _iterator2 = _createForOfIteratorHelper(cid),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var value = _step2.value;\n        query.append('cid', encodeCID(value));\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  if (status) {\n    var _iterator3 = _createForOfIteratorHelper(status),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _value = _step3.value;\n        query.append('status', _value);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n\n  return query;\n};\n/**\n * @param {AddOptions & {cid:CID}} options\n * @returns {URLSearchParams}\n */\n\n\nvar encodeAddParams = function encodeAddParams(_ref8) {\n  var cid = _ref8.cid,\n      service = _ref8.service,\n      background = _ref8.background,\n      name = _ref8.name,\n      origins = _ref8.origins;\n  var params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name: name,\n    background: background ? true : undefined\n  });\n\n  if (origins) {\n    var _iterator4 = _createForOfIteratorHelper(origins),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var origin = _step4.value;\n        params.append('origin', origin.toString());\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  }\n\n  return params;\n};\n\nmodule.exports = Remote;","map":{"version":3,"names":["require","CID","Client","Service","toUrlSearchParams","Remote","options","client","service","prototype","add","cid","timeout","signal","headers","query","post","searchParams","encodeAddParams","response","decodePin","json","ls","encodeQuery","ndjson","pin","rm","all","rmAll","name","Name","status","Status","Cid","parse","encodeService","TypeError","encodeCID","asCID","toString","force","undefined","value","append","background","origins","params","arg","origin","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/pin/remote/index.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst Client = require('../../lib/core')\nconst Service = require('./service')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\n\n/**\n * @typedef {import('../../types').Options} Options\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Pin} Pin\n * @typedef {import('ipfs-core-types/src/pin/remote').AddOptions} AddOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Query} Query\n * @typedef {import('ipfs-core-types/src/pin/remote').Status} Status\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\nclass Remote {\n  /**\n   * @param {Options} options\n   */\n  constructor (options) {\n    this.client = new Client(options)\n    /** @readonly */\n    this.service = new Service(options)\n  }\n}\n\n/**\n * @type {RemotePiningAPI[\"add\"]}\n */\nRemote.prototype.add = async function add (cid, { timeout, signal, headers, ...query }) {\n  const response = await this.client.post('pin/remote/add', {\n    timeout,\n    signal,\n    headers,\n    searchParams: encodeAddParams({ cid, ...query })\n  })\n\n  return decodePin(await response.json())\n}\n\n/**\n * @type {RemotePiningAPI[\"ls\"]}\n */\nRemote.prototype.ls = async function * ls ({ timeout, signal, headers, ...query }) {\n  const response = await this.client.post('pin/remote/ls', {\n    timeout,\n    signal,\n    headers,\n    searchParams: encodeQuery(query)\n  })\n\n  for await (const pin of response.ndjson()) {\n    yield decodePin(pin)\n  }\n}\n\n/**\n * @type {RemotePiningAPI[\"rm\"]}\n */\nRemote.prototype.rm = async function rm ({ timeout, signal, headers, ...query }) {\n  await this.client.post('pin/remote/rm', {\n    timeout,\n    signal,\n    headers,\n    searchParams: encodeQuery({\n      ...query,\n      all: false\n    })\n  })\n}\n\n/**\n * @type {RemotePiningAPI[\"rmAll\"]}\n */\nRemote.prototype.rmAll = async function ({ timeout, signal, headers, ...query }) {\n  await this.client.post('pin/remote/rm', {\n    timeout,\n    signal,\n    headers,\n    searchParams: encodeQuery({\n      ...query,\n      all: true\n    })\n  })\n}\n\n/**\n * @param {Object} json\n * @param {string} json.Name\n * @param {string} json.Cid\n * @param {Status} json.Status\n * @returns {Pin}\n */\nconst decodePin = ({ Name: name, Status: status, Cid: cid }) => {\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  }\n}\n\n/**\n * @param {any} service\n * @returns {string}\n */\nconst encodeService = (service) => {\n  if (typeof service === 'string' && service !== '') {\n    return service\n  } else {\n    throw new TypeError('service name must be passed')\n  }\n}\n\n/**\n * @param {any} cid\n * @returns {string}\n */\nconst encodeCID = (cid) => {\n  if (CID.asCID(cid)) {\n    return cid.toString()\n  } else {\n    throw new TypeError(`CID instance expected instead of ${typeof cid}`)\n  }\n}\n\n/**\n * @param {Query & { all?: boolean }} query\n * @returns {URLSearchParams}\n */\nconst encodeQuery = ({ service, cid, name, status, all }) => {\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  })\n\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value))\n    }\n  }\n\n  if (status) {\n    for (const value of status) {\n      query.append('status', value)\n    }\n  }\n\n  return query\n}\n\n/**\n * @param {AddOptions & {cid:CID}} options\n * @returns {URLSearchParams}\n */\nconst encodeAddParams = ({ cid, service, background, name, origins }) => {\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  })\n\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString())\n    }\n  }\n\n  return params\n}\n\nmodule.exports = Remote\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
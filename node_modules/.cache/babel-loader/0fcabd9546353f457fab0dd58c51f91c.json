{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar pReflect = require('p-reflect');\n\nvar pLimit = require('p-limit');\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(array) {\n    var options,\n        _options$concurrency,\n        concurrency,\n        limit,\n        _args = arguments;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _options$concurrency = options.concurrency, concurrency = _options$concurrency === void 0 ? Infinity : _options$concurrency;\n            limit = pLimit(concurrency);\n            return _context.abrupt(\"return\", Promise.all(array.map(function (element) {\n              if (element && typeof element.then === 'function') {\n                // eslint-disable-line promise/prefer-await-to-then\n                return pReflect(element);\n              }\n\n              if (typeof element === 'function') {\n                return pReflect(limit(function () {\n                  return element();\n                }));\n              }\n\n              return pReflect(Promise.resolve(element));\n            })));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["pReflect","require","pLimit","module","exports","array","options","concurrency","Infinity","limit","Promise","all","map","element","then","resolve"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/p-settle/index.js"],"sourcesContent":["'use strict';\nconst pReflect = require('p-reflect');\nconst pLimit = require('p-limit');\n\nmodule.exports = async (array, options = {}) => {\n\tconst {concurrency = Infinity} = options;\n\tconst limit = pLimit(concurrency);\n\n\treturn Promise.all(array.map(element => {\n\t\tif (element && typeof element.then === 'function') { // eslint-disable-line promise/prefer-await-to-then\n\t\t\treturn pReflect(element);\n\t\t}\n\n\t\tif (typeof element === 'function') {\n\t\t\treturn pReflect(limit(() => element()));\n\t\t}\n\n\t\treturn pReflect(Promise.resolve(element));\n\t}));\n};\n"],"mappings":"AAAA;;;;;;AACA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP;EAAA,sEAAiB,iBAAOC,KAAP;IAAA;IAAA;IAAA;IAAA;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAcC,OAAd,2DAAwB,EAAxB;YAAA,uBACiBA,OADjB,CACTC,WADS,EACTA,WADS,qCACKC,QADL;YAEVC,KAFU,GAEFP,MAAM,CAACK,WAAD,CAFJ;YAAA,iCAITG,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,GAAN,CAAU,UAAAC,OAAO,EAAI;cACvC,IAAIA,OAAO,IAAI,OAAOA,OAAO,CAACC,IAAf,KAAwB,UAAvC,EAAmD;gBAAE;gBACpD,OAAOd,QAAQ,CAACa,OAAD,CAAf;cACA;;cAED,IAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;gBAClC,OAAOb,QAAQ,CAACS,KAAK,CAAC;kBAAA,OAAMI,OAAO,EAAb;gBAAA,CAAD,CAAN,CAAf;cACA;;cAED,OAAOb,QAAQ,CAACU,OAAO,CAACK,OAAR,CAAgBF,OAAhB,CAAD,CAAf;YACA,CAVkB,CAAZ,CAJS;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAjB;;EAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"script"}
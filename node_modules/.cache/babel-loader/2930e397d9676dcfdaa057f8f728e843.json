{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\n\n\nmodule.exports = function (_ref) {\n  var repo = _ref.repo;\n\n  /**\n   * @type {import('ipfs-core-types/src/repo').API[\"stat\"]}\n   */\n  function stat() {\n    return _stat.apply(this, arguments);\n  }\n\n  function _stat() {\n    _stat = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n          stats,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return repo.stat();\n\n            case 3:\n              stats = _context.sent;\n              return _context.abrupt(\"return\", {\n                numObjects: BigInt(stats.numObjects.toString()),\n                repoSize: BigInt(stats.repoSize.toString()),\n                repoPath: stats.repoPath,\n                version: \"\".concat(stats.version),\n                storageMax: BigInt(stats.storageMax.toString())\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _stat.apply(this, arguments);\n  }\n\n  return withTimeoutOption(stat);\n};","map":{"version":3,"names":["withTimeoutOption","require","module","exports","repo","stat","options","stats","numObjects","BigInt","toString","repoSize","repoPath","version","storageMax"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/repo/stat.js"],"sourcesContent":["'use strict'\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nmodule.exports = ({ repo }) => {\n  /**\n   * @type {import('ipfs-core-types/src/repo').API[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const stats = await repo.stat()\n\n    return {\n      numObjects: BigInt(stats.numObjects.toString()),\n      repoSize: BigInt(stats.repoSize.toString()),\n      repoPath: stats.repoPath,\n      version: `${stats.version}`,\n      storageMax: BigInt(stats.storageMax.toString())\n    }\n  }\n\n  return withTimeoutOption(stat)\n}\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,iBAAiB,GAAGC,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,gBAAc;EAAA,IAAXC,IAAW,QAAXA,IAAW;;EAC7B;AACF;AACA;EAH+B,SAIdC,IAJc;IAAA;EAAA;;EAAA;IAAA,mEAI7B;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAqBC,OAArB,2DAA+B,EAA/B;cAAA;cAAA,OACsBF,IAAI,CAACC,IAAL,EADtB;;YAAA;cACQE,KADR;cAAA,iCAGS;gBACLC,UAAU,EAAEC,MAAM,CAACF,KAAK,CAACC,UAAN,CAAiBE,QAAjB,EAAD,CADb;gBAELC,QAAQ,EAAEF,MAAM,CAACF,KAAK,CAACI,QAAN,CAAeD,QAAf,EAAD,CAFX;gBAGLE,QAAQ,EAAEL,KAAK,CAACK,QAHX;gBAILC,OAAO,YAAKN,KAAK,CAACM,OAAX,CAJF;gBAKLC,UAAU,EAAEL,MAAM,CAACF,KAAK,CAACO,UAAN,CAAiBJ,QAAjB,EAAD;cALb,CAHT;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJ6B;IAAA;EAAA;;EAgB7B,OAAOV,iBAAiB,CAACK,IAAD,CAAxB;AACD,CAjBD"},"metadata":{},"sourceType":"script"}
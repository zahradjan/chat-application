{"ast":null,"code":"import IpfsPubsubPeerMonitor from \"ipfs-pubsub-peer-monitor\";\nimport { makeAutoObservable, runInAction, toJS } from \"mobx\";\nexport class MonitorStore {\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.monitor = undefined;\n    this.peersDb = undefined;\n    this.peers = [];\n    this.topicName = \"DecentioGlobalNetwork\";\n    makeAutoObservable(this);\n  }\n\n  async init() {\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\n    runInAction(async () => {\n      this.monitor = new IpfsPubsubPeerMonitor(this.rootStore.dataStore.ipfsNode.pubsub, this.topicName);\n      await this.loadPeersDb();\n      await this.setPeersFromDb();\n      await this.subscribeToOwnPubsub();\n      await this.listenForJoinedPeers();\n      await this.listenForLeftPeers();\n      await this.subscribeToDecentioPubsub();\n    });\n  }\n\n  async isMonitorReady() {\n    return !!this.monitor;\n  }\n\n  async setPeersFromDb() {\n    const all = await toJS(this.peersDb.all);\n    runInAction(() => {\n      all.map(e => {\n        // console.log(e.payload.value);\n        return this.peers.push(e.payload.value);\n      });\n    });\n  }\n\n  async listenForJoinedPeers() {\n    this.monitor.on(\"join\", async peerJoined => {\n      console.log(\"Peer joined: \" + peerJoined);\n      console.log(`Peers on Pubsub ${this.topicName}: ` + (await this.monitor.getPeers())); // await this.savePeer(peerJoined);\n\n      this.sendUserDbId(peerJoined);\n    });\n  }\n\n  async listenForLeftPeers() {\n    this.monitor.on(\"leave\", async peerLeft => {\n      console.log(\"Peer left: \" + peerLeft);\n      console.log(`Peers on Pubsub ${this.topicName}: ` + (await this.monitor.getPeers())); // await this.removePeer(peerLeft);\n    });\n  }\n\n  async peerIsInDb(peer) {\n    return this.peersDb.iterator().collect().find(item => item.payload.value === peer);\n  }\n\n  async savePeer(peer) {\n    runInAction(async () => {\n      if (!(await this.peerIsInDb(peer))) {\n        this.peers.push(peer);\n        await this.peersDb.add(peer);\n      }\n    });\n  }\n\n  async removePeer(peer) {\n    const entry = await this.peersDb.iterator().collect().map(item => item.payload.value === peer ? item : undefined);\n    console.log(entry);\n\n    if (entry) {\n      await this.peersDb.remove(entry[0].hash);\n    }\n  }\n\n  async sendUserDbId(peer) {\n    const nodeId = await this.rootStore.dataStore.peerId;\n    console.log(nodeId);\n    console.log(peer === nodeId);\n    if (peer === nodeId) return;\n    const userDbId = await this.rootStore.userStore.getUserDbId();\n    const stringifyPayload = JSON.stringify({\n      userDb: userDbId\n    });\n    this.rootStore.dataStore.ipfsNode.pubsub.publish(peer, stringifyPayload);\n  }\n\n  async subscribeToOwnPubsub() {\n    const peerInfoId = this.rootStore.dataStore.peerId;\n    console.log(\"Peer ID: \" + peerInfoId);\n    await this.rootStore.dataStore.ipfsNode.pubsub.subscribe(peerInfoId, async msg => {\n      // console.log(msg.data);\n      this.processMessage(msg);\n      const parsedMsg = JSON.parse(msg.data);\n      console.log(parsedMsg);\n      console.log(msg.from); //TODO: mechanismu ktery na zaklade from property bude hazet dane zpravy do spravne roomky\n      // room.getRoom(msg.from)\n\n      if (parsedMsg.userDb) {\n        this.replicateUserDb(parsedMsg);\n      } else {\n        const targetRoom = this.rootStore.roomStore.getRoom(msg.from);\n\n        if (targetRoom) {\n          targetRoom.setMessage(msg);\n        }\n      }\n    });\n  }\n\n  async subscribeToDecentioPubsub() {\n    await this.rootStore.dataStore.ipfsNode.pubsub.subscribe(\"DecentioGlobalNetwork\", () => {});\n  }\n\n  async replicateUserDb(parsedMsg) {\n    var peerDbOuter = await this.rootStore.dataStore.orbitDb.open(parsedMsg.userDb);\n    peerDbOuter.events.on(\"replicated\", async () => {\n      console.log(\"DB replicated\");\n      await this.peersDb.add(peerDbOuter.all);\n      console.log(peerDbOuter.all);\n      this.peers.push(peerDbOuter.all);\n      console.log(this.peersDb.all);\n    });\n  }\n\n  async loadPeersDb() {\n    this.peersDb = await this.rootStore.dataStore.orbitDb.feed(\"peers\");\n    await this.peersDb.load();\n  }\n\n  replicatePeersDB() {\n    setTimeout(async () => {\n      const nodeId = await this.rootStore.dataStore.getPeerId();\n      const peersDbId = await this.peersDb.id;\n      console.log(nodeId);\n      await this.peersDb.all.map(peer => {\n        const peerId = peer.payload.value;\n\n        if (peerId !== nodeId) {\n          console.log(\"jsem tu \");\n          console.log(peerId);\n          console.log(peersDbId);\n          const stringifyPayload = JSON.stringify({\n            peerDb: peersDbId\n          });\n          this.rootStore.dataStore.ipfsNode.pubsub.publish(peerId, stringifyPayload);\n        }\n      });\n    }, 2000);\n  }\n\n  processMessage(msg) {\n    if (typeof msg.data === \"object\") msg.data = new TextDecoder().decode(msg.data);\n  }\n\n  async getPeersDbId() {\n    const id = await this.peersDb.id;\n    return id;\n  }\n\n}","map":{"version":3,"names":["IpfsPubsubPeerMonitor","makeAutoObservable","runInAction","toJS","MonitorStore","constructor","rootStore","monitor","undefined","peersDb","peers","topicName","init","dataStore","ipfsNode","Error","orbitDb","pubsub","loadPeersDb","setPeersFromDb","subscribeToOwnPubsub","listenForJoinedPeers","listenForLeftPeers","subscribeToDecentioPubsub","isMonitorReady","all","map","e","push","payload","value","on","peerJoined","console","log","getPeers","sendUserDbId","peerLeft","peerIsInDb","peer","iterator","collect","find","item","savePeer","add","removePeer","entry","remove","hash","nodeId","peerId","userDbId","userStore","getUserDbId","stringifyPayload","JSON","stringify","userDb","publish","peerInfoId","subscribe","msg","processMessage","parsedMsg","parse","data","from","replicateUserDb","targetRoom","roomStore","getRoom","setMessage","peerDbOuter","open","events","feed","load","replicatePeersDB","setTimeout","getPeerId","peersDbId","id","peerDb","TextDecoder","decode","getPeersDbId"],"sources":["C:/Users/zajan/GitHub/chatApplication/src/data/store/MonitorStore.js"],"sourcesContent":["import IpfsPubsubPeerMonitor from \"ipfs-pubsub-peer-monitor\";\r\nimport { makeAutoObservable, runInAction, toJS } from \"mobx\";\r\n\r\nexport class MonitorStore {\r\n  monitor;\r\n  topicName;\r\n  peers;\r\n  peersDb;\r\n  constructor(rootStore) {\r\n    this.rootStore = rootStore;\r\n    this.monitor = undefined;\r\n    this.peersDb = undefined;\r\n    this.peers = [];\r\n    this.topicName = \"DecentioGlobalNetwork\";\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  async init() {\r\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\r\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\r\n    runInAction(async () => {\r\n      this.monitor = new IpfsPubsubPeerMonitor(this.rootStore.dataStore.ipfsNode.pubsub, this.topicName);\r\n      await this.loadPeersDb();\r\n      await this.setPeersFromDb();\r\n      await this.subscribeToOwnPubsub();\r\n      await this.listenForJoinedPeers();\r\n      await this.listenForLeftPeers();\r\n      await this.subscribeToDecentioPubsub();\r\n    });\r\n  }\r\n  async isMonitorReady() {\r\n    return !!this.monitor;\r\n  }\r\n\r\n  async setPeersFromDb() {\r\n    const all = await toJS(this.peersDb.all);\r\n    runInAction(() => {\r\n      all.map((e) => {\r\n        // console.log(e.payload.value);\r\n        return this.peers.push(e.payload.value);\r\n      });\r\n    });\r\n  }\r\n\r\n  async listenForJoinedPeers() {\r\n    this.monitor.on(\"join\", async (peerJoined) => {\r\n      console.log(\"Peer joined: \" + peerJoined);\r\n      console.log(`Peers on Pubsub ${this.topicName}: ` + (await this.monitor.getPeers()));\r\n      // await this.savePeer(peerJoined);\r\n      this.sendUserDbId(peerJoined);\r\n    });\r\n  }\r\n\r\n  async listenForLeftPeers() {\r\n    this.monitor.on(\"leave\", async (peerLeft) => {\r\n      console.log(\"Peer left: \" + peerLeft);\r\n      console.log(`Peers on Pubsub ${this.topicName}: ` + (await this.monitor.getPeers()));\r\n      // await this.removePeer(peerLeft);\r\n    });\r\n  }\r\n\r\n  async peerIsInDb(peer) {\r\n    return this.peersDb\r\n      .iterator()\r\n      .collect()\r\n      .find((item) => item.payload.value === peer);\r\n  }\r\n\r\n  async savePeer(peer) {\r\n    runInAction(async () => {\r\n      if (!(await this.peerIsInDb(peer))) {\r\n        this.peers.push(peer);\r\n        await this.peersDb.add(peer);\r\n      }\r\n    });\r\n  }\r\n  async removePeer(peer) {\r\n    const entry = await this.peersDb\r\n      .iterator()\r\n      .collect()\r\n      .map((item) => (item.payload.value === peer ? item : undefined));\r\n    console.log(entry);\r\n    if (entry) {\r\n      await this.peersDb.remove(entry[0].hash);\r\n    }\r\n  }\r\n  async sendUserDbId(peer) {\r\n    const nodeId = await this.rootStore.dataStore.peerId;\r\n    console.log(nodeId);\r\n    console.log(peer === nodeId);\r\n    if (peer === nodeId) return;\r\n    const userDbId = await this.rootStore.userStore.getUserDbId();\r\n\r\n    const stringifyPayload = JSON.stringify({ userDb: userDbId });\r\n    this.rootStore.dataStore.ipfsNode.pubsub.publish(peer, stringifyPayload);\r\n  }\r\n\r\n  async subscribeToOwnPubsub() {\r\n    const peerInfoId = this.rootStore.dataStore.peerId;\r\n    console.log(\"Peer ID: \" + peerInfoId);\r\n    await this.rootStore.dataStore.ipfsNode.pubsub.subscribe(peerInfoId, async (msg) => {\r\n      // console.log(msg.data);\r\n      this.processMessage(msg);\r\n      const parsedMsg = JSON.parse(msg.data);\r\n      console.log(parsedMsg);\r\n      console.log(msg.from);\r\n      //TODO: mechanismu ktery na zaklade from property bude hazet dane zpravy do spravne roomky\r\n      // room.getRoom(msg.from)\r\n      if (parsedMsg.userDb) {\r\n        this.replicateUserDb(parsedMsg);\r\n      } else {\r\n        const targetRoom = this.rootStore.roomStore.getRoom(msg.from);\r\n        if (targetRoom) {\r\n          targetRoom.setMessage(msg);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  async subscribeToDecentioPubsub() {\r\n    await this.rootStore.dataStore.ipfsNode.pubsub.subscribe(\"DecentioGlobalNetwork\", () => {});\r\n  }\r\n\r\n  async replicateUserDb(parsedMsg) {\r\n    var peerDbOuter = await this.rootStore.dataStore.orbitDb.open(parsedMsg.userDb);\r\n    peerDbOuter.events.on(\"replicated\", async () => {\r\n      console.log(\"DB replicated\");\r\n      await this.peersDb.add(peerDbOuter.all);\r\n      console.log(peerDbOuter.all);\r\n      this.peers.push(peerDbOuter.all);\r\n      console.log(this.peersDb.all);\r\n    });\r\n  }\r\n\r\n  async loadPeersDb() {\r\n    this.peersDb = await this.rootStore.dataStore.orbitDb.feed(\"peers\");\r\n    await this.peersDb.load();\r\n  }\r\n\r\n  replicatePeersDB() {\r\n    setTimeout(async () => {\r\n      const nodeId = await this.rootStore.dataStore.getPeerId();\r\n      const peersDbId = await this.peersDb.id;\r\n      console.log(nodeId);\r\n      await this.peersDb.all.map((peer) => {\r\n        const peerId = peer.payload.value;\r\n        if (peerId !== nodeId) {\r\n          console.log(\"jsem tu \");\r\n          console.log(peerId);\r\n          console.log(peersDbId);\r\n          const stringifyPayload = JSON.stringify({ peerDb: peersDbId });\r\n          this.rootStore.dataStore.ipfsNode.pubsub.publish(peerId, stringifyPayload);\r\n        }\r\n      });\r\n    }, 2000);\r\n  }\r\n  processMessage(msg) {\r\n    if (typeof msg.data === \"object\") msg.data = new TextDecoder().decode(msg.data);\r\n  }\r\n  async getPeersDbId() {\r\n    const id = await this.peersDb.id;\r\n    return id;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,qBAAP,MAAkC,0BAAlC;AACA,SAASC,kBAAT,EAA6BC,WAA7B,EAA0CC,IAA1C,QAAsD,MAAtD;AAEA,OAAO,MAAMC,YAAN,CAAmB;EAKxBC,WAAW,CAACC,SAAD,EAAY;IACrB,KAAKA,SAAL,GAAiBA,SAAjB;IACA,KAAKC,OAAL,GAAeC,SAAf;IACA,KAAKC,OAAL,GAAeD,SAAf;IACA,KAAKE,KAAL,GAAa,EAAb;IACA,KAAKC,SAAL,GAAiB,uBAAjB;IACAV,kBAAkB,CAAC,IAAD,CAAlB;EACD;;EAES,MAAJW,IAAI,GAAG;IACX,IAAI,KAAKN,SAAL,CAAeO,SAAf,CAAyBC,QAAzB,KAAsCN,SAA1C,EAAqD,MAAMO,KAAK,CAAC,wBAAD,CAAX;IACrD,IAAI,KAAKT,SAAL,CAAeO,SAAf,CAAyBG,OAAzB,KAAqCR,SAAzC,EAAoD,MAAMO,KAAK,CAAC,sBAAD,CAAX;IACpDb,WAAW,CAAC,YAAY;MACtB,KAAKK,OAAL,GAAe,IAAIP,qBAAJ,CAA0B,KAAKM,SAAL,CAAeO,SAAf,CAAyBC,QAAzB,CAAkCG,MAA5D,EAAoE,KAAKN,SAAzE,CAAf;MACA,MAAM,KAAKO,WAAL,EAAN;MACA,MAAM,KAAKC,cAAL,EAAN;MACA,MAAM,KAAKC,oBAAL,EAAN;MACA,MAAM,KAAKC,oBAAL,EAAN;MACA,MAAM,KAAKC,kBAAL,EAAN;MACA,MAAM,KAAKC,yBAAL,EAAN;IACD,CARU,CAAX;EASD;;EACmB,MAAdC,cAAc,GAAG;IACrB,OAAO,CAAC,CAAC,KAAKjB,OAAd;EACD;;EAEmB,MAAdY,cAAc,GAAG;IACrB,MAAMM,GAAG,GAAG,MAAMtB,IAAI,CAAC,KAAKM,OAAL,CAAagB,GAAd,CAAtB;IACAvB,WAAW,CAAC,MAAM;MAChBuB,GAAG,CAACC,GAAJ,CAASC,CAAD,IAAO;QACb;QACA,OAAO,KAAKjB,KAAL,CAAWkB,IAAX,CAAgBD,CAAC,CAACE,OAAF,CAAUC,KAA1B,CAAP;MACD,CAHD;IAID,CALU,CAAX;EAMD;;EAEyB,MAApBT,oBAAoB,GAAG;IAC3B,KAAKd,OAAL,CAAawB,EAAb,CAAgB,MAAhB,EAAwB,MAAOC,UAAP,IAAsB;MAC5CC,OAAO,CAACC,GAAR,CAAY,kBAAkBF,UAA9B;MACAC,OAAO,CAACC,GAAR,CAAa,mBAAkB,KAAKvB,SAAU,IAAlC,IAAyC,MAAM,KAAKJ,OAAL,CAAa4B,QAAb,EAA/C,CAAZ,EAF4C,CAG5C;;MACA,KAAKC,YAAL,CAAkBJ,UAAlB;IACD,CALD;EAMD;;EAEuB,MAAlBV,kBAAkB,GAAG;IACzB,KAAKf,OAAL,CAAawB,EAAb,CAAgB,OAAhB,EAAyB,MAAOM,QAAP,IAAoB;MAC3CJ,OAAO,CAACC,GAAR,CAAY,gBAAgBG,QAA5B;MACAJ,OAAO,CAACC,GAAR,CAAa,mBAAkB,KAAKvB,SAAU,IAAlC,IAAyC,MAAM,KAAKJ,OAAL,CAAa4B,QAAb,EAA/C,CAAZ,EAF2C,CAG3C;IACD,CAJD;EAKD;;EAEe,MAAVG,UAAU,CAACC,IAAD,EAAO;IACrB,OAAO,KAAK9B,OAAL,CACJ+B,QADI,GAEJC,OAFI,GAGJC,IAHI,CAGEC,IAAD,IAAUA,IAAI,CAACd,OAAL,CAAaC,KAAb,KAAuBS,IAHlC,CAAP;EAID;;EAEa,MAARK,QAAQ,CAACL,IAAD,EAAO;IACnBrC,WAAW,CAAC,YAAY;MACtB,IAAI,EAAE,MAAM,KAAKoC,UAAL,CAAgBC,IAAhB,CAAR,CAAJ,EAAoC;QAClC,KAAK7B,KAAL,CAAWkB,IAAX,CAAgBW,IAAhB;QACA,MAAM,KAAK9B,OAAL,CAAaoC,GAAb,CAAiBN,IAAjB,CAAN;MACD;IACF,CALU,CAAX;EAMD;;EACe,MAAVO,UAAU,CAACP,IAAD,EAAO;IACrB,MAAMQ,KAAK,GAAG,MAAM,KAAKtC,OAAL,CACjB+B,QADiB,GAEjBC,OAFiB,GAGjBf,GAHiB,CAGZiB,IAAD,IAAWA,IAAI,CAACd,OAAL,CAAaC,KAAb,KAAuBS,IAAvB,GAA8BI,IAA9B,GAAqCnC,SAHnC,CAApB;IAIAyB,OAAO,CAACC,GAAR,CAAYa,KAAZ;;IACA,IAAIA,KAAJ,EAAW;MACT,MAAM,KAAKtC,OAAL,CAAauC,MAAb,CAAoBD,KAAK,CAAC,CAAD,CAAL,CAASE,IAA7B,CAAN;IACD;EACF;;EACiB,MAAZb,YAAY,CAACG,IAAD,EAAO;IACvB,MAAMW,MAAM,GAAG,MAAM,KAAK5C,SAAL,CAAeO,SAAf,CAAyBsC,MAA9C;IACAlB,OAAO,CAACC,GAAR,CAAYgB,MAAZ;IACAjB,OAAO,CAACC,GAAR,CAAYK,IAAI,KAAKW,MAArB;IACA,IAAIX,IAAI,KAAKW,MAAb,EAAqB;IACrB,MAAME,QAAQ,GAAG,MAAM,KAAK9C,SAAL,CAAe+C,SAAf,CAAyBC,WAAzB,EAAvB;IAEA,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,SAAL,CAAe;MAAEC,MAAM,EAAEN;IAAV,CAAf,CAAzB;IACA,KAAK9C,SAAL,CAAeO,SAAf,CAAyBC,QAAzB,CAAkCG,MAAlC,CAAyC0C,OAAzC,CAAiDpB,IAAjD,EAAuDgB,gBAAvD;EACD;;EAEyB,MAApBnC,oBAAoB,GAAG;IAC3B,MAAMwC,UAAU,GAAG,KAAKtD,SAAL,CAAeO,SAAf,CAAyBsC,MAA5C;IACAlB,OAAO,CAACC,GAAR,CAAY,cAAc0B,UAA1B;IACA,MAAM,KAAKtD,SAAL,CAAeO,SAAf,CAAyBC,QAAzB,CAAkCG,MAAlC,CAAyC4C,SAAzC,CAAmDD,UAAnD,EAA+D,MAAOE,GAAP,IAAe;MAClF;MACA,KAAKC,cAAL,CAAoBD,GAApB;MACA,MAAME,SAAS,GAAGR,IAAI,CAACS,KAAL,CAAWH,GAAG,CAACI,IAAf,CAAlB;MACAjC,OAAO,CAACC,GAAR,CAAY8B,SAAZ;MACA/B,OAAO,CAACC,GAAR,CAAY4B,GAAG,CAACK,IAAhB,EALkF,CAMlF;MACA;;MACA,IAAIH,SAAS,CAACN,MAAd,EAAsB;QACpB,KAAKU,eAAL,CAAqBJ,SAArB;MACD,CAFD,MAEO;QACL,MAAMK,UAAU,GAAG,KAAK/D,SAAL,CAAegE,SAAf,CAAyBC,OAAzB,CAAiCT,GAAG,CAACK,IAArC,CAAnB;;QACA,IAAIE,UAAJ,EAAgB;UACdA,UAAU,CAACG,UAAX,CAAsBV,GAAtB;QACD;MACF;IACF,CAhBK,CAAN;EAiBD;;EAE8B,MAAzBvC,yBAAyB,GAAG;IAChC,MAAM,KAAKjB,SAAL,CAAeO,SAAf,CAAyBC,QAAzB,CAAkCG,MAAlC,CAAyC4C,SAAzC,CAAmD,uBAAnD,EAA4E,MAAM,CAAE,CAApF,CAAN;EACD;;EAEoB,MAAfO,eAAe,CAACJ,SAAD,EAAY;IAC/B,IAAIS,WAAW,GAAG,MAAM,KAAKnE,SAAL,CAAeO,SAAf,CAAyBG,OAAzB,CAAiC0D,IAAjC,CAAsCV,SAAS,CAACN,MAAhD,CAAxB;IACAe,WAAW,CAACE,MAAZ,CAAmB5C,EAAnB,CAAsB,YAAtB,EAAoC,YAAY;MAC9CE,OAAO,CAACC,GAAR,CAAY,eAAZ;MACA,MAAM,KAAKzB,OAAL,CAAaoC,GAAb,CAAiB4B,WAAW,CAAChD,GAA7B,CAAN;MACAQ,OAAO,CAACC,GAAR,CAAYuC,WAAW,CAAChD,GAAxB;MACA,KAAKf,KAAL,CAAWkB,IAAX,CAAgB6C,WAAW,CAAChD,GAA5B;MACAQ,OAAO,CAACC,GAAR,CAAY,KAAKzB,OAAL,CAAagB,GAAzB;IACD,CAND;EAOD;;EAEgB,MAAXP,WAAW,GAAG;IAClB,KAAKT,OAAL,GAAe,MAAM,KAAKH,SAAL,CAAeO,SAAf,CAAyBG,OAAzB,CAAiC4D,IAAjC,CAAsC,OAAtC,CAArB;IACA,MAAM,KAAKnE,OAAL,CAAaoE,IAAb,EAAN;EACD;;EAEDC,gBAAgB,GAAG;IACjBC,UAAU,CAAC,YAAY;MACrB,MAAM7B,MAAM,GAAG,MAAM,KAAK5C,SAAL,CAAeO,SAAf,CAAyBmE,SAAzB,EAArB;MACA,MAAMC,SAAS,GAAG,MAAM,KAAKxE,OAAL,CAAayE,EAArC;MACAjD,OAAO,CAACC,GAAR,CAAYgB,MAAZ;MACA,MAAM,KAAKzC,OAAL,CAAagB,GAAb,CAAiBC,GAAjB,CAAsBa,IAAD,IAAU;QACnC,MAAMY,MAAM,GAAGZ,IAAI,CAACV,OAAL,CAAaC,KAA5B;;QACA,IAAIqB,MAAM,KAAKD,MAAf,EAAuB;UACrBjB,OAAO,CAACC,GAAR,CAAY,UAAZ;UACAD,OAAO,CAACC,GAAR,CAAYiB,MAAZ;UACAlB,OAAO,CAACC,GAAR,CAAY+C,SAAZ;UACA,MAAM1B,gBAAgB,GAAGC,IAAI,CAACC,SAAL,CAAe;YAAE0B,MAAM,EAAEF;UAAV,CAAf,CAAzB;UACA,KAAK3E,SAAL,CAAeO,SAAf,CAAyBC,QAAzB,CAAkCG,MAAlC,CAAyC0C,OAAzC,CAAiDR,MAAjD,EAAyDI,gBAAzD;QACD;MACF,CATK,CAAN;IAUD,CAdS,EAcP,IAdO,CAAV;EAeD;;EACDQ,cAAc,CAACD,GAAD,EAAM;IAClB,IAAI,OAAOA,GAAG,CAACI,IAAX,KAAoB,QAAxB,EAAkCJ,GAAG,CAACI,IAAJ,GAAW,IAAIkB,WAAJ,GAAkBC,MAAlB,CAAyBvB,GAAG,CAACI,IAA7B,CAAX;EACnC;;EACiB,MAAZoB,YAAY,GAAG;IACnB,MAAMJ,EAAE,GAAG,MAAM,KAAKzE,OAAL,CAAayE,EAA9B;IACA,OAAOA,EAAP;EACD;;AA/JuB"},"metadata":{},"sourceType":"module"}
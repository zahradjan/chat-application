{"ast":null,"code":"'use strict'; // limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\n\nconst MAX_BYTES = 65536;\n/**\n * @param {number} size\n */\n\nfunction randomBytes(size) {\n  const bytes = new Uint8Array(size);\n  let generated = 0;\n\n  if (size > 0) {\n    // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) {\n      while (generated < size) {\n        if (generated + MAX_BYTES > size) {\n          crypto.getRandomValues(bytes.subarray(generated, generated + (size - generated)));\n          generated += size - generated;\n        } else {\n          crypto.getRandomValues(bytes.subarray(generated, generated + MAX_BYTES));\n          generated += MAX_BYTES;\n        }\n      }\n    } else {\n      crypto.getRandomValues(bytes);\n    }\n  }\n\n  return bytes;\n}\n\nmodule.exports = randomBytes;","map":{"version":3,"names":["MAX_BYTES","randomBytes","size","bytes","Uint8Array","generated","crypto","getRandomValues","subarray","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/iso-random-stream/src/random.browser.js"],"sourcesContent":["'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nconst MAX_BYTES = 65536\n\n/**\n * @param {number} size\n */\nfunction randomBytes(size) {\n  const bytes = new Uint8Array(size)\n  let generated = 0\n\n  if (size > 0) {\n    // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) {\n      while (generated < size) {\n        if (generated + MAX_BYTES > size) {\n          crypto.getRandomValues(\n            bytes.subarray(generated, generated + (size - generated))\n          )\n          generated += size - generated\n        } else {\n          crypto.getRandomValues(\n            bytes.subarray(generated, generated + MAX_BYTES)\n          )\n          generated += MAX_BYTES\n        }\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  return bytes\n}\n\nmodule.exports = randomBytes\n"],"mappings":"AAAA,a,CAEA;AACA;;AACA,MAAMA,SAAS,GAAG,KAAlB;AAEA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;EACzB,MAAMC,KAAK,GAAG,IAAIC,UAAJ,CAAeF,IAAf,CAAd;EACA,IAAIG,SAAS,GAAG,CAAhB;;EAEA,IAAIH,IAAI,GAAG,CAAX,EAAc;IACZ;IACA,IAAIA,IAAI,GAAGF,SAAX,EAAsB;MACpB,OAAOK,SAAS,GAAGH,IAAnB,EAAyB;QACvB,IAAIG,SAAS,GAAGL,SAAZ,GAAwBE,IAA5B,EAAkC;UAChCI,MAAM,CAACC,eAAP,CACEJ,KAAK,CAACK,QAAN,CAAeH,SAAf,EAA0BA,SAAS,IAAIH,IAAI,GAAGG,SAAX,CAAnC,CADF;UAGAA,SAAS,IAAIH,IAAI,GAAGG,SAApB;QACD,CALD,MAKO;UACLC,MAAM,CAACC,eAAP,CACEJ,KAAK,CAACK,QAAN,CAAeH,SAAf,EAA0BA,SAAS,GAAGL,SAAtC,CADF;UAGAK,SAAS,IAAIL,SAAb;QACD;MACF;IACF,CAdD,MAcO;MACLM,MAAM,CAACC,eAAP,CAAuBJ,KAAvB;IACD;EACF;;EAED,OAAOA,KAAP;AACD;;AAEDM,MAAM,CAACC,OAAP,GAAiBT,WAAjB"},"metadata":{},"sourceType":"script"}
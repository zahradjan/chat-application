{"ast":null,"code":"'use strict';\n\nconst Store = require('orbit-db-store');\n\nconst KeyValueIndex = require('./KeyValueIndex');\n\nclass KeyValueStore extends Store {\n  constructor(ipfs, id, dbname, options) {\n    let opts = Object.assign({}, {\n      Index: KeyValueIndex\n    });\n    Object.assign(opts, options);\n    super(ipfs, id, dbname, opts);\n    this._type = 'keyvalue';\n  }\n\n  get all() {\n    return this._index._index;\n  }\n\n  get(key) {\n    return this._index.get(key);\n  }\n\n  set(key, data) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.put(key, data, options);\n  }\n\n  put(key, data) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this._addOperation({\n      op: 'PUT',\n      key: key,\n      value: data\n    }, options);\n  }\n\n  del(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this._addOperation({\n      op: 'DEL',\n      key: key,\n      value: null\n    }, options);\n  }\n\n}\n\nmodule.exports = KeyValueStore;","map":{"version":3,"names":["Store","require","KeyValueIndex","KeyValueStore","constructor","ipfs","id","dbname","options","opts","Object","assign","Index","_type","all","_index","get","key","set","data","put","_addOperation","op","value","del","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/orbit-db-kvstore/src/KeyValueStore.js"],"sourcesContent":["'use strict'\n\nconst Store = require('orbit-db-store')\nconst KeyValueIndex = require('./KeyValueIndex')\n\nclass KeyValueStore extends Store {\n  constructor(ipfs, id, dbname, options) {\n    let opts = Object.assign({}, { Index: KeyValueIndex })\n    Object.assign(opts, options)\n    super(ipfs, id, dbname, opts)\n    this._type = 'keyvalue'\n  }\n\n  get all () {\n    return this._index._index\n  }\n\n  get (key) {\n    return this._index.get(key)\n  }\n\n  set (key, data, options = {}) {\n    return this.put(key, data, options)\n  }\n\n  put (key, data, options = {}) {\n    return this._addOperation({\n      op: 'PUT',\n      key: key,\n      value: data\n    }, options)\n  }\n\n  del (key, options = {}) {\n    return this._addOperation({\n      op: 'DEL',\n      key: key,\n      value: null\n    }, options)\n  }\n}\n\nmodule.exports = KeyValueStore\n"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA7B;;AAEA,MAAME,aAAN,SAA4BH,KAA5B,CAAkC;EAChCI,WAAW,CAACC,IAAD,EAAOC,EAAP,EAAWC,MAAX,EAAmBC,OAAnB,EAA4B;IACrC,IAAIC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;MAAEC,KAAK,EAAEV;IAAT,CAAlB,CAAX;IACAQ,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoBD,OAApB;IACA,MAAMH,IAAN,EAAYC,EAAZ,EAAgBC,MAAhB,EAAwBE,IAAxB;IACA,KAAKI,KAAL,GAAa,UAAb;EACD;;EAEM,IAAHC,GAAG,GAAI;IACT,OAAO,KAAKC,MAAL,CAAYA,MAAnB;EACD;;EAEDC,GAAG,CAAEC,GAAF,EAAO;IACR,OAAO,KAAKF,MAAL,CAAYC,GAAZ,CAAgBC,GAAhB,CAAP;EACD;;EAEDC,GAAG,CAAED,GAAF,EAAOE,IAAP,EAA2B;IAAA,IAAdX,OAAc,uEAAJ,EAAI;IAC5B,OAAO,KAAKY,GAAL,CAASH,GAAT,EAAcE,IAAd,EAAoBX,OAApB,CAAP;EACD;;EAEDY,GAAG,CAAEH,GAAF,EAAOE,IAAP,EAA2B;IAAA,IAAdX,OAAc,uEAAJ,EAAI;IAC5B,OAAO,KAAKa,aAAL,CAAmB;MACxBC,EAAE,EAAE,KADoB;MAExBL,GAAG,EAAEA,GAFmB;MAGxBM,KAAK,EAAEJ;IAHiB,CAAnB,EAIJX,OAJI,CAAP;EAKD;;EAEDgB,GAAG,CAAEP,GAAF,EAAqB;IAAA,IAAdT,OAAc,uEAAJ,EAAI;IACtB,OAAO,KAAKa,aAAL,CAAmB;MACxBC,EAAE,EAAE,KADoB;MAExBL,GAAG,EAAEA,GAFmB;MAGxBM,KAAK,EAAE;IAHiB,CAAnB,EAIJf,OAJI,CAAP;EAKD;;AAlC+B;;AAqClCiB,MAAM,CAACC,OAAP,GAAiBvB,aAAjB"},"metadata":{},"sourceType":"script"}
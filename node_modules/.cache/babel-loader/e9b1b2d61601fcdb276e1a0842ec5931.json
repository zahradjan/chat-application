{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.XX = void 0;\n\nconst buffer_1 = require(\"buffer\");\n\nconst utils_1 = require(\"../utils\");\n\nconst abstract_handshake_1 = require(\"./abstract-handshake\");\n\nclass XX extends abstract_handshake_1.AbstractHandshake {\n  initializeInitiator(prologue, s, rs, psk) {\n    const name = 'Noise_XX_25519_ChaChaPoly_SHA256';\n    const ss = this.initializeSymmetric(name);\n    this.mixHash(ss, prologue);\n    const re = buffer_1.Buffer.alloc(32);\n    return {\n      ss,\n      s,\n      rs,\n      psk,\n      re\n    };\n  }\n\n  initializeResponder(prologue, s, rs, psk) {\n    const name = 'Noise_XX_25519_ChaChaPoly_SHA256';\n    const ss = this.initializeSymmetric(name);\n    this.mixHash(ss, prologue);\n    const re = buffer_1.Buffer.alloc(32);\n    return {\n      ss,\n      s,\n      rs,\n      psk,\n      re\n    };\n  }\n\n  writeMessageA(hs, payload, e) {\n    const ns = buffer_1.Buffer.alloc(0);\n\n    if (e !== undefined) {\n      hs.e = e;\n    } else {\n      hs.e = utils_1.generateKeypair();\n    }\n\n    const ne = hs.e.publicKey;\n    this.mixHash(hs.ss, ne);\n    const ciphertext = this.encryptAndHash(hs.ss, payload);\n    return {\n      ne,\n      ns,\n      ciphertext\n    };\n  }\n\n  writeMessageB(hs, payload) {\n    hs.e = utils_1.generateKeypair();\n    const ne = hs.e.publicKey;\n    this.mixHash(hs.ss, ne);\n    this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.re));\n    const spk = buffer_1.Buffer.from(hs.s.publicKey);\n    const ns = this.encryptAndHash(hs.ss, spk);\n    this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.re));\n    const ciphertext = this.encryptAndHash(hs.ss, payload);\n    return {\n      ne,\n      ns,\n      ciphertext\n    };\n  }\n\n  writeMessageC(hs, payload) {\n    const spk = buffer_1.Buffer.from(hs.s.publicKey);\n    const ns = this.encryptAndHash(hs.ss, spk);\n    this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.re));\n    const ciphertext = this.encryptAndHash(hs.ss, payload);\n    const ne = this.createEmptyKey();\n    const messageBuffer = {\n      ne,\n      ns,\n      ciphertext\n    };\n    const {\n      cs1,\n      cs2\n    } = this.split(hs.ss);\n    return {\n      h: hs.ss.h,\n      messageBuffer,\n      cs1,\n      cs2\n    };\n  }\n\n  readMessageA(hs, message) {\n    if (utils_1.isValidPublicKey(message.ne)) {\n      hs.re = message.ne;\n    }\n\n    this.mixHash(hs.ss, hs.re);\n    return this.decryptAndHash(hs.ss, message.ciphertext);\n  }\n\n  readMessageB(hs, message) {\n    if (utils_1.isValidPublicKey(message.ne)) {\n      hs.re = message.ne;\n    }\n\n    this.mixHash(hs.ss, hs.re);\n\n    if (!hs.e) {\n      throw new Error('Handshake state `e` param is missing.');\n    }\n\n    this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.re));\n    const {\n      plaintext: ns,\n      valid: valid1\n    } = this.decryptAndHash(hs.ss, message.ns);\n\n    if (valid1 && ns.length === 32 && utils_1.isValidPublicKey(ns)) {\n      hs.rs = ns;\n    }\n\n    this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.rs));\n    const {\n      plaintext,\n      valid: valid2\n    } = this.decryptAndHash(hs.ss, message.ciphertext);\n    return {\n      plaintext,\n      valid: valid1 && valid2\n    };\n  }\n\n  readMessageC(hs, message) {\n    const {\n      plaintext: ns,\n      valid: valid1\n    } = this.decryptAndHash(hs.ss, message.ns);\n\n    if (valid1 && ns.length === 32 && utils_1.isValidPublicKey(ns)) {\n      hs.rs = ns;\n    }\n\n    if (!hs.e) {\n      throw new Error('Handshake state `e` param is missing.');\n    }\n\n    this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.rs));\n    const {\n      plaintext,\n      valid: valid2\n    } = this.decryptAndHash(hs.ss, message.ciphertext);\n    const {\n      cs1,\n      cs2\n    } = this.split(hs.ss);\n    return {\n      h: hs.ss.h,\n      plaintext,\n      valid: valid1 && valid2,\n      cs1,\n      cs2\n    };\n  }\n\n  initSession(initiator, prologue, s) {\n    const psk = this.createEmptyKey();\n    const rs = buffer_1.Buffer.alloc(32); // no static key yet\n\n    let hs;\n\n    if (initiator) {\n      hs = this.initializeInitiator(prologue, s, rs, psk);\n    } else {\n      hs = this.initializeResponder(prologue, s, rs, psk);\n    }\n\n    return {\n      hs,\n      i: initiator,\n      mc: 0\n    };\n  }\n\n  sendMessage(session, message, ephemeral) {\n    let messageBuffer;\n\n    if (session.mc === 0) {\n      messageBuffer = this.writeMessageA(session.hs, message, ephemeral);\n    } else if (session.mc === 1) {\n      messageBuffer = this.writeMessageB(session.hs, message);\n    } else if (session.mc === 2) {\n      const {\n        h,\n        messageBuffer: resultingBuffer,\n        cs1,\n        cs2\n      } = this.writeMessageC(session.hs, message);\n      messageBuffer = resultingBuffer;\n      session.h = h;\n      session.cs1 = cs1;\n      session.cs2 = cs2;\n    } else if (session.mc > 2) {\n      if (session.i) {\n        if (!session.cs1) {\n          throw new Error('CS1 (cipher state) is not defined');\n        }\n\n        messageBuffer = this.writeMessageRegular(session.cs1, message);\n      } else {\n        if (!session.cs2) {\n          throw new Error('CS2 (cipher state) is not defined');\n        }\n\n        messageBuffer = this.writeMessageRegular(session.cs2, message);\n      }\n    } else {\n      throw new Error('Session invalid.');\n    }\n\n    session.mc++;\n    return messageBuffer;\n  }\n\n  recvMessage(session, message) {\n    let plaintext = buffer_1.Buffer.alloc(0);\n    let valid = false;\n\n    if (session.mc === 0) {\n      ({\n        plaintext,\n        valid\n      } = this.readMessageA(session.hs, message));\n    } else if (session.mc === 1) {\n      ({\n        plaintext,\n        valid\n      } = this.readMessageB(session.hs, message));\n    } else if (session.mc === 2) {\n      const {\n        h,\n        plaintext: resultingPlaintext,\n        valid: resultingValid,\n        cs1,\n        cs2\n      } = this.readMessageC(session.hs, message);\n      plaintext = resultingPlaintext;\n      valid = resultingValid;\n      session.h = h;\n      session.cs1 = cs1;\n      session.cs2 = cs2;\n    }\n\n    session.mc++;\n    return {\n      plaintext,\n      valid\n    };\n  }\n\n}\n\nexports.XX = XX;","map":{"version":3,"mappings":"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","names":["XX","abstract_handshake_1","initializeInitiator","prologue","s","rs","psk","name","ss","initializeSymmetric","mixHash","re","buffer_1","alloc","initializeResponder","writeMessageA","hs","payload","e","ns","undefined","utils_1","ne","publicKey","ciphertext","encryptAndHash","writeMessageB","mixKey","dh","privateKey","spk","from","writeMessageC","createEmptyKey","messageBuffer","cs1","cs2","split","h","readMessageA","message","decryptAndHash","readMessageB","Error","plaintext","valid","valid1","length","valid2","readMessageC","initSession","initiator","i","mc","sendMessage","session","ephemeral","resultingBuffer","writeMessageRegular","recvMessage","resultingPlaintext","resultingValid","exports"],"sourceRoot":"","sources":["../../../src/handshakes/xx.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}
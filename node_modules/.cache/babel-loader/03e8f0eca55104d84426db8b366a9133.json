{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IWantTracer = void 0;\n\nvar constants_1 = require(\"./constants\");\n\nvar utils_1 = require(\"./utils\");\n\nvar pubsubErrors = require(\"libp2p-interfaces/src/pubsub/errors\");\n\nvar _pubsubErrors$codes = pubsubErrors.codes,\n    ERR_INVALID_SIGNATURE = _pubsubErrors$codes.ERR_INVALID_SIGNATURE,\n    ERR_MISSING_SIGNATURE = _pubsubErrors$codes.ERR_MISSING_SIGNATURE;\n/**\n * IWantTracer is an internal tracer that tracks IWANT requests in order to penalize\n * peers who don't follow up on IWANT requests after an IHAVE advertisement.\n * The tracking of promises is probabilistic to avoid using too much memory.\n *\n * Note: Do not confuse these 'promises' with JS Promise objects.\n * These 'promises' are merely expectations of a peer's behavior.\n */\n\nvar IWantTracer = /*#__PURE__*/function () {\n  function IWantTracer(getMsgId) {\n    _classCallCheck(this, IWantTracer);\n\n    this.getMsgId = getMsgId;\n    this.promises = new Map();\n  }\n  /**\n   * Track a promise to deliver a message from a list of msgIDs we are requesting\n   * @param {string} p peer id\n   * @param {string[]} msgIds\n   * @returns {void}\n   */\n\n\n  _createClass(IWantTracer, [{\n    key: \"addPromise\",\n    value: function addPromise(p, msgIds) {\n      // pick msgId randomly from the list\n      var ix = Math.floor(Math.random() * msgIds.length);\n      var msgId = msgIds[ix];\n      var msgIdStr = utils_1.messageIdToString(msgId);\n      var peers = this.promises.get(msgIdStr);\n\n      if (!peers) {\n        peers = new Map();\n        this.promises.set(msgIdStr, peers);\n      }\n\n      if (!peers.has(p)) {\n        peers.set(p, Date.now() + constants_1.GossipsubIWantFollowupTime);\n      }\n    }\n    /**\n     * Returns the number of broken promises for each peer who didn't follow up on an IWANT request.\n     * @returns {Map<string, number>}\n     */\n\n  }, {\n    key: \"getBrokenPromises\",\n    value: function getBrokenPromises() {\n      var _this = this;\n\n      var now = Date.now();\n      var result = new Map();\n      this.promises.forEach(function (peers, msgId) {\n        peers.forEach(function (expire, p) {\n          // the promise has been broken\n          if (expire < now) {\n            // add 1 to result\n            result.set(p, (result.get(p) || 0) + 1); // delete from tracked promises\n\n            peers.delete(p);\n          }\n        }); // clean up empty promises for a msgId\n\n        if (!peers.size) {\n          _this.promises.delete(msgId);\n        }\n      });\n      return result;\n    }\n    /**\n     * Someone delivered a message, stop tracking promises for it\n     * @param {InMessage} msg\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: \"deliverMessage\",\n    value: function deliverMessage(msg) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var msgId, msgIdStr;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.getMsgId(msg);\n\n              case 2:\n                msgId = _context.sent;\n                msgIdStr = utils_1.messageIdToString(msgId);\n                this.promises.delete(msgIdStr);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n    /**\n     * A message got rejected, so we can stop tracking promises and let the score penalty apply from invalid message delivery,\n     * unless its an obviously invalid message.\n     * @param {InMessage} msg\n     * @param {string} reason\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: \"rejectMessage\",\n    value: function rejectMessage(msg, reason) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var msgId, msgIdStr;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.t0 = reason;\n                _context2.next = _context2.t0 === ERR_INVALID_SIGNATURE ? 3 : _context2.t0 === ERR_MISSING_SIGNATURE ? 3 : 4;\n                break;\n\n              case 3:\n                return _context2.abrupt(\"return\");\n\n              case 4:\n                _context2.next = 6;\n                return this.getMsgId(msg);\n\n              case 6:\n                msgId = _context2.sent;\n                msgIdStr = utils_1.messageIdToString(msgId);\n                this.promises.delete(msgIdStr);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.promises.clear();\n    }\n  }]);\n\n  return IWantTracer;\n}();\n\nexports.IWantTracer = IWantTracer;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","IWantTracer","constants_1","require","utils_1","pubsubErrors","codes","ERR_INVALID_SIGNATURE","ERR_MISSING_SIGNATURE","getMsgId","promises","Map","p","msgIds","ix","Math","floor","random","length","msgId","msgIdStr","messageIdToString","peers","get","set","has","Date","now","GossipsubIWantFollowupTime","forEach","expire","delete","size","msg","reason","clear"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p-gossipsub/src/tracer.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IWantTracer = void 0;\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"./utils\");\nconst pubsubErrors = require(\"libp2p-interfaces/src/pubsub/errors\");\nconst { ERR_INVALID_SIGNATURE, ERR_MISSING_SIGNATURE } = pubsubErrors.codes;\n/**\n * IWantTracer is an internal tracer that tracks IWANT requests in order to penalize\n * peers who don't follow up on IWANT requests after an IHAVE advertisement.\n * The tracking of promises is probabilistic to avoid using too much memory.\n *\n * Note: Do not confuse these 'promises' with JS Promise objects.\n * These 'promises' are merely expectations of a peer's behavior.\n */\nclass IWantTracer {\n    constructor(getMsgId) {\n        this.getMsgId = getMsgId;\n        this.promises = new Map();\n    }\n    /**\n     * Track a promise to deliver a message from a list of msgIDs we are requesting\n     * @param {string} p peer id\n     * @param {string[]} msgIds\n     * @returns {void}\n     */\n    addPromise(p, msgIds) {\n        // pick msgId randomly from the list\n        const ix = Math.floor(Math.random() * msgIds.length);\n        const msgId = msgIds[ix];\n        const msgIdStr = utils_1.messageIdToString(msgId);\n        let peers = this.promises.get(msgIdStr);\n        if (!peers) {\n            peers = new Map();\n            this.promises.set(msgIdStr, peers);\n        }\n        if (!peers.has(p)) {\n            peers.set(p, Date.now() + constants_1.GossipsubIWantFollowupTime);\n        }\n    }\n    /**\n     * Returns the number of broken promises for each peer who didn't follow up on an IWANT request.\n     * @returns {Map<string, number>}\n     */\n    getBrokenPromises() {\n        const now = Date.now();\n        const result = new Map();\n        this.promises.forEach((peers, msgId) => {\n            peers.forEach((expire, p) => {\n                // the promise has been broken\n                if (expire < now) {\n                    // add 1 to result\n                    result.set(p, (result.get(p) || 0) + 1);\n                    // delete from tracked promises\n                    peers.delete(p);\n                }\n            });\n            // clean up empty promises for a msgId\n            if (!peers.size) {\n                this.promises.delete(msgId);\n            }\n        });\n        return result;\n    }\n    /**\n     * Someone delivered a message, stop tracking promises for it\n     * @param {InMessage} msg\n     * @returns {Promise<void>}\n     */\n    deliverMessage(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const msgId = yield this.getMsgId(msg);\n            const msgIdStr = utils_1.messageIdToString(msgId);\n            this.promises.delete(msgIdStr);\n        });\n    }\n    /**\n     * A message got rejected, so we can stop tracking promises and let the score penalty apply from invalid message delivery,\n     * unless its an obviously invalid message.\n     * @param {InMessage} msg\n     * @param {string} reason\n     * @returns {Promise<void>}\n     */\n    rejectMessage(msg, reason) {\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (reason) {\n                case ERR_INVALID_SIGNATURE:\n                case ERR_MISSING_SIGNATURE:\n                    return;\n            }\n            const msgId = yield this.getMsgId(msg);\n            const msgIdStr = utils_1.messageIdToString(msgId);\n            this.promises.delete(msgIdStr);\n        });\n    }\n    clear() {\n        this.promises.clear();\n    }\n}\nexports.IWantTracer = IWantTracer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
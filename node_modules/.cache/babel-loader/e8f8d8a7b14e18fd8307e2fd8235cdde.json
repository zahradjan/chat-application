{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar pkg = require('../../package.json');\n\nvar withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\n\n\nmodule.exports = function (_ref) {\n  var repo = _ref.repo;\n\n  /**\n   * @type {import('ipfs-core-types/src/root').API[\"version\"]}\n   */\n  function version() {\n    return _version.apply(this, arguments);\n  }\n\n  function _version() {\n    _version = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _options,\n          repoVersion,\n          _args = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return repo.version.get();\n\n            case 3:\n              repoVersion = _context.sent;\n              return _context.abrupt(\"return\", {\n                version: pkg.version,\n                repo: \"\".concat(repoVersion),\n                // @ts-ignore gitHead is defined in published versions\n                commit: pkg.gitHead || '',\n                'interface-ipfs-core': pkg.devDependencies['interface-ipfs-core']\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _version.apply(this, arguments);\n  }\n\n  return withTimeoutOption(version);\n};","map":{"version":3,"names":["pkg","require","withTimeoutOption","module","exports","repo","version","_options","get","repoVersion","commit","gitHead","devDependencies"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/version.js"],"sourcesContent":["'use strict'\n\nconst pkg = require('../../package.json')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nmodule.exports = ({ repo }) => {\n  /**\n   * @type {import('ipfs-core-types/src/root').API[\"version\"]}\n   */\n  async function version (_options = {}) {\n    const repoVersion = await repo.version.get()\n\n    return {\n      version: pkg.version,\n      repo: `${repoVersion}`,\n\n      // @ts-ignore gitHead is defined in published versions\n      commit: pkg.gitHead || '',\n      'interface-ipfs-core': pkg.devDependencies['interface-ipfs-core']\n    }\n  }\n\n  return withTimeoutOption(version)\n}\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,oBAAD,CAAnB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,gBAAc;EAAA,IAAXC,IAAW,QAAXA,IAAW;;EAC7B;AACF;AACA;EAH+B,SAIdC,OAJc;IAAA;EAAA;;EAAA;IAAA,sEAI7B;MAAA;MAAA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAwBC,QAAxB,2DAAmC,EAAnC;cAAA;cAAA,OAC4BF,IAAI,CAACC,OAAL,CAAaE,GAAb,EAD5B;;YAAA;cACQC,WADR;cAAA,iCAGS;gBACLH,OAAO,EAAEN,GAAG,CAACM,OADR;gBAELD,IAAI,YAAKI,WAAL,CAFC;gBAIL;gBACAC,MAAM,EAAEV,GAAG,CAACW,OAAJ,IAAe,EALlB;gBAML,uBAAuBX,GAAG,CAACY,eAAJ,CAAoB,qBAApB;cANlB,CAHT;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJ6B;IAAA;EAAA;;EAiB7B,OAAOV,iBAAiB,CAACI,OAAD,CAAxB;AACD,CAlBD"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import IpfsPubsubPeerMonitor from \"ipfs-pubsub-peer-monitor\";\nimport { makeAutoObservable, runInAction, toJS } from \"mobx\";\nexport class MonitorStore {\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.monitor = undefined;\n    this.peersDb = undefined;\n    this.peers = [];\n    this.errorMessage = \"\";\n    this.topicName = \"DecentioGlobalNetwork\";\n    this.texDecoder = new TextDecoder();\n    makeAutoObservable(this);\n  }\n\n  async init() {\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\n    runInAction(async () => {\n      await this.subscribeToOwnPubsub();\n      await this.subscribeToDecentioPubsub();\n      await this.loadPeersDb();\n      await this.setPeersFromDb();\n      this.monitor = new IpfsPubsubPeerMonitor(this.rootStore.dataStore.ipfsNode.pubsub, this.topicName);\n      await this.listenForJoinedPeers();\n      await this.listenForLeftPeers();\n    });\n  }\n\n  async isMonitorReady() {\n    return !!this.monitor;\n  }\n\n  async setPeersFromDb() {\n    const all = await toJS(this.peersDb.all);\n    runInAction(() => {\n      all.map(e => {\n        // console.log(e.payload.value);\n        return this.peers.push(e.payload.value);\n      });\n    });\n  }\n\n  async listenForJoinedPeers() {\n    this.monitor.on(\"join\", async peerJoined => {\n      console.log(\"Peer joined: \" + peerJoined);\n      console.log(`Peers on Pubsub ${this.topicName}: ` + (await this.monitor.getPeers()));\n      setTimeout(async () => {\n        let peerInDb = this.peerIsInDb(peerJoined);\n\n        if (!peerInDb) {\n          await this.sendUserDbId(peerJoined);\n        }\n      }, 2000);\n    });\n  }\n\n  async listenForLeftPeers() {\n    this.monitor.on(\"leave\", async peerLeft => {\n      console.log(\"Peer left: \" + peerLeft);\n      console.log(`Peers on Pubsub ${this.topicName}: ` + (await this.monitor.getPeers()));\n    });\n  }\n\n  setErrorMessage(errorMessage) {\n    this.errorMessage = errorMessage;\n  }\n\n  peerIsInDb(peer) {\n    console.log(peer);\n    const peers = toJS(this.peers);\n    console.log(toJS(this.peers));\n    return peers.find(item => item.user.peerId === peer);\n  }\n\n  userAlreadyExist(user) {\n    console.log(user);\n    const peers = toJS(this.peers);\n    console.log(toJS(this.peers));\n    return peers.find(item => item.user._username === user);\n  } // passwordCorrect(user) {\n  //   console.log(user);\n  //   const peers = toJS(this.peers);\n  //   console.log(toJS(this.peers));\n  //   return peers.find((item) => item.user._username === user);\n  // }\n\n\n  async savePeer(peer) {\n    runInAction(async () => {\n      console.log(!this.peerIsInDb(peer));\n\n      if (!this.peerIsInDb(peer)) {\n        this.peers.push(peer);\n        await this.peersDb.add(peer);\n      }\n    });\n  }\n\n  async removePeer(peer) {\n    const entry = await this.peersDb.iterator().collect().map(item => item.payload.value === peer ? item : undefined);\n    console.log(entry);\n\n    if (entry) {\n      await this.peersDb.remove(entry[0].hash);\n    }\n  }\n\n  async sendUserDbId(peer) {\n    const userDbId = await this.rootStore.userStore.getUserDbId();\n    const stringifyPayload = JSON.stringify({\n      userDb: userDbId\n    });\n    console.log(stringifyPayload);\n    await this.rootStore.dataStore.ipfsNode.pubsub.publish(peer, stringifyPayload);\n  }\n\n  async subscribeToOwnPubsub() {\n    const peerInfoId = this.rootStore.dataStore.peerId;\n    console.log(\"Peer ID: \" + peerInfoId);\n    await this.rootStore.dataStore.ipfsNode.pubsub.subscribe(peerInfoId, async msg => {\n      if (typeof msg.data === \"object\") msg.data = this.texDecoder.decode(msg.data);\n      const parsedMsg = JSON.parse(msg.data);\n      let targetRoom;\n\n      if (parsedMsg.userDb) {\n        await this.replicateUserDb(parsedMsg);\n        targetRoom = await this.rootStore.roomStore.createRoom(msg.from);\n        await targetRoom.init();\n      } else {\n        targetRoom = this.rootStore.roomStore.getRoom(msg.from);\n        console.log(targetRoom);\n      }\n\n      if (targetRoom) {\n        targetRoom.setMessage(msg);\n      }\n    });\n  }\n\n  async subscribeToDecentioPubsub() {\n    await this.rootStore.dataStore.ipfsNode.pubsub.subscribe(\"DecentioGlobalNetwork\", () => {});\n  }\n\n  async replicateUserDb(parsedMsg) {\n    var peerDbOuter = await this.rootStore.dataStore.orbitDb.open(parsedMsg.userDb);\n    await peerDbOuter.load();\n    peerDbOuter.events.on(\"replicated\", async () => {\n      console.log(\"DB replicated\");\n      await this.peersDb.add(peerDbOuter.all);\n      console.log(this.peersDb.all);\n      this.peers.push(peerDbOuter.all);\n    });\n  }\n\n  async loadPeersDb() {\n    this.peersDb = await this.rootStore.dataStore.orbitDb.feed(\"peers\");\n    await this.peersDb.load();\n  }\n\n  replicatePeersDB() {\n    setTimeout(async () => {\n      const nodeId = await this.rootStore.dataStore.getPeerId();\n      const peersDbId = await this.peersDb.id;\n      console.log(nodeId);\n      await this.peersDb.all.map(peer => {\n        const peerId = peer.payload.value;\n\n        if (peerId !== nodeId) {\n          console.log(\"jsem tu \");\n          console.log(peerId);\n          console.log(peersDbId);\n          const stringifyPayload = JSON.stringify({\n            peerDb: peersDbId\n          });\n          this.rootStore.dataStore.ipfsNode.pubsub.publish(peerId, stringifyPayload);\n        }\n      });\n    }, 2000);\n  }\n\n  async queryCatalog(queryFn) {\n    //  const dbAddrs = Object.values(this.peersDb.all).map(peer => peer.pieces)\n    const allPieces = await Promise.all(this.peersDb.all.map(async addr => {\n      const db = await this.rootStore.dataStore.orbitDb.open(addr);\n      await db.load();\n      return db.query(queryFn);\n    })); // return allPieces.reduce((flatPieces, pieces) => flatPieces.concat(pieces), this.pieces.query(queryFn))\n  }\n\n  processMessage(msg) {\n    if (typeof msg.data === \"object\") msg.data = this.texDecoder.decode(msg.data);\n  }\n\n  async getPeersDbId() {\n    const id = await this.peersDb.id;\n    return id;\n  }\n\n}","map":{"version":3,"names":["IpfsPubsubPeerMonitor","makeAutoObservable","runInAction","toJS","MonitorStore","constructor","rootStore","monitor","undefined","peersDb","peers","errorMessage","topicName","texDecoder","TextDecoder","init","dataStore","ipfsNode","Error","orbitDb","subscribeToOwnPubsub","subscribeToDecentioPubsub","loadPeersDb","setPeersFromDb","pubsub","listenForJoinedPeers","listenForLeftPeers","isMonitorReady","all","map","e","push","payload","value","on","peerJoined","console","log","getPeers","setTimeout","peerInDb","peerIsInDb","sendUserDbId","peerLeft","setErrorMessage","peer","find","item","user","peerId","userAlreadyExist","_username","savePeer","add","removePeer","entry","iterator","collect","remove","hash","userDbId","userStore","getUserDbId","stringifyPayload","JSON","stringify","userDb","publish","peerInfoId","subscribe","msg","data","decode","parsedMsg","parse","targetRoom","replicateUserDb","roomStore","createRoom","from","getRoom","setMessage","peerDbOuter","open","load","events","feed","replicatePeersDB","nodeId","getPeerId","peersDbId","id","peerDb","queryCatalog","queryFn","allPieces","Promise","addr","db","query","processMessage","getPeersDbId"],"sources":["C:/Users/zajan/GitHub/chatApplication/src/data/store/MonitorStore.js"],"sourcesContent":["import IpfsPubsubPeerMonitor from \"ipfs-pubsub-peer-monitor\";\r\nimport { makeAutoObservable, runInAction, toJS } from \"mobx\";\r\n\r\nexport class MonitorStore {\r\n  monitor;\r\n  topicName;\r\n  peers;\r\n  peersDb;\r\n  texDecoder;\r\n  errorMessage;\r\n  constructor(rootStore) {\r\n    this.rootStore = rootStore;\r\n    this.monitor = undefined;\r\n    this.peersDb = undefined;\r\n    this.peers = [];\r\n    this.errorMessage = \"\";\r\n    this.topicName = \"DecentioGlobalNetwork\";\r\n    this.texDecoder = new TextDecoder();\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  async init() {\r\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\r\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\r\n    runInAction(async () => {\r\n      await this.subscribeToOwnPubsub();\r\n      await this.subscribeToDecentioPubsub();\r\n      await this.loadPeersDb();\r\n      await this.setPeersFromDb();\r\n      this.monitor = new IpfsPubsubPeerMonitor(this.rootStore.dataStore.ipfsNode.pubsub, this.topicName);\r\n      await this.listenForJoinedPeers();\r\n      await this.listenForLeftPeers();\r\n    });\r\n  }\r\n  async isMonitorReady() {\r\n    return !!this.monitor;\r\n  }\r\n\r\n  async setPeersFromDb() {\r\n    const all = await toJS(this.peersDb.all);\r\n    runInAction(() => {\r\n      all.map((e) => {\r\n        // console.log(e.payload.value);\r\n        return this.peers.push(e.payload.value);\r\n      });\r\n    });\r\n  }\r\n\r\n  async listenForJoinedPeers() {\r\n    this.monitor.on(\"join\", async (peerJoined) => {\r\n      console.log(\"Peer joined: \" + peerJoined);\r\n      console.log(`Peers on Pubsub ${this.topicName}: ` + (await this.monitor.getPeers()));\r\n      setTimeout(async () => {\r\n        let peerInDb = this.peerIsInDb(peerJoined);\r\n\r\n        if (!peerInDb) {\r\n          await this.sendUserDbId(peerJoined);\r\n        }\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  async listenForLeftPeers() {\r\n    this.monitor.on(\"leave\", async (peerLeft) => {\r\n      console.log(\"Peer left: \" + peerLeft);\r\n      console.log(`Peers on Pubsub ${this.topicName}: ` + (await this.monitor.getPeers()));\r\n    });\r\n  }\r\n  setErrorMessage(errorMessage) {\r\n    this.errorMessage = errorMessage;\r\n  }\r\n\r\n  peerIsInDb(peer) {\r\n    console.log(peer);\r\n    const peers = toJS(this.peers);\r\n    console.log(toJS(this.peers));\r\n    return peers.find((item) => item.user.peerId === peer);\r\n  }\r\n\r\n  userAlreadyExist(user) {\r\n    console.log(user);\r\n    const peers = toJS(this.peers);\r\n    console.log(toJS(this.peers));\r\n    return peers.find((item) => item.user._username === user);\r\n  }\r\n\r\n  // passwordCorrect(user) {\r\n  //   console.log(user);\r\n  //   const peers = toJS(this.peers);\r\n  //   console.log(toJS(this.peers));\r\n  //   return peers.find((item) => item.user._username === user);\r\n  // }\r\n\r\n  async savePeer(peer) {\r\n    runInAction(async () => {\r\n      console.log(!this.peerIsInDb(peer));\r\n      if (!this.peerIsInDb(peer)) {\r\n        this.peers.push(peer);\r\n        await this.peersDb.add(peer);\r\n      }\r\n    });\r\n  }\r\n  async removePeer(peer) {\r\n    const entry = await this.peersDb\r\n      .iterator()\r\n      .collect()\r\n      .map((item) => (item.payload.value === peer ? item : undefined));\r\n    console.log(entry);\r\n    if (entry) {\r\n      await this.peersDb.remove(entry[0].hash);\r\n    }\r\n  }\r\n  async sendUserDbId(peer) {\r\n    const userDbId = await this.rootStore.userStore.getUserDbId();\r\n\r\n    const stringifyPayload = JSON.stringify({ userDb: userDbId });\r\n    console.log(stringifyPayload);\r\n    await this.rootStore.dataStore.ipfsNode.pubsub.publish(peer, stringifyPayload);\r\n  }\r\n\r\n  async subscribeToOwnPubsub() {\r\n    const peerInfoId = this.rootStore.dataStore.peerId;\r\n    console.log(\"Peer ID: \" + peerInfoId);\r\n    await this.rootStore.dataStore.ipfsNode.pubsub.subscribe(peerInfoId, async (msg) => {\r\n      if (typeof msg.data === \"object\") msg.data = this.texDecoder.decode(msg.data);\r\n      const parsedMsg = JSON.parse(msg.data);\r\n      let targetRoom;\r\n      if (parsedMsg.userDb) {\r\n        await this.replicateUserDb(parsedMsg);\r\n        targetRoom = await this.rootStore.roomStore.createRoom(msg.from);\r\n        await targetRoom.init();\r\n      } else {\r\n        targetRoom = this.rootStore.roomStore.getRoom(msg.from);\r\n        console.log(targetRoom);\r\n      }\r\n      if (targetRoom) {\r\n        targetRoom.setMessage(msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  async subscribeToDecentioPubsub() {\r\n    await this.rootStore.dataStore.ipfsNode.pubsub.subscribe(\"DecentioGlobalNetwork\", () => {});\r\n  }\r\n\r\n  async replicateUserDb(parsedMsg) {\r\n    var peerDbOuter = await this.rootStore.dataStore.orbitDb.open(parsedMsg.userDb);\r\n    await peerDbOuter.load();\r\n    peerDbOuter.events.on(\"replicated\", async () => {\r\n      console.log(\"DB replicated\");\r\n      await this.peersDb.add(peerDbOuter.all);\r\n      console.log(this.peersDb.all);\r\n      this.peers.push(peerDbOuter.all);\r\n    });\r\n  }\r\n\r\n  async loadPeersDb() {\r\n    this.peersDb = await this.rootStore.dataStore.orbitDb.feed(\"peers\");\r\n    await this.peersDb.load();\r\n  }\r\n\r\n  replicatePeersDB() {\r\n    setTimeout(async () => {\r\n      const nodeId = await this.rootStore.dataStore.getPeerId();\r\n      const peersDbId = await this.peersDb.id;\r\n      console.log(nodeId);\r\n      await this.peersDb.all.map((peer) => {\r\n        const peerId = peer.payload.value;\r\n        if (peerId !== nodeId) {\r\n          console.log(\"jsem tu \");\r\n          console.log(peerId);\r\n          console.log(peersDbId);\r\n          const stringifyPayload = JSON.stringify({ peerDb: peersDbId });\r\n          this.rootStore.dataStore.ipfsNode.pubsub.publish(peerId, stringifyPayload);\r\n        }\r\n      });\r\n    }, 2000);\r\n  }\r\n\r\n  async queryCatalog(queryFn) {\r\n    //  const dbAddrs = Object.values(this.peersDb.all).map(peer => peer.pieces)\r\n\r\n    const allPieces = await Promise.all(\r\n      this.peersDb.all.map(async (addr) => {\r\n        const db = await this.rootStore.dataStore.orbitDb.open(addr);\r\n        await db.load();\r\n\r\n        return db.query(queryFn);\r\n      })\r\n    );\r\n\r\n    // return allPieces.reduce((flatPieces, pieces) => flatPieces.concat(pieces), this.pieces.query(queryFn))\r\n  }\r\n\r\n  processMessage(msg) {\r\n    if (typeof msg.data === \"object\") msg.data = this.texDecoder.decode(msg.data);\r\n  }\r\n  async getPeersDbId() {\r\n    const id = await this.peersDb.id;\r\n    return id;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
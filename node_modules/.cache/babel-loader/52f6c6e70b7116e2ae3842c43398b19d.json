{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _get = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _inherits = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.XXFallbackHandshake = void 0;\n\nvar buffer_1 = require(\"buffer\");\n\nvar handshake_xx_1 = require(\"./handshake-xx\");\n\nvar utils_1 = require(\"./utils\");\n\nvar logger_1 = require(\"./logger\");\n\nvar encoder_1 = require(\"./encoder\");\n\nvar XXFallbackHandshake = /*#__PURE__*/function (_handshake_xx_1$XXHan) {\n  _inherits(XXFallbackHandshake, _handshake_xx_1$XXHan);\n\n  var _super = _createSuper(XXFallbackHandshake);\n\n  function XXFallbackHandshake(isInitiator, payload, prologue, staticKeypair, connection, initialMsg, remotePeer, ephemeralKeys, handshake) {\n    var _this;\n\n    _classCallCheck(this, XXFallbackHandshake);\n\n    _this = _super.call(this, isInitiator, payload, prologue, staticKeypair, connection, remotePeer, handshake);\n\n    if (ephemeralKeys) {\n      _this.ephemeralKeys = ephemeralKeys;\n    }\n\n    _this.initialMsg = initialMsg;\n    return _this;\n  } // stage 0\n  // eslint-disable-next-line require-await\n\n\n  _createClass(XXFallbackHandshake, [{\n    key: \"propose\",\n    value: function () {\n      var _propose = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var receivedMessageBuffer, _this$xx$recvMessage, valid;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.isInitiator) {\n                  _context.next = 6;\n                  break;\n                }\n\n                this.xx.sendMessage(this.session, buffer_1.Buffer.alloc(0), this.ephemeralKeys);\n                logger_1.logger('XX Fallback Stage 0 - Initialized state as the first message was sent by initiator.');\n                logger_1.logLocalEphemeralKeys(this.session.hs.e);\n                _context.next = 13;\n                break;\n\n              case 6:\n                logger_1.logger('XX Fallback Stage 0 - Responder decoding initial msg from IK.');\n                receivedMessageBuffer = encoder_1.decode0(this.initialMsg);\n                _this$xx$recvMessage = this.xx.recvMessage(this.session, {\n                  ne: receivedMessageBuffer.ne,\n                  ns: buffer_1.Buffer.alloc(0),\n                  ciphertext: buffer_1.Buffer.alloc(0)\n                }), valid = _this$xx$recvMessage.valid;\n\n                if (valid) {\n                  _context.next = 11;\n                  break;\n                }\n\n                throw new Error('xx fallback stage 0 decryption validation fail');\n\n              case 11:\n                logger_1.logger('XX Fallback Stage 0 - Responder used received message from IK.');\n                logger_1.logRemoteEphemeralKey(this.session.hs.re);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function propose() {\n        return _propose.apply(this, arguments);\n      }\n\n      return propose;\n    }() // stage 1\n\n  }, {\n    key: \"exchange\",\n    value: function () {\n      var _exchange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var receivedMessageBuffer, _this$xx$recvMessage2, plaintext, valid, decodedPayload, err;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.isInitiator) {\n                  _context2.next = 31;\n                  break;\n                }\n\n                receivedMessageBuffer = encoder_1.decode1(this.initialMsg);\n                _this$xx$recvMessage2 = this.xx.recvMessage(this.session, receivedMessageBuffer), plaintext = _this$xx$recvMessage2.plaintext, valid = _this$xx$recvMessage2.valid;\n\n                if (valid) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw new Error('xx fallback stage 1 decryption validation fail');\n\n              case 5:\n                logger_1.logger('XX Fallback Stage 1 - Initiator used received message from IK.');\n                logger_1.logRemoteEphemeralKey(this.session.hs.re);\n                logger_1.logRemoteStaticKey(this.session.hs.rs);\n                logger_1.logger(\"Initiator going to check remote's signature...\");\n                _context2.prev = 9;\n                _context2.next = 12;\n                return utils_1.decodePayload(plaintext);\n\n              case 12:\n                decodedPayload = _context2.sent;\n                _context2.t0 = this.remotePeer;\n\n                if (_context2.t0) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                _context2.next = 17;\n                return utils_1.getPeerIdFromPayload(decodedPayload);\n\n              case 17:\n                _context2.t0 = _context2.sent;\n\n              case 18:\n                this.remotePeer = _context2.t0;\n                _context2.next = 21;\n                return utils_1.verifySignedPayload(this.session.hs.rs, decodedPayload, this.remotePeer);\n\n              case 21:\n                this.setRemoteEarlyData(decodedPayload.data);\n                _context2.next = 28;\n                break;\n\n              case 24:\n                _context2.prev = 24;\n                _context2.t1 = _context2[\"catch\"](9);\n                err = _context2.t1;\n                throw new Error(\"Error occurred while verifying signed payload from responder: \".concat(err.message));\n\n              case 28:\n                logger_1.logger('All good with the signature!');\n                _context2.next = 35;\n                break;\n\n              case 31:\n                logger_1.logger('XX Fallback Stage 1 - Responder start');\n                _context2.next = 34;\n                return _get(_getPrototypeOf(XXFallbackHandshake.prototype), \"exchange\", this).call(this);\n\n              case 34:\n                logger_1.logger('XX Fallback Stage 1 - Responder end');\n\n              case 35:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[9, 24]]);\n      }));\n\n      function exchange() {\n        return _exchange.apply(this, arguments);\n      }\n\n      return exchange;\n    }()\n  }]);\n\n  return XXFallbackHandshake;\n}(handshake_xx_1.XXHandshake);\n\nexports.XXFallbackHandshake = XXFallbackHandshake;","map":{"version":3,"mappings":"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","names":["XXFallbackHandshake","isInitiator","payload","prologue","staticKeypair","connection","initialMsg","remotePeer","ephemeralKeys","handshake","xx","sendMessage","session","buffer_1","alloc","logger_1","hs","e","receivedMessageBuffer","encoder_1","recvMessage","ne","ns","ciphertext","valid","Error","re","plaintext","rs","utils_1","decodedPayload","setRemoteEarlyData","data","err","message","handshake_xx_1","exports"],"sourceRoot":"","sources":["../../src/handshake-xx-fallback.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar decoder = require('./decoder.js');\n\nclass CarIteratorBase {\n  constructor(version, roots, iterable) {\n    this._version = version;\n    this._roots = roots;\n    this._iterable = iterable;\n    this._decoded = false;\n  }\n\n  get version() {\n    return this._version;\n  }\n\n  async getRoots() {\n    return this._roots;\n  }\n\n}\n\nclass CarBlockIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n\n    this._decoded = true;\n    return this._iterable[Symbol.asyncIterator]();\n  }\n\n  static async fromBytes(bytes) {\n    const {\n      version,\n      roots,\n      iterator\n    } = await fromBytes(bytes);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n\n  static async fromIterable(asyncIterable) {\n    const {\n      version,\n      roots,\n      iterator\n    } = await fromIterable(asyncIterable);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n\n}\n\nclass CarCIDIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n\n    this._decoded = true;\n\n    const iterable = this._iterable[Symbol.asyncIterator]();\n\n    return {\n      async next() {\n        const next = await iterable.next();\n\n        if (next.done) {\n          return next;\n        }\n\n        return {\n          done: false,\n          value: next.value.cid\n        };\n      }\n\n    };\n  }\n\n  static async fromBytes(bytes) {\n    const {\n      version,\n      roots,\n      iterator\n    } = await fromBytes(bytes);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n\n  static async fromIterable(asyncIterable) {\n    const {\n      version,\n      roots,\n      iterator\n    } = await fromIterable(asyncIterable);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n\n}\n\nasync function fromBytes(bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new TypeError('fromBytes() requires a Uint8Array');\n  }\n\n  return decodeIterator(decoder.bytesReader(bytes));\n}\n\nasync function fromIterable(asyncIterable) {\n  if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n    throw new TypeError('fromIterable() requires an async iterable');\n  }\n\n  return decodeIterator(decoder.asyncIterableReader(asyncIterable));\n}\n\nasync function decodeIterator(reader) {\n  const decoder$1 = decoder.createDecoder(reader);\n  const {\n    version,\n    roots\n  } = await decoder$1.header();\n  return {\n    version,\n    roots,\n    iterator: decoder$1.blocks()\n  };\n}\n\nexports.CarBlockIterator = CarBlockIterator;\nexports.CarCIDIterator = CarCIDIterator;\nexports.CarIteratorBase = CarIteratorBase;","map":{"version":3,"names":["Object","defineProperty","exports","value","decoder","require","CarIteratorBase","constructor","version","roots","iterable","_version","_roots","_iterable","_decoded","getRoots","CarBlockIterator","Symbol","asyncIterator","Error","fromBytes","bytes","iterator","fromIterable","asyncIterable","CarCIDIterator","next","done","cid","Uint8Array","TypeError","decodeIterator","bytesReader","asyncIterableReader","reader","decoder$1","createDecoder","header","blocks"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/@ipld/car/cjs/lib/iterator.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar decoder = require('./decoder.js');\n\nclass CarIteratorBase {\n  constructor(version, roots, iterable) {\n    this._version = version;\n    this._roots = roots;\n    this._iterable = iterable;\n    this._decoded = false;\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n}\nclass CarBlockIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    return this._iterable[Symbol.asyncIterator]();\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n}\nclass CarCIDIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    const iterable = this._iterable[Symbol.asyncIterator]();\n    return {\n      async next() {\n        const next = await iterable.next();\n        if (next.done) {\n          return next;\n        }\n        return {\n          done: false,\n          value: next.value.cid\n        };\n      }\n    };\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n}\nasync function fromBytes(bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new TypeError('fromBytes() requires a Uint8Array');\n  }\n  return decodeIterator(decoder.bytesReader(bytes));\n}\nasync function fromIterable(asyncIterable) {\n  if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n    throw new TypeError('fromIterable() requires an async iterable');\n  }\n  return decodeIterator(decoder.asyncIterableReader(asyncIterable));\n}\nasync function decodeIterator(reader) {\n  const decoder$1 = decoder.createDecoder(reader);\n  const {version, roots} = await decoder$1.header();\n  return {\n    version,\n    roots,\n    iterator: decoder$1.blocks()\n  };\n}\n\nexports.CarBlockIterator = CarBlockIterator;\nexports.CarCIDIterator = CarCIDIterator;\nexports.CarIteratorBase = CarIteratorBase;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
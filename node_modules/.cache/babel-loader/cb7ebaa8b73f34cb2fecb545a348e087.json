{"ast":null,"code":"'use strict';\n\nvar _require = require('ipfs-repo'),\n    createRepo = _require.createRepo;\n\nvar DatastoreLevel = require('datastore-level');\n\nvar BlockstoreDatastoreAdapter = require('blockstore-datastore-adapter');\n/**\n * @typedef {import('ipfs-repo-migrations').ProgressCallback} MigrationProgressCallback\n */\n\n/**\n * @param {import('../types').Print} print\n * @param {import('ipfs-core-utils/src/multicodecs')} codecs\n * @param {object} options\n * @param {string} [options.path]\n * @param {boolean} [options.autoMigrate]\n * @param {MigrationProgressCallback} [options.onMigrationProgress]\n */\n\n\nmodule.exports = function (print, codecs, options) {\n  var repoPath = options.path || 'ipfs';\n  return createRepo(repoPath, function (codeOrName) {\n    return codecs.getCodec(codeOrName);\n  }, {\n    root: new DatastoreLevel(repoPath, {\n      prefix: '',\n      version: 2\n    }),\n    blocks: new BlockstoreDatastoreAdapter(new DatastoreLevel(\"\".concat(repoPath, \"/blocks\"), {\n      prefix: '',\n      version: 2\n    })),\n    datastore: new DatastoreLevel(\"\".concat(repoPath, \"/datastore\"), {\n      prefix: '',\n      version: 2\n    }),\n    keys: new DatastoreLevel(\"\".concat(repoPath, \"/keys\"), {\n      prefix: '',\n      version: 2\n    }),\n    pins: new DatastoreLevel(\"\".concat(repoPath, \"/pins\"), {\n      prefix: '',\n      version: 2\n    })\n  }, {\n    autoMigrate: options.autoMigrate,\n    onMigrationProgress: options.onMigrationProgress || print\n  });\n};","map":{"version":3,"names":["require","createRepo","DatastoreLevel","BlockstoreDatastoreAdapter","module","exports","print","codecs","options","repoPath","path","codeOrName","getCodec","root","prefix","version","blocks","datastore","keys","pins","autoMigrate","onMigrationProgress"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/runtime/repo-browser.js"],"sourcesContent":["'use strict'\n\nconst { createRepo } = require('ipfs-repo')\nconst DatastoreLevel = require('datastore-level')\nconst BlockstoreDatastoreAdapter = require('blockstore-datastore-adapter')\n\n/**\n * @typedef {import('ipfs-repo-migrations').ProgressCallback} MigrationProgressCallback\n */\n\n/**\n * @param {import('../types').Print} print\n * @param {import('ipfs-core-utils/src/multicodecs')} codecs\n * @param {object} options\n * @param {string} [options.path]\n * @param {boolean} [options.autoMigrate]\n * @param {MigrationProgressCallback} [options.onMigrationProgress]\n */\nmodule.exports = (print, codecs, options) => {\n  const repoPath = options.path || 'ipfs'\n\n  return createRepo(repoPath, (codeOrName) => codecs.getCodec(codeOrName), {\n    root: new DatastoreLevel(repoPath, {\n      prefix: '',\n      version: 2\n    }),\n    blocks: new BlockstoreDatastoreAdapter(\n      new DatastoreLevel(`${repoPath}/blocks`, {\n        prefix: '',\n        version: 2\n      })\n    ),\n    datastore: new DatastoreLevel(`${repoPath}/datastore`, {\n      prefix: '',\n      version: 2\n    }),\n    keys: new DatastoreLevel(`${repoPath}/keys`, {\n      prefix: '',\n      version: 2\n    }),\n    pins: new DatastoreLevel(`${repoPath}/pins`, {\n      prefix: '',\n      version: 2\n    })\n  }, {\n    autoMigrate: options.autoMigrate,\n    onMigrationProgress: options.onMigrationProgress || print\n  })\n}\n"],"mappings":"AAAA;;AAEA,eAAuBA,OAAO,CAAC,WAAD,CAA9B;AAAA,IAAQC,UAAR,YAAQA,UAAR;;AACA,IAAMC,cAAc,GAAGF,OAAO,CAAC,iBAAD,CAA9B;;AACA,IAAMG,0BAA0B,GAAGH,OAAO,CAAC,8BAAD,CAA1C;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAI,MAAM,CAACC,OAAP,GAAiB,UAACC,KAAD,EAAQC,MAAR,EAAgBC,OAAhB,EAA4B;EAC3C,IAAMC,QAAQ,GAAGD,OAAO,CAACE,IAAR,IAAgB,MAAjC;EAEA,OAAOT,UAAU,CAACQ,QAAD,EAAW,UAACE,UAAD;IAAA,OAAgBJ,MAAM,CAACK,QAAP,CAAgBD,UAAhB,CAAhB;EAAA,CAAX,EAAwD;IACvEE,IAAI,EAAE,IAAIX,cAAJ,CAAmBO,QAAnB,EAA6B;MACjCK,MAAM,EAAE,EADyB;MAEjCC,OAAO,EAAE;IAFwB,CAA7B,CADiE;IAKvEC,MAAM,EAAE,IAAIb,0BAAJ,CACN,IAAID,cAAJ,WAAsBO,QAAtB,cAAyC;MACvCK,MAAM,EAAE,EAD+B;MAEvCC,OAAO,EAAE;IAF8B,CAAzC,CADM,CAL+D;IAWvEE,SAAS,EAAE,IAAIf,cAAJ,WAAsBO,QAAtB,iBAA4C;MACrDK,MAAM,EAAE,EAD6C;MAErDC,OAAO,EAAE;IAF4C,CAA5C,CAX4D;IAevEG,IAAI,EAAE,IAAIhB,cAAJ,WAAsBO,QAAtB,YAAuC;MAC3CK,MAAM,EAAE,EADmC;MAE3CC,OAAO,EAAE;IAFkC,CAAvC,CAfiE;IAmBvEI,IAAI,EAAE,IAAIjB,cAAJ,WAAsBO,QAAtB,YAAuC;MAC3CK,MAAM,EAAE,EADmC;MAE3CC,OAAO,EAAE;IAFkC,CAAvC;EAnBiE,CAAxD,EAuBd;IACDK,WAAW,EAAEZ,OAAO,CAACY,WADpB;IAEDC,mBAAmB,EAAEb,OAAO,CAACa,mBAAR,IAA+Bf;EAFnD,CAvBc,CAAjB;AA2BD,CA9BD"},"metadata":{},"sourceType":"script"}
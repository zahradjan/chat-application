{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar dagPb = require('@ipld/dag-pb');\n\nvar withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\n\n\nmodule.exports = function (_ref) {\n  var repo = _ref.repo,\n      preload = _ref.preload;\n\n  var get = require('./get')({\n    repo: repo,\n    preload: preload\n  });\n  /**\n   * @type {import('ipfs-core-types/src/object').API[\"stat\"]}\n   */\n\n\n  function stat(_x) {\n    return _stat.apply(this, arguments);\n  }\n\n  function _stat() {\n    _stat = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid) {\n      var options,\n          node,\n          serialized,\n          blockSize,\n          linkLength,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return get(cid, options);\n\n            case 3:\n              node = _context.sent;\n              serialized = dagPb.encode(node);\n              blockSize = serialized.length;\n              linkLength = node.Links.reduce(function (a, l) {\n                return a + (l.Tsize || 0);\n              }, 0);\n              return _context.abrupt(\"return\", {\n                Hash: cid,\n                NumLinks: node.Links.length,\n                BlockSize: blockSize,\n                LinksSize: blockSize - (node.Data || []).length,\n                DataSize: (node.Data || []).length,\n                CumulativeSize: blockSize + linkLength\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _stat.apply(this, arguments);\n  }\n\n  return withTimeoutOption(stat);\n};","map":{"version":3,"names":["dagPb","require","withTimeoutOption","module","exports","repo","preload","get","stat","cid","options","node","serialized","encode","blockSize","length","linkLength","Links","reduce","a","l","Tsize","Hash","NumLinks","BlockSize","LinksSize","Data","DataSize","CumulativeSize"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/object/stat.js"],"sourcesContent":["'use strict'\n\nconst dagPb = require('@ipld/dag-pb')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nmodule.exports = ({ repo, preload }) => {\n  const get = require('./get')({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object').API[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    const node = await get(cid, options)\n    const serialized = dagPb.encode(node)\n    const blockSize = serialized.length\n    const linkLength = node.Links.reduce((a, l) => a + (l.Tsize || 0), 0)\n\n    return {\n      Hash: cid,\n      NumLinks: node.Links.length,\n      BlockSize: blockSize,\n      LinksSize: blockSize - (node.Data || []).length,\n      DataSize: (node.Data || []).length,\n      CumulativeSize: blockSize + linkLength\n    }\n  }\n\n  return withTimeoutOption(stat)\n}\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,cAAD,CAArB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,gBAAuB;EAAA,IAApBC,IAAoB,QAApBA,IAAoB;EAAA,IAAdC,OAAc,QAAdA,OAAc;;EACtC,IAAMC,GAAG,GAAGN,OAAO,CAAC,OAAD,CAAP,CAAiB;IAAEI,IAAI,EAAJA,IAAF;IAAQC,OAAO,EAAPA;EAAR,CAAjB,CAAZ;EAEA;AACF;AACA;;;EALwC,SAMvBE,IANuB;IAAA;EAAA;;EAAA;IAAA,mEAMtC,iBAAqBC,GAArB;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAA0BC,OAA1B,2DAAoC,EAApC;cAAA;cAAA,OACqBH,GAAG,CAACE,GAAD,EAAMC,OAAN,CADxB;;YAAA;cACQC,IADR;cAEQC,UAFR,GAEqBZ,KAAK,CAACa,MAAN,CAAaF,IAAb,CAFrB;cAGQG,SAHR,GAGoBF,UAAU,CAACG,MAH/B;cAIQC,UAJR,GAIqBL,IAAI,CAACM,KAAL,CAAWC,MAAX,CAAkB,UAACC,CAAD,EAAIC,CAAJ;gBAAA,OAAUD,CAAC,IAAIC,CAAC,CAACC,KAAF,IAAW,CAAf,CAAX;cAAA,CAAlB,EAAgD,CAAhD,CAJrB;cAAA,iCAMS;gBACLC,IAAI,EAAEb,GADD;gBAELc,QAAQ,EAAEZ,IAAI,CAACM,KAAL,CAAWF,MAFhB;gBAGLS,SAAS,EAAEV,SAHN;gBAILW,SAAS,EAAEX,SAAS,GAAG,CAACH,IAAI,CAACe,IAAL,IAAa,EAAd,EAAkBX,MAJpC;gBAKLY,QAAQ,EAAE,CAAChB,IAAI,CAACe,IAAL,IAAa,EAAd,EAAkBX,MALvB;gBAMLa,cAAc,EAAEd,SAAS,GAAGE;cANvB,CANT;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CANsC;IAAA;EAAA;;EAsBtC,OAAOd,iBAAiB,CAACM,IAAD,CAAxB;AACD,CAvBD"},"metadata":{},"sourceType":"script"}
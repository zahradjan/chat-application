{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar configure = require('../../lib/configure');\n\nvar toUrlSearchParams = require('../../lib/to-url-search-params');\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {ConfigProfilesAPI[\"apply\"]}\n   */\n  function apply(_x) {\n    return _apply.apply(this, arguments);\n  }\n\n  function _apply() {\n    _apply = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(profile) {\n      var options,\n          res,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('config/profile/apply', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: profile\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n              return _context.abrupt(\"return\", {\n                original: data.OldCfg,\n                updated: data.NewCfg\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _apply.apply(this, arguments);\n  }\n\n  return apply;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","module","exports","api","apply","profile","options","post","signal","searchParams","arg","headers","res","json","data","original","OldCfg","updated","NewCfg"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/config/profiles/apply.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../../lib/configure')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"apply\"]}\n   */\n  async function apply (profile, options = {}) {\n    const res = await api.post('config/profile/apply', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: profile,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      original: data.OldCfg, updated: data.NewCfg\n    }\n  }\n\n  return apply\n})\n"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAzB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,gCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAChC;AACF;AACA;EAHkC,SAIjBC,KAJiB;IAAA;EAAA;;EAAA;IAAA,oEAIhC,iBAAsBC,OAAtB;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAA+BC,OAA/B,2DAAyC,EAAzC;cAAA;cAAA,OACoBH,GAAG,CAACI,IAAJ,CAAS,sBAAT,EAAiC;gBACjDC,MAAM,EAAEF,OAAO,CAACE,MADiC;gBAEjDC,YAAY,EAAET,iBAAiB;kBAC7BU,GAAG,EAAEL;gBADwB,GAE1BC,OAF0B,EAFkB;gBAMjDK,OAAO,EAAEL,OAAO,CAACK;cANgC,CAAjC,CADpB;;YAAA;cACQC,GADR;cAAA;cAAA,OASqBA,GAAG,CAACC,IAAJ,EATrB;;YAAA;cASQC,IATR;cAAA,iCAWS;gBACLC,QAAQ,EAAED,IAAI,CAACE,MADV;gBACkBC,OAAO,EAAEH,IAAI,CAACI;cADhC,CAXT;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJgC;IAAA;EAAA;;EAoBhC,OAAOd,KAAP;AACD,CArByB,CAA1B"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\n(function (global, factory) {\n  /* AMD */\n  if (typeof define === 'function' && define.amd) define([\"protobufjs/minimal\"], factory);\n  /* CommonJS */\n  else if (typeof require === 'function' && typeof module === 'object' && module && module.exports) module.exports = factory(require(\"protobufjs/minimal\"));\n})(this, function ($protobuf) {\n  \"use strict\"; // Common aliases\n\n  var $Reader = $protobuf.Reader,\n      $Writer = $protobuf.Writer,\n      $util = $protobuf.util; // Exported root namespace\n\n  var $root = $protobuf.roots[\"libp2p-noise\"] || ($protobuf.roots[\"libp2p-noise\"] = {});\n\n  $root.pb = function () {\n    /**\n     * Namespace pb.\n     * @exports pb\n     * @namespace\n     */\n    var pb = {};\n\n    pb.NoiseHandshakePayload = function () {\n      /**\n       * Properties of a NoiseHandshakePayload.\n       * @memberof pb\n       * @interface INoiseHandshakePayload\n       * @property {Uint8Array|null} [identityKey] NoiseHandshakePayload identityKey\n       * @property {Uint8Array|null} [identitySig] NoiseHandshakePayload identitySig\n       * @property {Uint8Array|null} [data] NoiseHandshakePayload data\n       */\n\n      /**\n       * Constructs a new NoiseHandshakePayload.\n       * @memberof pb\n       * @classdesc Represents a NoiseHandshakePayload.\n       * @implements INoiseHandshakePayload\n       * @constructor\n       * @param {pb.INoiseHandshakePayload=} [properties] Properties to set\n       */\n      function NoiseHandshakePayload(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n          if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n      }\n      /**\n       * NoiseHandshakePayload identityKey.\n       * @member {Uint8Array} identityKey\n       * @memberof pb.NoiseHandshakePayload\n       * @instance\n       */\n\n\n      NoiseHandshakePayload.prototype.identityKey = $util.newBuffer([]);\n      /**\n       * NoiseHandshakePayload identitySig.\n       * @member {Uint8Array} identitySig\n       * @memberof pb.NoiseHandshakePayload\n       * @instance\n       */\n\n      NoiseHandshakePayload.prototype.identitySig = $util.newBuffer([]);\n      /**\n       * NoiseHandshakePayload data.\n       * @member {Uint8Array} data\n       * @memberof pb.NoiseHandshakePayload\n       * @instance\n       */\n\n      NoiseHandshakePayload.prototype.data = $util.newBuffer([]);\n      /**\n       * Creates a new NoiseHandshakePayload instance using the specified properties.\n       * @function create\n       * @memberof pb.NoiseHandshakePayload\n       * @static\n       * @param {pb.INoiseHandshakePayload=} [properties] Properties to set\n       * @returns {pb.NoiseHandshakePayload} NoiseHandshakePayload instance\n       */\n\n      NoiseHandshakePayload.create = function create(properties) {\n        return new NoiseHandshakePayload(properties);\n      };\n      /**\n       * Encodes the specified NoiseHandshakePayload message. Does not implicitly {@link pb.NoiseHandshakePayload.verify|verify} messages.\n       * @function encode\n       * @memberof pb.NoiseHandshakePayload\n       * @static\n       * @param {pb.INoiseHandshakePayload} message NoiseHandshakePayload message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      NoiseHandshakePayload.encode = function encode(message, writer) {\n        if (!writer) writer = $Writer.create();\n        if (message.identityKey != null && Object.hasOwnProperty.call(message, \"identityKey\")) writer.uint32(\n        /* id 1, wireType 2 =*/\n        10).bytes(message.identityKey);\n        if (message.identitySig != null && Object.hasOwnProperty.call(message, \"identitySig\")) writer.uint32(\n        /* id 2, wireType 2 =*/\n        18).bytes(message.identitySig);\n        if (message.data != null && Object.hasOwnProperty.call(message, \"data\")) writer.uint32(\n        /* id 3, wireType 2 =*/\n        26).bytes(message.data);\n        return writer;\n      };\n      /**\n       * Encodes the specified NoiseHandshakePayload message, length delimited. Does not implicitly {@link pb.NoiseHandshakePayload.verify|verify} messages.\n       * @function encodeDelimited\n       * @memberof pb.NoiseHandshakePayload\n       * @static\n       * @param {pb.INoiseHandshakePayload} message NoiseHandshakePayload message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      NoiseHandshakePayload.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n      };\n      /**\n       * Decodes a NoiseHandshakePayload message from the specified reader or buffer.\n       * @function decode\n       * @memberof pb.NoiseHandshakePayload\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {pb.NoiseHandshakePayload} NoiseHandshakePayload\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      NoiseHandshakePayload.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n            message = new $root.pb.NoiseHandshakePayload();\n\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n\n          switch (tag >>> 3) {\n            case 1:\n              message.identityKey = reader.bytes();\n              break;\n\n            case 2:\n              message.identitySig = reader.bytes();\n              break;\n\n            case 3:\n              message.data = reader.bytes();\n              break;\n\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n\n        return message;\n      };\n      /**\n       * Decodes a NoiseHandshakePayload message from the specified reader or buffer, length delimited.\n       * @function decodeDelimited\n       * @memberof pb.NoiseHandshakePayload\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @returns {pb.NoiseHandshakePayload} NoiseHandshakePayload\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      NoiseHandshakePayload.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n      };\n      /**\n       * Verifies a NoiseHandshakePayload message.\n       * @function verify\n       * @memberof pb.NoiseHandshakePayload\n       * @static\n       * @param {Object.<string,*>} message Plain object to verify\n       * @returns {string|null} `null` if valid, otherwise the reason why it is not\n       */\n\n\n      NoiseHandshakePayload.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null) return \"object expected\";\n        if (message.identityKey != null && message.hasOwnProperty(\"identityKey\")) if (!(message.identityKey && typeof message.identityKey.length === \"number\" || $util.isString(message.identityKey))) return \"identityKey: buffer expected\";\n        if (message.identitySig != null && message.hasOwnProperty(\"identitySig\")) if (!(message.identitySig && typeof message.identitySig.length === \"number\" || $util.isString(message.identitySig))) return \"identitySig: buffer expected\";\n        if (message.data != null && message.hasOwnProperty(\"data\")) if (!(message.data && typeof message.data.length === \"number\" || $util.isString(message.data))) return \"data: buffer expected\";\n        return null;\n      };\n      /**\n       * Creates a NoiseHandshakePayload message from a plain object. Also converts values to their respective internal types.\n       * @function fromObject\n       * @memberof pb.NoiseHandshakePayload\n       * @static\n       * @param {Object.<string,*>} object Plain object\n       * @returns {pb.NoiseHandshakePayload} NoiseHandshakePayload\n       */\n\n\n      NoiseHandshakePayload.fromObject = function fromObject(object) {\n        if (object instanceof $root.pb.NoiseHandshakePayload) return object;\n        var message = new $root.pb.NoiseHandshakePayload();\n        if (object.identityKey != null) if (typeof object.identityKey === \"string\") $util.base64.decode(object.identityKey, message.identityKey = $util.newBuffer($util.base64.length(object.identityKey)), 0);else if (object.identityKey.length) message.identityKey = object.identityKey;\n        if (object.identitySig != null) if (typeof object.identitySig === \"string\") $util.base64.decode(object.identitySig, message.identitySig = $util.newBuffer($util.base64.length(object.identitySig)), 0);else if (object.identitySig.length) message.identitySig = object.identitySig;\n        if (object.data != null) if (typeof object.data === \"string\") $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);else if (object.data.length) message.data = object.data;\n        return message;\n      };\n      /**\n       * Creates a plain object from a NoiseHandshakePayload message. Also converts values to other types if specified.\n       * @function toObject\n       * @memberof pb.NoiseHandshakePayload\n       * @static\n       * @param {pb.NoiseHandshakePayload} message NoiseHandshakePayload\n       * @param {$protobuf.IConversionOptions} [options] Conversion options\n       * @returns {Object.<string,*>} Plain object\n       */\n\n\n      NoiseHandshakePayload.toObject = function toObject(message, options) {\n        if (!options) options = {};\n        var object = {};\n\n        if (options.defaults) {\n          if (options.bytes === String) object.identityKey = \"\";else {\n            object.identityKey = [];\n            if (options.bytes !== Array) object.identityKey = $util.newBuffer(object.identityKey);\n          }\n          if (options.bytes === String) object.identitySig = \"\";else {\n            object.identitySig = [];\n            if (options.bytes !== Array) object.identitySig = $util.newBuffer(object.identitySig);\n          }\n          if (options.bytes === String) object.data = \"\";else {\n            object.data = [];\n            if (options.bytes !== Array) object.data = $util.newBuffer(object.data);\n          }\n        }\n\n        if (message.identityKey != null && message.hasOwnProperty(\"identityKey\")) object.identityKey = options.bytes === String ? $util.base64.encode(message.identityKey, 0, message.identityKey.length) : options.bytes === Array ? Array.prototype.slice.call(message.identityKey) : message.identityKey;\n        if (message.identitySig != null && message.hasOwnProperty(\"identitySig\")) object.identitySig = options.bytes === String ? $util.base64.encode(message.identitySig, 0, message.identitySig.length) : options.bytes === Array ? Array.prototype.slice.call(message.identitySig) : message.identitySig;\n        if (message.data != null && message.hasOwnProperty(\"data\")) object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;\n        return object;\n      };\n      /**\n       * Converts this NoiseHandshakePayload to JSON.\n       * @function toJSON\n       * @memberof pb.NoiseHandshakePayload\n       * @instance\n       * @returns {Object.<string,*>} JSON object\n       */\n\n\n      NoiseHandshakePayload.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n      };\n\n      return NoiseHandshakePayload;\n    }();\n\n    return pb;\n  }();\n\n  return $root;\n});","map":{"version":3,"mappings":"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","names":["global","factory","define","amd","require","module","exports","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","pb","NoiseHandshakePayload","properties","keys","Object","i","length","prototype","identityKey","newBuffer","identitySig","data","create","encode","message","writer","hasOwnProperty","call","uint32","bytes","encodeDelimited","ldelim","decode","reader","end","undefined","len","pos","tag","skipType","decodeDelimited","verify","isString","fromObject","object","base64","toObject","options","defaults","String","Array","slice","toJSON","constructor","toJSONOptions"],"sourceRoot":"","sources":["../../../src/proto/payload.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}
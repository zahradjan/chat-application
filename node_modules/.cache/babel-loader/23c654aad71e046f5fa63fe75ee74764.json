{"ast":null,"code":"import { makeAutoObservable, runInAction, toJS } from \"mobx\";\nimport { ChatRoom } from \"../models/Room.js\"; // var util = require(\"util\");\n\nexport class RoomStore {\n  //TODO:load rooms from db\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.rooms = [];\n    this.selectedRoom = undefined;\n    this.selectedReceiver = undefined;\n    makeAutoObservable(this);\n  } // async init() {\n  //   if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\n  //   if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\n  //   await this.loadRoomsDb();\n  //   await this.setRoomsFromDb();\n  // }\n\n\n  async createRoom(roomName) {\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\n    console.log(roomName);\n    const chatRoom = new ChatRoom(this.rootStore, roomName);\n    this.rooms.push(chatRoom);\n    console.log(chatRoom);\n    console.log(toJS(this.rooms)); // const roomJSON = util.inspect(chatRoom);\n    // console.log(roomJSON);\n    // await this.roomsDb.add(roomName);\n\n    return chatRoom;\n  } //TODO: hodit peer == user jako propertu roomky aby byli spojeny a zaroven myslet na vice useru v jedne roomce\n\n\n  getRoom(roomName) {\n    //TODO: kdyz nenajde apod.\n    return this.rooms.find(room => roomName === room.roomName);\n  } // async loadRoomsDb() {\n  //   this.roomsDb = await this.rootStore.dataStore.orbitDb.feed(\"rooms\");\n  //   await this.roomsDb.load();\n  // }\n  // async setRoomsFromDb() {\n  //   const all = await toJS(this.roomsDb.all);\n  //   runInAction(() => {\n  //     all.map((e) => {\n  //       console.log(e.payload.value);\n  //       return this.rooms.push(e.payload.value);\n  //     });\n  //   });\n  // }\n\n\n  setSelectedRoom(user) {\n    let room;\n    runInAction(async () => {\n      room = this.getRoom(user.peerId);\n\n      if (!room) {\n        room = await this.createRoom(user.peerId);\n        await room.init();\n      }\n\n      console.log(room);\n      console.log(user);\n      this.selectedReceiver = user._username;\n      this.selectedRoom = room;\n    });\n  }\n\n  isChatRoomReady(roomName) {\n    const room = this.getRoom(roomName);\n    console.log(!!room);\n    return !!room;\n  }\n\n}","map":{"version":3,"names":["makeAutoObservable","runInAction","toJS","ChatRoom","RoomStore","constructor","rootStore","rooms","selectedRoom","undefined","selectedReceiver","createRoom","roomName","dataStore","ipfsNode","Error","orbitDb","console","log","chatRoom","push","getRoom","find","room","setSelectedRoom","user","peerId","init","_username","isChatRoomReady"],"sources":["C:/Users/zajan/GitHub/chatApplication/src/data/store/RoomStore.js"],"sourcesContent":["import { makeAutoObservable, runInAction, toJS } from \"mobx\";\r\nimport { ChatRoom } from \"../models/Room.js\";\r\n// var util = require(\"util\");\r\n\r\nexport class RoomStore {\r\n  //TODO:load rooms from db\r\n  rooms;\r\n  selectedRoom;\r\n  selectedReceiver;\r\n  constructor(rootStore) {\r\n    this.rootStore = rootStore;\r\n    this.rooms = [];\r\n    this.selectedRoom = undefined;\r\n    this.selectedReceiver = undefined;\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  // async init() {\r\n  //   if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\r\n  //   if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\r\n  //   await this.loadRoomsDb();\r\n  //   await this.setRoomsFromDb();\r\n  // }\r\n\r\n  async createRoom(roomName) {\r\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\r\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\r\n    console.log(roomName);\r\n\r\n    const chatRoom = new ChatRoom(this.rootStore, roomName);\r\n\r\n    this.rooms.push(chatRoom);\r\n    console.log(chatRoom);\r\n    console.log(toJS(this.rooms));\r\n    // const roomJSON = util.inspect(chatRoom);\r\n    // console.log(roomJSON);\r\n    // await this.roomsDb.add(roomName);\r\n    return chatRoom;\r\n  }\r\n  //TODO: hodit peer == user jako propertu roomky aby byli spojeny a zaroven myslet na vice useru v jedne roomce\r\n  getRoom(roomName) {\r\n    //TODO: kdyz nenajde apod.\r\n    return this.rooms.find((room) => roomName === room.roomName);\r\n  }\r\n\r\n  // async loadRoomsDb() {\r\n  //   this.roomsDb = await this.rootStore.dataStore.orbitDb.feed(\"rooms\");\r\n  //   await this.roomsDb.load();\r\n  // }\r\n  // async setRoomsFromDb() {\r\n  //   const all = await toJS(this.roomsDb.all);\r\n  //   runInAction(() => {\r\n  //     all.map((e) => {\r\n  //       console.log(e.payload.value);\r\n  //       return this.rooms.push(e.payload.value);\r\n  //     });\r\n  //   });\r\n  // }\r\n  setSelectedRoom(user) {\r\n    let room;\r\n    runInAction(async () => {\r\n      room = this.getRoom(user.peerId);\r\n      if (!room) {\r\n        room = await this.createRoom(user.peerId);\r\n        await room.init();\r\n      }\r\n      console.log(room);\r\n      console.log(user);\r\n      this.selectedReceiver = user._username;\r\n      this.selectedRoom = room;\r\n    });\r\n  }\r\n\r\n  isChatRoomReady(roomName) {\r\n    const room = this.getRoom(roomName);\r\n    console.log(!!room);\r\n    return !!room;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,WAA7B,EAA0CC,IAA1C,QAAsD,MAAtD;AACA,SAASC,QAAT,QAAyB,mBAAzB,C,CACA;;AAEA,OAAO,MAAMC,SAAN,CAAgB;EACrB;EAIAC,WAAW,CAACC,SAAD,EAAY;IACrB,KAAKA,SAAL,GAAiBA,SAAjB;IACA,KAAKC,KAAL,GAAa,EAAb;IACA,KAAKC,YAAL,GAAoBC,SAApB;IACA,KAAKC,gBAAL,GAAwBD,SAAxB;IACAT,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAXoB,CAarB;EACA;EACA;EACA;EACA;EACA;;;EAEgB,MAAVW,UAAU,CAACC,QAAD,EAAW;IACzB,IAAI,KAAKN,SAAL,CAAeO,SAAf,CAAyBC,QAAzB,KAAsCL,SAA1C,EAAqD,MAAMM,KAAK,CAAC,wBAAD,CAAX;IACrD,IAAI,KAAKT,SAAL,CAAeO,SAAf,CAAyBG,OAAzB,KAAqCP,SAAzC,EAAoD,MAAMM,KAAK,CAAC,sBAAD,CAAX;IACpDE,OAAO,CAACC,GAAR,CAAYN,QAAZ;IAEA,MAAMO,QAAQ,GAAG,IAAIhB,QAAJ,CAAa,KAAKG,SAAlB,EAA6BM,QAA7B,CAAjB;IAEA,KAAKL,KAAL,CAAWa,IAAX,CAAgBD,QAAhB;IACAF,OAAO,CAACC,GAAR,CAAYC,QAAZ;IACAF,OAAO,CAACC,GAAR,CAAYhB,IAAI,CAAC,KAAKK,KAAN,CAAhB,EATyB,CAUzB;IACA;IACA;;IACA,OAAOY,QAAP;EACD,CAlCoB,CAmCrB;;;EACAE,OAAO,CAACT,QAAD,EAAW;IAChB;IACA,OAAO,KAAKL,KAAL,CAAWe,IAAX,CAAiBC,IAAD,IAAUX,QAAQ,KAAKW,IAAI,CAACX,QAA5C,CAAP;EACD,CAvCoB,CAyCrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACAY,eAAe,CAACC,IAAD,EAAO;IACpB,IAAIF,IAAJ;IACAtB,WAAW,CAAC,YAAY;MACtBsB,IAAI,GAAG,KAAKF,OAAL,CAAaI,IAAI,CAACC,MAAlB,CAAP;;MACA,IAAI,CAACH,IAAL,EAAW;QACTA,IAAI,GAAG,MAAM,KAAKZ,UAAL,CAAgBc,IAAI,CAACC,MAArB,CAAb;QACA,MAAMH,IAAI,CAACI,IAAL,EAAN;MACD;;MACDV,OAAO,CAACC,GAAR,CAAYK,IAAZ;MACAN,OAAO,CAACC,GAAR,CAAYO,IAAZ;MACA,KAAKf,gBAAL,GAAwBe,IAAI,CAACG,SAA7B;MACA,KAAKpB,YAAL,GAAoBe,IAApB;IACD,CAVU,CAAX;EAWD;;EAEDM,eAAe,CAACjB,QAAD,EAAW;IACxB,MAAMW,IAAI,GAAG,KAAKF,OAAL,CAAaT,QAAb,CAAb;IACAK,OAAO,CAACC,GAAR,CAAY,CAAC,CAACK,IAAd;IACA,OAAO,CAAC,CAACA,IAAT;EACD;;AAzEoB"},"metadata":{},"sourceType":"module"}
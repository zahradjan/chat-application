{"ast":null,"code":"'use strict'; // Pubsub adapter to keep API with handlers while not removed.\n\n/**\n * @typedef {import('libp2p-interfaces/src/pubsub').InMessage} InMessage\n * @typedef {import('libp2p-interfaces/src/pubsub')} PubsubRouter\n */\n\n/**\n * @param {{new(...args: any[]): PubsubRouter}} PubsubRouter\n * @param {import('.')} libp2p\n * @param {{ enabled: boolean; } & import(\".\").PubsubLocalOptions & import(\"libp2p-interfaces/src/pubsub\").PubsubOptions} options\n */\n\nfunction pubsubAdapter(PubsubRouter, libp2p, options) {\n  /** @type {PubsubRouter & { _subscribeAdapter: PubsubRouter['subscribe'], _unsubscribeAdapter: PubsubRouter['unsubscribe'] }} */\n  // @ts-ignore we set the extra _subscribeAdapter and _unsubscribeAdapter properties afterwards\n  const pubsub = new PubsubRouter(libp2p, options);\n  pubsub._subscribeAdapter = pubsub.subscribe;\n  pubsub._unsubscribeAdapter = pubsub.unsubscribe;\n  /**\n   * Subscribes to a given topic.\n   *\n   * @override\n   * @param {string} topic\n   * @param {(msg: InMessage) => void} [handler]\n   * @returns {void}\n   */\n\n  function subscribe(topic, handler) {\n    // Bind provided handler\n    handler && pubsub.on(topic, handler);\n\n    pubsub._subscribeAdapter(topic);\n  }\n  /**\n   * Unsubscribe from the given topic.\n   *\n   * @override\n   * @param {string} topic\n   * @param {(msg: InMessage) => void} [handler]\n   * @returns {void}\n   */\n\n\n  function unsubscribe(topic, handler) {\n    if (!handler) {\n      pubsub.removeAllListeners(topic);\n    } else {\n      pubsub.removeListener(topic, handler);\n    }\n\n    if (pubsub.listenerCount(topic) === 0) {\n      pubsub._unsubscribeAdapter(topic);\n    }\n  }\n\n  pubsub.subscribe = subscribe;\n  pubsub.unsubscribe = unsubscribe;\n  return pubsub;\n}\n\nmodule.exports = pubsubAdapter;","map":{"version":3,"names":["pubsubAdapter","PubsubRouter","libp2p","options","pubsub","_subscribeAdapter","subscribe","_unsubscribeAdapter","unsubscribe","topic","handler","on","removeAllListeners","removeListener","listenerCount","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p/src/pubsub-adapter.js"],"sourcesContent":["'use strict'\n\n// Pubsub adapter to keep API with handlers while not removed.\n/**\n * @typedef {import('libp2p-interfaces/src/pubsub').InMessage} InMessage\n * @typedef {import('libp2p-interfaces/src/pubsub')} PubsubRouter\n */\n\n/**\n * @param {{new(...args: any[]): PubsubRouter}} PubsubRouter\n * @param {import('.')} libp2p\n * @param {{ enabled: boolean; } & import(\".\").PubsubLocalOptions & import(\"libp2p-interfaces/src/pubsub\").PubsubOptions} options\n */\nfunction pubsubAdapter (PubsubRouter, libp2p, options) {\n  /** @type {PubsubRouter & { _subscribeAdapter: PubsubRouter['subscribe'], _unsubscribeAdapter: PubsubRouter['unsubscribe'] }} */\n  // @ts-ignore we set the extra _subscribeAdapter and _unsubscribeAdapter properties afterwards\n  const pubsub = new PubsubRouter(libp2p, options)\n  pubsub._subscribeAdapter = pubsub.subscribe\n  pubsub._unsubscribeAdapter = pubsub.unsubscribe\n\n  /**\n   * Subscribes to a given topic.\n   *\n   * @override\n   * @param {string} topic\n   * @param {(msg: InMessage) => void} [handler]\n   * @returns {void}\n   */\n  function subscribe (topic, handler) {\n    // Bind provided handler\n    handler && pubsub.on(topic, handler)\n    pubsub._subscribeAdapter(topic)\n  }\n\n  /**\n   * Unsubscribe from the given topic.\n   *\n   * @override\n   * @param {string} topic\n   * @param {(msg: InMessage) => void} [handler]\n   * @returns {void}\n   */\n  function unsubscribe (topic, handler) {\n    if (!handler) {\n      pubsub.removeAllListeners(topic)\n    } else {\n      pubsub.removeListener(topic, handler)\n    }\n\n    if (pubsub.listenerCount(topic) === 0) {\n      pubsub._unsubscribeAdapter(topic)\n    }\n  }\n\n  pubsub.subscribe = subscribe\n  pubsub.unsubscribe = unsubscribe\n\n  return pubsub\n}\n\nmodule.exports = pubsubAdapter\n"],"mappings":"AAAA,a,CAEA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASA,aAAT,CAAwBC,YAAxB,EAAsCC,MAAtC,EAA8CC,OAA9C,EAAuD;EACrD;EACA;EACA,MAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiBC,MAAjB,EAAyBC,OAAzB,CAAf;EACAC,MAAM,CAACC,iBAAP,GAA2BD,MAAM,CAACE,SAAlC;EACAF,MAAM,CAACG,mBAAP,GAA6BH,MAAM,CAACI,WAApC;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,SAASF,SAAT,CAAoBG,KAApB,EAA2BC,OAA3B,EAAoC;IAClC;IACAA,OAAO,IAAIN,MAAM,CAACO,EAAP,CAAUF,KAAV,EAAiBC,OAAjB,CAAX;;IACAN,MAAM,CAACC,iBAAP,CAAyBI,KAAzB;EACD;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;EACE,SAASD,WAAT,CAAsBC,KAAtB,EAA6BC,OAA7B,EAAsC;IACpC,IAAI,CAACA,OAAL,EAAc;MACZN,MAAM,CAACQ,kBAAP,CAA0BH,KAA1B;IACD,CAFD,MAEO;MACLL,MAAM,CAACS,cAAP,CAAsBJ,KAAtB,EAA6BC,OAA7B;IACD;;IAED,IAAIN,MAAM,CAACU,aAAP,CAAqBL,KAArB,MAAgC,CAApC,EAAuC;MACrCL,MAAM,CAACG,mBAAP,CAA2BE,KAA3B;IACD;EACF;;EAEDL,MAAM,CAACE,SAAP,GAAmBA,SAAnB;EACAF,MAAM,CAACI,WAAP,GAAqBA,WAArB;EAEA,OAAOJ,MAAP;AACD;;AAEDW,MAAM,CAACC,OAAP,GAAiBhB,aAAjB"},"metadata":{},"sourceType":"script"}
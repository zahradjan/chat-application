{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _asyncGeneratorDelegate = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _require = require('multiformats/cid'),\n    CID = _require.CID;\n\nvar configure = require('../lib/configure');\n\nvar _require2 = require('ipfs-core-utils/src/pins/normalise-input'),\n    normaliseInput = _require2.normaliseInput;\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {PinAPI[\"rmAll\"]}\n   */\n  function rmAll(_x) {\n    return _rmAll.apply(this, arguments);\n  }\n\n  function _rmAll() {\n    _rmAll = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n      var options,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _step$value,\n          path,\n          recursive,\n          searchParams,\n          res,\n          _iteratorAbruptCompletion2,\n          _didIteratorError2,\n          _iteratorError2,\n          _iterator2,\n          _step2,\n          pin,\n          _args = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 3;\n              _iterator = _asyncIterator(normaliseInput(source));\n\n            case 5:\n              _context.next = 7;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 7:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 50;\n                break;\n              }\n\n              _step$value = _step.value, path = _step$value.path, recursive = _step$value.recursive;\n              searchParams = new URLSearchParams(options.searchParams);\n              searchParams.append('arg', \"\".concat(path));\n              if (recursive != null) searchParams.set('recursive', String(recursive));\n              _context.next = 14;\n              return _awaitAsyncGenerator(api.post('pin/rm', {\n                signal: options.signal,\n                headers: options.headers,\n                searchParams: toUrlSearchParams(_objectSpread(_objectSpread({}, options), {}, {\n                  arg: \"\".concat(path),\n                  recursive: recursive\n                }))\n              }));\n\n            case 14:\n              res = _context.sent;\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context.prev = 17;\n              _iterator2 = _asyncIterator(res.ndjson());\n\n            case 19:\n              _context.next = 21;\n              return _awaitAsyncGenerator(_iterator2.next());\n\n            case 21:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context.sent).done)) {\n                _context.next = 31;\n                break;\n              }\n\n              pin = _step2.value;\n\n              if (!pin.Pins) {\n                _context.next = 26;\n                break;\n              }\n\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(pin.Pins.map(function (\n              /** @type {string} */\n              cid) {\n                return CID.parse(cid);\n              })), _awaitAsyncGenerator), \"t0\", 25);\n\n            case 25:\n              return _context.abrupt(\"continue\", 28);\n\n            case 26:\n              _context.next = 28;\n              return CID.parse(pin);\n\n            case 28:\n              _iteratorAbruptCompletion2 = false;\n              _context.next = 19;\n              break;\n\n            case 31:\n              _context.next = 37;\n              break;\n\n            case 33:\n              _context.prev = 33;\n              _context.t1 = _context[\"catch\"](17);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t1;\n\n            case 37:\n              _context.prev = 37;\n              _context.prev = 38;\n\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context.next = 42;\n                break;\n              }\n\n              _context.next = 42;\n              return _awaitAsyncGenerator(_iterator2.return());\n\n            case 42:\n              _context.prev = 42;\n\n              if (!_didIteratorError2) {\n                _context.next = 45;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 45:\n              return _context.finish(42);\n\n            case 46:\n              return _context.finish(37);\n\n            case 47:\n              _iteratorAbruptCompletion = false;\n              _context.next = 5;\n              break;\n\n            case 50:\n              _context.next = 56;\n              break;\n\n            case 52:\n              _context.prev = 52;\n              _context.t2 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t2;\n\n            case 56:\n              _context.prev = 56;\n              _context.prev = 57;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 61;\n                break;\n              }\n\n              _context.next = 61;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 61:\n              _context.prev = 61;\n\n              if (!_didIteratorError) {\n                _context.next = 64;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 64:\n              return _context.finish(61);\n\n            case 65:\n              return _context.finish(56);\n\n            case 66:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 52, 56, 66], [17, 33, 37, 47], [38,, 42, 46], [57,, 61, 65]]);\n    }));\n    return _rmAll.apply(this, arguments);\n  }\n\n  return rmAll;\n});","map":{"version":3,"names":["require","CID","configure","normaliseInput","toUrlSearchParams","module","exports","api","rmAll","source","options","path","recursive","searchParams","URLSearchParams","append","set","String","post","signal","headers","arg","res","ndjson","pin","Pins","map","cid","parse"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/pin/rm-all.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst configure = require('../lib/configure')\nconst { normaliseInput } = require('ipfs-core-utils/src/pins/normalise-input')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {PinAPI[\"rmAll\"]}\n   */\n  async function * rmAll (source, options = {}) {\n    for await (const { path, recursive } of normaliseInput(source)) {\n      const searchParams = new URLSearchParams(options.searchParams)\n      searchParams.append('arg', `${path}`)\n\n      if (recursive != null) searchParams.set('recursive', String(recursive))\n\n      const res = await api.post('pin/rm', {\n        signal: options.signal,\n        headers: options.headers,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: `${path}`,\n          recursive\n        })\n      })\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) { // non-streaming response\n          yield * pin.Pins.map((/** @type {string} */ cid) => CID.parse(cid))\n          continue\n        }\n        yield CID.parse(pin)\n      }\n    }\n  }\n  return rmAll\n})\n"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,eAAgBA,OAAO,CAAC,kBAAD,CAAvB;AAAA,IAAQC,GAAR,YAAQA,GAAR;;AACA,IAAMC,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,gBAA2BA,OAAO,CAAC,0CAAD,CAAlC;AAAA,IAAQG,cAAR,aAAQA,cAAR;;AACA,IAAMC,iBAAiB,GAAGJ,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAK,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAChC;AACF;AACA;EAHkC,SAIfC,KAJe;IAAA;EAAA;;EAAA;IAAA,sEAIhC,iBAAwBC,MAAxB;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAgCC,OAAhC,2DAA0C,EAA1C;cAAA;cAAA;cAAA;cAAA,2BAC0CP,cAAc,CAACM,MAAD,CADxD;;YAAA;cAAA;cAAA;;YAAA;cAAA;gBAAA;gBAAA;cAAA;;cAAA,2BACqBE,IADrB,eACqBA,IADrB,EAC2BC,SAD3B,eAC2BA,SAD3B;cAEUC,YAFV,GAEyB,IAAIC,eAAJ,CAAoBJ,OAAO,CAACG,YAA5B,CAFzB;cAGIA,YAAY,CAACE,MAAb,CAAoB,KAApB,YAA8BJ,IAA9B;cAEA,IAAIC,SAAS,IAAI,IAAjB,EAAuBC,YAAY,CAACG,GAAb,CAAiB,WAAjB,EAA8BC,MAAM,CAACL,SAAD,CAApC;cAL3B;cAAA,4BAOsBL,GAAG,CAACW,IAAJ,CAAS,QAAT,EAAmB;gBACnCC,MAAM,EAAET,OAAO,CAACS,MADmB;gBAEnCC,OAAO,EAAEV,OAAO,CAACU,OAFkB;gBAGnCP,YAAY,EAAET,iBAAiB,iCAC1BM,OAD0B;kBAE7BW,GAAG,YAAKV,IAAL,CAF0B;kBAG7BC,SAAS,EAATA;gBAH6B;cAHI,CAAnB,CAPtB;;YAAA;cAOUU,GAPV;cAAA;cAAA;cAAA;cAAA,4BAiB4BA,GAAG,CAACC,MAAJ,EAjB5B;;YAAA;cAAA;cAAA;;YAAA;cAAA;gBAAA;gBAAA;cAAA;;cAiBqBC,GAjBrB;;cAAA,KAkBUA,GAAG,CAACC,IAlBd;gBAAA;gBAAA;cAAA;;cAmBQ,qEAAQD,GAAG,CAACC,IAAJ,CAASC,GAAT,CAAa;cAAC;cAAsBC,GAAvB;gBAAA,OAA+B1B,GAAG,CAAC2B,KAAJ,CAAUD,GAAV,CAA/B;cAAA,CAAb,CAAR;;YAnBR;cAAA;;YAAA;cAAA;cAsBM,OAAM1B,GAAG,CAAC2B,KAAJ,CAAUJ,GAAV,CAAN;;YAtBN;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;cAAA;;YAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAAA;;YAAA;cAAA;;YAAA;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;cAAA;;YAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAAA;;YAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJgC;IAAA;EAAA;;EA8BhC,OAAOhB,KAAP;AACD,CA/ByB,CAA1B"},"metadata":{},"sourceType":"script"}
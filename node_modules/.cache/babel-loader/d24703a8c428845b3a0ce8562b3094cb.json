{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _slicedToArray = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _asyncGeneratorDelegate = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js\").default;\n\nvar log = require('debug')('ipfs:repo:utils:walk-dag');\n\nvar Block = require('multiformats/block');\n/**\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('../types').loadCodec} loadCodec\n * @typedef {import('../types').AbortOptions} AbortOptions\n */\n\n/**\n * @param {CID} cid\n * @param {Blockstore} blockstore\n * @param {loadCodec} loadCodec\n * @param {AbortOptions} [options]\n * @returns {AsyncGenerator<CID, void, undefined>}\n */\n\n\nfunction walkDag(_x, _x2, _x3, _x4) {\n  return _walkDag.apply(this, arguments);\n}\n\nfunction _walkDag() {\n  _walkDag = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid, blockstore, loadCodec, options) {\n    var bytes, codec, block, _iterator, _step, _step$value, childCid;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _awaitAsyncGenerator(blockstore.get(cid, options));\n\n          case 3:\n            bytes = _context.sent;\n            _context.next = 6;\n            return _awaitAsyncGenerator(loadCodec(cid.code));\n\n          case 6:\n            codec = _context.sent;\n            block = Block.createUnsafe({\n              bytes: bytes,\n              cid: cid,\n              codec: codec\n            });\n            _iterator = _createForOfIteratorHelper(block.links());\n            _context.prev = 9;\n\n            _iterator.s();\n\n          case 11:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 18;\n              break;\n            }\n\n            _step$value = _slicedToArray(_step.value, 2), childCid = _step$value[1];\n            _context.next = 15;\n            return childCid;\n\n          case 15:\n            return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(walkDag(childCid, blockstore, loadCodec, options)), _awaitAsyncGenerator), \"t0\", 16);\n\n          case 16:\n            _context.next = 11;\n            break;\n\n          case 18:\n            _context.next = 23;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t1 = _context[\"catch\"](9);\n\n            _iterator.e(_context.t1);\n\n          case 23:\n            _context.prev = 23;\n\n            _iterator.f();\n\n            return _context.finish(23);\n\n          case 26:\n            _context.next = 32;\n            break;\n\n          case 28:\n            _context.prev = 28;\n            _context.t2 = _context[\"catch\"](0);\n            log('Could not walk DAG for CID', cid.toString(), _context.t2);\n            throw _context.t2;\n\n          case 32:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 28], [9, 20, 23, 26]]);\n  }));\n  return _walkDag.apply(this, arguments);\n}\n\nmodule.exports = walkDag;","map":{"version":3,"names":["log","require","Block","walkDag","cid","blockstore","loadCodec","options","get","bytes","code","codec","block","createUnsafe","links","childCid","toString","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-repo/src/utils/walk-dag.js"],"sourcesContent":["'use strict'\n\nconst log = require('debug')('ipfs:repo:utils:walk-dag')\nconst Block = require('multiformats/block')\n\n/**\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('../types').loadCodec} loadCodec\n * @typedef {import('../types').AbortOptions} AbortOptions\n */\n\n/**\n * @param {CID} cid\n * @param {Blockstore} blockstore\n * @param {loadCodec} loadCodec\n * @param {AbortOptions} [options]\n * @returns {AsyncGenerator<CID, void, undefined>}\n */\nasync function * walkDag (cid, blockstore, loadCodec, options) {\n  try {\n    const bytes = await blockstore.get(cid, options)\n    const codec = await loadCodec(cid.code)\n    const block = Block.createUnsafe({ bytes, cid, codec })\n\n    for (const [, childCid] of block.links()) {\n      yield childCid\n      yield * walkDag(childCid, blockstore, loadCodec, options)\n    }\n  } catch (err) {\n    log('Could not walk DAG for CID', cid.toString(), err)\n\n    throw err\n  }\n}\n\nmodule.exports = walkDag\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,0BAAjB,CAAZ;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,oBAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACiBE,O;;;;;0EAAjB,iBAA0BC,GAA1B,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,OAAtD;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,4BAEwBF,UAAU,CAACG,GAAX,CAAeJ,GAAf,EAAoBG,OAApB,CAFxB;;UAAA;YAEUE,KAFV;YAAA;YAAA,4BAGwBH,SAAS,CAACF,GAAG,CAACM,IAAL,CAHjC;;UAAA;YAGUC,KAHV;YAIUC,KAJV,GAIkBV,KAAK,CAACW,YAAN,CAAmB;cAAEJ,KAAK,EAALA,KAAF;cAASL,GAAG,EAAHA,GAAT;cAAcO,KAAK,EAALA;YAAd,CAAnB,CAJlB;YAAA,uCAM+BC,KAAK,CAACE,KAAN,EAN/B;YAAA;;YAAA;;UAAA;YAAA;cAAA;cAAA;YAAA;;YAAA,8CAMkBC,QANlB;YAAA;YAOM,OAAMA,QAAN;;UAPN;YAQM,qEAAQZ,OAAO,CAACY,QAAD,EAAWV,UAAX,EAAuBC,SAAvB,EAAkCC,OAAlC,CAAf;;UARN;YAAA;YAAA;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;;YAAA;;UAAA;YAAA;;YAAA;;YAAA;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAWIP,GAAG,CAAC,4BAAD,EAA+BI,GAAG,CAACY,QAAJ,EAA/B,cAAH;YAXJ;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAiBAC,MAAM,CAACC,OAAP,GAAiBf,OAAjB"},"metadata":{},"sourceType":"script"}
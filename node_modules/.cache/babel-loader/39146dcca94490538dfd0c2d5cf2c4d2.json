{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IK = void 0;\n\nvar buffer_1 = require(\"buffer\");\n\nvar utils_1 = require(\"../utils\");\n\nvar abstract_handshake_1 = require(\"./abstract-handshake\");\n\nvar IK = /*#__PURE__*/function (_abstract_handshake_) {\n  _inherits(IK, _abstract_handshake_);\n\n  var _super = _createSuper(IK);\n\n  function IK() {\n    _classCallCheck(this, IK);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(IK, [{\n    key: \"initSession\",\n    value: function initSession(initiator, prologue, s, rs) {\n      var psk = this.createEmptyKey();\n      var hs;\n\n      if (initiator) {\n        hs = this.initializeInitiator(prologue, s, rs, psk);\n      } else {\n        hs = this.initializeResponder(prologue, s, rs, psk);\n      }\n\n      return {\n        hs: hs,\n        i: initiator,\n        mc: 0\n      };\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(session, message) {\n      var messageBuffer;\n\n      if (session.mc === 0) {\n        messageBuffer = this.writeMessageA(session.hs, message);\n      } else if (session.mc === 1) {\n        var _this$writeMessageB = this.writeMessageB(session.hs, message),\n            mb = _this$writeMessageB.messageBuffer,\n            h = _this$writeMessageB.h,\n            cs1 = _this$writeMessageB.cs1,\n            cs2 = _this$writeMessageB.cs2;\n\n        messageBuffer = mb;\n        session.h = h;\n        session.cs1 = cs1;\n        session.cs2 = cs2;\n      } else if (session.mc > 1) {\n        if (session.i) {\n          if (!session.cs1) {\n            throw new Error('CS1 (cipher state) is not defined');\n          }\n\n          messageBuffer = this.writeMessageRegular(session.cs1, message);\n        } else {\n          if (!session.cs2) {\n            throw new Error('CS2 (cipher state) is not defined');\n          }\n\n          messageBuffer = this.writeMessageRegular(session.cs2, message);\n        }\n      } else {\n        throw new Error('Session invalid.');\n      }\n\n      session.mc++;\n      return messageBuffer;\n    }\n  }, {\n    key: \"recvMessage\",\n    value: function recvMessage(session, message) {\n      var plaintext = buffer_1.Buffer.alloc(0);\n      var valid = false;\n\n      if (session.mc === 0) {\n        var _this$readMessageA = this.readMessageA(session.hs, message);\n\n        plaintext = _this$readMessageA.plaintext;\n        valid = _this$readMessageA.valid;\n      }\n\n      if (session.mc === 1) {\n        var _this$readMessageB = this.readMessageB(session.hs, message),\n            pt = _this$readMessageB.plaintext,\n            v = _this$readMessageB.valid,\n            h = _this$readMessageB.h,\n            cs1 = _this$readMessageB.cs1,\n            cs2 = _this$readMessageB.cs2;\n\n        plaintext = pt;\n        valid = v;\n        session.h = h;\n        session.cs1 = cs1;\n        session.cs2 = cs2;\n      }\n\n      session.mc++;\n      return {\n        plaintext: plaintext,\n        valid: valid\n      };\n    }\n  }, {\n    key: \"writeMessageA\",\n    value: function writeMessageA(hs, payload) {\n      hs.e = utils_1.generateKeypair();\n      var ne = hs.e.publicKey;\n      this.mixHash(hs.ss, ne);\n      this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.rs));\n      var spk = buffer_1.Buffer.from(hs.s.publicKey);\n      var ns = this.encryptAndHash(hs.ss, spk);\n      this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.rs));\n      var ciphertext = this.encryptAndHash(hs.ss, payload);\n      return {\n        ne: ne,\n        ns: ns,\n        ciphertext: ciphertext\n      };\n    }\n  }, {\n    key: \"writeMessageB\",\n    value: function writeMessageB(hs, payload) {\n      hs.e = utils_1.generateKeypair();\n      var ne = hs.e.publicKey;\n      this.mixHash(hs.ss, ne);\n      this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.re));\n      this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.rs));\n      var ciphertext = this.encryptAndHash(hs.ss, payload);\n      var ns = this.createEmptyKey();\n      var messageBuffer = {\n        ne: ne,\n        ns: ns,\n        ciphertext: ciphertext\n      };\n\n      var _this$split = this.split(hs.ss),\n          cs1 = _this$split.cs1,\n          cs2 = _this$split.cs2;\n\n      return {\n        messageBuffer: messageBuffer,\n        cs1: cs1,\n        cs2: cs2,\n        h: hs.ss.h\n      };\n    }\n  }, {\n    key: \"readMessageA\",\n    value: function readMessageA(hs, message) {\n      if (utils_1.isValidPublicKey(message.ne)) {\n        hs.re = message.ne;\n      }\n\n      this.mixHash(hs.ss, hs.re);\n      this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.re));\n\n      var _this$decryptAndHash = this.decryptAndHash(hs.ss, message.ns),\n          ns = _this$decryptAndHash.plaintext,\n          valid1 = _this$decryptAndHash.valid;\n\n      if (valid1 && ns.length === 32 && utils_1.isValidPublicKey(ns)) {\n        hs.rs = ns;\n      }\n\n      this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.rs));\n\n      var _this$decryptAndHash2 = this.decryptAndHash(hs.ss, message.ciphertext),\n          plaintext = _this$decryptAndHash2.plaintext,\n          valid2 = _this$decryptAndHash2.valid;\n\n      return {\n        plaintext: plaintext,\n        valid: valid1 && valid2\n      };\n    }\n  }, {\n    key: \"readMessageB\",\n    value: function readMessageB(hs, message) {\n      if (utils_1.isValidPublicKey(message.ne)) {\n        hs.re = message.ne;\n      }\n\n      this.mixHash(hs.ss, hs.re);\n\n      if (!hs.e) {\n        throw new Error('Handshake state should contain ephemeral key by now.');\n      }\n\n      this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.re));\n      this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.re));\n\n      var _this$decryptAndHash3 = this.decryptAndHash(hs.ss, message.ciphertext),\n          plaintext = _this$decryptAndHash3.plaintext,\n          valid = _this$decryptAndHash3.valid;\n\n      var _this$split2 = this.split(hs.ss),\n          cs1 = _this$split2.cs1,\n          cs2 = _this$split2.cs2;\n\n      return {\n        h: hs.ss.h,\n        valid: valid,\n        plaintext: plaintext,\n        cs1: cs1,\n        cs2: cs2\n      };\n    }\n  }, {\n    key: \"initializeInitiator\",\n    value: function initializeInitiator(prologue, s, rs, psk) {\n      var name = 'Noise_IK_25519_ChaChaPoly_SHA256';\n      var ss = this.initializeSymmetric(name);\n      this.mixHash(ss, prologue);\n      this.mixHash(ss, rs);\n      var re = buffer_1.Buffer.alloc(32);\n      return {\n        ss: ss,\n        s: s,\n        rs: rs,\n        re: re,\n        psk: psk\n      };\n    }\n  }, {\n    key: \"initializeResponder\",\n    value: function initializeResponder(prologue, s, rs, psk) {\n      var name = 'Noise_IK_25519_ChaChaPoly_SHA256';\n      var ss = this.initializeSymmetric(name);\n      this.mixHash(ss, prologue);\n      this.mixHash(ss, s.publicKey);\n      var re = buffer_1.Buffer.alloc(32);\n      return {\n        ss: ss,\n        s: s,\n        rs: rs,\n        re: re,\n        psk: psk\n      };\n    }\n  }]);\n\n  return IK;\n}(abstract_handshake_1.AbstractHandshake);\n\nexports.IK = IK;","map":{"version":3,"mappings":"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","names":["IK","initiator","prologue","s","rs","psk","createEmptyKey","hs","initializeInitiator","initializeResponder","i","mc","session","message","messageBuffer","writeMessageA","writeMessageB","mb","h","cs1","cs2","Error","writeMessageRegular","plaintext","buffer_1","alloc","valid","readMessageA","readMessageB","pt","v","payload","e","utils_1","ne","publicKey","mixHash","ss","mixKey","dh","privateKey","spk","from","ns","encryptAndHash","ciphertext","re","split","decryptAndHash","valid1","length","valid2","name","initializeSymmetric","abstract_handshake_1","exports"],"sourceRoot":"","sources":["../../../src/handshakes/ik.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _asyncGeneratorDelegate = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js\").default;\n\nvar _require = require('ipfs-unixfs-exporter'),\n    exporter = _require.exporter;\n\nvar toMfsPath = require('./utils/to-mfs-path');\n\nvar withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n\nvar map = require('it-map');\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {import('ipfs-core-types/src/files').MFSEntry} MFSEntry\n */\n\n/**\n * @param {import('ipfs-unixfs-exporter').UnixFSEntry} fsEntry\n */\n\n\nvar toOutput = function toOutput(fsEntry) {\n  /** @type {MFSEntry} */\n  var output = {\n    cid: fsEntry.cid,\n    name: fsEntry.name,\n    type: fsEntry.type === 'directory' ? 'directory' : 'file',\n    size: fsEntry.size\n  };\n\n  if (fsEntry.type === 'file' || fsEntry.type === 'directory') {\n    output.mode = fsEntry.unixfs.mode;\n    output.mtime = fsEntry.unixfs.mtime;\n  }\n\n  return output;\n};\n/**\n * @param {MfsContext} context\n */\n\n\nmodule.exports = function (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API[\"ls\"]}\n   */\n  function mfsLs(_x) {\n    return _mfsLs.apply(this, arguments);\n  }\n\n  function _mfsLs() {\n    _mfsLs = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(path) {\n      var options,\n          mfsPath,\n          fsEntry,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return _awaitAsyncGenerator(toMfsPath(context, path, options));\n\n            case 3:\n              mfsPath = _context.sent;\n              _context.next = 6;\n              return _awaitAsyncGenerator(exporter(mfsPath.mfsPath, context.repo.blocks));\n\n            case 6:\n              fsEntry = _context.sent;\n\n              if (!(fsEntry.type === 'directory')) {\n                _context.next = 10;\n                break;\n              }\n\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(map(fsEntry.content(options), toOutput)), _awaitAsyncGenerator), \"t0\", 9);\n\n            case 9:\n              return _context.abrupt(\"return\");\n\n            case 10:\n              _context.next = 12;\n              return toOutput(fsEntry);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _mfsLs.apply(this, arguments);\n  }\n\n  return withTimeoutOption(mfsLs);\n};","map":{"version":3,"names":["require","exporter","toMfsPath","withTimeoutOption","map","toOutput","fsEntry","output","cid","name","type","size","mode","unixfs","mtime","module","exports","context","mfsLs","path","options","mfsPath","repo","blocks","content"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/files/ls.js"],"sourcesContent":["'use strict'\n\nconst { exporter } = require('ipfs-unixfs-exporter')\nconst toMfsPath = require('./utils/to-mfs-path')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\nconst map = require('it-map')\n\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {import('ipfs-core-types/src/files').MFSEntry} MFSEntry\n */\n\n/**\n * @param {import('ipfs-unixfs-exporter').UnixFSEntry} fsEntry\n */\nconst toOutput = (fsEntry) => {\n  /** @type {MFSEntry} */\n  const output = {\n    cid: fsEntry.cid,\n    name: fsEntry.name,\n    type: fsEntry.type === 'directory' ? 'directory' : 'file',\n    size: fsEntry.size\n  }\n\n  if (fsEntry.type === 'file' || fsEntry.type === 'directory') {\n    output.mode = fsEntry.unixfs.mode\n    output.mtime = fsEntry.unixfs.mtime\n  }\n\n  return output\n}\n\n/**\n * @param {MfsContext} context\n */\nmodule.exports = (context) => {\n  /**\n   * @type {import('ipfs-core-types/src/files').API[\"ls\"]}\n   */\n  async function * mfsLs (path, options = {}) {\n    const mfsPath = await toMfsPath(context, path, options)\n    const fsEntry = await exporter(mfsPath.mfsPath, context.repo.blocks)\n\n    // directory, perhaps sharded\n    if (fsEntry.type === 'directory') {\n      yield * map(fsEntry.content(options), toOutput)\n\n      return\n    }\n\n    // single file/node\n    yield toOutput(fsEntry)\n  }\n\n  return withTimeoutOption(mfsLs)\n}\n"],"mappings":"AAAA;;;;;;;;;;;;AAEA,eAAqBA,OAAO,CAAC,sBAAD,CAA5B;AAAA,IAAQC,QAAR,YAAQA,QAAR;;AACA,IAAMC,SAAS,GAAGF,OAAO,CAAC,qBAAD,CAAzB;;AACA,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,yCAAD,CAAjC;;AACA,IAAMI,GAAG,GAAGJ,OAAO,CAAC,QAAD,CAAnB;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD,EAAa;EAC5B;EACA,IAAMC,MAAM,GAAG;IACbC,GAAG,EAAEF,OAAO,CAACE,GADA;IAEbC,IAAI,EAAEH,OAAO,CAACG,IAFD;IAGbC,IAAI,EAAEJ,OAAO,CAACI,IAAR,KAAiB,WAAjB,GAA+B,WAA/B,GAA6C,MAHtC;IAIbC,IAAI,EAAEL,OAAO,CAACK;EAJD,CAAf;;EAOA,IAAIL,OAAO,CAACI,IAAR,KAAiB,MAAjB,IAA2BJ,OAAO,CAACI,IAAR,KAAiB,WAAhD,EAA6D;IAC3DH,MAAM,CAACK,IAAP,GAAcN,OAAO,CAACO,MAAR,CAAeD,IAA7B;IACAL,MAAM,CAACO,KAAP,GAAeR,OAAO,CAACO,MAAR,CAAeC,KAA9B;EACD;;EAED,OAAOP,MAAP;AACD,CAfD;AAiBA;AACA;AACA;;;AACAQ,MAAM,CAACC,OAAP,GAAiB,UAACC,OAAD,EAAa;EAC5B;AACF;AACA;EAH8B,SAIXC,KAJW;IAAA;EAAA;;EAAA;IAAA,sEAI5B,iBAAwBC,IAAxB;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAA8BC,OAA9B,2DAAwC,EAAxC;cAAA;cAAA,4BACwBlB,SAAS,CAACe,OAAD,EAAUE,IAAV,EAAgBC,OAAhB,CADjC;;YAAA;cACQC,OADR;cAAA;cAAA,4BAEwBpB,QAAQ,CAACoB,OAAO,CAACA,OAAT,EAAkBJ,OAAO,CAACK,IAAR,CAAaC,MAA/B,CAFhC;;YAAA;cAEQjB,OAFR;;cAAA,MAKMA,OAAO,CAACI,IAAR,KAAiB,WALvB;gBAAA;gBAAA;cAAA;;cAMI,qEAAQN,GAAG,CAACE,OAAO,CAACkB,OAAR,CAAgBJ,OAAhB,CAAD,EAA2Bf,QAA3B,CAAX;;YANJ;cAAA;;YAAA;cAAA;cAYE,OAAMA,QAAQ,CAACC,OAAD,CAAd;;YAZF;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJ4B;IAAA;EAAA;;EAmB5B,OAAOH,iBAAiB,CAACe,KAAD,CAAxB;AACD,CApBD"},"metadata":{},"sourceType":"script"}
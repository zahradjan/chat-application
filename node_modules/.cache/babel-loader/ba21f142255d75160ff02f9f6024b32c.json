{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {LogAPI[\"ls\"]}\n   */\n  function ls() {\n    return _ls.apply(this, arguments);\n  }\n\n  function _ls() {\n    _ls = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n          res,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return api.post('log/ls', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(options),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data.Strings);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _ls.apply(this, arguments);\n  }\n\n  return ls;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","module","exports","api","ls","options","post","signal","searchParams","headers","res","json","data","Strings"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/log/ls.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {LogAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    const res = await api.post('log/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n    return data.Strings\n  }\n  return ls\n})\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAChC;AACF;AACA;EAHkC,SAIjBC,EAJiB;IAAA;EAAA;;EAAA;IAAA,iEAIhC;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAmBC,OAAnB,2DAA6B,EAA7B;cAAA;cAAA,OACoBF,GAAG,CAACG,IAAJ,CAAS,QAAT,EAAmB;gBACnCC,MAAM,EAAEF,OAAO,CAACE,MADmB;gBAEnCC,YAAY,EAAER,iBAAiB,CAACK,OAAD,CAFI;gBAGnCI,OAAO,EAAEJ,OAAO,CAACI;cAHkB,CAAnB,CADpB;;YAAA;cACQC,GADR;cAAA;cAAA,OAOqBA,GAAG,CAACC,IAAJ,EAPrB;;YAAA;cAOQC,IAPR;cAAA,iCAQSA,IAAI,CAACC,OARd;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJgC;IAAA;EAAA;;EAchC,OAAOT,EAAP;AACD,CAfyB,CAA1B"},"metadata":{},"sourceType":"script"}
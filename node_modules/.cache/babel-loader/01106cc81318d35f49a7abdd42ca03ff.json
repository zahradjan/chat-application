{"ast":null,"code":"import { get, makeAutoObservable, runInAction, toJS } from \"mobx\";\nimport { Message } from \"./Message.js\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nimport { v4 as uuidv4 } from \"uuid\";\nexport class ChatRoom {\n  constructor(rootStore, roomName) {\n    this.roomId = uuidv4();\n    this.rootStore = rootStore;\n    this.ipfsNode = rootStore.dataStore.ipfsNode;\n    this.pubsub = rootStore.dataStore.ipfsNode.pubsub;\n    this.orbitDb = rootStore.dataStore.orbitDb;\n    this.roomName = roomName;\n    this.textDecoder = new TextDecoder();\n    this.chatRoomMessages = [];\n    this.lastMessage = \"\";\n    this.chatRoomUsers = [];\n    makeAutoObservable(this);\n  }\n\n  async init() {\n    await this.connectToChatRoom();\n    await this.initDB();\n  }\n\n  async initDB() {\n    await this.loadMsgDb();\n    await this.setMessagesFromDb();\n  }\n\n  async loadMsgDb() {\n    this.chatMessagesDb = await this.orbitDb.feed(`${this.roomName}-messages`);\n    await this.chatMessagesDb.load();\n  }\n\n  getRoomUsers() {\n    return this.chatRoomUsers;\n  }\n\n  setRoomUser(user) {\n    if (!this.chatRoomUsers.find(item => item === user)) {\n      this.chatRoomUsers.push(user);\n    }\n  }\n\n  async setMessagesFromDb() {\n    // if (this.chatRoomMessages !== []) return;\n    const all = await toJS(this.chatMessagesDb.all); // console.log(toJS(this.chatRoomMessages));\n\n    runInAction(() => {\n      all.map(e => {\n        // console.log(e.payload.value);\n        return this.chatRoomMessages.push(e.payload.value);\n      });\n    });\n  }\n\n  async connectToChatRoom() {\n    runInAction(async () => {\n      // await this.pubsub.unsubscribe(this.roomName, (msg) => console.log(msg));\n      await this.pubsub.subscribe(this.roomName, await this.setMessage.bind(this));\n    });\n  }\n\n  async sendMessageToChatRoom(msg) {\n    console.log(\"Msg in sending: \" + msg);\n    const sender = this.rootStore.sessionStore._user;\n    const message = {\n      sender: sender,\n      msg: msg\n    };\n    const stringifyMessage = JSON.stringify(message);\n    runInAction(async () => {\n      await this.pubsub.publish(this.roomName, stringifyMessage);\n    });\n  }\n\n  async setMessage(msg) {\n    console.log(msg);\n    console.log(msg.data);\n    if (typeof msg.data === \"object\") msg.data = this.textDecoder.decode(msg.data);\n    const parsedMsg = JSON.parse(msg.data);\n    const userName = parsedMsg.sender;\n    console.log(parsedMsg);\n    let type = \"message\";\n\n    if (msg.data.includes(\"path\")) {\n      let file = await this.retrieveFileFromIpfs(parsedMsg.msg.path);\n      console.log(file);\n      parsedMsg[\"file\"] = file;\n      type = \"file\";\n    }\n\n    console.log(parsedMsg);\n    const date = new Date(Date.now());\n    const message = new Message(msg.from, userName, parsedMsg, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from), type);\n    console.log(message);\n    await this.saveMessage(message);\n  }\n\n  async saveMessage(message) {\n    runInAction(async () => {\n      this.chatRoomMessages.push(message);\n      this.lastMessage = message;\n      await this.chatMessagesDb.add(message);\n    });\n  }\n\n  async uploadFile(filesContent) {\n    //TODO: maybe Multiple files if interested\n    console.log(filesContent[0]);\n    console.log(filesContent[0].name.split(\".\").pop());\n    const result = await this.ipfsNode.add(filesContent[0]);\n    console.log(result);\n    const fileMessage = {\n      fileName: filesContent[0].name,\n      path: result.path\n    };\n    console.log(fileMessage);\n    this.sendMessageToChatRoom(fileMessage);\n  }\n\n  getFileExtension(fileName) {\n    return fileName.split(\".\").pop();\n  }\n\n  fileIsImage(fileName) {\n    const match = fileName.match(/\\.(jpg|jpeg|png|gif)$/i);\n    console.log(match);\n    return match !== null;\n  }\n\n  async retrieveFileFromIpfs(path) {\n    const ipfsFile = await this.ipfsNode.cat(path);\n    console.log(ipfsFile);\n    let file;\n    const content = [];\n\n    for await (const chunk of ipfsFile) {\n      content.push(chunk);\n    }\n\n    console.log(content);\n    file = content;\n    return file;\n  }\n\n}","map":{"version":3,"names":["get","makeAutoObservable","runInAction","toJS","Message","AvatarGenerator","v4","uuidv4","ChatRoom","constructor","rootStore","roomName","roomId","ipfsNode","dataStore","pubsub","orbitDb","textDecoder","TextDecoder","chatRoomMessages","lastMessage","chatRoomUsers","init","connectToChatRoom","initDB","loadMsgDb","setMessagesFromDb","chatMessagesDb","feed","load","getRoomUsers","setRoomUser","user","find","item","push","all","map","e","payload","value","subscribe","setMessage","bind","sendMessageToChatRoom","msg","console","log","sender","sessionStore","_user","message","stringifyMessage","JSON","stringify","publish","data","decode","parsedMsg","parse","userName","type","includes","file","retrieveFileFromIpfs","path","date","Date","now","from","getHours","getMinutes","generateRandomAvatar","saveMessage","add","uploadFile","filesContent","name","split","pop","result","fileMessage","fileName","getFileExtension","fileIsImage","match","ipfsFile","cat","content","chunk"],"sources":["C:/Users/zajan/GitHub/chatApplication/src/data/models/Room.js"],"sourcesContent":["import { get, makeAutoObservable, runInAction, toJS } from \"mobx\";\r\nimport { Message } from \"./Message.js\";\r\nimport { AvatarGenerator } from \"random-avatar-generator\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nexport class ChatRoom {\r\n  roomId;\r\n  pubsub;\r\n  ipfsNode;\r\n  orbitDb;\r\n  roomName;\r\n  textDecoder;\r\n  chatMessagesDb;\r\n  chatRoomMessages;\r\n  lastMessage;\r\n  chatRoomUsers;\r\n\r\n  constructor(rootStore, roomName) {\r\n    this.roomId = uuidv4();\r\n    this.rootStore = rootStore;\r\n    this.ipfsNode = rootStore.dataStore.ipfsNode;\r\n    this.pubsub = rootStore.dataStore.ipfsNode.pubsub;\r\n    this.orbitDb = rootStore.dataStore.orbitDb;\r\n    this.roomName = roomName;\r\n    this.textDecoder = new TextDecoder();\r\n    this.chatRoomMessages = [];\r\n    this.lastMessage = \"\";\r\n    this.chatRoomUsers = [];\r\n    makeAutoObservable(this);\r\n  }\r\n  async init() {\r\n    await this.connectToChatRoom();\r\n    await this.initDB();\r\n  }\r\n  async initDB() {\r\n    await this.loadMsgDb();\r\n    await this.setMessagesFromDb();\r\n  }\r\n\r\n  async loadMsgDb() {\r\n    this.chatMessagesDb = await this.orbitDb.feed(`${this.roomName}-messages`);\r\n    await this.chatMessagesDb.load();\r\n  }\r\n  getRoomUsers() {\r\n    return this.chatRoomUsers;\r\n  }\r\n  setRoomUser(user) {\r\n    if (!this.chatRoomUsers.find((item) => item === user)) {\r\n      this.chatRoomUsers.push(user);\r\n    }\r\n  }\r\n\r\n  async setMessagesFromDb() {\r\n    // if (this.chatRoomMessages !== []) return;\r\n    const all = await toJS(this.chatMessagesDb.all);\r\n    // console.log(toJS(this.chatRoomMessages));\r\n    runInAction(() => {\r\n      all.map((e) => {\r\n        // console.log(e.payload.value);\r\n        return this.chatRoomMessages.push(e.payload.value);\r\n      });\r\n    });\r\n  }\r\n\r\n  async connectToChatRoom() {\r\n    runInAction(async () => {\r\n      // await this.pubsub.unsubscribe(this.roomName, (msg) => console.log(msg));\r\n      await this.pubsub.subscribe(this.roomName, await this.setMessage.bind(this));\r\n    });\r\n  }\r\n\r\n  async sendMessageToChatRoom(msg) {\r\n    console.log(\"Msg in sending: \" + msg);\r\n    const sender = this.rootStore.sessionStore._user;\r\n\r\n    const message = { sender: sender, msg: msg };\r\n    const stringifyMessage = JSON.stringify(message);\r\n    runInAction(async () => {\r\n      await this.pubsub.publish(this.roomName, stringifyMessage);\r\n    });\r\n  }\r\n\r\n  async setMessage(msg) {\r\n    console.log(msg);\r\n    console.log(msg.data);\r\n    if (typeof msg.data === \"object\") msg.data = this.textDecoder.decode(msg.data);\r\n    const parsedMsg = JSON.parse(msg.data);\r\n    const userName = parsedMsg.sender;\r\n    console.log(parsedMsg);\r\n    let type = \"message\";\r\n    if (msg.data.includes(\"path\")) {\r\n      let file = await this.retrieveFileFromIpfs(parsedMsg.msg.path);\r\n      console.log(file);\r\n      parsedMsg[\"file\"] = file;\r\n      type = \"file\";\r\n    }\r\n    console.log(parsedMsg);\r\n    const date = new Date(Date.now());\r\n    const message = new Message(\r\n      msg.from,\r\n      userName,\r\n      parsedMsg,\r\n      `${date.getHours()}:${date.getMinutes()}`,\r\n      new AvatarGenerator().generateRandomAvatar(msg.from),\r\n      type\r\n    );\r\n    console.log(message);\r\n\r\n    await this.saveMessage(message);\r\n  }\r\n\r\n  async saveMessage(message) {\r\n    runInAction(async () => {\r\n      this.chatRoomMessages.push(message);\r\n      this.lastMessage = message;\r\n      await this.chatMessagesDb.add(message);\r\n    });\r\n  }\r\n\r\n  async uploadFile(filesContent) {\r\n    //TODO: maybe Multiple files if interested\r\n    console.log(filesContent[0]);\r\n    console.log(filesContent[0].name.split(\".\").pop());\r\n    const result = await this.ipfsNode.add(filesContent[0]);\r\n    console.log(result);\r\n    const fileMessage = { fileName: filesContent[0].name, path: result.path };\r\n    console.log(fileMessage);\r\n    this.sendMessageToChatRoom(fileMessage);\r\n  }\r\n  getFileExtension(fileName) {\r\n    return fileName.split(\".\").pop();\r\n  }\r\n\r\n  fileIsImage(fileName) {\r\n    const match = fileName.match(/\\.(jpg|jpeg|png|gif)$/i);\r\n    console.log(match);\r\n    return match !== null;\r\n  }\r\n  async retrieveFileFromIpfs(path) {\r\n    const ipfsFile = await this.ipfsNode.cat(path);\r\n\r\n    console.log(ipfsFile);\r\n\r\n    let file;\r\n\r\n    const content = [];\r\n    for await (const chunk of ipfsFile) {\r\n      content.push(chunk);\r\n    }\r\n    console.log(content);\r\n\r\n    file = content;\r\n\r\n    return file;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
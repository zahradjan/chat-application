{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar parallelBatch = require('it-parallel-batch');\n\nvar options = require('./options.js');\n\nvar index = require('./dag-builder/index.js');\n\nvar treeBuilder = require('./tree-builder.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar parallelBatch__default = /*#__PURE__*/_interopDefaultLegacy(parallelBatch);\n\nasync function* importer(source, blockstore) {\n  let options$1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const opts = options(options$1);\n  let dagBuilder;\n\n  if (typeof options$1.dagBuilder === 'function') {\n    dagBuilder = options$1.dagBuilder;\n  } else {\n    dagBuilder = index;\n  }\n\n  let treeBuilder$1;\n\n  if (typeof options$1.treeBuilder === 'function') {\n    treeBuilder$1 = options$1.treeBuilder;\n  } else {\n    treeBuilder$1 = treeBuilder;\n  }\n\n  let candidates;\n\n  if (Symbol.asyncIterator in source || Symbol.iterator in source) {\n    candidates = source;\n  } else {\n    candidates = [source];\n  }\n\n  for await (const entry of treeBuilder$1(parallelBatch__default[\"default\"](dagBuilder(candidates, blockstore, opts), opts.fileImportConcurrency), blockstore, opts)) {\n    yield {\n      cid: entry.cid,\n      path: entry.path,\n      unixfs: entry.unixfs,\n      size: entry.size\n    };\n  }\n}\n\nexports.importer = importer;","map":{"version":3,"names":["Object","defineProperty","exports","value","parallelBatch","require","options","index","treeBuilder","_interopDefaultLegacy","e","parallelBatch__default","importer","source","blockstore","options$1","opts","dagBuilder","treeBuilder$1","candidates","Symbol","asyncIterator","iterator","entry","fileImportConcurrency","cid","path","unixfs","size"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-unixfs-importer/cjs/src/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar parallelBatch = require('it-parallel-batch');\nvar options = require('./options.js');\nvar index = require('./dag-builder/index.js');\nvar treeBuilder = require('./tree-builder.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar parallelBatch__default = /*#__PURE__*/_interopDefaultLegacy(parallelBatch);\n\nasync function* importer(source, blockstore, options$1 = {}) {\n  const opts = options(options$1);\n  let dagBuilder;\n  if (typeof options$1.dagBuilder === 'function') {\n    dagBuilder = options$1.dagBuilder;\n  } else {\n    dagBuilder = index;\n  }\n  let treeBuilder$1;\n  if (typeof options$1.treeBuilder === 'function') {\n    treeBuilder$1 = options$1.treeBuilder;\n  } else {\n    treeBuilder$1 = treeBuilder;\n  }\n  let candidates;\n  if (Symbol.asyncIterator in source || Symbol.iterator in source) {\n    candidates = source;\n  } else {\n    candidates = [source];\n  }\n  for await (const entry of treeBuilder$1(parallelBatch__default[\"default\"](dagBuilder(candidates, blockstore, opts), opts.fileImportConcurrency), blockstore, opts)) {\n    yield {\n      cid: entry.cid,\n      path: entry.path,\n      unixfs: entry.unixfs,\n      size: entry.size\n    };\n  }\n}\n\nexports.importer = importer;\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,aAAa,GAAGC,OAAO,CAAC,mBAAD,CAA3B;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,cAAD,CAArB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,wBAAD,CAAnB;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,mBAAD,CAAzB;;AAEA,SAASI,qBAAT,CAAgCC,CAAhC,EAAmC;EAAE,OAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;IAAE,WAAWA;EAAb,CAA1D;AAA6E;;AAElH,IAAIC,sBAAsB,GAAG,aAAaF,qBAAqB,CAACL,aAAD,CAA/D;;AAEA,gBAAgBQ,QAAhB,CAAyBC,MAAzB,EAAiCC,UAAjC,EAA6D;EAAA,IAAhBC,SAAgB,uEAAJ,EAAI;EAC3D,MAAMC,IAAI,GAAGV,OAAO,CAACS,SAAD,CAApB;EACA,IAAIE,UAAJ;;EACA,IAAI,OAAOF,SAAS,CAACE,UAAjB,KAAgC,UAApC,EAAgD;IAC9CA,UAAU,GAAGF,SAAS,CAACE,UAAvB;EACD,CAFD,MAEO;IACLA,UAAU,GAAGV,KAAb;EACD;;EACD,IAAIW,aAAJ;;EACA,IAAI,OAAOH,SAAS,CAACP,WAAjB,KAAiC,UAArC,EAAiD;IAC/CU,aAAa,GAAGH,SAAS,CAACP,WAA1B;EACD,CAFD,MAEO;IACLU,aAAa,GAAGV,WAAhB;EACD;;EACD,IAAIW,UAAJ;;EACA,IAAIC,MAAM,CAACC,aAAP,IAAwBR,MAAxB,IAAkCO,MAAM,CAACE,QAAP,IAAmBT,MAAzD,EAAiE;IAC/DM,UAAU,GAAGN,MAAb;EACD,CAFD,MAEO;IACLM,UAAU,GAAG,CAACN,MAAD,CAAb;EACD;;EACD,WAAW,MAAMU,KAAjB,IAA0BL,aAAa,CAACP,sBAAsB,CAAC,SAAD,CAAtB,CAAkCM,UAAU,CAACE,UAAD,EAAaL,UAAb,EAAyBE,IAAzB,CAA5C,EAA4EA,IAAI,CAACQ,qBAAjF,CAAD,EAA0GV,UAA1G,EAAsHE,IAAtH,CAAvC,EAAoK;IAClK,MAAM;MACJS,GAAG,EAAEF,KAAK,CAACE,GADP;MAEJC,IAAI,EAAEH,KAAK,CAACG,IAFR;MAGJC,MAAM,EAAEJ,KAAK,CAACI,MAHV;MAIJC,IAAI,EAAEL,KAAK,CAACK;IAJR,CAAN;EAMD;AACF;;AAED1B,OAAO,CAACU,QAAR,GAAmBA,QAAnB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import { makeAutoObservable, runInAction, toJS } from \"mobx\";\nimport { Message } from \"./Message.js\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nexport class ChatRoom {\n  constructor(ipfsNode, pubsub, orbitDb, roomName) {\n    this.ipfsNode = ipfsNode;\n    this.pubsub = pubsub;\n    this.orbitDb = orbitDb;\n    this.roomName = roomName;\n    this.textDecoder = new TextDecoder();\n    this.chatRoomMessages = [];\n    makeAutoObservable(this);\n  }\n\n  async init() {\n    await this.connectToChatRoom();\n    await this.loadMsgDb();\n    await this.setMessagesFromDb();\n  }\n\n  async loadMsgDb() {\n    this.chatMessagesDb = await this.orbitDb.feed(`${this.roomName}-messages`);\n    await this.chatMessagesDb.load();\n  }\n\n  async setMessagesFromDb() {\n    const entries = [];\n    const all = await toJS(this.chatMessagesDb.all);\n    all.map(e => entries.push(e.payload.value));\n    this.chatRoomMessages = entries;\n  }\n\n  async connectToChatRoom() {\n    runInAction(async () => {\n      await this.pubsub.unsubscribe(this.roomName, msg => console.log(msg));\n      await this.pubsub.subscribe(this.roomName, await this.echo.bind(this));\n    });\n  }\n\n  async sendMessageToChatRoom(msg) {\n    console.log(\"Msg in sending: \" + msg); //TODO:messages here\n    // const date = new Date(Date.now());\n    // const message = new Message(msg.from, msg, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from));\n\n    const stringifyMessage = JSON.stringify(msg);\n    runInAction(async () => {\n      await this.pubsub.publish(this.roomName, stringifyMessage);\n    });\n  }\n\n  async uploadFile(filesContent) {\n    //TODO: maybe Multiple files if interested\n    console.log(filesContent[0]);\n    const result = await this.ipfsNode.add(filesContent[0]);\n    console.log(result);\n    const fileMessage = {\n      fileName: filesContent[0].name,\n      path: result.path\n    };\n    console.log(fileMessage);\n    this.sendMessageToChatRoom(fileMessage);\n  }\n\n  async retrieveFileFromIpfs(path) {\n    const ipfsFile = await this.ipfsNode.cat(path);\n    let file;\n\n    for await (const buf of ipfsFile) {\n      // const blob = new Blob(buf);\n      console.log(buf);\n      file = new File(buf, \"test\");\n      console.log(file);\n      file = buf;\n      console.log(file);\n    }\n\n    return file;\n  }\n\n  async echo(msg) {\n    // console.log(typeof msg.data);\n    console.log(msg.data); //TODO: nevim proc ale kdyz je to zprava odeslana ze stejneho peeru tak je to string a jinak je to object\n\n    if (typeof msg.data === \"object\") msg.data = this.textDecoder.decode(msg.data);\n    const parsedMsg = JSON.parse(msg.data);\n    console.log(parsedMsg);\n\n    if (msg.data.includes(\"path\")) {\n      let file = await this.retrieveFileFromIpfs(parsedMsg.path);\n      parsedMsg[\"file\"] = file;\n    }\n\n    console.log(parsedMsg);\n    const date = new Date(Date.now());\n    const message = new Message(msg.from, parsedMsg, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from));\n    console.log(message); // const parsedMessage = JSON.parse(msg.data);\n    // console.log(parsedMessage);\n    // await this.saveMessage(message);\n  }\n\n  async saveMessage(message) {\n    await this.chatMessagesDb.add(message);\n    this.chatRoomMessages.push(message);\n  }\n\n}","map":{"version":3,"names":["makeAutoObservable","runInAction","toJS","Message","AvatarGenerator","ChatRoom","constructor","ipfsNode","pubsub","orbitDb","roomName","textDecoder","TextDecoder","chatRoomMessages","init","connectToChatRoom","loadMsgDb","setMessagesFromDb","chatMessagesDb","feed","load","entries","all","map","e","push","payload","value","unsubscribe","msg","console","log","subscribe","echo","bind","sendMessageToChatRoom","stringifyMessage","JSON","stringify","publish","uploadFile","filesContent","result","add","fileMessage","fileName","name","path","retrieveFileFromIpfs","ipfsFile","cat","file","buf","File","data","decode","parsedMsg","parse","includes","date","Date","now","message","from","getHours","getMinutes","generateRandomAvatar","saveMessage"],"sources":["C:/Users/zajan/GitHub/chatApplication/src/data/models/Room.js"],"sourcesContent":["import { makeAutoObservable, runInAction, toJS } from \"mobx\";\r\nimport { Message } from \"./Message.js\";\r\nimport { AvatarGenerator } from \"random-avatar-generator\";\r\nexport class ChatRoom {\r\n  pubsub;\r\n  ipfsNode;\r\n  orbitDb;\r\n  roomName;\r\n  textDecoder;\r\n  chatMessagesDb;\r\n  chatRoomMessages;\r\n\r\n  constructor(ipfsNode, pubsub, orbitDb, roomName) {\r\n    this.ipfsNode = ipfsNode;\r\n    this.pubsub = pubsub;\r\n    this.orbitDb = orbitDb;\r\n    this.roomName = roomName;\r\n    this.textDecoder = new TextDecoder();\r\n    this.chatRoomMessages = [];\r\n    makeAutoObservable(this);\r\n  }\r\n  async init() {\r\n    await this.connectToChatRoom();\r\n    await this.loadMsgDb();\r\n    await this.setMessagesFromDb();\r\n  }\r\n\r\n  async loadMsgDb() {\r\n    this.chatMessagesDb = await this.orbitDb.feed(`${this.roomName}-messages`);\r\n    await this.chatMessagesDb.load();\r\n  }\r\n\r\n  async setMessagesFromDb() {\r\n    const entries = [];\r\n    const all = await toJS(this.chatMessagesDb.all);\r\n    all.map((e) => entries.push(e.payload.value));\r\n    this.chatRoomMessages = entries;\r\n  }\r\n\r\n  async connectToChatRoom() {\r\n    runInAction(async () => {\r\n      await this.pubsub.unsubscribe(this.roomName, (msg) => console.log(msg));\r\n      await this.pubsub.subscribe(this.roomName, await this.echo.bind(this));\r\n    });\r\n  }\r\n\r\n  async sendMessageToChatRoom(msg) {\r\n    console.log(\"Msg in sending: \" + msg);\r\n    //TODO:messages here\r\n    // const date = new Date(Date.now());\r\n    // const message = new Message(msg.from, msg, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from));\r\n    const stringifyMessage = JSON.stringify(msg);\r\n    runInAction(async () => {\r\n      await this.pubsub.publish(this.roomName, stringifyMessage);\r\n    });\r\n  }\r\n\r\n  async uploadFile(filesContent) {\r\n    //TODO: maybe Multiple files if interested\r\n    console.log(filesContent[0]);\r\n    const result = await this.ipfsNode.add(filesContent[0]);\r\n    console.log(result);\r\n    const fileMessage = { fileName: filesContent[0].name, path: result.path };\r\n    console.log(fileMessage);\r\n    this.sendMessageToChatRoom(fileMessage);\r\n  }\r\n\r\n  async retrieveFileFromIpfs(path) {\r\n    const ipfsFile = await this.ipfsNode.cat(path);\r\n    let file;\r\n    for await (const buf of ipfsFile) {\r\n      // const blob = new Blob(buf);\r\n      console.log(buf);\r\n      file = new File(buf, \"test\");\r\n      console.log(file);\r\n      file = buf;\r\n      console.log(file);\r\n    }\r\n    return file;\r\n  }\r\n\r\n  async echo(msg) {\r\n    // console.log(typeof msg.data);\r\n    console.log(msg.data);\r\n    //TODO: nevim proc ale kdyz je to zprava odeslana ze stejneho peeru tak je to string a jinak je to object\r\n    if (typeof msg.data === \"object\") msg.data = this.textDecoder.decode(msg.data);\r\n    const parsedMsg = JSON.parse(msg.data);\r\n    console.log(parsedMsg);\r\n    if (msg.data.includes(\"path\")) {\r\n      let file = await this.retrieveFileFromIpfs(parsedMsg.path);\r\n      parsedMsg[\"file\"] = file;\r\n    }\r\n    console.log(parsedMsg);\r\n    const date = new Date(Date.now());\r\n    const message = new Message(msg.from, parsedMsg, `${date.getHours()}:${date.getMinutes()}`, new AvatarGenerator().generateRandomAvatar(msg.from));\r\n\r\n    console.log(message);\r\n\r\n    // const parsedMessage = JSON.parse(msg.data);\r\n    // console.log(parsedMessage);\r\n    // await this.saveMessage(message);\r\n  }\r\n\r\n  async saveMessage(message) {\r\n    await this.chatMessagesDb.add(message);\r\n    this.chatRoomMessages.push(message);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
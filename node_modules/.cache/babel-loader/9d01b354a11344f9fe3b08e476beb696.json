{"ast":null,"code":"'use strict';\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar createGC = require('./gc');\n\nvar createStat = require('./stat');\n\nvar createVersion = require('./version');\n/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('ipfs-core-utils/src/multihashes')} Multihashes\n */\n\n\nvar RepoAPI = /*#__PURE__*/_createClass(\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {Multihashes} config.hashers\n */\nfunction RepoAPI(_ref) {\n  var repo = _ref.repo,\n      hashers = _ref.hashers;\n\n  _classCallCheck(this, RepoAPI);\n\n  this.gc = createGC({\n    repo: repo,\n    hashers: hashers\n  });\n  this.stat = createStat({\n    repo: repo\n  });\n  this.version = createVersion({\n    repo: repo\n  });\n  /**\n   * @param {string} addr\n   */\n\n  this.setApiAddr = function (addr) {\n    return repo.apiAddr.set(addr);\n  };\n});\n\nmodule.exports = RepoAPI;","map":{"version":3,"names":["createGC","require","createStat","createVersion","RepoAPI","repo","hashers","gc","stat","version","setApiAddr","addr","apiAddr","set","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/repo/index.js"],"sourcesContent":["'use strict'\n\nconst createGC = require('./gc')\nconst createStat = require('./stat')\nconst createVersion = require('./version')\n\n/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('ipfs-core-utils/src/multihashes')} Multihashes\n */\n\nclass RepoAPI {\n  /**\n   * @param {Object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {Multihashes} config.hashers\n   */\n  constructor ({ repo, hashers }) {\n    this.gc = createGC({ repo, hashers })\n    this.stat = createStat({ repo })\n    this.version = createVersion({ repo })\n\n    /**\n     * @param {string} addr\n     */\n    this.setApiAddr = (addr) => repo.apiAddr.set(addr)\n  }\n}\nmodule.exports = RepoAPI\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,MAAD,CAAxB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,QAAD,CAA1B;;AACA,IAAME,aAAa,GAAGF,OAAO,CAAC,WAAD,CAA7B;AAEA;AACA;AACA;AACA;;;IAEMG,O;AACJ;AACF;AACA;AACA;AACA;AACE,uBAAgC;EAAA,IAAjBC,IAAiB,QAAjBA,IAAiB;EAAA,IAAXC,OAAW,QAAXA,OAAW;;EAAA;;EAC9B,KAAKC,EAAL,GAAUP,QAAQ,CAAC;IAAEK,IAAI,EAAJA,IAAF;IAAQC,OAAO,EAAPA;EAAR,CAAD,CAAlB;EACA,KAAKE,IAAL,GAAYN,UAAU,CAAC;IAAEG,IAAI,EAAJA;EAAF,CAAD,CAAtB;EACA,KAAKI,OAAL,GAAeN,aAAa,CAAC;IAAEE,IAAI,EAAJA;EAAF,CAAD,CAA5B;EAEA;AACJ;AACA;;EACI,KAAKK,UAAL,GAAkB,UAACC,IAAD;IAAA,OAAUN,IAAI,CAACO,OAAL,CAAaC,GAAb,CAAiBF,IAAjB,CAAV;EAAA,CAAlB;AACD,C;;AAEHG,MAAM,CAACC,OAAP,GAAiBX,OAAjB"},"metadata":{},"sourceType":"script"}
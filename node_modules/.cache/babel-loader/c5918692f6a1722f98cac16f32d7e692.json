{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar errCode = require('err-code');\n\nvar itPeekable = require('it-peekable');\n\nvar browserStreamToIt = require('browser-readablestream-to-it');\n\nvar all = require('it-all');\n\nvar _require = require('./utils'),\n    isBytes = _require.isBytes,\n    isBlob = _require.isBlob,\n    isReadableStream = _require.isReadableStream;\n/**\n * @param {import('./normalise-input').ToContent} input\n */\n\n\nfunction toBlob(_x) {\n  return _toBlob.apply(this, arguments);\n}\n/**\n * @param {AsyncIterable<BlobPart>|Iterable<BlobPart>} stream\n */\n\n\nfunction _toBlob() {\n  _toBlob = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(input) {\n    var peekable, _yield$peekable$peek, value, done;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!isBytes(input)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", new Blob([input]));\n\n          case 2:\n            if (!(typeof input === 'string' || input instanceof String)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", new Blob([input.toString()]));\n\n          case 4:\n            if (!isBlob(input)) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", input);\n\n          case 6:\n            // Browser stream\n            if (isReadableStream(input)) {\n              input = browserStreamToIt(input);\n            } // (Async)Iterator<?>\n\n\n            if (!(Symbol.iterator in input || Symbol.asyncIterator in input)) {\n              _context.next = 28;\n              break;\n            }\n\n            /** @type {any} peekable */\n            peekable = itPeekable(input);\n            /** @type {any} value **/\n\n            _context.next = 11;\n            return peekable.peek();\n\n          case 11:\n            _yield$peekable$peek = _context.sent;\n            value = _yield$peekable$peek.value;\n            done = _yield$peekable$peek.done;\n\n            if (!done) {\n              _context.next = 16;\n              break;\n            }\n\n            return _context.abrupt(\"return\", itToBlob(peekable));\n\n          case 16:\n            peekable.push(value); // (Async)Iterable<Number>\n\n            if (!Number.isInteger(value)) {\n              _context.next = 26;\n              break;\n            }\n\n            _context.t0 = Blob;\n            _context.t1 = Uint8Array;\n            _context.next = 22;\n            return all(peekable);\n\n          case 22:\n            _context.t2 = _context.sent;\n            _context.t3 = _context.t1.from.call(_context.t1, _context.t2);\n            _context.t4 = [_context.t3];\n            return _context.abrupt(\"return\", new _context.t0(_context.t4));\n\n          case 26:\n            if (!(isBytes(value) || typeof value === 'string' || value instanceof String)) {\n              _context.next = 28;\n              break;\n            }\n\n            return _context.abrupt(\"return\", itToBlob(peekable));\n\n          case 28:\n            throw errCode(new Error(\"Unexpected input: \".concat(input)), 'ERR_UNEXPECTED_INPUT');\n\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _toBlob.apply(this, arguments);\n}\n\nfunction itToBlob(_x2) {\n  return _itToBlob.apply(this, arguments);\n}\n\nfunction _itToBlob() {\n  _itToBlob = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(stream) {\n    var parts, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;\n\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            parts = [];\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context2.prev = 3;\n            _iterator = _asyncIterator(stream);\n\n          case 5:\n            _context2.next = 7;\n            return _iterator.next();\n\n          case 7:\n            if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n              _context2.next = 13;\n              break;\n            }\n\n            chunk = _step.value;\n            parts.push(chunk);\n\n          case 10:\n            _iteratorAbruptCompletion = false;\n            _context2.next = 5;\n            break;\n\n          case 13:\n            _context2.next = 19;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](3);\n            _didIteratorError = true;\n            _iteratorError = _context2.t0;\n\n          case 19:\n            _context2.prev = 19;\n            _context2.prev = 20;\n\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context2.next = 24;\n              break;\n            }\n\n            _context2.next = 24;\n            return _iterator.return();\n\n          case 24:\n            _context2.prev = 24;\n\n            if (!_didIteratorError) {\n              _context2.next = 27;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 27:\n            return _context2.finish(24);\n\n          case 28:\n            return _context2.finish(19);\n\n          case 29:\n            return _context2.abrupt(\"return\", new Blob(parts));\n\n          case 30:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 15, 19, 29], [20,, 24, 28]]);\n  }));\n  return _itToBlob.apply(this, arguments);\n}\n\nmodule.exports = toBlob;","map":{"version":3,"names":["errCode","require","itPeekable","browserStreamToIt","all","isBytes","isBlob","isReadableStream","toBlob","input","Blob","String","toString","Symbol","iterator","asyncIterator","peekable","peek","value","done","itToBlob","push","Number","isInteger","Uint8Array","from","Error","stream","parts","chunk","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js"],"sourcesContent":["'use strict'\n\nconst errCode = require('err-code')\nconst itPeekable = require('it-peekable')\nconst browserStreamToIt = require('browser-readablestream-to-it')\nconst all = require('it-all')\n\nconst {\n  isBytes,\n  isBlob,\n  isReadableStream\n} = require('./utils')\n\n/**\n * @param {import('./normalise-input').ToContent} input\n */\nasync function toBlob (input) {\n  // Bytes\n  if (isBytes(input)) {\n    return new Blob([input])\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    return new Blob([input.toString()])\n  }\n\n  // Blob | File\n  if (isBlob(input)) {\n    return input\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return itToBlob(peekable)\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return new Blob([Uint8Array.from(await all(peekable))])\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return itToBlob(peekable)\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {AsyncIterable<BlobPart>|Iterable<BlobPart>} stream\n */\nasync function itToBlob (stream) {\n  const parts = []\n\n  for await (const chunk of stream) {\n    parts.push(chunk)\n  }\n\n  return new Blob(parts)\n}\n\nmodule.exports = toBlob\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
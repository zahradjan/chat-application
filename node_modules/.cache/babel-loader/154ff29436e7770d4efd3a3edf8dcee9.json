{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _asyncGeneratorDelegate = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js\").default;\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {DAGAPI[\"export\"]}\n   */\n  function dagExport(_x) {\n    return _dagExport.apply(this, arguments);\n  }\n\n  function _dagExport() {\n    _dagExport = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(root) {\n      var options,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return _awaitAsyncGenerator(api.post('dag/export', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams({\n                  arg: root.toString()\n                }),\n                headers: options.headers\n              }));\n\n            case 3:\n              res = _context.sent;\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(res.iterator()), _awaitAsyncGenerator), \"t0\", 5);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _dagExport.apply(this, arguments);\n  }\n\n  return dagExport;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","module","exports","api","dagExport","root","options","post","signal","searchParams","arg","toString","headers","res","iterator"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/dag/export.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {DAGAPI[\"export\"]}\n   */\n  async function * dagExport (root, options = {}) {\n    const res = await api.post('dag/export', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: root.toString()\n      }),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return dagExport\n})\n"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAChC;AACF;AACA;EAHkC,SAIfC,SAJe;IAAA;EAAA;;EAAA;IAAA,0EAIhC,iBAA4BC,IAA5B;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAkCC,OAAlC,2DAA4C,EAA5C;cAAA;cAAA,4BACoBH,GAAG,CAACI,IAAJ,CAAS,YAAT,EAAuB;gBACvCC,MAAM,EAAEF,OAAO,CAACE,MADuB;gBAEvCC,YAAY,EAAET,iBAAiB,CAAC;kBAC9BU,GAAG,EAAEL,IAAI,CAACM,QAAL;gBADyB,CAAD,CAFQ;gBAKvCC,OAAO,EAAEN,OAAO,CAACM;cALsB,CAAvB,CADpB;;YAAA;cACQC,GADR;cASE,qEAAQA,GAAG,CAACC,QAAJ,EAAR;;YATF;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJgC;IAAA;EAAA;;EAgBhC,OAAOV,SAAP;AACD,CAjByB,CAA1B"},"metadata":{},"sourceType":"script"}
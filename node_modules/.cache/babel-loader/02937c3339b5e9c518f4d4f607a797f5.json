{"ast":null,"code":"const toDuplex = require('./duplex');\n\nmodule.exports = transform => async function* (source) {\n  const duplex = toDuplex(transform); // In a transform the sink and source are connected, an error in the sink\n  // will be thrown in the source also. Catch the sink error to avoid unhandled\n  // rejections and yield from the source.\n\n  let sinkError;\n  duplex.sink(source).catch(err => {\n    sinkError = err;\n  });\n  yield* duplex.source;\n  if (sinkError) throw sinkError;\n};","map":{"version":3,"names":["toDuplex","require","module","exports","transform","source","duplex","sinkError","sink","catch","err"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/stream-to-it/transform.js"],"sourcesContent":["const toDuplex = require('./duplex')\n\nmodule.exports = transform => async function * (source) {\n  const duplex = toDuplex(transform)\n  // In a transform the sink and source are connected, an error in the sink\n  // will be thrown in the source also. Catch the sink error to avoid unhandled\n  // rejections and yield from the source.\n  let sinkError\n  duplex.sink(source).catch(err => { sinkError = err })\n\n  yield * duplex.source\n  if (sinkError) throw sinkError\n}\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,SAAS,IAAI,iBAAkBC,MAAlB,EAA0B;EACtD,MAAMC,MAAM,GAAGN,QAAQ,CAACI,SAAD,CAAvB,CADsD,CAEtD;EACA;EACA;;EACA,IAAIG,SAAJ;EACAD,MAAM,CAACE,IAAP,CAAYH,MAAZ,EAAoBI,KAApB,CAA0BC,GAAG,IAAI;IAAEH,SAAS,GAAGG,GAAZ;EAAiB,CAApD;EAEA,OAAQJ,MAAM,CAACD,MAAf;EACA,IAAIE,SAAJ,EAAe,MAAMA,SAAN;AAChB,CAVD"},"metadata":{},"sourceType":"script"}
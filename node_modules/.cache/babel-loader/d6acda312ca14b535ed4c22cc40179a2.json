{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar IdentityProvider = require('./identity-provider-interface');\n\nvar Keystore = require('orbit-db-keystore');\n\nvar type = 'orbitdb';\n\nvar OrbitDBIdentityProvider = /*#__PURE__*/function (_IdentityProvider) {\n  _inherits(OrbitDBIdentityProvider, _IdentityProvider);\n\n  var _super = _createSuper(OrbitDBIdentityProvider);\n\n  function OrbitDBIdentityProvider(keystore) {\n    var _this;\n\n    _classCallCheck(this, OrbitDBIdentityProvider);\n\n    _this = _super.call(this);\n\n    if (!keystore) {\n      throw new Error('OrbitDBIdentityProvider requires a keystore');\n    }\n\n    _this._keystore = keystore;\n    return _this;\n  } // Returns the type of the identity provider\n\n\n  _createClass(OrbitDBIdentityProvider, [{\n    key: \"getId\",\n    value: function () {\n      var _getId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var options,\n            id,\n            keystore,\n            key,\n            _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n                id = options.id;\n\n                if (id) {\n                  _context.next = 4;\n                  break;\n                }\n\n                throw new Error('id is required');\n\n              case 4:\n                keystore = this._keystore;\n                _context.next = 7;\n                return keystore.getKey(id);\n\n              case 7:\n                _context.t0 = _context.sent;\n\n                if (_context.t0) {\n                  _context.next = 12;\n                  break;\n                }\n\n                _context.next = 11;\n                return keystore.createKey(id);\n\n              case 11:\n                _context.t0 = _context.sent;\n\n              case 12:\n                key = _context.t0;\n                return _context.abrupt(\"return\", key.public.marshal().toString('hex'));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getId() {\n        return _getId.apply(this, arguments);\n      }\n\n      return getId;\n    }()\n  }, {\n    key: \"signIdentity\",\n    value: function () {\n      var _signIdentity = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data) {\n        var options,\n            id,\n            keystore,\n            key,\n            _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n                id = options.id;\n\n                if (id) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                throw new Error('id is required');\n\n              case 4:\n                keystore = this._keystore;\n                _context2.next = 7;\n                return keystore.getKey(id);\n\n              case 7:\n                key = _context2.sent;\n\n                if (key) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                throw new Error(\"Signing key for '\".concat(id, \"' not found\"));\n\n              case 10:\n                return _context2.abrupt(\"return\", keystore.sign(key, data));\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function signIdentity(_x) {\n        return _signIdentity.apply(this, arguments);\n      }\n\n      return signIdentity;\n    }()\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return type;\n    }\n  }, {\n    key: \"verifyIdentity\",\n    value: function () {\n      var _verifyIdentity = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(identity) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", Keystore.verify(identity.signatures.publicKey, identity.id, identity.publicKey + identity.signatures.id));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function verifyIdentity(_x2) {\n        return _verifyIdentity.apply(this, arguments);\n      }\n\n      return verifyIdentity;\n    }()\n  }]);\n\n  return OrbitDBIdentityProvider;\n}(IdentityProvider);\n\nmodule.exports = OrbitDBIdentityProvider;","map":{"version":3,"names":["IdentityProvider","require","Keystore","type","OrbitDBIdentityProvider","keystore","Error","_keystore","options","id","getKey","createKey","key","public","marshal","toString","data","sign","identity","verify","signatures","publicKey","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js"],"sourcesContent":["'use strict'\nconst IdentityProvider = require('./identity-provider-interface')\nconst Keystore = require('orbit-db-keystore')\nconst type = 'orbitdb'\n\nclass OrbitDBIdentityProvider extends IdentityProvider {\n  constructor (keystore) {\n    super()\n    if (!keystore) {\n      throw new Error('OrbitDBIdentityProvider requires a keystore')\n    }\n    this._keystore = keystore\n  }\n\n  // Returns the type of the identity provider\n  static get type () { return type }\n\n  async getId (options = {}) {\n    const id = options.id\n    if (!id) {\n      throw new Error('id is required')\n    }\n\n    const keystore = this._keystore\n    const key = await keystore.getKey(id) || await keystore.createKey(id)\n    return key.public.marshal().toString('hex')\n  }\n\n  async signIdentity (data, options = {}) {\n    const id = options.id\n    if (!id) {\n      throw new Error('id is required')\n    }\n    const keystore = this._keystore\n    const key = await keystore.getKey(id)\n    if (!key) {\n      throw new Error(`Signing key for '${id}' not found`)\n    }\n\n    return keystore.sign(key, data)\n  }\n\n  static async verifyIdentity (identity) {\n    // Verify that identity was signed by the ID\n    return Keystore.verify(\n      identity.signatures.publicKey,\n      identity.id,\n      identity.publicKey + identity.signatures.id\n    )\n  }\n}\n\nmodule.exports = OrbitDBIdentityProvider\n"],"mappings":"AAAA;;;;;;;;;;;;;;AACA,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,+BAAD,CAAhC;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,mBAAD,CAAxB;;AACA,IAAME,IAAI,GAAG,SAAb;;IAEMC,uB;;;;;EACJ,iCAAaC,QAAb,EAAuB;IAAA;;IAAA;;IACrB;;IACA,IAAI,CAACA,QAAL,EAAe;MACb,MAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;IACD;;IACD,MAAKC,SAAL,GAAiBF,QAAjB;IALqB;EAMtB,C,CAED;;;;;;8EAGA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAaG,OAAb,2DAAuB,EAAvB;gBACQC,EADR,GACaD,OAAO,CAACC,EADrB;;gBAAA,IAEOA,EAFP;kBAAA;kBAAA;gBAAA;;gBAAA,MAGU,IAAIH,KAAJ,CAAU,gBAAV,CAHV;;cAAA;gBAMQD,QANR,GAMmB,KAAKE,SANxB;gBAAA;gBAAA,OAOoBF,QAAQ,CAACK,MAAT,CAAgBD,EAAhB,CAPpB;;cAAA;gBAAA;;gBAAA;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAOiDJ,QAAQ,CAACM,SAAT,CAAmBF,EAAnB,CAPjD;;cAAA;gBAAA;;cAAA;gBAOQG,GAPR;gBAAA,iCAQSA,GAAG,CAACC,MAAJ,CAAWC,OAAX,GAAqBC,QAArB,CAA8B,KAA9B,CART;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;qFAWA,kBAAoBC,IAApB;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAA0BR,OAA1B,8DAAoC,EAApC;gBACQC,EADR,GACaD,OAAO,CAACC,EADrB;;gBAAA,IAEOA,EAFP;kBAAA;kBAAA;gBAAA;;gBAAA,MAGU,IAAIH,KAAJ,CAAU,gBAAV,CAHV;;cAAA;gBAKQD,QALR,GAKmB,KAAKE,SALxB;gBAAA;gBAAA,OAMoBF,QAAQ,CAACK,MAAT,CAAgBD,EAAhB,CANpB;;cAAA;gBAMQG,GANR;;gBAAA,IAOOA,GAPP;kBAAA;kBAAA;gBAAA;;gBAAA,MAQU,IAAIN,KAAJ,4BAA8BG,EAA9B,iBARV;;cAAA;gBAAA,kCAWSJ,QAAQ,CAACY,IAAT,CAAcL,GAAd,EAAmBI,IAAnB,CAXT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;SAbA,eAAmB;MAAE,OAAOb,IAAP;IAAa;;;;uFA2BlC,kBAA6Be,QAA7B;QAAA;UAAA;YAAA;cAAA;gBAAA,kCAEShB,QAAQ,CAACiB,MAAT,CACLD,QAAQ,CAACE,UAAT,CAAoBC,SADf,EAELH,QAAQ,CAACT,EAFJ,EAGLS,QAAQ,CAACG,SAAT,GAAqBH,QAAQ,CAACE,UAAT,CAAoBX,EAHpC,CAFT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;EArCoCT,gB;;AA+CtCsB,MAAM,CAACC,OAAP,GAAiBnB,uBAAjB"},"metadata":{},"sourceType":"script"}
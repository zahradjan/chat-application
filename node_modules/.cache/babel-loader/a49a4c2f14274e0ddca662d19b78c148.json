{"ast":null,"code":"'use strict';\n\nmodule.exports = (iterable, reducer, initVal) => new Promise((resolve, reject) => {\n  const iterator = iterable[Symbol.iterator]();\n  let i = 0;\n\n  const next = total => {\n    const el = iterator.next();\n\n    if (el.done) {\n      resolve(total);\n      return;\n    }\n\n    Promise.all([total, el.value]).then(value => {\n      next(reducer(value[0], value[1], i++));\n    }).catch(reject);\n  };\n\n  next(initVal);\n});","map":{"version":3,"names":["module","exports","iterable","reducer","initVal","Promise","resolve","reject","iterator","Symbol","i","next","total","el","done","all","value","then","catch"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/p-reduce/index.js"],"sourcesContent":["'use strict';\nmodule.exports = (iterable, reducer, initVal) => new Promise((resolve, reject) => {\n\tconst iterator = iterable[Symbol.iterator]();\n\tlet i = 0;\n\n\tconst next = total => {\n\t\tconst el = iterator.next();\n\n\t\tif (el.done) {\n\t\t\tresolve(total);\n\t\t\treturn;\n\t\t}\n\n\t\tPromise.all([total, el.value])\n\t\t\t.then(value => {\n\t\t\t\tnext(reducer(value[0], value[1], i++));\n\t\t\t})\n\t\t\t.catch(reject);\n\t};\n\n\tnext(initVal);\n});\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,CAACC,QAAD,EAAWC,OAAX,EAAoBC,OAApB,KAAgC,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;EACjF,MAAMC,QAAQ,GAAGN,QAAQ,CAACO,MAAM,CAACD,QAAR,CAAR,EAAjB;EACA,IAAIE,CAAC,GAAG,CAAR;;EAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;IACrB,MAAMC,EAAE,GAAGL,QAAQ,CAACG,IAAT,EAAX;;IAEA,IAAIE,EAAE,CAACC,IAAP,EAAa;MACZR,OAAO,CAACM,KAAD,CAAP;MACA;IACA;;IAEDP,OAAO,CAACU,GAAR,CAAY,CAACH,KAAD,EAAQC,EAAE,CAACG,KAAX,CAAZ,EACEC,IADF,CACOD,KAAK,IAAI;MACdL,IAAI,CAACR,OAAO,CAACa,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,EAAqBN,CAAC,EAAtB,CAAR,CAAJ;IACA,CAHF,EAIEQ,KAJF,CAIQX,MAJR;EAKA,CAbD;;EAeAI,IAAI,CAACP,OAAD,CAAJ;AACA,CApBgD,CAAjD"},"metadata":{},"sourceType":"script"}
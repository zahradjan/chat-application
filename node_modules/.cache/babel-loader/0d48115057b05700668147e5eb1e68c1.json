{"ast":null,"code":"'use strict';\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar createPublishAPI = require('./publish');\n\nvar createResolveAPI = require('./resolve');\n\nvar PubSubAPI = require('./pubsub');\n\nvar NameAPI = /*#__PURE__*/_createClass(\n/**\n * @param {Object} config\n * @param {import('../ipns')} config.ipns\n * @param {import('peer-id')} config.peerId\n * @param {import('../../types').Options} config.options\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n * @param {import('ipfs-core-types/src/root').API[\"isOnline\"]} config.isOnline\n * @param {import('libp2p/src/keychain')} config.keychain\n * @param {import('ipfs-core-types/src/root').API[\"dns\"]} config.dns\n */\nfunction NameAPI(_ref) {\n  var dns = _ref.dns,\n      ipns = _ref.ipns,\n      repo = _ref.repo,\n      codecs = _ref.codecs,\n      peerId = _ref.peerId,\n      isOnline = _ref.isOnline,\n      keychain = _ref.keychain,\n      options = _ref.options;\n\n  _classCallCheck(this, NameAPI);\n\n  this.publish = createPublishAPI({\n    ipns: ipns,\n    repo: repo,\n    codecs: codecs,\n    peerId: peerId,\n    isOnline: isOnline,\n    keychain: keychain\n  });\n  this.resolve = createResolveAPI({\n    dns: dns,\n    ipns: ipns,\n    peerId: peerId,\n    isOnline: isOnline,\n    options: options\n  });\n  this.pubsub = new PubSubAPI({\n    ipns: ipns,\n    options: options\n  });\n});\n\nmodule.exports = NameAPI;","map":{"version":3,"names":["createPublishAPI","require","createResolveAPI","PubSubAPI","NameAPI","dns","ipns","repo","codecs","peerId","isOnline","keychain","options","publish","resolve","pubsub","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/name/index.js"],"sourcesContent":["'use strict'\n\nconst createPublishAPI = require('./publish')\nconst createResolveAPI = require('./resolve')\nconst PubSubAPI = require('./pubsub')\n\nclass NameAPI {\n  /**\n   * @param {Object} config\n   * @param {import('../ipns')} config.ipns\n   * @param {import('peer-id')} config.peerId\n   * @param {import('../../types').Options} config.options\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n   * @param {import('ipfs-core-types/src/root').API[\"isOnline\"]} config.isOnline\n   * @param {import('libp2p/src/keychain')} config.keychain\n   * @param {import('ipfs-core-types/src/root').API[\"dns\"]} config.dns\n   */\n  constructor ({ dns, ipns, repo, codecs, peerId, isOnline, keychain, options }) {\n    this.publish = createPublishAPI({ ipns, repo, codecs, peerId, isOnline, keychain })\n    this.resolve = createResolveAPI({ dns, ipns, peerId, isOnline, options })\n    this.pubsub = new PubSubAPI({ ipns, options })\n  }\n}\n\nmodule.exports = NameAPI\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,WAAD,CAAhC;;AACA,IAAMC,gBAAgB,GAAGD,OAAO,CAAC,WAAD,CAAhC;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,UAAD,CAAzB;;IAEMG,O;AACJ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,uBAA+E;EAAA,IAAhEC,GAAgE,QAAhEA,GAAgE;EAAA,IAA3DC,IAA2D,QAA3DA,IAA2D;EAAA,IAArDC,IAAqD,QAArDA,IAAqD;EAAA,IAA/CC,MAA+C,QAA/CA,MAA+C;EAAA,IAAvCC,MAAuC,QAAvCA,MAAuC;EAAA,IAA/BC,QAA+B,QAA/BA,QAA+B;EAAA,IAArBC,QAAqB,QAArBA,QAAqB;EAAA,IAAXC,OAAW,QAAXA,OAAW;;EAAA;;EAC7E,KAAKC,OAAL,GAAeb,gBAAgB,CAAC;IAAEM,IAAI,EAAJA,IAAF;IAAQC,IAAI,EAAJA,IAAR;IAAcC,MAAM,EAANA,MAAd;IAAsBC,MAAM,EAANA,MAAtB;IAA8BC,QAAQ,EAARA,QAA9B;IAAwCC,QAAQ,EAARA;EAAxC,CAAD,CAA/B;EACA,KAAKG,OAAL,GAAeZ,gBAAgB,CAAC;IAAEG,GAAG,EAAHA,GAAF;IAAOC,IAAI,EAAJA,IAAP;IAAaG,MAAM,EAANA,MAAb;IAAqBC,QAAQ,EAARA,QAArB;IAA+BE,OAAO,EAAPA;EAA/B,CAAD,CAA/B;EACA,KAAKG,MAAL,GAAc,IAAIZ,SAAJ,CAAc;IAAEG,IAAI,EAAJA,IAAF;IAAQM,OAAO,EAAPA;EAAR,CAAd,CAAd;AACD,C;;AAGHI,MAAM,CAACC,OAAP,GAAiBb,OAAjB"},"metadata":{},"sourceType":"script"}
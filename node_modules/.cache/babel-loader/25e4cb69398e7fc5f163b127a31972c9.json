{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _asyncGeneratorDelegate = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js\").default;\n\nvar errCode = require('err-code');\n\nvar _require = require('uint8arrays/from-string'),\n    uint8ArrayFromString = _require.fromString;\n\nvar browserStreamToIt = require('browser-readablestream-to-it');\n\nvar blobToIt = require('blob-to-it');\n\nvar itPeekable = require('it-peekable');\n\nvar all = require('it-all');\n\nvar map = require('it-map');\n\nvar _require2 = require('./utils'),\n    isBytes = _require2.isBytes,\n    isReadableStream = _require2.isReadableStream,\n    isBlob = _require2.isBlob;\n/**\n * @param {import('./normalise-input').ToContent} input\n */\n\n\nfunction toAsyncIterable(_x) {\n  return _toAsyncIterable.apply(this, arguments);\n}\n/**\n * @param {ArrayBuffer | ArrayBufferView | string | InstanceType<typeof window.String> | number[]} chunk\n */\n\n\nfunction _toAsyncIterable() {\n  _toAsyncIterable = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(input) {\n    var peekable, _yield$_awaitAsyncGen, value, done;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!isBytes(input)) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 3;\n            return toBytes(input);\n\n          case 3:\n            return _context.abrupt(\"return\");\n\n          case 4:\n            if (!(typeof input === 'string' || input instanceof String)) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 7;\n            return toBytes(input.toString());\n\n          case 7:\n            return _context.abrupt(\"return\");\n\n          case 8:\n            if (!isBlob(input)) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(blobToIt(input)), _awaitAsyncGenerator), \"t0\", 10);\n\n          case 10:\n            return _context.abrupt(\"return\");\n\n          case 11:\n            // Browser stream\n            if (isReadableStream(input)) {\n              input = browserStreamToIt(input);\n            } // (Async)Iterator<?>\n\n\n            if (!(Symbol.iterator in input || Symbol.asyncIterator in input)) {\n              _context.next = 34;\n              break;\n            }\n\n            /** @type {any} peekable */\n            peekable = itPeekable(input);\n            /** @type {any} value */\n\n            _context.next = 16;\n            return _awaitAsyncGenerator(peekable.peek());\n\n          case 16:\n            _yield$_awaitAsyncGen = _context.sent;\n            value = _yield$_awaitAsyncGen.value;\n            done = _yield$_awaitAsyncGen.done;\n\n            if (!done) {\n              _context.next = 22;\n              break;\n            }\n\n            return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator([]), _awaitAsyncGenerator), \"t1\", 21);\n\n          case 21:\n            return _context.abrupt(\"return\");\n\n          case 22:\n            peekable.push(value); // (Async)Iterable<Number>\n\n            if (!Number.isInteger(value)) {\n              _context.next = 31;\n              break;\n            }\n\n            _context.t2 = Uint8Array;\n            _context.next = 27;\n            return _awaitAsyncGenerator(all(peekable));\n\n          case 27:\n            _context.t3 = _context.sent;\n            _context.next = 30;\n            return _context.t2.from.call(_context.t2, _context.t3);\n\n          case 30:\n            return _context.abrupt(\"return\");\n\n          case 31:\n            if (!(isBytes(value) || typeof value === 'string' || value instanceof String)) {\n              _context.next = 34;\n              break;\n            }\n\n            return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(map(peekable, toBytes)), _awaitAsyncGenerator), \"t4\", 33);\n\n          case 33:\n            return _context.abrupt(\"return\");\n\n          case 34:\n            throw errCode(new Error(\"Unexpected input: \".concat(input)), 'ERR_UNEXPECTED_INPUT');\n\n          case 35:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _toAsyncIterable.apply(this, arguments);\n}\n\nfunction toBytes(chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk;\n  }\n\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n  }\n\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk);\n  }\n\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk);\n  }\n\n  return uint8ArrayFromString(chunk.toString());\n}\n\nmodule.exports = toAsyncIterable;","map":{"version":3,"names":["errCode","require","uint8ArrayFromString","fromString","browserStreamToIt","blobToIt","itPeekable","all","map","isBytes","isReadableStream","isBlob","toAsyncIterable","input","toBytes","String","toString","Symbol","iterator","asyncIterator","peekable","peek","value","done","push","Number","isInteger","Uint8Array","from","Error","chunk","ArrayBuffer","isView","buffer","byteOffset","byteLength","Array","isArray","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.js"],"sourcesContent":["'use strict'\n\nconst errCode = require('err-code')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\nconst browserStreamToIt = require('browser-readablestream-to-it')\nconst blobToIt = require('blob-to-it')\nconst itPeekable = require('it-peekable')\nconst all = require('it-all')\nconst map = require('it-map')\nconst {\n  isBytes,\n  isReadableStream,\n  isBlob\n} = require('./utils')\n\n/**\n * @param {import('./normalise-input').ToContent} input\n */\nasync function * toAsyncIterable (input) {\n  // Bytes | String\n  if (isBytes(input)) {\n    yield toBytes(input)\n    return\n  }\n\n  if (typeof input === 'string' || input instanceof String) {\n    yield toBytes(input.toString())\n    return\n  }\n\n  // Blob\n  if (isBlob(input)) {\n    yield * blobToIt(input)\n    return\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value */\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield * []\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      yield Uint8Array.from((await all(peekable)))\n      return\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      yield * map(peekable, toBytes)\n      return\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ArrayBuffer | ArrayBufferView | string | InstanceType<typeof window.String> | number[]} chunk\n */\nfunction toBytes (chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk\n  }\n\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n  }\n\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk)\n  }\n\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk)\n  }\n\n  return uint8ArrayFromString(chunk.toString())\n}\n\nmodule.exports = toAsyncIterable\n"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,eAA6CA,OAAO,CAAC,yBAAD,CAApD;AAAA,IAAoBC,oBAApB,YAAQC,UAAR;;AACA,IAAMC,iBAAiB,GAAGH,OAAO,CAAC,8BAAD,CAAjC;;AACA,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,YAAD,CAAxB;;AACA,IAAMK,UAAU,GAAGL,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMM,GAAG,GAAGN,OAAO,CAAC,QAAD,CAAnB;;AACA,IAAMO,GAAG,GAAGP,OAAO,CAAC,QAAD,CAAnB;;AACA,gBAIIA,OAAO,CAAC,SAAD,CAJX;AAAA,IACEQ,OADF,aACEA,OADF;AAAA,IAEEC,gBAFF,aAEEA,gBAFF;AAAA,IAGEC,MAHF,aAGEA,MAHF;AAMA;AACA;AACA;;;SACiBC,e;;;AAuDjB;AACA;AACA;;;;kFAzDA,iBAAkCC,KAAlC;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA,KAEMJ,OAAO,CAACI,KAAD,CAFb;cAAA;cAAA;YAAA;;YAAA;YAGI,OAAMC,OAAO,CAACD,KAAD,CAAb;;UAHJ;YAAA;;UAAA;YAAA,MAOM,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,YAAYE,MAPpD;cAAA;cAAA;YAAA;;YAAA;YAQI,OAAMD,OAAO,CAACD,KAAK,CAACG,QAAN,EAAD,CAAb;;UARJ;YAAA;;UAAA;YAAA,KAaML,MAAM,CAACE,KAAD,CAbZ;cAAA;cAAA;YAAA;;YAcI,qEAAQR,QAAQ,CAACQ,KAAD,CAAhB;;UAdJ;YAAA;;UAAA;YAkBE;YACA,IAAIH,gBAAgB,CAACG,KAAD,CAApB,EAA6B;cAC3BA,KAAK,GAAGT,iBAAiB,CAACS,KAAD,CAAzB;YACD,CArBH,CAuBE;;;YAvBF,MAwBMI,MAAM,CAACC,QAAP,IAAmBL,KAAnB,IAA4BI,MAAM,CAACE,aAAP,IAAwBN,KAxB1D;cAAA;cAAA;YAAA;;YAyBI;YACMO,QA1BV,GA0BqBd,UAAU,CAACO,KAAD,CA1B/B;YA4BI;;YA5BJ;YAAA,4BA6BkCO,QAAQ,CAACC,IAAT,EA7BlC;;UAAA;YAAA;YA6BYC,KA7BZ,yBA6BYA,KA7BZ;YA6BmBC,IA7BnB,yBA6BmBA,IA7BnB;;YAAA,KA+BQA,IA/BR;cAAA;cAAA;YAAA;;YAiCM,qEAAQ,EAAR;;UAjCN;YAAA;;UAAA;YAqCIH,QAAQ,CAACI,IAAT,CAAcF,KAAd,EArCJ,CAuCI;;YAvCJ,KAwCQG,MAAM,CAACC,SAAP,CAAiBJ,KAAjB,CAxCR;cAAA;cAAA;YAAA;;YAAA,cAyCYK,UAzCZ;YAAA;YAAA,4BAyCmCpB,GAAG,CAACa,QAAD,CAzCtC;;UAAA;YAAA;YAAA;YAyCM,mBAAiBQ,IAAjB;;UAzCN;YAAA;;UAAA;YAAA,MA8CQnB,OAAO,CAACa,KAAD,CAAP,IAAkB,OAAOA,KAAP,KAAiB,QAAnC,IAA+CA,KAAK,YAAYP,MA9CxE;cAAA;cAAA;YAAA;;YA+CM,qEAAQP,GAAG,CAACY,QAAD,EAAWN,OAAX,CAAX;;UA/CN;YAAA;;UAAA;YAAA,MAoDQd,OAAO,CAAC,IAAI6B,KAAJ,6BAA+BhB,KAA/B,EAAD,EAA0C,sBAA1C,CApDf;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AA0DA,SAASC,OAAT,CAAkBgB,KAAlB,EAAyB;EACvB,IAAIA,KAAK,YAAYH,UAArB,EAAiC;IAC/B,OAAOG,KAAP;EACD;;EAED,IAAIC,WAAW,CAACC,MAAZ,CAAmBF,KAAnB,CAAJ,EAA+B;IAC7B,OAAO,IAAIH,UAAJ,CAAeG,KAAK,CAACG,MAArB,EAA6BH,KAAK,CAACI,UAAnC,EAA+CJ,KAAK,CAACK,UAArD,CAAP;EACD;;EAED,IAAIL,KAAK,YAAYC,WAArB,EAAkC;IAChC,OAAO,IAAIJ,UAAJ,CAAeG,KAAf,CAAP;EACD;;EAED,IAAIM,KAAK,CAACC,OAAN,CAAcP,KAAd,CAAJ,EAA0B;IACxB,OAAOH,UAAU,CAACC,IAAX,CAAgBE,KAAhB,CAAP;EACD;;EAED,OAAO5B,oBAAoB,CAAC4B,KAAK,CAACd,QAAN,EAAD,CAA3B;AACD;;AAEDsB,MAAM,CAACC,OAAP,GAAiB3B,eAAjB"},"metadata":{},"sourceType":"script"}
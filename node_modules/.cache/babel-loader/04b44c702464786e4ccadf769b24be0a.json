{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar EventStore = require('orbit-db-eventstore');\n\nvar FeedIndex = require('./FeedIndex');\n\nvar FeedStore = /*#__PURE__*/function (_EventStore) {\n  _inherits(FeedStore, _EventStore);\n\n  var _super = _createSuper(FeedStore);\n\n  function FeedStore(ipfs, id, dbname, options) {\n    var _this;\n\n    _classCallCheck(this, FeedStore);\n\n    if (!options) options = {};\n    if (!options.Index) Object.assign(options, {\n      Index: FeedIndex\n    });\n    _this = _super.call(this, ipfs, id, dbname, options);\n    _this._type = 'feed';\n    return _this;\n  }\n\n  _createClass(FeedStore, [{\n    key: \"remove\",\n    value: function remove(hash) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.del(hash, options);\n    }\n  }, {\n    key: \"del\",\n    value: function del(hash) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var operation = {\n        op: 'DEL',\n        key: null,\n        value: hash\n      };\n      return this._addOperation(operation, options);\n    }\n  }]);\n\n  return FeedStore;\n}(EventStore);\n\nmodule.exports = FeedStore;","map":{"version":3,"names":["EventStore","require","FeedIndex","FeedStore","ipfs","id","dbname","options","Index","Object","assign","_type","hash","del","operation","op","key","value","_addOperation","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/orbit-db-feedstore/src/FeedStore.js"],"sourcesContent":["'use strict'\n\nconst EventStore = require('orbit-db-eventstore')\nconst FeedIndex  = require('./FeedIndex')\n\nclass FeedStore extends EventStore {\n  constructor (ipfs, id, dbname, options) {\n    if(!options) options = {}\n    if(!options.Index) Object.assign(options, { Index: FeedIndex })\n    super(ipfs, id, dbname, options)\n    this._type = 'feed'\n  }\n\n  remove (hash, options = {}) {\n    return this.del(hash, options)\n  }\n\n  del (hash, options = {}) {\n    const operation = {\n      op: 'DEL',\n      key: null,\n      value: hash\n    }\n    return this._addOperation(operation, options)\n  }\n}\n\nmodule.exports = FeedStore\n"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,UAAU,GAAGC,OAAO,CAAC,qBAAD,CAA1B;;AACA,IAAMC,SAAS,GAAID,OAAO,CAAC,aAAD,CAA1B;;IAEME,S;;;;;EACJ,mBAAaC,IAAb,EAAmBC,EAAnB,EAAuBC,MAAvB,EAA+BC,OAA/B,EAAwC;IAAA;;IAAA;;IACtC,IAAG,CAACA,OAAJ,EAAaA,OAAO,GAAG,EAAV;IACb,IAAG,CAACA,OAAO,CAACC,KAAZ,EAAmBC,MAAM,CAACC,MAAP,CAAcH,OAAd,EAAuB;MAAEC,KAAK,EAAEN;IAAT,CAAvB;IACnB,0BAAME,IAAN,EAAYC,EAAZ,EAAgBC,MAAhB,EAAwBC,OAAxB;IACA,MAAKI,KAAL,GAAa,MAAb;IAJsC;EAKvC;;;;WAED,gBAAQC,IAAR,EAA4B;MAAA,IAAdL,OAAc,uEAAJ,EAAI;MAC1B,OAAO,KAAKM,GAAL,CAASD,IAAT,EAAeL,OAAf,CAAP;IACD;;;WAED,aAAKK,IAAL,EAAyB;MAAA,IAAdL,OAAc,uEAAJ,EAAI;MACvB,IAAMO,SAAS,GAAG;QAChBC,EAAE,EAAE,KADY;QAEhBC,GAAG,EAAE,IAFW;QAGhBC,KAAK,EAAEL;MAHS,CAAlB;MAKA,OAAO,KAAKM,aAAL,CAAmBJ,SAAnB,EAA8BP,OAA9B,CAAP;IACD;;;;EAnBqBP,U;;AAsBxBmB,MAAM,CAACC,OAAP,GAAiBjB,SAAjB"},"metadata":{},"sourceType":"script"}
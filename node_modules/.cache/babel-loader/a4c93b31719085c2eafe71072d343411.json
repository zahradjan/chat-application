{"ast":null,"code":"'use strict';\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('../../types').Preload} config.preload\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\n\n\nmodule.exports = _ref => {\n  let {\n    preload,\n    repo\n  } = _ref;\n\n  /**\n   * @type {import('ipfs-core-types/src/block').API[\"get\"]}\n   */\n  async function get(cid) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    // eslint-disable-line require-await\n    if (options.preload !== false) {\n      preload(cid);\n    }\n\n    return repo.blocks.get(cid, options);\n  }\n\n  return withTimeoutOption(get);\n};","map":{"version":3,"names":["withTimeoutOption","require","module","exports","preload","repo","get","cid","options","blocks"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/block/get.js"],"sourcesContent":["'use strict'\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('../../types').Preload} config.preload\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nmodule.exports = ({ preload, repo }) => {\n  /**\n   * @type {import('ipfs-core-types/src/block').API[\"get\"]}\n   */\n  async function get (cid, options = {}) { // eslint-disable-line require-await\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    return repo.blocks.get(cid, options)\n  }\n\n  return withTimeoutOption(get)\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,QAAuB;EAAA,IAAtB;IAAEC,OAAF;IAAWC;EAAX,CAAsB;;EACtC;AACF;AACA;EACE,eAAeC,GAAf,CAAoBC,GAApB,EAAuC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;;IAAE;IACvC,IAAIA,OAAO,CAACJ,OAAR,KAAoB,KAAxB,EAA+B;MAC7BA,OAAO,CAACG,GAAD,CAAP;IACD;;IAED,OAAOF,IAAI,CAACI,MAAL,CAAYH,GAAZ,CAAgBC,GAAhB,EAAqBC,OAArB,CAAP;EACD;;EAED,OAAOR,iBAAiB,CAACM,GAAD,CAAxB;AACD,CAbD"},"metadata":{},"sourceType":"script"}
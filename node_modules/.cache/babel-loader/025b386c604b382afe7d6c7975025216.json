{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar Store = require('orbit-db-store');\n\nvar DocumentIndex = require('./DocumentIndex');\n\nvar pMap = require('p-map');\n\nvar Readable = require('readable-stream');\n\nvar replaceAll = function replaceAll(str, search, replacement) {\n  return str.toString().split(search).join(replacement);\n};\n\nvar DocumentStore = /*#__PURE__*/function (_Store) {\n  _inherits(DocumentStore, _Store);\n\n  var _super = _createSuper(DocumentStore);\n\n  function DocumentStore(ipfs, id, dbname, options) {\n    var _this;\n\n    _classCallCheck(this, DocumentStore);\n\n    if (!options) options = {};\n    if (!options.indexBy) Object.assign(options, {\n      indexBy: '_id'\n    });\n    if (!options.Index) Object.assign(options, {\n      Index: DocumentIndex\n    });\n    _this = _super.call(this, ipfs, id, dbname, options);\n    _this._type = 'docstore';\n    return _this;\n  }\n\n  _createClass(DocumentStore, [{\n    key: \"get\",\n    value: function get(key) {\n      var _this2 = this;\n\n      var caseSensitive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      key = key.toString();\n      var terms = key.split(' ');\n      key = terms.length > 1 ? replaceAll(key, '.', ' ').toLowerCase() : key.toLowerCase();\n\n      var search = function search(e) {\n        if (terms.length > 1) {\n          return replaceAll(e, '.', ' ').toLowerCase().indexOf(key) !== -1;\n        }\n\n        return e.toLowerCase().indexOf(key) !== -1;\n      };\n\n      var mapper = function mapper(e) {\n        return _this2._index.get(e);\n      };\n\n      var filter = function filter(e) {\n        return caseSensitive ? e.indexOf(key) !== -1 : search(e);\n      };\n\n      return Object.keys(this._index._index).filter(filter).map(mapper);\n    }\n  }, {\n    key: \"query\",\n    value: function query(mapper) {\n      var _this3 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // Whether we return the full operation data or just the db value\n      var fullOp = options.fullOp || false;\n      return Object.keys(this._index._index).map(function (e) {\n        return _this3._index.get(e, fullOp);\n      }).filter(mapper);\n    }\n  }, {\n    key: \"batchPut\",\n    value: function batchPut(docs, onProgressCallback) {\n      var _this4 = this;\n\n      var mapper = function mapper(doc, idx) {\n        return _this4._addOperationBatch({\n          op: 'PUT',\n          key: doc[_this4.options.indexBy],\n          value: doc\n        }, true, idx === docs.length - 1, onProgressCallback);\n      };\n\n      return pMap(docs, mapper, {\n        concurrency: 1\n      }).then(function () {\n        return _this4.saveSnapshot();\n      });\n    }\n  }, {\n    key: \"put\",\n    value: function put(doc) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!doc[this.options.indexBy]) {\n        throw new Error(\"The provided document doesn't contain field '\".concat(this.options.indexBy, \"'\"));\n      }\n\n      return this._addOperation({\n        op: 'PUT',\n        key: doc[this.options.indexBy],\n        value: doc\n      }, options);\n    }\n  }, {\n    key: \"putAll\",\n    value: function putAll(docs) {\n      var _this5 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!Array.isArray(docs)) {\n        docs = [docs];\n      }\n\n      if (!docs.every(function (d) {\n        return d[_this5.options.indexBy];\n      })) {\n        throw new Error(\"The provided document doesn't contain field '\".concat(this.options.indexBy, \"'\"));\n      }\n\n      return this._addOperation({\n        op: 'PUTALL',\n        docs: docs.map(function (value) {\n          return {\n            key: value[_this5.options.indexBy],\n            value: value\n          };\n        })\n      }, options);\n    }\n  }, {\n    key: \"del\",\n    value: function del(key) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!this._index.get(key)) {\n        throw new Error(\"No entry with key '\".concat(key, \"' in the database\"));\n      }\n\n      return this._addOperation({\n        op: 'DEL',\n        key: key,\n        value: null\n      }, options);\n    }\n  }]);\n\n  return DocumentStore;\n}(Store);\n\nmodule.exports = DocumentStore;","map":{"version":3,"names":["Store","require","DocumentIndex","pMap","Readable","replaceAll","str","search","replacement","toString","split","join","DocumentStore","ipfs","id","dbname","options","indexBy","Object","assign","Index","_type","key","caseSensitive","terms","length","toLowerCase","e","indexOf","mapper","_index","get","filter","keys","map","fullOp","docs","onProgressCallback","doc","idx","_addOperationBatch","op","value","concurrency","then","saveSnapshot","Error","_addOperation","Array","isArray","every","d","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/orbit-db-docstore/src/DocumentStore.js"],"sourcesContent":["'use strict'\n\nconst Store = require('orbit-db-store')\nconst DocumentIndex = require('./DocumentIndex')\nconst pMap = require('p-map')\nconst Readable = require('readable-stream')\n\nconst replaceAll = (str, search, replacement) => str.toString().split(search).join(replacement)\n\nclass DocumentStore extends Store {\n  constructor (ipfs, id, dbname, options) {\n    if (!options) options = {}\n    if (!options.indexBy) Object.assign(options, { indexBy: '_id' })\n    if (!options.Index) Object.assign(options, { Index: DocumentIndex })\n    super(ipfs, id, dbname, options)\n    this._type = 'docstore'\n  }\n\n  get (key, caseSensitive = false) {\n    key = key.toString()\n    const terms = key.split(' ')\n    key = terms.length > 1 ? replaceAll(key, '.', ' ').toLowerCase() : key.toLowerCase()\n\n    const search = (e) => {\n      if (terms.length > 1) {\n        return replaceAll(e, '.', ' ').toLowerCase().indexOf(key) !== -1\n      }\n      return e.toLowerCase().indexOf(key) !== -1\n    }\n    const mapper = e => this._index.get(e)\n    const filter = e => caseSensitive\n      ? e.indexOf(key) !== -1\n      : search(e)\n\n    return Object.keys(this._index._index)\n      .filter(filter)\n      .map(mapper)\n  }\n\n  query (mapper, options = {}) {\n    // Whether we return the full operation data or just the db value\n    const fullOp = options.fullOp || false\n\n    return Object.keys(this._index._index)\n      .map((e) => this._index.get(e, fullOp))\n      .filter(mapper)\n  }\n\n  batchPut (docs, onProgressCallback) {\n    const mapper = (doc, idx) => {\n      return this._addOperationBatch(\n        {\n          op: 'PUT',\n          key: doc[this.options.indexBy],\n          value: doc\n        },\n        true,\n        idx === docs.length - 1,\n        onProgressCallback\n      )\n    }\n\n    return pMap(docs, mapper, { concurrency: 1 })\n      .then(() => this.saveSnapshot())\n  }\n\n  put (doc, options = {}) {\n    if (!doc[this.options.indexBy]) { throw new Error(`The provided document doesn't contain field '${this.options.indexBy}'`) }\n\n    return this._addOperation({\n      op: 'PUT',\n      key: doc[this.options.indexBy],\n      value: doc\n    }, options)\n  }\n\n  putAll (docs, options = {}) {\n    if (!(Array.isArray(docs))) {\n      docs = [docs]\n    }\n    if (!(docs.every(d => d[this.options.indexBy]))) { throw new Error(`The provided document doesn't contain field '${this.options.indexBy}'`) }\n    return this._addOperation({\n      op: 'PUTALL',\n      docs: docs.map((value) => ({\n        key: value[this.options.indexBy],\n        value\n      }))\n    }, options)\n  }\n\n  del (key, options = {}) {\n    if (!this._index.get(key)) { throw new Error(`No entry with key '${key}' in the database`) }\n\n    return this._addOperation({\n      op: 'DEL',\n      key: key,\n      value: null\n    }, options)\n  }\n}\n\nmodule.exports = DocumentStore\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
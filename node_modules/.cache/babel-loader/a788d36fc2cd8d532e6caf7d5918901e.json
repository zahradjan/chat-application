{"ast":null,"code":"'use strict';\n\nconst DEFAULTS = require('./defaults');\n\nconst isFunction = require('./util').isFunction;\n\nconst isBoolean = require('./util').isBoolean;\n\nconst isObject = require('./util').isObject;\n\nconst isArray = require('./util').isArray;\n\nconst isRegex = require('./util').isRegex;\n\nconst assign = require('./util').assign;\n\nconst keys = require('./util').keys;\n\nfunction serialize(obj) {\n  if (obj === null || obj === undefined) return obj;\n  if (isRegex(obj)) return obj.toString();\n  return obj.toJSON ? obj.toJSON() : obj;\n}\n\nfunction stringifyDeterministic(obj, opts) {\n  opts = opts || assign({}, DEFAULTS);\n  if (isFunction(opts)) opts = {\n    compare: opts\n  };\n  const space = opts.space || DEFAULTS.space;\n  const cycles = isBoolean(opts.cycles) ? opts.cycles : DEFAULTS.cycles;\n  const replacer = opts.replacer || DEFAULTS.replacer;\n  const stringify = opts.stringify || DEFAULTS.stringify;\n\n  const compare = opts.compare && function (f) {\n    return function (node) {\n      return function (a, b) {\n        const aobj = {\n          key: a,\n          value: node[a]\n        };\n        const bobj = {\n          key: b,\n          value: node[b]\n        };\n        return f(aobj, bobj);\n      };\n    };\n  }(opts.compare); // Detect circular structure in obj and raise error efficiently.\n\n\n  if (!cycles) stringify(obj);\n  const seen = [];\n  return function _deterministic(parent, key, node, level) {\n    const indent = space ? '\\n' + new Array(level + 1).join(space) : '';\n    const colonSeparator = space ? ': ' : ':';\n    node = serialize(node);\n    node = replacer.call(parent, key, node);\n    if (node === undefined) return;\n    if (!isObject(node) || node === null) return stringify(node);\n\n    if (isArray(node)) {\n      const out = [];\n\n      for (let i = 0; i < node.length; i++) {\n        const item = _deterministic(node, i, node[i], level + 1) || stringify(null);\n        out.push(indent + space + item);\n      }\n\n      return '[' + out.join(',') + indent + ']';\n    } else {\n      if (cycles) {\n        if (seen.indexOf(node) !== -1) {\n          return stringify('[Circular]');\n        } else {\n          seen.push(node);\n        }\n      }\n\n      const nodeKeys = keys(node).sort(compare && compare(node));\n      const out = [];\n\n      for (let i = 0; i < nodeKeys.length; i++) {\n        const key = nodeKeys[i];\n\n        const value = _deterministic(node, key, node[key], level + 1);\n\n        if (!value) continue;\n        const keyValue = stringify(key) + colonSeparator + value;\n        out.push(indent + space + keyValue);\n      }\n\n      seen.splice(seen.indexOf(node), 1);\n      return '{' + out.join(',') + indent + '}';\n    }\n  }({\n    '': obj\n  }, '', obj, 0);\n}\n\nmodule.exports = stringifyDeterministic;","map":{"version":3,"names":["DEFAULTS","require","isFunction","isBoolean","isObject","isArray","isRegex","assign","keys","serialize","obj","undefined","toString","toJSON","stringifyDeterministic","opts","compare","space","cycles","replacer","stringify","f","node","a","b","aobj","key","value","bobj","seen","_deterministic","parent","level","indent","Array","join","colonSeparator","call","out","i","length","item","push","indexOf","nodeKeys","sort","keyValue","splice","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/json-stringify-deterministic/lib/index.js"],"sourcesContent":["'use strict'\n\nconst DEFAULTS = require('./defaults')\nconst isFunction = require('./util').isFunction\nconst isBoolean = require('./util').isBoolean\nconst isObject = require('./util').isObject\nconst isArray = require('./util').isArray\nconst isRegex = require('./util').isRegex\nconst assign = require('./util').assign\nconst keys = require('./util').keys\n\nfunction serialize (obj) {\n  if (obj === null || obj === undefined) return obj\n  if (isRegex(obj)) return obj.toString()\n  return obj.toJSON ? obj.toJSON() : obj\n}\n\nfunction stringifyDeterministic (obj, opts) {\n  opts = opts || assign({}, DEFAULTS)\n\n  if (isFunction(opts)) opts = { compare: opts }\n\n  const space = opts.space || DEFAULTS.space\n  const cycles = isBoolean(opts.cycles) ? opts.cycles : DEFAULTS.cycles\n  const replacer = opts.replacer || DEFAULTS.replacer\n  const stringify = opts.stringify || DEFAULTS.stringify\n\n  const compare = opts.compare && (function (f) {\n    return function (node) {\n      return function (a, b) {\n        const aobj = { key: a, value: node[a] }\n        const bobj = { key: b, value: node[b] }\n        return f(aobj, bobj)\n      }\n    }\n  })(opts.compare)\n\n  // Detect circular structure in obj and raise error efficiently.\n  if (!cycles) stringify(obj)\n\n  const seen = []\n\n  return (function _deterministic (parent, key, node, level) {\n    const indent = space ? ('\\n' + new Array(level + 1).join(space)) : ''\n    const colonSeparator = space ? ': ' : ':'\n\n    node = serialize(node)\n    node = replacer.call(parent, key, node)\n\n    if (node === undefined) return\n\n    if (!isObject(node) || node === null) return stringify(node)\n\n    if (isArray(node)) {\n      const out = []\n      for (let i = 0; i < node.length; i++) {\n        const item = _deterministic(node, i, node[i], level + 1) || stringify(null)\n        out.push(indent + space + item)\n      }\n      return '[' + out.join(',') + indent + ']'\n    } else {\n      if (cycles) {\n        if (seen.indexOf(node) !== -1) {\n          return stringify('[Circular]')\n        } else {\n          seen.push(node)\n        }\n      }\n\n      const nodeKeys = keys(node).sort(compare && compare(node))\n      const out = []\n      for (let i = 0; i < nodeKeys.length; i++) {\n        const key = nodeKeys[i]\n        const value = _deterministic(node, key, node[key], level + 1)\n\n        if (!value) continue\n\n        const keyValue = stringify(key) + colonSeparator + value\n        out.push(indent + space + keyValue)\n      }\n      seen.splice(seen.indexOf(node), 1)\n      return '{' + out.join(',') + indent + '}'\n    }\n  })({ '': obj }, '', obj, 0)\n}\n\nmodule.exports = stringifyDeterministic\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
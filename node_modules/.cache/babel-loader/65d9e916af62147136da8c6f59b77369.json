{"ast":null,"code":"'use strict';\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar createGet = require('./get');\n\nvar createPut = require('./put');\n\nvar createRm = require('./rm');\n\nvar createStat = require('./stat');\n/**\n * @typedef {import('../../types').Preload} Preload\n */\n\n\nvar BlockAPI = /*#__PURE__*/_createClass(\n/**\n * @param {Object} config\n * @param {import('ipfs-core-utils/src/multihashes')} config.hashers\n * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n * @param {Preload} config.preload\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nfunction BlockAPI(_ref) {\n  var codecs = _ref.codecs,\n      hashers = _ref.hashers,\n      preload = _ref.preload,\n      repo = _ref.repo;\n\n  _classCallCheck(this, BlockAPI);\n\n  this.get = createGet({\n    preload: preload,\n    repo: repo\n  });\n  this.put = createPut({\n    codecs: codecs,\n    hashers: hashers,\n    preload: preload,\n    repo: repo\n  });\n  this.rm = createRm({\n    repo: repo\n  });\n  this.stat = createStat({\n    preload: preload,\n    repo: repo\n  });\n});\n\nmodule.exports = BlockAPI;","map":{"version":3,"names":["createGet","require","createPut","createRm","createStat","BlockAPI","codecs","hashers","preload","repo","get","put","rm","stat","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/block/index.js"],"sourcesContent":["'use strict'\n\nconst createGet = require('./get')\nconst createPut = require('./put')\nconst createRm = require('./rm')\nconst createStat = require('./stat')\n\n/**\n * @typedef {import('../../types').Preload} Preload\n */\n\nclass BlockAPI {\n  /**\n   * @param {Object} config\n   * @param {import('ipfs-core-utils/src/multihashes')} config.hashers\n   * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n   * @param {Preload} config.preload\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor ({ codecs, hashers, preload, repo }) {\n    this.get = createGet({ preload, repo })\n    this.put = createPut({ codecs, hashers, preload, repo })\n    this.rm = createRm({ repo })\n    this.stat = createStat({ preload, repo })\n  }\n}\n\nmodule.exports = BlockAPI\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,OAAD,CAAzB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,OAAD,CAAzB;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,MAAD,CAAxB;;AACA,IAAMG,UAAU,GAAGH,OAAO,CAAC,QAAD,CAA1B;AAEA;AACA;AACA;;;IAEMI,Q;AACJ;AACF;AACA;AACA;AACA;AACA;AACA;AACE,wBAAiD;EAAA,IAAlCC,MAAkC,QAAlCA,MAAkC;EAAA,IAA1BC,OAA0B,QAA1BA,OAA0B;EAAA,IAAjBC,OAAiB,QAAjBA,OAAiB;EAAA,IAARC,IAAQ,QAARA,IAAQ;;EAAA;;EAC/C,KAAKC,GAAL,GAAWV,SAAS,CAAC;IAAEQ,OAAO,EAAPA,OAAF;IAAWC,IAAI,EAAJA;EAAX,CAAD,CAApB;EACA,KAAKE,GAAL,GAAWT,SAAS,CAAC;IAAEI,MAAM,EAANA,MAAF;IAAUC,OAAO,EAAPA,OAAV;IAAmBC,OAAO,EAAPA,OAAnB;IAA4BC,IAAI,EAAJA;EAA5B,CAAD,CAApB;EACA,KAAKG,EAAL,GAAUT,QAAQ,CAAC;IAAEM,IAAI,EAAJA;EAAF,CAAD,CAAlB;EACA,KAAKI,IAAL,GAAYT,UAAU,CAAC;IAAEI,OAAO,EAAPA,OAAF;IAAWC,IAAI,EAAJA;EAAX,CAAD,CAAtB;AACD,C;;AAGHK,MAAM,CAACC,OAAP,GAAiBV,QAAjB"},"metadata":{},"sourceType":"script"}
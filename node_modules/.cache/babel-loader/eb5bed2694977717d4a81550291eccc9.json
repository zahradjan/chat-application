{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _require = require('multiformats/cid'),\n    CID = _require.CID;\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {DAGAPI[\"resolve\"]}\n   */\n  var resolve = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(ipfsPath) {\n      var options,\n          res,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('dag/resolve', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: \"\".concat(ipfsPath).concat(options.path ? \"/\".concat(options.path).replace(/\\/[/]+/g, '/') : '')\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n              return _context.abrupt(\"return\", {\n                cid: CID.parse(data.Cid['/']),\n                remainderPath: data.RemPath\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function resolve(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return resolve;\n});","map":{"version":3,"names":["require","CID","configure","toUrlSearchParams","module","exports","api","resolve","ipfsPath","options","post","signal","searchParams","arg","path","replace","headers","res","json","data","cid","parse","Cid","remainderPath","RemPath"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/dag/resolve.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {DAGAPI[\"resolve\"]}\n   */\n  const resolve = async (ipfsPath, options = {}) => {\n    const res = await api.post('dag/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ipfsPath}${options.path ? `/${options.path}`.replace(/\\/[/]+/g, '/') : ''}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return { cid: CID.parse(data.Cid['/']), remainderPath: data.RemPath }\n  }\n\n  return resolve\n})\n"],"mappings":"AAAA;;;;;;;;AAEA,eAAgBA,OAAO,CAAC,kBAAD,CAAvB;AAAA,IAAQC,GAAR,YAAQA,GAAR;;AACA,IAAMC,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAI,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAChC;AACF;AACA;EACE,IAAMC,OAAO;IAAA,sEAAG,iBAAOC,QAAP;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAiBC,OAAjB,2DAA2B,EAA3B;cAAA;cAAA,OACIH,GAAG,CAACI,IAAJ,CAAS,aAAT,EAAwB;gBACxCC,MAAM,EAAEF,OAAO,CAACE,MADwB;gBAExCC,YAAY,EAAET,iBAAiB;kBAC7BU,GAAG,YAAKL,QAAL,SAAgBC,OAAO,CAACK,IAAR,GAAe,WAAIL,OAAO,CAACK,IAAZ,EAAmBC,OAAnB,CAA2B,SAA3B,EAAsC,GAAtC,CAAf,GAA4D,EAA5E;gBAD0B,GAE1BN,OAF0B,EAFS;gBAMxCO,OAAO,EAAEP,OAAO,CAACO;cANuB,CAAxB,CADJ;;YAAA;cACRC,GADQ;cAAA;cAAA,OAUKA,GAAG,CAACC,IAAJ,EAVL;;YAAA;cAURC,IAVQ;cAAA,iCAYP;gBAAEC,GAAG,EAAEnB,GAAG,CAACoB,KAAJ,CAAUF,IAAI,CAACG,GAAL,CAAS,GAAT,CAAV,CAAP;gBAAiCC,aAAa,EAAEJ,IAAI,CAACK;cAArD,CAZO;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAPjB,OAAO;MAAA;IAAA;EAAA,GAAb;;EAeA,OAAOA,OAAP;AACD,CApByB,CAA1B"},"metadata":{},"sourceType":"script"}
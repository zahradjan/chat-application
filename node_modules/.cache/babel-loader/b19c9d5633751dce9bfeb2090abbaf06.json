{"ast":null,"code":"'use strict'; // @ts-ignore - no types\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar mortice = require('mortice');\n/**\n * @typedef {object} Lock\n * @property {(fn: (...args: any) => any) => (...args: any) => any} readLock\n * @property {(fn: (...args: any) => any) => (...args: any) => any} writeLock\n */\n\n/** @type {Lock} */\n\n\nvar lock;\n/**\n * @param {boolean} [repoOwner]\n */\n\nmodule.exports = function () {\n  var repoOwner = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  if (lock) {\n    return lock;\n  }\n\n  var mutex = mortice({\n    // ordinarily the main thread would store the read/write lock but\n    // if we are the thread that owns the repo, we can store the lock\n    // on this process even if we are a worker thread\n    singleProcess: repoOwner\n  });\n  lock = {\n    readLock: function readLock(func) {\n      return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var releaseLock,\n            _len,\n            args,\n            _key,\n            _args = arguments;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return mutex.readLock();\n\n              case 2:\n                releaseLock = _context.sent;\n                _context.prev = 3;\n\n                for (_len = _args.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                  args[_key] = _args[_key];\n                }\n\n                _context.next = 7;\n                return func.apply(null, args);\n\n              case 7:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 8:\n                _context.prev = 8;\n                releaseLock();\n                return _context.finish(8);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3,, 8, 11]]);\n      }));\n    },\n    writeLock: function writeLock(func) {\n      return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var releaseLock,\n            _len2,\n            args,\n            _key2,\n            _args2 = arguments;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return mutex.writeLock();\n\n              case 2:\n                releaseLock = _context2.sent;\n                _context2.prev = 3;\n\n                for (_len2 = _args2.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = _args2[_key2];\n                }\n\n                _context2.next = 7;\n                return func.apply(null, args);\n\n              case 7:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 8:\n                _context2.prev = 8;\n                releaseLock();\n                return _context2.finish(8);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[3,, 8, 11]]);\n      }));\n    }\n  };\n  return lock;\n};","map":{"version":3,"names":["mortice","require","lock","module","exports","repoOwner","mutex","singleProcess","readLock","func","releaseLock","args","apply","writeLock"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/files/utils/create-lock.js"],"sourcesContent":["'use strict'\n\n// @ts-ignore - no types\nconst mortice = require('mortice')\n\n/**\n * @typedef {object} Lock\n * @property {(fn: (...args: any) => any) => (...args: any) => any} readLock\n * @property {(fn: (...args: any) => any) => (...args: any) => any} writeLock\n */\n\n/** @type {Lock} */\nlet lock\n\n/**\n * @param {boolean} [repoOwner]\n */\nmodule.exports = (repoOwner = false) => {\n  if (lock) {\n    return lock\n  }\n\n  const mutex = mortice({\n    // ordinarily the main thread would store the read/write lock but\n    // if we are the thread that owns the repo, we can store the lock\n    // on this process even if we are a worker thread\n    singleProcess: repoOwner\n  })\n\n  lock = {\n    readLock: (func) => {\n      return async (...args) => {\n        const releaseLock = await mutex.readLock()\n\n        try {\n          return await func.apply(null, args)\n        } finally {\n          releaseLock()\n        }\n      }\n    },\n\n    writeLock: (func) => {\n      return async (...args) => {\n        const releaseLock = await mutex.writeLock()\n\n        try {\n          return await func.apply(null, args)\n        } finally {\n          releaseLock()\n        }\n      }\n    }\n  }\n\n  return lock\n}\n"],"mappings":"AAAA,a,CAEA;;;;;;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AACA,IAAIC,IAAJ;AAEA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,YAAuB;EAAA,IAAtBC,SAAsB,uEAAV,KAAU;;EACtC,IAAIH,IAAJ,EAAU;IACR,OAAOA,IAAP;EACD;;EAED,IAAMI,KAAK,GAAGN,OAAO,CAAC;IACpB;IACA;IACA;IACAO,aAAa,EAAEF;EAJK,CAAD,CAArB;EAOAH,IAAI,GAAG;IACLM,QAAQ,EAAE,kBAACC,IAAD,EAAU;MAClB,+EAAO;QAAA;QAAA;QAAA;QAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACqBH,KAAK,CAACE,QAAN,EADrB;;cAAA;gBACCE,WADD;gBAAA;;gBAAA,0BAAUC,IAAV;kBAAUA,IAAV;gBAAA;;gBAAA;gBAAA,OAIUF,IAAI,CAACG,KAAL,CAAW,IAAX,EAAiBD,IAAjB,CAJV;;cAAA;gBAAA;;cAAA;gBAAA;gBAMHD,WAAW;gBANR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAP;IASD,CAXI;IAaLG,SAAS,EAAE,mBAACJ,IAAD,EAAU;MACnB,+EAAO;QAAA;QAAA;QAAA;QAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACqBH,KAAK,CAACO,SAAN,EADrB;;cAAA;gBACCH,WADD;gBAAA;;gBAAA,4BAAUC,IAAV;kBAAUA,IAAV;gBAAA;;gBAAA;gBAAA,OAIUF,IAAI,CAACG,KAAL,CAAW,IAAX,EAAiBD,IAAjB,CAJV;;cAAA;gBAAA;;cAAA;gBAAA;gBAMHD,WAAW;gBANR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAP;IASD;EAvBI,CAAP;EA0BA,OAAOR,IAAP;AACD,CAvCD"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _require = require('./utils'),\n    isValidMultiaddr = _require.isValidMultiaddr;\n\nvar withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\n\n\nmodule.exports = function (_ref) {\n  var repo = _ref.repo;\n\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API[\"add\"]}\n   */\n  function add(_x) {\n    return _add.apply(this, arguments);\n  }\n\n  function _add() {\n    _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(multiaddr) {\n      var options,\n          config,\n          boostrappers,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n              if (isValidMultiaddr(multiaddr)) {\n                _context.next = 3;\n                break;\n              }\n\n              throw new Error(\"\".concat(multiaddr, \" is not a valid Multiaddr\"));\n\n            case 3:\n              _context.next = 5;\n              return repo.config.getAll(options);\n\n            case 5:\n              config = _context.sent;\n              boostrappers = config.Bootstrap || [];\n              boostrappers.push(multiaddr.toString());\n              config.Bootstrap = Array.from(new Set(boostrappers)).sort(function (a, b) {\n                return a.localeCompare(b);\n              });\n              _context.next = 11;\n              return repo.config.replace(config);\n\n            case 11:\n              return _context.abrupt(\"return\", {\n                Peers: [multiaddr]\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _add.apply(this, arguments);\n  }\n\n  return withTimeoutOption(add);\n};","map":{"version":3,"names":["require","isValidMultiaddr","withTimeoutOption","module","exports","repo","add","multiaddr","options","Error","config","getAll","boostrappers","Bootstrap","push","toString","Array","from","Set","sort","a","b","localeCompare","replace","Peers"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/bootstrap/add.js"],"sourcesContent":["'use strict'\n\nconst { isValidMultiaddr } = require('./utils')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nmodule.exports = ({ repo }) => {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API[\"add\"]}\n   */\n  async function add (multiaddr, options = {}) {\n    if (!isValidMultiaddr(multiaddr)) {\n      throw new Error(`${multiaddr} is not a valid Multiaddr`)\n    }\n\n    /** @type {import('ipfs-core-types/src/config').Config} */\n    // @ts-ignore repo returns type unknown\n    const config = await repo.config.getAll(options)\n\n    const boostrappers = config.Bootstrap || []\n    boostrappers.push(multiaddr.toString())\n\n    config.Bootstrap = Array.from(\n      new Set(boostrappers)\n    ).sort((a, b) => a.localeCompare(b))\n\n    await repo.config.replace(config)\n\n    return {\n      Peers: [multiaddr]\n    }\n  }\n\n  return withTimeoutOption(add)\n}\n"],"mappings":"AAAA;;;;;;AAEA,eAA6BA,OAAO,CAAC,SAAD,CAApC;AAAA,IAAQC,gBAAR,YAAQA,gBAAR;;AACA,IAAMC,iBAAiB,GAAGF,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,gBAAc;EAAA,IAAXC,IAAW,QAAXA,IAAW;;EAC7B;AACF;AACA;EAH+B,SAIdC,GAJc;IAAA;EAAA;;EAAA;IAAA,kEAI7B,iBAAoBC,SAApB;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAA+BC,OAA/B,2DAAyC,EAAzC;;cAAA,IACOP,gBAAgB,CAACM,SAAD,CADvB;gBAAA;gBAAA;cAAA;;cAAA,MAEU,IAAIE,KAAJ,WAAaF,SAAb,+BAFV;;YAAA;cAAA;cAAA,OAOuBF,IAAI,CAACK,MAAL,CAAYC,MAAZ,CAAmBH,OAAnB,CAPvB;;YAAA;cAOQE,MAPR;cASQE,YATR,GASuBF,MAAM,CAACG,SAAP,IAAoB,EAT3C;cAUED,YAAY,CAACE,IAAb,CAAkBP,SAAS,CAACQ,QAAV,EAAlB;cAEAL,MAAM,CAACG,SAAP,GAAmBG,KAAK,CAACC,IAAN,CACjB,IAAIC,GAAJ,CAAQN,YAAR,CADiB,EAEjBO,IAFiB,CAEZ,UAACC,CAAD,EAAIC,CAAJ;gBAAA,OAAUD,CAAC,CAACE,aAAF,CAAgBD,CAAhB,CAAV;cAAA,CAFY,CAAnB;cAZF;cAAA,OAgBQhB,IAAI,CAACK,MAAL,CAAYa,OAAZ,CAAoBb,MAApB,CAhBR;;YAAA;cAAA,iCAkBS;gBACLc,KAAK,EAAE,CAACjB,SAAD;cADF,CAlBT;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJ6B;IAAA;EAAA;;EA2B7B,OAAOL,iBAAiB,CAACI,GAAD,CAAxB;AACD,CA5BD"},"metadata":{},"sourceType":"script"}
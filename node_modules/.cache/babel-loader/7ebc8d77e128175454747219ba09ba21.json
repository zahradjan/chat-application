{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _require = require('events'),\n    EventEmitter = _require.EventEmitter;\n\nvar Stat = require('./stat');\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('peer-id')} PeerId\n */\n\n/**\n * @typedef {[number, number, number]} AverageIntervals\n */\n\n\nvar defaultOptions = {\n  enabled: false,\n  computeThrottleTimeout: 1000,\n  computeThrottleMaxQueueSize: 1000,\n  movingAverageIntervals:\n  /** @type {AverageIntervals} */\n  [60 * 1000, // 1 minute\n  5 * 60 * 1000, // 5 minutes\n  15 * 60 * 1000 // 15 minutes\n  ]\n};\n\nvar Stats = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Stats, _EventEmitter);\n\n  var _super = _createSuper(Stats);\n\n  /**\n   * @param {string[]} [initialCounters]\n   * @param {Object} _options\n   * @param {boolean} _options.enabled\n   * @param {number} _options.computeThrottleTimeout\n   * @param {number} _options.computeThrottleMaxQueueSize\n   */\n  function Stats() {\n    var _this;\n\n    var initialCounters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var _options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n\n    _classCallCheck(this, Stats);\n\n    _this = _super.call(this);\n    var options = Object.assign({}, defaultOptions, _options);\n\n    if (typeof options.computeThrottleTimeout !== 'number') {\n      throw new Error('need computeThrottleTimeout');\n    }\n\n    if (typeof options.computeThrottleMaxQueueSize !== 'number') {\n      throw new Error('need computeThrottleMaxQueueSize');\n    }\n\n    _this._initialCounters = initialCounters;\n    _this._options = options;\n    _this._enabled = _this._options.enabled;\n    _this._global = new Stat(initialCounters, options);\n\n    _this._global.on('update', function (stats) {\n      return _this.emit('update', stats);\n    });\n    /** @type {Map<string, Stat>} */\n\n\n    _this._peers = new Map();\n    return _this;\n  }\n\n  _createClass(Stats, [{\n    key: \"enable\",\n    value: function enable() {\n      this._enabled = true;\n      this._options.enabled = true;\n\n      this._global.enable();\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this._enabled = false;\n      this._options.enabled = false;\n\n      this._global.disable();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this._enabled = false;\n\n      this._global.stop();\n\n      var _iterator = _createForOfIteratorHelper(this._peers),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var peerStat = _step.value;\n          peerStat[1].stop();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"snapshot\",\n    get: function get() {\n      return this._global.snapshot;\n    }\n  }, {\n    key: \"movingAverages\",\n    get: function get() {\n      return this._global.movingAverages;\n    }\n    /**\n     * @param {PeerId|string} peerId\n     * @returns {Stat|undefined}\n     */\n\n  }, {\n    key: \"forPeer\",\n    value: function forPeer(peerId) {\n      var peerIdStr = typeof peerId !== 'string' && peerId.toB58String ? peerId.toB58String() : \"\".concat(peerId);\n      return this._peers.get(peerIdStr);\n    }\n    /**\n     *\n     * @param {string|null} peer\n     * @param {string} counter\n     * @param {number} inc\n     */\n\n  }, {\n    key: \"push\",\n    value: function push(peer, counter, inc) {\n      if (this._enabled) {\n        this._global.push(counter, inc);\n\n        if (peer) {\n          var peerStats = this._peers.get(peer);\n\n          if (!peerStats) {\n            peerStats = new Stat(this._initialCounters, this._options);\n\n            this._peers.set(peer, peerStats);\n          }\n\n          peerStats.push(counter, inc);\n        }\n      }\n    }\n    /**\n     * @param {PeerId} peer\n     */\n\n  }, {\n    key: \"disconnected\",\n    value: function disconnected(peer) {\n      var peerId = peer.toB58String();\n\n      var peerStats = this._peers.get(peerId);\n\n      if (peerStats) {\n        peerStats.stop();\n\n        this._peers.delete(peerId);\n      }\n    }\n  }]);\n\n  return Stats;\n}(EventEmitter);\n\nmodule.exports = Stats;","map":{"version":3,"names":["require","EventEmitter","Stat","defaultOptions","enabled","computeThrottleTimeout","computeThrottleMaxQueueSize","movingAverageIntervals","Stats","initialCounters","_options","options","Object","assign","Error","_initialCounters","_enabled","_global","on","stats","emit","_peers","Map","enable","disable","stop","peerStat","snapshot","movingAverages","peerId","peerIdStr","toB58String","get","peer","counter","inc","push","peerStats","set","delete","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-bitswap/src/stats/index.js"],"sourcesContent":["'use strict'\n\nconst { EventEmitter } = require('events')\nconst Stat = require('./stat')\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('peer-id')} PeerId\n */\n\n/**\n * @typedef {[number, number, number]} AverageIntervals\n */\nconst defaultOptions = {\n  enabled: false,\n  computeThrottleTimeout: 1000,\n  computeThrottleMaxQueueSize: 1000,\n  movingAverageIntervals: /** @type {AverageIntervals} */ ([\n    60 * 1000, // 1 minute\n    5 * 60 * 1000, // 5 minutes\n    15 * 60 * 1000 // 15 minutes\n  ])\n}\n\nclass Stats extends EventEmitter {\n  /**\n   * @param {string[]} [initialCounters]\n   * @param {Object} _options\n   * @param {boolean} _options.enabled\n   * @param {number} _options.computeThrottleTimeout\n   * @param {number} _options.computeThrottleMaxQueueSize\n   */\n  constructor (initialCounters = [], _options = defaultOptions) {\n    super()\n\n    const options = Object.assign({}, defaultOptions, _options)\n\n    if (typeof options.computeThrottleTimeout !== 'number') {\n      throw new Error('need computeThrottleTimeout')\n    }\n\n    if (typeof options.computeThrottleMaxQueueSize !== 'number') {\n      throw new Error('need computeThrottleMaxQueueSize')\n    }\n\n    this._initialCounters = initialCounters\n    this._options = options\n    this._enabled = this._options.enabled\n\n    this._global = new Stat(initialCounters, options)\n    this._global.on('update', (stats) => this.emit('update', stats))\n\n    /** @type {Map<string, Stat>} */\n    this._peers = new Map()\n  }\n\n  enable () {\n    this._enabled = true\n    this._options.enabled = true\n    this._global.enable()\n  }\n\n  disable () {\n    this._enabled = false\n    this._options.enabled = false\n    this._global.disable()\n  }\n\n  stop () {\n    this._enabled = false\n    this._global.stop()\n    for (const peerStat of this._peers) {\n      peerStat[1].stop()\n    }\n  }\n\n  get snapshot () {\n    return this._global.snapshot\n  }\n\n  get movingAverages () {\n    return this._global.movingAverages\n  }\n\n  /**\n   * @param {PeerId|string} peerId\n   * @returns {Stat|undefined}\n   */\n  forPeer (peerId) {\n    const peerIdStr = (typeof peerId !== 'string' && peerId.toB58String)\n      ? peerId.toB58String()\n      : `${peerId}`\n\n    return this._peers.get(peerIdStr)\n  }\n\n  /**\n   *\n   * @param {string|null} peer\n   * @param {string} counter\n   * @param {number} inc\n   */\n  push (peer, counter, inc) {\n    if (this._enabled) {\n      this._global.push(counter, inc)\n\n      if (peer) {\n        let peerStats = this._peers.get(peer)\n        if (!peerStats) {\n          peerStats = new Stat(this._initialCounters, this._options)\n          this._peers.set(peer, peerStats)\n        }\n\n        peerStats.push(counter, inc)\n      }\n    }\n  }\n\n  /**\n   * @param {PeerId} peer\n   */\n  disconnected (peer) {\n    const peerId = peer.toB58String()\n    const peerStats = this._peers.get(peerId)\n    if (peerStats) {\n      peerStats.stop()\n      this._peers.delete(peerId)\n    }\n  }\n}\n\nmodule.exports = Stats\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar debug = require('debug');\n\nvar log = Object.assign(debug('libp2p:relay'), {\n  error: debug('libp2p:relay:err')\n});\n\nvar _require = require('set-delayed-interval'),\n    setDelayedInterval = _require.setDelayedInterval,\n    clearDelayedInterval = _require.clearDelayedInterval;\n\nvar AutoRelay = require('./auto-relay');\n\nvar _require2 = require('./utils'),\n    namespaceToCid = _require2.namespaceToCid;\n\nvar _require3 = require('./constants'),\n    RELAY_RENDEZVOUS_NS = _require3.RELAY_RENDEZVOUS_NS;\n/**\n * @typedef {import('../')} Libp2p\n *\n * @typedef {Object} RelayAdvertiseOptions\n * @property {number} [bootDelay = ADVERTISE_BOOT_DELAY]\n * @property {boolean} [enabled = true]\n * @property {number} [ttl = ADVERTISE_TTL]\n *\n * @typedef {Object} HopOptions\n * @property {boolean} [enabled = false]\n * @property {boolean} [active = false]\n *\n * @typedef {Object} AutoRelayOptions\n * @property {number} [maxListeners = 2] - maximum number of relays to listen.\n * @property {boolean} [enabled = false]\n */\n\n\nvar Relay = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of Relay.\n   *\n   * @class\n   * @param {Libp2p} libp2p\n   */\n  function Relay(libp2p) {\n    _classCallCheck(this, Relay);\n\n    this._libp2p = libp2p;\n    this._options = _objectSpread({}, libp2p._config.relay); // Create autoRelay if enabled\n\n    this._autoRelay = this._options.autoRelay.enabled && new AutoRelay(_objectSpread({\n      libp2p: libp2p\n    }, this._options.autoRelay));\n    this._advertiseService = this._advertiseService.bind(this);\n  }\n  /**\n   * Start Relay service.\n   *\n   * @returns {void}\n   */\n\n\n  _createClass(Relay, [{\n    key: \"start\",\n    value: function start() {\n      // Advertise service if HOP enabled\n      var canHop = this._options.hop.enabled;\n\n      if (canHop && this._options.advertise.enabled) {\n        this._timeout = setDelayedInterval(this._advertiseService, this._options.advertise.ttl, this._options.advertise.bootDelay);\n      }\n    }\n    /**\n     * Stop Relay service.\n     *\n     * @returns {void}\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      clearDelayedInterval(this._timeout);\n    }\n    /**\n     * Advertise hop relay service in the network.\n     *\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: \"_advertiseService\",\n    value: function () {\n      var _advertiseService2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var cid;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return namespaceToCid(RELAY_RENDEZVOUS_NS);\n\n              case 3:\n                cid = _context.sent;\n                _context.next = 6;\n                return this._libp2p.contentRouting.provide(cid);\n\n              case 6:\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n\n                if (_context.t0.code === 'NO_ROUTERS_AVAILABLE') {\n                  log.error('a content router, such as a DHT, must be provided in order to advertise the relay service', _context.t0); // Stop the advertise\n\n                  this.stop();\n                } else {\n                  log.error(_context.t0);\n                }\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      function _advertiseService() {\n        return _advertiseService2.apply(this, arguments);\n      }\n\n      return _advertiseService;\n    }()\n  }]);\n\n  return Relay;\n}();\n\nmodule.exports = Relay;","map":{"version":3,"names":["debug","require","log","Object","assign","error","setDelayedInterval","clearDelayedInterval","AutoRelay","namespaceToCid","RELAY_RENDEZVOUS_NS","Relay","libp2p","_libp2p","_options","_config","relay","_autoRelay","autoRelay","enabled","_advertiseService","bind","canHop","hop","advertise","_timeout","ttl","bootDelay","cid","contentRouting","provide","code","stop","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p/src/circuit/index.js"],"sourcesContent":["'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:relay'), {\n  error: debug('libp2p:relay:err')\n})\n\nconst {\n  setDelayedInterval,\n  clearDelayedInterval\n// @ts-ignore set-delayed-interval does not export types\n} = require('set-delayed-interval')\n\nconst AutoRelay = require('./auto-relay')\nconst { namespaceToCid } = require('./utils')\nconst {\n  RELAY_RENDEZVOUS_NS\n} = require('./constants')\n\n/**\n * @typedef {import('../')} Libp2p\n *\n * @typedef {Object} RelayAdvertiseOptions\n * @property {number} [bootDelay = ADVERTISE_BOOT_DELAY]\n * @property {boolean} [enabled = true]\n * @property {number} [ttl = ADVERTISE_TTL]\n *\n * @typedef {Object} HopOptions\n * @property {boolean} [enabled = false]\n * @property {boolean} [active = false]\n *\n * @typedef {Object} AutoRelayOptions\n * @property {number} [maxListeners = 2] - maximum number of relays to listen.\n * @property {boolean} [enabled = false]\n */\n\nclass Relay {\n  /**\n   * Creates an instance of Relay.\n   *\n   * @class\n   * @param {Libp2p} libp2p\n   */\n  constructor (libp2p) {\n    this._libp2p = libp2p\n    this._options = {\n      ...libp2p._config.relay\n    }\n\n    // Create autoRelay if enabled\n    this._autoRelay = this._options.autoRelay.enabled && new AutoRelay({ libp2p, ...this._options.autoRelay })\n\n    this._advertiseService = this._advertiseService.bind(this)\n  }\n\n  /**\n   * Start Relay service.\n   *\n   * @returns {void}\n   */\n  start () {\n    // Advertise service if HOP enabled\n    const canHop = this._options.hop.enabled\n\n    if (canHop && this._options.advertise.enabled) {\n      this._timeout = setDelayedInterval(\n        this._advertiseService, this._options.advertise.ttl, this._options.advertise.bootDelay\n      )\n    }\n  }\n\n  /**\n   * Stop Relay service.\n   *\n   * @returns {void}\n   */\n  stop () {\n    clearDelayedInterval(this._timeout)\n  }\n\n  /**\n   * Advertise hop relay service in the network.\n   *\n   * @returns {Promise<void>}\n   */\n  async _advertiseService () {\n    try {\n      const cid = await namespaceToCid(RELAY_RENDEZVOUS_NS)\n      await this._libp2p.contentRouting.provide(cid)\n    } catch (err) {\n      if (err.code === 'NO_ROUTERS_AVAILABLE') {\n        log.error('a content router, such as a DHT, must be provided in order to advertise the relay service', err)\n        // Stop the advertise\n        this.stop()\n      } else {\n        log.error(err)\n      }\n    }\n  }\n}\n\nmodule.exports = Relay\n"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAcJ,KAAK,CAAC,cAAD,CAAnB,EAAqC;EAC/CK,KAAK,EAAEL,KAAK,CAAC,kBAAD;AADmC,CAArC,CAAZ;;AAIA,eAIIC,OAAO,CAAC,sBAAD,CAJX;AAAA,IACEK,kBADF,YACEA,kBADF;AAAA,IAEEC,oBAFF,YAEEA,oBAFF;;AAMA,IAAMC,SAAS,GAAGP,OAAO,CAAC,cAAD,CAAzB;;AACA,gBAA2BA,OAAO,CAAC,SAAD,CAAlC;AAAA,IAAQQ,cAAR,aAAQA,cAAR;;AACA,gBAEIR,OAAO,CAAC,aAAD,CAFX;AAAA,IACES,mBADF,aACEA,mBADF;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAEMC,K;EACJ;AACF;AACA;AACA;AACA;AACA;EACE,eAAaC,MAAb,EAAqB;IAAA;;IACnB,KAAKC,OAAL,GAAeD,MAAf;IACA,KAAKE,QAAL,qBACKF,MAAM,CAACG,OAAP,CAAeC,KADpB,EAFmB,CAMnB;;IACA,KAAKC,UAAL,GAAkB,KAAKH,QAAL,CAAcI,SAAd,CAAwBC,OAAxB,IAAmC,IAAIX,SAAJ;MAAgBI,MAAM,EAANA;IAAhB,GAA2B,KAAKE,QAAL,CAAcI,SAAzC,EAArD;IAEA,KAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;EACD;EAED;AACF;AACA;AACA;AACA;;;;;WACE,iBAAS;MACP;MACA,IAAMC,MAAM,GAAG,KAAKR,QAAL,CAAcS,GAAd,CAAkBJ,OAAjC;;MAEA,IAAIG,MAAM,IAAI,KAAKR,QAAL,CAAcU,SAAd,CAAwBL,OAAtC,EAA+C;QAC7C,KAAKM,QAAL,GAAgBnB,kBAAkB,CAChC,KAAKc,iBAD2B,EACR,KAAKN,QAAL,CAAcU,SAAd,CAAwBE,GADhB,EACqB,KAAKZ,QAAL,CAAcU,SAAd,CAAwBG,SAD7C,CAAlC;MAGD;IACF;IAED;AACF;AACA;AACA;AACA;;;;WACE,gBAAQ;MACNpB,oBAAoB,CAAC,KAAKkB,QAAN,CAApB;IACD;IAED;AACF;AACA;AACA;AACA;;;;;0FACE;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEsBhB,cAAc,CAACC,mBAAD,CAFpC;;cAAA;gBAEUkB,GAFV;gBAAA;gBAAA,OAGU,KAAKf,OAAL,CAAagB,cAAb,CAA4BC,OAA5B,CAAoCF,GAApC,CAHV;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;gBAKI,IAAI,YAAIG,IAAJ,KAAa,sBAAjB,EAAyC;kBACvC7B,GAAG,CAACG,KAAJ,CAAU,2FAAV,eADuC,CAEvC;;kBACA,KAAK2B,IAAL;gBACD,CAJD,MAIO;kBACL9B,GAAG,CAACG,KAAJ;gBACD;;cAXL;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;;;AAgBF4B,MAAM,CAACC,OAAP,GAAiBvB,KAAjB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/esm/createClass.js\";import{makeAutoObservable,runInAction,toJS}from\"mobx\";import{ChatRoom}from\"../models/Room.js\";// var util = require(\"util\");\nexport var RoomStore=/*#__PURE__*/function(){//TODO:load rooms from db\nfunction RoomStore(rootStore){_classCallCheck(this,RoomStore);this.rootStore=rootStore;this.rooms=[];this.selectedRoom=undefined;this.selectedReceiver=undefined;makeAutoObservable(this);}_createClass(RoomStore,[{key:\"init\",value:function(){var _init=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(this.rootStore.dataStore.ipfsNode===undefined)){_context.next=2;break;}throw Error(\"IPFS Node not defined!\");case 2:if(!(this.rootStore.dataStore.orbitDb===undefined)){_context.next=4;break;}throw Error(\"OrbitDb not defined!\");case 4:_context.next=6;return this.loadRoomsDb();case 6:_context.next=8;return this.setRoomsFromDb();case 8:case\"end\":return _context.stop();}}},_callee,this);}));function init(){return _init.apply(this,arguments);}return init;}()},{key:\"createRoom\",value:function(){var _createRoom=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(roomName){var chatRoom;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(this.rootStore.dataStore.ipfsNode===undefined)){_context2.next=2;break;}throw Error(\"IPFS Node not defined!\");case 2:if(!(this.rootStore.dataStore.orbitDb===undefined)){_context2.next=4;break;}throw Error(\"OrbitDb not defined!\");case 4:console.log(roomName);chatRoom=new ChatRoom(this.rootStore,roomName);this.rooms.push(chatRoom);_context2.next=9;return this.roomsDb.add(roomName);case 9:console.log(chatRoom);console.log(toJS(this.rooms));// const roomJSON = util.inspect(chatRoom);\n// console.log(roomJSON);\nreturn _context2.abrupt(\"return\",chatRoom);case 12:case\"end\":return _context2.stop();}}},_callee2,this);}));function createRoom(_x){return _createRoom.apply(this,arguments);}return createRoom;}()},{key:\"getRoom\",value:function getRoom(roomName){return this.rooms.find(function(room){return roomName===room.roomName;});}},{key:\"loadRoomsDb\",value:function(){var _loadRoomsDb=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return this.rootStore.dataStore.orbitDb.feed(\"rooms\");case 2:this.roomsDb=_context3.sent;_context3.next=5;return this.roomsDb.load();case 5:case\"end\":return _context3.stop();}}},_callee3,this);}));function loadRoomsDb(){return _loadRoomsDb.apply(this,arguments);}return loadRoomsDb;}()},{key:\"setRoomsFromDb\",value:function(){var _setRoomsFromDb=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var _this=this;var all;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return toJS(this.roomsDb.all);case 2:all=_context4.sent;runInAction(function(){all.map(function(item){var roomName=item.payload.value;console.log(item.payload.value);var room=new ChatRoom(_this.rootStore,roomName);room.init();return _this.rooms.push(room);});});case 4:case\"end\":return _context4.stop();}}},_callee4,this);}));function setRoomsFromDb(){return _setRoomsFromDb.apply(this,arguments);}return setRoomsFromDb;}()},{key:\"setSelectedRoom\",value:function setSelectedRoom(user){var _this2=this;var room;runInAction(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:room=_this2.getRoom(user.peerId);if(room){_context5.next=7;break;}_context5.next=4;return _this2.createRoom(user.peerId);case 4:room=_context5.sent;_context5.next=7;return room.init();case 7:_this2.selectedReceiver=user._username;_this2.selectedRoom=room;case 9:case\"end\":return _context5.stop();}}},_callee5);})));}},{key:\"isChatRoomReady\",value:function isChatRoomReady(roomName){var room=this.getRoom(roomName);return room;}}]);return RoomStore;}();","map":{"version":3,"names":["makeAutoObservable","runInAction","toJS","ChatRoom","RoomStore","rootStore","rooms","selectedRoom","undefined","selectedReceiver","dataStore","ipfsNode","Error","orbitDb","loadRoomsDb","setRoomsFromDb","roomName","console","log","chatRoom","push","roomsDb","add","find","room","feed","load","all","map","item","payload","value","init","user","getRoom","peerId","createRoom","_username"],"sources":["C:/Users/zajan/GitHub/chatApplication/src/data/store/RoomStore.js"],"sourcesContent":["import { makeAutoObservable, runInAction, toJS } from \"mobx\";\r\nimport { ChatRoom } from \"../models/Room.js\";\r\n// var util = require(\"util\");\r\n\r\nexport class RoomStore {\r\n  //TODO:load rooms from db\r\n  rooms;\r\n  selectedRoom;\r\n  selectedReceiver;\r\n  constructor(rootStore) {\r\n    this.rootStore = rootStore;\r\n    this.rooms = [];\r\n    this.selectedRoom = undefined;\r\n    this.selectedReceiver = undefined;\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  async init() {\r\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\r\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\r\n    await this.loadRoomsDb();\r\n    await this.setRoomsFromDb();\r\n  }\r\n\r\n  async createRoom(roomName) {\r\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\r\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\r\n    console.log(roomName);\r\n\r\n    const chatRoom = new ChatRoom(this.rootStore, roomName);\r\n\r\n    this.rooms.push(chatRoom);\r\n    await this.roomsDb.add(roomName);\r\n\r\n    console.log(chatRoom);\r\n    console.log(toJS(this.rooms));\r\n    // const roomJSON = util.inspect(chatRoom);\r\n    // console.log(roomJSON);\r\n    return chatRoom;\r\n  }\r\n  getRoom(roomName) {\r\n    return this.rooms.find((room) => roomName === room.roomName);\r\n  }\r\n\r\n  async loadRoomsDb() {\r\n    this.roomsDb = await this.rootStore.dataStore.orbitDb.feed(\"rooms\");\r\n    await this.roomsDb.load();\r\n  }\r\n  async setRoomsFromDb() {\r\n    const all = await toJS(this.roomsDb.all);\r\n    runInAction(() => {\r\n      all.map((item) => {\r\n        const roomName = item.payload.value;\r\n        console.log(item.payload.value);\r\n        const room = new ChatRoom(this.rootStore, roomName);\r\n        room.init();\r\n        return this.rooms.push(room);\r\n      });\r\n    });\r\n  }\r\n  setSelectedRoom(user) {\r\n    let room;\r\n    runInAction(async () => {\r\n      room = this.getRoom(user.peerId);\r\n      if (!room) {\r\n        room = await this.createRoom(user.peerId);\r\n        await room.init();\r\n      }\r\n      this.selectedReceiver = user._username;\r\n      this.selectedRoom = room;\r\n    });\r\n  }\r\n\r\n  isChatRoomReady(roomName) {\r\n    const room = this.getRoom(roomName);\r\n    return room;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
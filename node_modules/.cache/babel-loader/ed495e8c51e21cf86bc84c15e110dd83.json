{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar toCamel = require('../lib/object-to-camel');\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {KeyAPI[\"gen\"]}\n   */\n  function gen(_x) {\n    return _gen.apply(this, arguments);\n  }\n\n  function _gen() {\n    _gen = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name) {\n      var options,\n          res,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {\n                type: 'rsa',\n                size: 2048\n              };\n              _context.next = 3;\n              return api.post('key/gen', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: name\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n              return _context.abrupt(\"return\", toCamel(data));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _gen.apply(this, arguments);\n  }\n\n  return gen;\n});","map":{"version":3,"names":["toCamel","require","configure","toUrlSearchParams","module","exports","api","gen","name","options","type","size","post","signal","searchParams","arg","headers","res","json","data"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/key/gen.js"],"sourcesContent":["'use strict'\n\nconst toCamel = require('../lib/object-to-camel')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"gen\"]}\n   */\n  async function gen (name, options = { type: 'rsa', size: 2048 }) {\n    const res = await api.post('key/gen', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-ignore server output is not typed\n    return toCamel(data)\n  }\n  return gen\n})\n"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,wBAAD,CAAvB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAChC;AACF;AACA;EAHkC,SAIjBC,GAJiB;IAAA;EAAA;;EAAA;IAAA,kEAIhC,iBAAoBC,IAApB;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAA0BC,OAA1B,2DAAoC;gBAAEC,IAAI,EAAE,KAAR;gBAAeC,IAAI,EAAE;cAArB,CAApC;cAAA;cAAA,OACoBL,GAAG,CAACM,IAAJ,CAAS,SAAT,EAAoB;gBACpCC,MAAM,EAAEJ,OAAO,CAACI,MADoB;gBAEpCC,YAAY,EAAEX,iBAAiB;kBAC7BY,GAAG,EAAEP;gBADwB,GAE1BC,OAF0B,EAFK;gBAMpCO,OAAO,EAAEP,OAAO,CAACO;cANmB,CAApB,CADpB;;YAAA;cACQC,GADR;cAAA;cAAA,OASqBA,GAAG,CAACC,IAAJ,EATrB;;YAAA;cASQC,IATR;cAAA,iCAYSnB,OAAO,CAACmB,IAAD,CAZhB;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJgC;IAAA;EAAA;;EAkBhC,OAAOZ,GAAP;AACD,CAnByB,CAA1B"},"metadata":{},"sourceType":"script"}
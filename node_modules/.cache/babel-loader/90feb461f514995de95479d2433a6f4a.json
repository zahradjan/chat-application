{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _asyncGeneratorDelegate = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js\").default;\n\nvar map = require('it-map');\n\nvar errCode = require('err-code');\n\nvar _require = require('./pins'),\n    PinTypes = _require.PinTypes;\n/**\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} DatastoreOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('./pins').Pins} Pins\n */\n\n/**\n *\n * @param {Blockstore} blockstore\n */\n\n\nmodule.exports = createPinnedBlockstore;\n/**\n * @param {Pins} pins\n * @param {Blockstore} store\n * @returns {Blockstore}\n */\n\nfunction createPinnedBlockstore(pins, store) {\n  return {\n    open: function open() {\n      return store.open();\n    },\n    close: function close() {\n      return store.close();\n    },\n    query: function query(_query, options) {\n      return store.query(_query, options);\n    },\n    queryKeys: function queryKeys(query, options) {\n      return store.queryKeys(query, options);\n    },\n    get: function get(cid, options) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", store.get(cid, options));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getMany: function getMany(cids, options) {\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(store.getMany(cids, options)), _awaitAsyncGenerator), \"t0\", 1);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    put: function put(cid, buf, options) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return store.put(cid, buf, options);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    putMany: function putMany(pairs, options) {\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.delegateYield(_asyncGeneratorDelegate(_asyncIterator(store.putMany(pairs, options)), _awaitAsyncGenerator), \"t0\", 1);\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    has: function has(cid, options) {\n      return store.has(cid, options);\n    },\n    delete: function _delete(cid, options) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return ensureNotPinned(cid, pins);\n\n              case 2:\n                return _context5.abrupt(\"return\", store.delete(cid, options));\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    deleteMany: function deleteMany(cids, options) {\n      return store.deleteMany(map(cids, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(cid) {\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return ensureNotPinned(cid, pins);\n\n                case 2:\n                  return _context6.abrupt(\"return\", cid);\n\n                case 3:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()), options);\n    },\n    batch: function batch() {\n      return store.batch();\n    }\n  };\n}\n/**\n * @param {CID} cid\n * @param {Pins} pins\n */\n\n\nfunction ensureNotPinned(_x2, _x3) {\n  return _ensureNotPinned.apply(this, arguments);\n}\n\nfunction _ensureNotPinned() {\n  _ensureNotPinned = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(cid, pins) {\n    var _yield$pins$isPinnedW, pinned, reason;\n\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return pins.isPinnedWithType(cid, PinTypes.all);\n\n          case 2:\n            _yield$pins$isPinnedW = _context7.sent;\n            pinned = _yield$pins$isPinnedW.pinned;\n            reason = _yield$pins$isPinnedW.reason;\n\n            if (!pinned) {\n              _context7.next = 7;\n              break;\n            }\n\n            throw errCode(new Error(\"pinned: \".concat(reason)), 'ERR_BLOCK_PINNED');\n\n          case 7:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _ensureNotPinned.apply(this, arguments);\n}","map":{"version":3,"names":["map","require","errCode","PinTypes","module","exports","createPinnedBlockstore","pins","store","open","close","query","options","queryKeys","get","cid","getMany","cids","put","buf","putMany","pairs","has","delete","ensureNotPinned","deleteMany","batch","isPinnedWithType","all","pinned","reason","Error"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-repo/src/pinned-blockstore.js"],"sourcesContent":["'use strict'\n\nconst map = require('it-map')\nconst errCode = require('err-code')\nconst { PinTypes } = require('./pins')\n\n/**\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} DatastoreOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('./pins').Pins} Pins\n */\n\n/**\n *\n * @param {Blockstore} blockstore\n */\nmodule.exports = createPinnedBlockstore\n\n/**\n * @param {Pins} pins\n * @param {Blockstore} store\n * @returns {Blockstore}\n */\nfunction createPinnedBlockstore (pins, store) {\n  return {\n    open () {\n      return store.open()\n    },\n\n    close () {\n      return store.close()\n    },\n\n    query (query, options) {\n      return store.query(query, options)\n    },\n\n    queryKeys (query, options) {\n      return store.queryKeys(query, options)\n    },\n\n    async get (cid, options) {\n      return store.get(cid, options)\n    },\n\n    async * getMany (cids, options) {\n      yield * store.getMany(cids, options)\n    },\n\n    async put (cid, buf, options) {\n      await store.put(cid, buf, options)\n    },\n\n    async * putMany (pairs, options) {\n      yield * store.putMany(pairs, options)\n    },\n\n    has (cid, options) {\n      return store.has(cid, options)\n    },\n\n    async delete (cid, options) {\n      await ensureNotPinned(cid, pins)\n\n      return store.delete(cid, options)\n    },\n\n    deleteMany (cids, options) {\n      return store.deleteMany(map(cids, async cid => {\n        await ensureNotPinned(cid, pins)\n\n        return cid\n      }), options)\n    },\n\n    batch () {\n      return store.batch()\n    }\n  }\n}\n\n/**\n * @param {CID} cid\n * @param {Pins} pins\n */\nasync function ensureNotPinned (cid, pins) {\n  const { pinned, reason } = await pins.isPinnedWithType(cid, PinTypes.all)\n\n  if (pinned) {\n    throw errCode(new Error(`pinned: ${reason}`), 'ERR_BLOCK_PINNED')\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
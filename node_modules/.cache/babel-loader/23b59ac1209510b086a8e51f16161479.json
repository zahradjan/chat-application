{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar stat = require('./stat');\n\nvar withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n\nvar mergeOptions = require('merge-options').bind({\n  ignoreUndefined: true\n});\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\n\n\nvar defaultOptions = {};\n/**\n * @param {MfsContext} context\n */\n\nmodule.exports = function (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API[\"flush\"]}\n   */\n  function mfsFlush(_x) {\n    return _mfsFlush.apply(this, arguments);\n  }\n\n  function _mfsFlush() {\n    _mfsFlush = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(path) {\n      var options,\n          _yield$stat,\n          cid,\n          _args = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n              /** @type {DefaultOptions} */\n              options = mergeOptions(defaultOptions, options);\n              _context.next = 4;\n              return stat(context)(path, options);\n\n            case 4:\n              _yield$stat = _context.sent;\n              cid = _yield$stat.cid;\n              return _context.abrupt(\"return\", cid);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _mfsFlush.apply(this, arguments);\n  }\n\n  return withTimeoutOption(mfsFlush);\n};","map":{"version":3,"names":["stat","require","withTimeoutOption","mergeOptions","bind","ignoreUndefined","defaultOptions","module","exports","context","mfsFlush","path","options","cid"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/files/flush.js"],"sourcesContent":["'use strict'\n\nconst stat = require('./stat')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\nconst mergeOptions = require('merge-options').bind({ ignoreUndefined: true })\n\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {}\n\n/**\n * @param {MfsContext} context\n */\nmodule.exports = (context) => {\n  /**\n   * @type {import('ipfs-core-types/src/files').API[\"flush\"]}\n   */\n  async function mfsFlush (path, options = {}) {\n    /** @type {DefaultOptions} */\n    options = mergeOptions(defaultOptions, options)\n\n    const { cid } = await stat(context)(path, options)\n\n    return cid\n  }\n\n  return withTimeoutOption(mfsFlush)\n}\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,yCAAD,CAAjC;;AACA,IAAME,YAAY,GAAGF,OAAO,CAAC,eAAD,CAAP,CAAyBG,IAAzB,CAA8B;EAAEC,eAAe,EAAE;AAAnB,CAA9B,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACA,IAAMC,cAAc,GAAG,EAAvB;AAEA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAACC,OAAD,EAAa;EAC5B;AACF;AACA;EAH8B,SAIbC,QAJa;IAAA;EAAA;;EAAA;IAAA,uEAI5B,iBAAyBC,IAAzB;MAAA;MAAA;MAAA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAA+BC,OAA/B,2DAAyC,EAAzC;;cACE;cACAA,OAAO,GAAGT,YAAY,CAACG,cAAD,EAAiBM,OAAjB,CAAtB;cAFF;cAAA,OAIwBZ,IAAI,CAACS,OAAD,CAAJ,CAAcE,IAAd,EAAoBC,OAApB,CAJxB;;YAAA;cAAA;cAIUC,GAJV,eAIUA,GAJV;cAAA,iCAMSA,GANT;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJ4B;IAAA;EAAA;;EAa5B,OAAOX,iBAAiB,CAACQ,QAAD,CAAxB;AACD,CAdD"},"metadata":{},"sourceType":"script"}
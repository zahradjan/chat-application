{"ast":null,"code":"'use strict';\n\nconst {\n  CID\n} = require('multiformats/cid');\n\nconst {\n  sha256\n} = require('multiformats/hashes/sha2');\n/**\n * Convert a namespace string into a cid.\n *\n * @param {string} namespace\n * @returns {Promise<CID>}\n */\n\n\nmodule.exports.namespaceToCid = async namespace => {\n  const bytes = new TextEncoder().encode(namespace);\n  const hash = await sha256.digest(bytes);\n  return CID.createV0(hash);\n};","map":{"version":3,"names":["CID","require","sha256","module","exports","namespaceToCid","namespace","bytes","TextEncoder","encode","hash","digest","createV0"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p/src/circuit/utils.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst { sha256 } = require('multiformats/hashes/sha2')\n\n/**\n * Convert a namespace string into a cid.\n *\n * @param {string} namespace\n * @returns {Promise<CID>}\n */\nmodule.exports.namespaceToCid = async (namespace) => {\n  const bytes = new TextEncoder().encode(namespace)\n  const hash = await sha256.digest(bytes)\n\n  return CID.createV0(hash)\n}\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAUC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAM;EAAEC;AAAF,IAAaD,OAAO,CAAC,0BAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,CAAeC,cAAf,GAAgC,MAAOC,SAAP,IAAqB;EACnD,MAAMC,KAAK,GAAG,IAAIC,WAAJ,GAAkBC,MAAlB,CAAyBH,SAAzB,CAAd;EACA,MAAMI,IAAI,GAAG,MAAMR,MAAM,CAACS,MAAP,CAAcJ,KAAd,CAAnB;EAEA,OAAOP,GAAG,CAACY,QAAJ,CAAaF,IAAb,CAAP;AACD,CALD"},"metadata":{},"sourceType":"script"}
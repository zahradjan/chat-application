{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _require = require('ipfs-unixfs-exporter'),\n    exporter = _require.exporter;\n\nvar mergeOptions = require('merge-options').bind({\n  ignoreUndefined: true\n});\n\nvar toMfsPath = require('./utils/to-mfs-path');\n\nvar errCode = require('err-code');\n\nvar withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {number} offset\n * @property {number} length\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\n\n\nvar defaultOptions = {\n  offset: 0,\n  length: Infinity\n};\n/**\n * @param {MfsContext} context\n */\n\nmodule.exports = function (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API[\"read\"]}\n   */\n  function mfsRead(path) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    /** @type {DefaultOptions} */\n    options = mergeOptions(defaultOptions, options);\n    return _defineProperty({}, Symbol.asyncIterator, function () {\n      var _read = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var mfsPath, result, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, buf;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _awaitAsyncGenerator(toMfsPath(context, path, options));\n\n              case 2:\n                mfsPath = _context.sent;\n                _context.next = 5;\n                return _awaitAsyncGenerator(exporter(mfsPath.mfsPath, context.repo.blocks));\n\n              case 5:\n                result = _context.sent;\n\n                if (!(result.type !== 'file')) {\n                  _context.next = 8;\n                  break;\n                }\n\n                throw errCode(new Error(\"\".concat(path, \" was not a file\")), 'ERR_NOT_FILE');\n\n              case 8:\n                if (result.content) {\n                  _context.next = 10;\n                  break;\n                }\n\n                throw errCode(new Error(\"Could not load content stream from \".concat(path)), 'ERR_NO_CONTENT');\n\n              case 10:\n                _iteratorAbruptCompletion = false;\n                _didIteratorError = false;\n                _context.prev = 12;\n                _iterator = _asyncIterator(result.content({\n                  offset: options.offset,\n                  length: options.length\n                }));\n\n              case 14:\n                _context.next = 16;\n                return _awaitAsyncGenerator(_iterator.next());\n\n              case 16:\n                if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                  _context.next = 23;\n                  break;\n                }\n\n                buf = _step.value;\n                _context.next = 20;\n                return buf;\n\n              case 20:\n                _iteratorAbruptCompletion = false;\n                _context.next = 14;\n                break;\n\n              case 23:\n                _context.next = 29;\n                break;\n\n              case 25:\n                _context.prev = 25;\n                _context.t0 = _context[\"catch\"](12);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 29:\n                _context.prev = 29;\n                _context.prev = 30;\n\n                if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                  _context.next = 34;\n                  break;\n                }\n\n                _context.next = 34;\n                return _awaitAsyncGenerator(_iterator.return());\n\n              case 34:\n                _context.prev = 34;\n\n                if (!_didIteratorError) {\n                  _context.next = 37;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 37:\n                return _context.finish(34);\n\n              case 38:\n                return _context.finish(29);\n\n              case 39:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[12, 25, 29, 39], [30,, 34, 38]]);\n      }));\n\n      function read() {\n        return _read.apply(this, arguments);\n      }\n\n      return read;\n    }());\n  }\n\n  return withTimeoutOption(mfsRead);\n};","map":{"version":3,"names":["require","exporter","mergeOptions","bind","ignoreUndefined","toMfsPath","errCode","withTimeoutOption","defaultOptions","offset","length","Infinity","module","exports","context","mfsRead","path","options","Symbol","asyncIterator","mfsPath","repo","blocks","result","type","Error","content","buf","read"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/files/read.js"],"sourcesContent":["'use strict'\n\nconst { exporter } = require('ipfs-unixfs-exporter')\nconst mergeOptions = require('merge-options').bind({ ignoreUndefined: true })\nconst toMfsPath = require('./utils/to-mfs-path')\nconst errCode = require('err-code')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {number} offset\n * @property {number} length\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  offset: 0,\n  length: Infinity\n}\n\n/**\n * @param {MfsContext} context\n */\nmodule.exports = (context) => {\n  /**\n   * @type {import('ipfs-core-types/src/files').API[\"read\"]}\n   */\n  function mfsRead (path, options = {}) {\n    /** @type {DefaultOptions} */\n    options = mergeOptions(defaultOptions, options)\n\n    return {\n      [Symbol.asyncIterator]: async function * read () {\n        const mfsPath = await toMfsPath(context, path, options)\n        const result = await exporter(mfsPath.mfsPath, context.repo.blocks)\n\n        if (result.type !== 'file') {\n          throw errCode(new Error(`${path} was not a file`), 'ERR_NOT_FILE')\n        }\n\n        if (!result.content) {\n          throw errCode(new Error(`Could not load content stream from ${path}`), 'ERR_NO_CONTENT')\n        }\n\n        for await (const buf of result.content({\n          offset: options.offset,\n          length: options.length\n        })) {\n          yield buf\n        }\n      }\n    }\n  }\n\n  return withTimeoutOption(mfsRead)\n}\n"],"mappings":"AAAA;;;;;;;;;;;;AAEA,eAAqBA,OAAO,CAAC,sBAAD,CAA5B;AAAA,IAAQC,QAAR,YAAQA,QAAR;;AACA,IAAMC,YAAY,GAAGF,OAAO,CAAC,eAAD,CAAP,CAAyBG,IAAzB,CAA8B;EAAEC,eAAe,EAAE;AAAnB,CAA9B,CAArB;;AACA,IAAMC,SAAS,GAAGL,OAAO,CAAC,qBAAD,CAAzB;;AACA,IAAMM,OAAO,GAAGN,OAAO,CAAC,UAAD,CAAvB;;AACA,IAAMO,iBAAiB,GAAGP,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACA,IAAMQ,cAAc,GAAG;EACrBC,MAAM,EAAE,CADa;EAErBC,MAAM,EAAEC;AAFa,CAAvB;AAKA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAACC,OAAD,EAAa;EAC5B;AACF;AACA;EACE,SAASC,OAAT,CAAkBC,IAAlB,EAAsC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;;IACpC;IACAA,OAAO,GAAGf,YAAY,CAACM,cAAD,EAAiBS,OAAjB,CAAtB;IAEA,2BACGC,MAAM,CAACC,aADV;MAAA,yEAC0B;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,4BACAd,SAAS,CAACS,OAAD,EAAUE,IAAV,EAAgBC,OAAhB,CADT;;cAAA;gBAChBG,OADgB;gBAAA;gBAAA,4BAEDnB,QAAQ,CAACmB,OAAO,CAACA,OAAT,EAAkBN,OAAO,CAACO,IAAR,CAAaC,MAA/B,CAFP;;cAAA;gBAEhBC,MAFgB;;gBAAA,MAIlBA,MAAM,CAACC,IAAP,KAAgB,MAJE;kBAAA;kBAAA;gBAAA;;gBAAA,MAKdlB,OAAO,CAAC,IAAImB,KAAJ,WAAaT,IAAb,qBAAD,EAAsC,cAAtC,CALO;;cAAA;gBAAA,IAQjBO,MAAM,CAACG,OARU;kBAAA;kBAAA;gBAAA;;gBAAA,MASdpB,OAAO,CAAC,IAAImB,KAAJ,8CAAgDT,IAAhD,EAAD,EAA0D,gBAA1D,CATO;;cAAA;gBAAA;gBAAA;gBAAA;gBAAA,2BAYEO,MAAM,CAACG,OAAP,CAAe;kBACrCjB,MAAM,EAAEQ,OAAO,CAACR,MADqB;kBAErCC,MAAM,EAAEO,OAAO,CAACP;gBAFqB,CAAf,CAZF;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;;gBAYLiB,GAZK;gBAAA;gBAgBpB,OAAMA,GAAN;;cAhBoB;gBAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;gBAAA;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA;;cAAA;gBAAA;;gBAAA;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBAAA;;cAAA;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAD1B;;MAAA,SAC2CC,IAD3C;QAAA;MAAA;;MAAA,OAC2CA,IAD3C;IAAA;EAqBD;;EAED,OAAOrB,iBAAiB,CAACQ,OAAD,CAAxB;AACD,CAhCD"},"metadata":{},"sourceType":"script"}
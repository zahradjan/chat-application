{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar extractDataFromBlock = require('../../../utils/extract-data-from-block.js');\n\nvar validateOffsetAndLength = require('../../../utils/validate-offset-and-length.js');\n\nvar ipfsUnixfs = require('ipfs-unixfs');\n\nvar errCode = require('err-code');\n\nvar dagPb = require('@ipld/dag-pb');\n\nvar dagCbor = require('@ipld/dag-cbor');\n\nvar raw = require('multiformats/codecs/raw');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function get() {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nvar dagPb__namespace = /*#__PURE__*/_interopNamespace(dagPb);\n\nvar dagCbor__namespace = /*#__PURE__*/_interopNamespace(dagCbor);\n\nvar raw__namespace = /*#__PURE__*/_interopNamespace(raw);\n\nfunction emitBytes(_x, _x2, _x3, _x4) {\n  return _emitBytes.apply(this, arguments);\n}\n\nfunction _emitBytes() {\n  _emitBytes = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(blockstore, node, start, end) {\n    var streamPosition,\n        options,\n        buf,\n        file,\n        _buf,\n        childStart,\n        i,\n        childLink,\n        childEnd,\n        block,\n        child,\n        _iteratorAbruptCompletion,\n        _didIteratorError,\n        _iteratorError,\n        _iterator,\n        _step,\n        _buf2,\n        _args = arguments;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            streamPosition = _args.length > 4 && _args[4] !== undefined ? _args[4] : 0;\n            options = _args.length > 5 ? _args[5] : undefined;\n\n            if (!(node instanceof Uint8Array)) {\n              _context.next = 9;\n              break;\n            }\n\n            buf = extractDataFromBlock(node, streamPosition, start, end);\n\n            if (!buf.length) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 7;\n            return buf;\n\n          case 7:\n            streamPosition += buf.length;\n            return _context.abrupt(\"return\", streamPosition);\n\n          case 9:\n            if (!(node.Data == null)) {\n              _context.next = 11;\n              break;\n            }\n\n            throw errCode__default[\"default\"](new Error('no data in PBNode'), 'ERR_NOT_UNIXFS');\n\n          case 11:\n            _context.prev = 11;\n            file = ipfsUnixfs.UnixFS.unmarshal(node.Data);\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](11);\n            throw errCode__default[\"default\"](_context.t0, 'ERR_NOT_UNIXFS');\n\n          case 18:\n            if (!(file.data && file.data.length)) {\n              _context.next = 24;\n              break;\n            }\n\n            _buf = extractDataFromBlock(file.data, streamPosition, start, end);\n\n            if (!_buf.length) {\n              _context.next = 23;\n              break;\n            }\n\n            _context.next = 23;\n            return _buf;\n\n          case 23:\n            streamPosition += file.data.length;\n\n          case 24:\n            childStart = streamPosition;\n            i = 0;\n\n          case 26:\n            if (!(i < node.Links.length)) {\n              _context.next = 83;\n              break;\n            }\n\n            childLink = node.Links[i];\n            childEnd = streamPosition + file.blockSizes[i];\n\n            if (!(start >= childStart && start < childEnd || end > childStart && end <= childEnd || start < childStart && end > childEnd)) {\n              _context.next = 78;\n              break;\n            }\n\n            _context.next = 32;\n            return _awaitAsyncGenerator(blockstore.get(childLink.Hash, {\n              signal: options.signal\n            }));\n\n          case 32:\n            block = _context.sent;\n            child = void 0;\n            _context.t1 = childLink.Hash.code;\n            _context.next = _context.t1 === dagPb__namespace.code ? 37 : _context.t1 === raw__namespace.code ? 41 : _context.t1 === dagCbor__namespace.code ? 43 : 47;\n            break;\n\n          case 37:\n            _context.next = 39;\n            return _awaitAsyncGenerator(dagPb__namespace.decode(block));\n\n          case 39:\n            child = _context.sent;\n            return _context.abrupt(\"break\", 48);\n\n          case 41:\n            child = block;\n            return _context.abrupt(\"break\", 48);\n\n          case 43:\n            _context.next = 45;\n            return _awaitAsyncGenerator(dagCbor__namespace.decode(block));\n\n          case 45:\n            child = _context.sent;\n            return _context.abrupt(\"break\", 48);\n\n          case 47:\n            throw Error(\"Unsupported codec: \".concat(childLink.Hash.code));\n\n          case 48:\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context.prev = 50;\n            _iterator = _asyncIterator(emitBytes(blockstore, child, start, end, streamPosition, options));\n\n          case 52:\n            _context.next = 54;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 54:\n            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n              _context.next = 62;\n              break;\n            }\n\n            _buf2 = _step.value;\n            streamPosition += _buf2.length;\n            _context.next = 59;\n            return _buf2;\n\n          case 59:\n            _iteratorAbruptCompletion = false;\n            _context.next = 52;\n            break;\n\n          case 62:\n            _context.next = 68;\n            break;\n\n          case 64:\n            _context.prev = 64;\n            _context.t2 = _context[\"catch\"](50);\n            _didIteratorError = true;\n            _iteratorError = _context.t2;\n\n          case 68:\n            _context.prev = 68;\n            _context.prev = 69;\n\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context.next = 73;\n              break;\n            }\n\n            _context.next = 73;\n            return _awaitAsyncGenerator(_iterator.return());\n\n          case 73:\n            _context.prev = 73;\n\n            if (!_didIteratorError) {\n              _context.next = 76;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 76:\n            return _context.finish(73);\n\n          case 77:\n            return _context.finish(68);\n\n          case 78:\n            streamPosition = childEnd;\n            childStart = childEnd + 1;\n\n          case 80:\n            i++;\n            _context.next = 26;\n            break;\n\n          case 83:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[11, 15], [50, 64, 68, 78], [69,, 73, 77]]);\n  }));\n  return _emitBytes.apply(this, arguments);\n}\n\nvar fileContent = function fileContent(cid, node, unixfs, path, resolve, depth, blockstore) {\n  function yieldFileContent() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var fileSize = unixfs.fileSize();\n\n    if (fileSize === undefined) {\n      throw new Error('File was a directory');\n    }\n\n    var _validateOffsetAndLen = validateOffsetAndLength(fileSize, options.offset, options.length),\n        offset = _validateOffsetAndLen.offset,\n        length = _validateOffsetAndLen.length;\n\n    var start = offset;\n    var end = offset + length;\n    return emitBytes(blockstore, node, start, end, 0, options);\n  }\n\n  return yieldFileContent;\n};\n\nmodule.exports = fileContent;","map":{"version":3,"names":["extractDataFromBlock","require","validateOffsetAndLength","ipfsUnixfs","errCode","dagPb","dagCbor","raw","_interopDefaultLegacy","e","_interopNamespace","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","freeze","errCode__default","dagPb__namespace","dagCbor__namespace","raw__namespace","emitBytes","blockstore","node","start","end","streamPosition","options","Uint8Array","buf","length","Data","Error","file","UnixFS","unmarshal","data","childStart","i","Links","childLink","childEnd","blockSizes","Hash","signal","block","child","code","decode","fileContent","cid","unixfs","path","resolve","depth","yieldFileContent","fileSize","undefined","offset","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-unixfs-exporter/cjs/src/resolvers/unixfs-v1/content/file.js"],"sourcesContent":["'use strict';\n\nvar extractDataFromBlock = require('../../../utils/extract-data-from-block.js');\nvar validateOffsetAndLength = require('../../../utils/validate-offset-and-length.js');\nvar ipfsUnixfs = require('ipfs-unixfs');\nvar errCode = require('err-code');\nvar dagPb = require('@ipld/dag-pb');\nvar dagCbor = require('@ipld/dag-cbor');\nvar raw = require('multiformats/codecs/raw');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar dagPb__namespace = /*#__PURE__*/_interopNamespace(dagPb);\nvar dagCbor__namespace = /*#__PURE__*/_interopNamespace(dagCbor);\nvar raw__namespace = /*#__PURE__*/_interopNamespace(raw);\n\nasync function* emitBytes(blockstore, node, start, end, streamPosition = 0, options) {\n  if (node instanceof Uint8Array) {\n    const buf = extractDataFromBlock(node, streamPosition, start, end);\n    if (buf.length) {\n      yield buf;\n    }\n    streamPosition += buf.length;\n    return streamPosition;\n  }\n  if (node.Data == null) {\n    throw errCode__default[\"default\"](new Error('no data in PBNode'), 'ERR_NOT_UNIXFS');\n  }\n  let file;\n  try {\n    file = ipfsUnixfs.UnixFS.unmarshal(node.Data);\n  } catch (err) {\n    throw errCode__default[\"default\"](err, 'ERR_NOT_UNIXFS');\n  }\n  if (file.data && file.data.length) {\n    const buf = extractDataFromBlock(file.data, streamPosition, start, end);\n    if (buf.length) {\n      yield buf;\n    }\n    streamPosition += file.data.length;\n  }\n  let childStart = streamPosition;\n  for (let i = 0; i < node.Links.length; i++) {\n    const childLink = node.Links[i];\n    const childEnd = streamPosition + file.blockSizes[i];\n    if (start >= childStart && start < childEnd || end > childStart && end <= childEnd || start < childStart && end > childEnd) {\n      const block = await blockstore.get(childLink.Hash, { signal: options.signal });\n      let child;\n      switch (childLink.Hash.code) {\n      case dagPb__namespace.code:\n        child = await dagPb__namespace.decode(block);\n        break;\n      case raw__namespace.code:\n        child = block;\n        break;\n      case dagCbor__namespace.code:\n        child = await dagCbor__namespace.decode(block);\n        break;\n      default:\n        throw Error(`Unsupported codec: ${ childLink.Hash.code }`);\n      }\n      for await (const buf of emitBytes(blockstore, child, start, end, streamPosition, options)) {\n        streamPosition += buf.length;\n        yield buf;\n      }\n    }\n    streamPosition = childEnd;\n    childStart = childEnd + 1;\n  }\n}\nconst fileContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  function yieldFileContent(options = {}) {\n    const fileSize = unixfs.fileSize();\n    if (fileSize === undefined) {\n      throw new Error('File was a directory');\n    }\n    const {offset, length} = validateOffsetAndLength(fileSize, options.offset, options.length);\n    const start = offset;\n    const end = offset + length;\n    return emitBytes(blockstore, node, start, end, 0, options);\n  }\n  return yieldFileContent;\n};\n\nmodule.exports = fileContent;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar fs = require('fs');\n\nvar format = require('util').format;\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar isElectronRenderer = process.type && process.type === 'renderer';\nvar isNodejs = !isElectronRenderer && process.version ? true : false;\nvar LogLevels = {\n  'DEBUG': 'DEBUG',\n  'INFO': 'INFO',\n  'WARN': 'WARN',\n  'ERROR': 'ERROR',\n  'NONE': 'NONE'\n}; // Global log level\n\nvar GlobalLogLevel = LogLevels.DEBUG; // Global log file name\n\nvar GlobalLogfile = null;\nvar GlobalEvents = new EventEmitter(); // ANSI colors\n\nvar Colors = {\n  'Black': 0,\n  'Red': 1,\n  'Green': 2,\n  'Yellow': 3,\n  'Blue': 4,\n  'Magenta': 5,\n  'Cyan': 6,\n  'Grey': 7,\n  'White': 9,\n  'Default': 9\n}; // CSS colors\n\nif (!isNodejs) {\n  Colors = {\n    'Black': 'Black',\n    'Red': 'IndianRed',\n    'Green': 'LimeGreen',\n    'Yellow': 'Orange',\n    'Blue': 'RoyalBlue',\n    'Magenta': 'Orchid',\n    'Cyan': 'SkyBlue',\n    'Grey': 'DimGrey',\n    'White': 'White',\n    'Default': 'Black'\n  };\n}\n\nvar loglevelColors = [Colors.Cyan, Colors.Green, Colors.Yellow, Colors.Red, Colors.Default];\nvar defaultOptions = {\n  useColors: true,\n  color: Colors.Default,\n  showTimestamp: true,\n  useLocalTime: false,\n  showLevel: true,\n  filename: GlobalLogfile,\n  appendFile: true\n};\n\nvar Logger = /*#__PURE__*/function () {\n  function Logger(category, options) {\n    _classCallCheck(this, Logger);\n\n    this.category = category;\n    var opts = {};\n    Object.assign(opts, defaultOptions);\n    Object.assign(opts, options);\n    this.options = opts;\n    this.debug = this.debug.bind(this);\n    this.log = this.log.bind(this);\n    this.info = this.info.bind(this);\n    this.warn = this.warn.bind(this);\n    this.error = this.error.bind(this);\n  }\n\n  _createClass(Logger, [{\n    key: \"debug\",\n    value: function debug() {\n      if (this._shouldLog(LogLevels.DEBUG)) this._write(LogLevels.DEBUG, format.apply(null, arguments));\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      if (this._shouldLog(LogLevels.DEBUG)) this.debug.apply(this, arguments);\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      if (this._shouldLog(LogLevels.INFO)) this._write(LogLevels.INFO, format.apply(null, arguments));\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      if (this._shouldLog(LogLevels.WARN)) this._write(LogLevels.WARN, format.apply(null, arguments));\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      if (this._shouldLog(LogLevels.ERROR)) this._write(LogLevels.ERROR, format.apply(null, arguments));\n    }\n  }, {\n    key: \"_write\",\n    value: function _write(level, text) {\n      if ((this.options.filename || GlobalLogfile) && !this.fileWriter && isNodejs) this.fileWriter = fs.openSync(this.options.filename || GlobalLogfile, this.options.appendFile ? 'a+' : 'w+');\n\n      var format = this._format(level, text);\n\n      var unformattedText = this._createLogMessage(level, text);\n\n      var formattedText = this._createLogMessage(level, text, format.timestamp, format.level, format.category, format.text);\n\n      if (this.fileWriter && isNodejs) fs.writeSync(this.fileWriter, unformattedText + '\\n', null, 'utf-8');\n\n      if (isNodejs || !this.options.useColors) {\n        console.log(formattedText);\n        GlobalEvents.emit('data', this.category, level, text);\n      } else {\n        // TODO: clean this up\n        if (level === LogLevels.ERROR) {\n          if (this.options.showTimestamp && this.options.showLevel) {\n            console.error(formattedText, format.timestamp, format.level, format.category, format.text);\n          } else if (this.options.showTimestamp && !this.options.showLevel) {\n            console.error(formattedText, format.timestamp, format.category, format.text);\n          } else if (!this.options.showTimestamp && this.options.showLevel) {\n            console.error(formattedText, format.level, format.category, format.text);\n          } else {\n            console.error(formattedText, format.category, format.text);\n          }\n        } else {\n          if (this.options.showTimestamp && this.options.showLevel) {\n            console.log(formattedText, format.timestamp, format.level, format.category, format.text);\n          } else if (this.options.showTimestamp && !this.options.showLevel) {\n            console.log(formattedText, format.timestamp, format.category, format.text);\n          } else if (!this.options.showTimestamp && this.options.showLevel) {\n            console.log(formattedText, format.level, format.category, format.text);\n          } else {\n            console.log(formattedText, format.category, format.text);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_format\",\n    value: function _format(level, text) {\n      var timestampFormat = '';\n      var levelFormat = '';\n      var categoryFormat = '';\n      var textFormat = ': ';\n\n      if (this.options.useColors) {\n        var levelColor = Object.keys(LogLevels).map(function (f) {\n          return LogLevels[f];\n        }).indexOf(level);\n        var categoryColor = this.options.color;\n\n        if (isNodejs) {\n          if (this.options.showTimestamp) timestampFormat = \"\\x1B[3\" + Colors.Grey + 'm';\n          if (this.options.showLevel) levelFormat = \"\\x1B[3\" + loglevelColors[levelColor] + ';22m';\n          categoryFormat = \"\\x1B[3\" + categoryColor + ';1m';\n          textFormat = \"\\x1B[0m: \";\n        } else {\n          if (this.options.showTimestamp) timestampFormat = 'color:' + Colors.Grey;\n          if (this.options.showLevel) levelFormat = 'color:' + loglevelColors[levelColor];\n          categoryFormat = 'color:' + categoryColor + '; font-weight: bold';\n        }\n      }\n\n      return {\n        timestamp: timestampFormat,\n        level: levelFormat,\n        category: categoryFormat,\n        text: textFormat\n      };\n    }\n  }, {\n    key: \"_createLogMessage\",\n    value: function _createLogMessage(level, text, timestampFormat, levelFormat, categoryFormat, textFormat) {\n      timestampFormat = timestampFormat || '';\n      levelFormat = levelFormat || '';\n      categoryFormat = categoryFormat || '';\n      textFormat = textFormat || ': ';\n\n      if (!isNodejs && this.options.useColors) {\n        if (this.options.showTimestamp) timestampFormat = '%c';\n        if (this.options.showLevel) levelFormat = '%c';\n        categoryFormat = '%c';\n        textFormat = ': %c';\n      }\n\n      var result = '';\n      if (this.options.showTimestamp && !this.options.useLocalTime) result += '' + new Date().toISOString() + ' ';\n      if (this.options.showTimestamp && this.options.useLocalTime) result += '' + new Date().toLocaleString() + ' ';\n      result = timestampFormat + result;\n      if (this.options.showLevel) result += levelFormat + '[' + level + ']' + (level === LogLevels.INFO || level === LogLevels.WARN ? ' ' : '') + ' ';\n      result += categoryFormat + this.category;\n      result += textFormat + text;\n      return result;\n    }\n  }, {\n    key: \"_shouldLog\",\n    value: function _shouldLog(level) {\n      var envLogLevel = typeof process !== \"undefined\" && process.env !== undefined && process.env.LOG !== undefined ? process.env.LOG.toUpperCase() : null;\n      envLogLevel = typeof window !== \"undefined\" && window.LOG ? window.LOG.toUpperCase() : envLogLevel;\n      var logLevel = envLogLevel || GlobalLogLevel;\n      var levels = Object.keys(LogLevels).map(function (f) {\n        return LogLevels[f];\n      });\n      var index = levels.indexOf(level);\n      var levelIdx = levels.indexOf(logLevel);\n      return index >= levelIdx;\n    }\n  }]);\n\n  return Logger;\n}();\n\n;\n/* Public API */\n\nmodule.exports = {\n  Colors: Colors,\n  LogLevels: LogLevels,\n  setLogLevel: function setLogLevel(level) {\n    GlobalLogLevel = level;\n  },\n  setLogfile: function setLogfile(filename) {\n    GlobalLogfile = filename;\n  },\n  create: function create(category, options) {\n    var logger = new Logger(category, options);\n    return logger;\n  },\n  forceBrowserMode: function forceBrowserMode(force) {\n    return isNodejs = !force;\n  },\n  // for testing,\n  events: GlobalEvents\n};","map":{"version":3,"names":["fs","require","format","EventEmitter","isElectronRenderer","process","type","isNodejs","version","LogLevels","GlobalLogLevel","DEBUG","GlobalLogfile","GlobalEvents","Colors","loglevelColors","Cyan","Green","Yellow","Red","Default","defaultOptions","useColors","color","showTimestamp","useLocalTime","showLevel","filename","appendFile","Logger","category","options","opts","Object","assign","debug","bind","log","info","warn","error","_shouldLog","_write","apply","arguments","INFO","WARN","ERROR","level","text","fileWriter","openSync","_format","unformattedText","_createLogMessage","formattedText","timestamp","writeSync","console","emit","timestampFormat","levelFormat","categoryFormat","textFormat","levelColor","keys","map","f","indexOf","categoryColor","Grey","result","Date","toISOString","toLocaleString","envLogLevel","env","undefined","LOG","toUpperCase","window","logLevel","levels","index","levelIdx","module","exports","setLogLevel","setLogfile","create","logger","forceBrowserMode","force","events"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/logplease/src/index.js"],"sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst format = require('util').format;\nconst EventEmitter = require('events').EventEmitter;\n\nlet isElectronRenderer = process.type && process.type === 'renderer';\nlet isNodejs = !isElectronRenderer && process.version ? true : false;\n\nconst LogLevels = {\n  'DEBUG': 'DEBUG',\n  'INFO':  'INFO',\n  'WARN':  'WARN',\n  'ERROR': 'ERROR',\n  'NONE':  'NONE',\n};\n\n// Global log level\nlet GlobalLogLevel = LogLevels.DEBUG;\n\n// Global log file name\nlet GlobalLogfile = null;\n\nlet GlobalEvents = new EventEmitter();\n\n// ANSI colors\nlet Colors = {\n  'Black':   0,\n  'Red':     1,\n  'Green':   2,\n  'Yellow':  3,\n  'Blue':    4,\n  'Magenta': 5,\n  'Cyan':    6,\n  'Grey':    7,\n  'White':   9,\n  'Default': 9,\n};\n\n// CSS colors\nif(!isNodejs) {\n  Colors = {\n    'Black':   'Black',\n    'Red':     'IndianRed',\n    'Green':   'LimeGreen',\n    'Yellow':  'Orange',\n    'Blue':    'RoyalBlue',\n    'Magenta': 'Orchid',\n    'Cyan':    'SkyBlue',\n    'Grey':    'DimGrey',\n    'White':   'White',\n    'Default': 'Black',\n  };\n}\n\nconst loglevelColors = [Colors.Cyan, Colors.Green, Colors.Yellow, Colors.Red, Colors.Default];\n\nconst defaultOptions = {\n  useColors: true,\n  color: Colors.Default,\n  showTimestamp: true,\n  useLocalTime: false,\n  showLevel: true,\n  filename: GlobalLogfile,\n  appendFile: true,\n};\n\nclass Logger {\n  constructor(category, options) {\n    this.category = category;\n    let opts = {};\n    Object.assign(opts, defaultOptions);\n    Object.assign(opts, options);\n    this.options = opts;\n    this.debug = this.debug.bind(this);\n    this.log = this.log.bind(this);\n    this.info = this.info.bind(this);\n    this.warn = this.warn.bind(this);\n    this.error = this.error.bind(this);\n  }\n\n  debug() {\n    if(this._shouldLog(LogLevels.DEBUG))\n      this._write(LogLevels.DEBUG, format.apply(null, arguments));\n  }\n\n  log() {\n    if(this._shouldLog(LogLevels.DEBUG))\n      this.debug.apply(this, arguments);\n  }\n\n  info() {\n    if(this._shouldLog(LogLevels.INFO))\n      this._write(LogLevels.INFO, format.apply(null, arguments));\n  }\n\n  warn() {\n    if(this._shouldLog(LogLevels.WARN))\n      this._write(LogLevels.WARN, format.apply(null, arguments));\n  }\n\n  error() {\n    if(this._shouldLog(LogLevels.ERROR))\n      this._write(LogLevels.ERROR, format.apply(null, arguments));\n  }\n\n  _write(level, text) {\n    if((this.options.filename || GlobalLogfile) && !this.fileWriter && isNodejs)\n      this.fileWriter = fs.openSync(this.options.filename || GlobalLogfile, this.options.appendFile ? 'a+' : 'w+');\n\n    let format = this._format(level, text);\n    let unformattedText = this._createLogMessage(level, text);\n    let formattedText = this._createLogMessage(level, text, format.timestamp, format.level, format.category, format.text);\n\n    if(this.fileWriter && isNodejs)\n      fs.writeSync(this.fileWriter, unformattedText + '\\n', null, 'utf-8');\n\n    if(isNodejs || !this.options.useColors) {\n      console.log(formattedText)\n      GlobalEvents.emit('data', this.category, level, text)\n    } else {\n      // TODO: clean this up\n      if(level === LogLevels.ERROR) {\n        if(this.options.showTimestamp && this.options.showLevel) {\n          console.error(formattedText, format.timestamp, format.level, format.category, format.text)\n        } else if(this.options.showTimestamp && !this.options.showLevel) {\n          console.error(formattedText, format.timestamp, format.category, format.text)\n        } else if(!this.options.showTimestamp && this.options.showLevel) {\n          console.error(formattedText, format.level, format.category, format.text)\n        } else {\n          console.error(formattedText, format.category, format.text)\n        }\n      } else {\n        if(this.options.showTimestamp && this.options.showLevel) {\n          console.log(formattedText, format.timestamp, format.level, format.category, format.text)\n        } else if(this.options.showTimestamp && !this.options.showLevel) {\n          console.log(formattedText, format.timestamp, format.category, format.text)\n        } else if(!this.options.showTimestamp && this.options.showLevel) {\n          console.log(formattedText, format.level, format.category, format.text)\n        } else {\n          console.log(formattedText, format.category, format.text)\n        }\n      }\n    }\n  }\n\n  _format(level, text) {\n    let timestampFormat = '';\n    let levelFormat     = '';\n    let categoryFormat  = '';\n    let textFormat      = ': ';\n\n    if(this.options.useColors) {\n        const levelColor    = Object.keys(LogLevels).map((f) => LogLevels[f]).indexOf(level);\n        const categoryColor = this.options.color;\n\n      if(isNodejs) {\n        if(this.options.showTimestamp)\n          timestampFormat = '\\u001b[3' + Colors.Grey + 'm';\n\n        if(this.options.showLevel)\n          levelFormat = '\\u001b[3' + loglevelColors[levelColor] + ';22m';\n\n        categoryFormat = '\\u001b[3' + categoryColor + ';1m';\n        textFormat = '\\u001b[0m: ';\n      } else {\n        if(this.options.showTimestamp)\n          timestampFormat = 'color:' + Colors.Grey;\n\n        if(this.options.showLevel)\n          levelFormat = 'color:' + loglevelColors[levelColor];\n\n        categoryFormat = 'color:' + categoryColor + '; font-weight: bold';\n      }\n    }\n\n    return {\n      timestamp: timestampFormat,\n      level: levelFormat,\n      category: categoryFormat,\n      text: textFormat\n    };\n  }\n\n  _createLogMessage(level, text, timestampFormat, levelFormat, categoryFormat, textFormat) {\n    timestampFormat = timestampFormat || '';\n    levelFormat     = levelFormat     || '';\n    categoryFormat  = categoryFormat  || '';\n    textFormat      = textFormat      || ': ';\n\n    if(!isNodejs && this.options.useColors) {\n      if(this.options.showTimestamp)\n        timestampFormat = '%c';\n\n      if(this.options.showLevel)\n        levelFormat = '%c';\n\n      categoryFormat  = '%c';\n      textFormat = ': %c';\n    }\n\n    let result = '';\n\n    if(this.options.showTimestamp && !this.options.useLocalTime)\n      result += '' + new Date().toISOString() + ' ';\n\n    if(this.options.showTimestamp && this.options.useLocalTime)\n      result += '' + new Date().toLocaleString() + ' ';\n\n    result = timestampFormat + result;\n\n    if(this.options.showLevel)\n      result += levelFormat + '[' + level +']' + (level === LogLevels.INFO || level === LogLevels.WARN ? ' ' : '') + ' ';\n\n    result += categoryFormat + this.category;\n    result += textFormat + text;\n    return result;\n  }\n\n  _shouldLog(level) {\n    let envLogLevel = (typeof process !== \"undefined\" && process.env !== undefined && process.env.LOG !== undefined) ? process.env.LOG.toUpperCase() : null;\n    envLogLevel = (typeof window !== \"undefined\" && window.LOG) ? window.LOG.toUpperCase() : envLogLevel;\n\n    const logLevel = envLogLevel || GlobalLogLevel;\n    const levels   = Object.keys(LogLevels).map((f) => LogLevels[f]);\n    const index    = levels.indexOf(level);\n    const levelIdx = levels.indexOf(logLevel);\n    return index >= levelIdx;\n  }\n};\n\n/* Public API */\nmodule.exports = {\n  Colors: Colors,\n  LogLevels: LogLevels,\n  setLogLevel: (level) => {\n    GlobalLogLevel = level;\n  },\n  setLogfile: (filename) => {\n    GlobalLogfile = filename;\n  },\n  create: (category, options) => {\n    const logger = new Logger(category, options);\n    return logger;\n  },\n  forceBrowserMode: (force) => isNodejs = !force, // for testing,\n  events: GlobalEvents,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
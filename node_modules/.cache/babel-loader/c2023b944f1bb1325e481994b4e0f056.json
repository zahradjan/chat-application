{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logCipherState = exports.logRemoteEphemeralKey = exports.logRemoteStaticKey = exports.logLocalEphemeralKeys = exports.logLocalStaticKeys = exports.logger = void 0;\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst constants_1 = require(\"./constants\");\n\nexports.logger = debug_1.default('libp2p:noise');\nlet keyLogger;\n\nif (constants_1.DUMP_SESSION_KEYS) {\n  keyLogger = exports.logger;\n} else {\n  keyLogger = () => {};\n}\n\nfunction logLocalStaticKeys(s) {\n  keyLogger(`LOCAL_STATIC_PUBLIC_KEY ${s.publicKey.toString('hex')}`);\n  keyLogger(`LOCAL_STATIC_PRIVATE_KEY ${s.privateKey.toString('hex')}`);\n}\n\nexports.logLocalStaticKeys = logLocalStaticKeys;\n\nfunction logLocalEphemeralKeys(e) {\n  if (e) {\n    keyLogger(`LOCAL_PUBLIC_EPHEMERAL_KEY ${e.publicKey.toString('hex')}`);\n    keyLogger(`LOCAL_PRIVATE_EPHEMERAL_KEY ${e.privateKey.toString('hex')}`);\n  } else {\n    keyLogger('Missing local ephemeral keys.');\n  }\n}\n\nexports.logLocalEphemeralKeys = logLocalEphemeralKeys;\n\nfunction logRemoteStaticKey(rs) {\n  keyLogger(`REMOTE_STATIC_PUBLIC_KEY ${rs.toString('hex')}`);\n}\n\nexports.logRemoteStaticKey = logRemoteStaticKey;\n\nfunction logRemoteEphemeralKey(re) {\n  keyLogger(`REMOTE_EPHEMERAL_PUBLIC_KEY ${re.toString('hex')}`);\n}\n\nexports.logRemoteEphemeralKey = logRemoteEphemeralKey;\n\nfunction logCipherState(session) {\n  if (session.cs1 && session.cs2) {\n    keyLogger(`CIPHER_STATE_1 ${session.cs1.n} ${session.cs1.k.toString('hex')}`);\n    keyLogger(`CIPHER_STATE_2 ${session.cs2.n} ${session.cs2.k.toString('hex')}`);\n  } else {\n    keyLogger('Missing cipher state.');\n  }\n}\n\nexports.logCipherState = logCipherState;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAIaA,iBAASC,gBAAM,cAAN,CAAT;AAEb,IAAIC,SAAJ;;AACA,IAAIC,6BAAJ,EAAuB;EACrBD,SAAS,GAAGF,cAAZ;AACD,CAFD,MAEO;EACLE,SAAS,GAAG,MAAK,CAAqB,CAAtC;AACD;;AAED,SAAgBE,kBAAhB,CAAoCC,CAApC,EAA8C;EAC5CH,SAAS,CAAC,2BAA2BG,CAAC,CAACC,SAAF,CAAYC,QAAZ,CAAqB,KAArB,CAA2B,EAAvD,CAAT;EACAL,SAAS,CAAC,4BAA4BG,CAAC,CAACG,UAAF,CAAaD,QAAb,CAAsB,KAAtB,CAA4B,EAAzD,CAAT;AACD;;AAHDP;;AAKA,SAAgBS,qBAAhB,CAAuCC,CAAvC,EAA2D;EACzD,IAAIA,CAAJ,EAAO;IACLR,SAAS,CAAC,8BAA8BQ,CAAC,CAACJ,SAAF,CAAYC,QAAZ,CAAqB,KAArB,CAA2B,EAA1D,CAAT;IACAL,SAAS,CAAC,+BAA+BQ,CAAC,CAACF,UAAF,CAAaD,QAAb,CAAsB,KAAtB,CAA4B,EAA5D,CAAT;EACD,CAHD,MAGO;IACLL,SAAS,CAAC,+BAAD,CAAT;EACD;AACF;;AAPDF;;AASA,SAAgBW,kBAAhB,CAAoCC,EAApC,EAA8C;EAC5CV,SAAS,CAAC,4BAA4BU,EAAE,CAACL,QAAH,CAAY,KAAZ,CAAkB,EAA/C,CAAT;AACD;;AAFDP;;AAIA,SAAgBa,qBAAhB,CAAuCC,EAAvC,EAAiD;EAC/CZ,SAAS,CAAC,+BAA+BY,EAAE,CAACP,QAAH,CAAY,KAAZ,CAAkB,EAAlD,CAAT;AACD;;AAFDP;;AAIA,SAAgBe,cAAhB,CAAgCC,OAAhC,EAAqD;EACnD,IAAIA,OAAO,CAACC,GAAR,IAAeD,OAAO,CAACE,GAA3B,EAAgC;IAC9BhB,SAAS,CAAC,kBAAkBc,OAAO,CAACC,GAAR,CAAYE,CAAC,IAAIH,OAAO,CAACC,GAAR,CAAYG,CAAZ,CAAcb,QAAd,CAAuB,KAAvB,CAA6B,EAAjE,CAAT;IACAL,SAAS,CAAC,kBAAkBc,OAAO,CAACE,GAAR,CAAYC,CAAC,IAAIH,OAAO,CAACE,GAAR,CAAYE,CAAZ,CAAcb,QAAd,CAAuB,KAAvB,CAA6B,EAAjE,CAAT;EACD,CAHD,MAGO;IACLL,SAAS,CAAC,uBAAD,CAAT;EACD;AACF;;AAPDF","names":["exports","debug_1","keyLogger","constants_1","logLocalStaticKeys","s","publicKey","toString","privateKey","logLocalEphemeralKeys","e","logRemoteStaticKey","rs","logRemoteEphemeralKey","re","logCipherState","session","cs1","cs2","n","k"],"sourceRoot":"","sources":["../../src/logger.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}
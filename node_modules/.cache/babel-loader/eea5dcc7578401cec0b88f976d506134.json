{"ast":null,"code":"/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\"); // Common aliases\n\n\nvar $Reader = $protobuf.Reader,\n    $Writer = $protobuf.Writer,\n    $util = $protobuf.util; // Exported root namespace\n\nvar $root = $protobuf.roots[\"libp2p-dht-message\"] || ($protobuf.roots[\"libp2p-dht-message\"] = {});\n\n$root.Record = function () {\n  /**\n   * Properties of a Record.\n   * @exports IRecord\n   * @interface IRecord\n   * @property {Uint8Array|null} [key] Record key\n   * @property {Uint8Array|null} [value] Record value\n   * @property {Uint8Array|null} [author] Record author\n   * @property {Uint8Array|null} [signature] Record signature\n   * @property {string|null} [timeReceived] Record timeReceived\n   */\n\n  /**\n   * Constructs a new Record.\n   * @exports Record\n   * @classdesc Represents a Record.\n   * @implements IRecord\n   * @constructor\n   * @param {IRecord=} [p] Properties to set\n   */\n  function Record(p) {\n    if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n  }\n  /**\n   * Record key.\n   * @member {Uint8Array|null|undefined} key\n   * @memberof Record\n   * @instance\n   */\n\n\n  Record.prototype.key = null;\n  /**\n   * Record value.\n   * @member {Uint8Array|null|undefined} value\n   * @memberof Record\n   * @instance\n   */\n\n  Record.prototype.value = null;\n  /**\n   * Record author.\n   * @member {Uint8Array|null|undefined} author\n   * @memberof Record\n   * @instance\n   */\n\n  Record.prototype.author = null;\n  /**\n   * Record signature.\n   * @member {Uint8Array|null|undefined} signature\n   * @memberof Record\n   * @instance\n   */\n\n  Record.prototype.signature = null;\n  /**\n   * Record timeReceived.\n   * @member {string|null|undefined} timeReceived\n   * @memberof Record\n   * @instance\n   */\n\n  Record.prototype.timeReceived = null; // OneOf field names bound to virtual getters and setters\n\n  var $oneOfFields;\n  /**\n   * Record _key.\n   * @member {\"key\"|undefined} _key\n   * @memberof Record\n   * @instance\n   */\n\n  Object.defineProperty(Record.prototype, \"_key\", {\n    get: $util.oneOfGetter($oneOfFields = [\"key\"]),\n    set: $util.oneOfSetter($oneOfFields)\n  });\n  /**\n   * Record _value.\n   * @member {\"value\"|undefined} _value\n   * @memberof Record\n   * @instance\n   */\n\n  Object.defineProperty(Record.prototype, \"_value\", {\n    get: $util.oneOfGetter($oneOfFields = [\"value\"]),\n    set: $util.oneOfSetter($oneOfFields)\n  });\n  /**\n   * Record _author.\n   * @member {\"author\"|undefined} _author\n   * @memberof Record\n   * @instance\n   */\n\n  Object.defineProperty(Record.prototype, \"_author\", {\n    get: $util.oneOfGetter($oneOfFields = [\"author\"]),\n    set: $util.oneOfSetter($oneOfFields)\n  });\n  /**\n   * Record _signature.\n   * @member {\"signature\"|undefined} _signature\n   * @memberof Record\n   * @instance\n   */\n\n  Object.defineProperty(Record.prototype, \"_signature\", {\n    get: $util.oneOfGetter($oneOfFields = [\"signature\"]),\n    set: $util.oneOfSetter($oneOfFields)\n  });\n  /**\n   * Record _timeReceived.\n   * @member {\"timeReceived\"|undefined} _timeReceived\n   * @memberof Record\n   * @instance\n   */\n\n  Object.defineProperty(Record.prototype, \"_timeReceived\", {\n    get: $util.oneOfGetter($oneOfFields = [\"timeReceived\"]),\n    set: $util.oneOfSetter($oneOfFields)\n  });\n  /**\n   * Encodes the specified Record message. Does not implicitly {@link Record.verify|verify} messages.\n   * @function encode\n   * @memberof Record\n   * @static\n   * @param {IRecord} m Record message or plain object to encode\n   * @param {$protobuf.Writer} [w] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n  Record.encode = function encode(m, w) {\n    if (!w) w = $Writer.create();\n    if (m.key != null && Object.hasOwnProperty.call(m, \"key\")) w.uint32(10).bytes(m.key);\n    if (m.value != null && Object.hasOwnProperty.call(m, \"value\")) w.uint32(18).bytes(m.value);\n    if (m.author != null && Object.hasOwnProperty.call(m, \"author\")) w.uint32(26).bytes(m.author);\n    if (m.signature != null && Object.hasOwnProperty.call(m, \"signature\")) w.uint32(34).bytes(m.signature);\n    if (m.timeReceived != null && Object.hasOwnProperty.call(m, \"timeReceived\")) w.uint32(42).string(m.timeReceived);\n    return w;\n  };\n  /**\n   * Decodes a Record message from the specified reader or buffer.\n   * @function decode\n   * @memberof Record\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n   * @param {number} [l] Message length if known beforehand\n   * @returns {Record} Record\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  Record.decode = function decode(r, l) {\n    if (!(r instanceof $Reader)) r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l,\n        m = new $root.Record();\n\n    while (r.pos < c) {\n      var t = r.uint32();\n\n      switch (t >>> 3) {\n        case 1:\n          m.key = r.bytes();\n          break;\n\n        case 2:\n          m.value = r.bytes();\n          break;\n\n        case 3:\n          m.author = r.bytes();\n          break;\n\n        case 4:\n          m.signature = r.bytes();\n          break;\n\n        case 5:\n          m.timeReceived = r.string();\n          break;\n\n        default:\n          r.skipType(t & 7);\n          break;\n      }\n    }\n\n    return m;\n  };\n  /**\n   * Creates a Record message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Record\n   * @static\n   * @param {Object.<string,*>} d Plain object\n   * @returns {Record} Record\n   */\n\n\n  Record.fromObject = function fromObject(d) {\n    if (d instanceof $root.Record) return d;\n    var m = new $root.Record();\n\n    if (d.key != null) {\n      if (typeof d.key === \"string\") $util.base64.decode(d.key, m.key = $util.newBuffer($util.base64.length(d.key)), 0);else if (d.key.length) m.key = d.key;\n    }\n\n    if (d.value != null) {\n      if (typeof d.value === \"string\") $util.base64.decode(d.value, m.value = $util.newBuffer($util.base64.length(d.value)), 0);else if (d.value.length) m.value = d.value;\n    }\n\n    if (d.author != null) {\n      if (typeof d.author === \"string\") $util.base64.decode(d.author, m.author = $util.newBuffer($util.base64.length(d.author)), 0);else if (d.author.length) m.author = d.author;\n    }\n\n    if (d.signature != null) {\n      if (typeof d.signature === \"string\") $util.base64.decode(d.signature, m.signature = $util.newBuffer($util.base64.length(d.signature)), 0);else if (d.signature.length) m.signature = d.signature;\n    }\n\n    if (d.timeReceived != null) {\n      m.timeReceived = String(d.timeReceived);\n    }\n\n    return m;\n  };\n  /**\n   * Creates a plain object from a Record message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Record\n   * @static\n   * @param {Record} m Record\n   * @param {$protobuf.IConversionOptions} [o] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  Record.toObject = function toObject(m, o) {\n    if (!o) o = {};\n    var d = {};\n\n    if (m.key != null && m.hasOwnProperty(\"key\")) {\n      d.key = o.bytes === String ? $util.base64.encode(m.key, 0, m.key.length) : o.bytes === Array ? Array.prototype.slice.call(m.key) : m.key;\n      if (o.oneofs) d._key = \"key\";\n    }\n\n    if (m.value != null && m.hasOwnProperty(\"value\")) {\n      d.value = o.bytes === String ? $util.base64.encode(m.value, 0, m.value.length) : o.bytes === Array ? Array.prototype.slice.call(m.value) : m.value;\n      if (o.oneofs) d._value = \"value\";\n    }\n\n    if (m.author != null && m.hasOwnProperty(\"author\")) {\n      d.author = o.bytes === String ? $util.base64.encode(m.author, 0, m.author.length) : o.bytes === Array ? Array.prototype.slice.call(m.author) : m.author;\n      if (o.oneofs) d._author = \"author\";\n    }\n\n    if (m.signature != null && m.hasOwnProperty(\"signature\")) {\n      d.signature = o.bytes === String ? $util.base64.encode(m.signature, 0, m.signature.length) : o.bytes === Array ? Array.prototype.slice.call(m.signature) : m.signature;\n      if (o.oneofs) d._signature = \"signature\";\n    }\n\n    if (m.timeReceived != null && m.hasOwnProperty(\"timeReceived\")) {\n      d.timeReceived = m.timeReceived;\n      if (o.oneofs) d._timeReceived = \"timeReceived\";\n    }\n\n    return d;\n  };\n  /**\n   * Converts this Record to JSON.\n   * @function toJSON\n   * @memberof Record\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  Record.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return Record;\n}();\n\n$root.Message = function () {\n  /**\n   * Properties of a Message.\n   * @exports IMessage\n   * @interface IMessage\n   * @property {Message.MessageType|null} [type] Message type\n   * @property {number|null} [clusterLevelRaw] Message clusterLevelRaw\n   * @property {Uint8Array|null} [key] Message key\n   * @property {Uint8Array|null} [record] Message record\n   * @property {Array.<Message.IPeer>|null} [closerPeers] Message closerPeers\n   * @property {Array.<Message.IPeer>|null} [providerPeers] Message providerPeers\n   */\n\n  /**\n   * Constructs a new Message.\n   * @exports Message\n   * @classdesc Represents a Message.\n   * @implements IMessage\n   * @constructor\n   * @param {IMessage=} [p] Properties to set\n   */\n  function Message(p) {\n    this.closerPeers = [];\n    this.providerPeers = [];\n    if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n  }\n  /**\n   * Message type.\n   * @member {Message.MessageType|null|undefined} type\n   * @memberof Message\n   * @instance\n   */\n\n\n  Message.prototype.type = null;\n  /**\n   * Message clusterLevelRaw.\n   * @member {number|null|undefined} clusterLevelRaw\n   * @memberof Message\n   * @instance\n   */\n\n  Message.prototype.clusterLevelRaw = null;\n  /**\n   * Message key.\n   * @member {Uint8Array|null|undefined} key\n   * @memberof Message\n   * @instance\n   */\n\n  Message.prototype.key = null;\n  /**\n   * Message record.\n   * @member {Uint8Array|null|undefined} record\n   * @memberof Message\n   * @instance\n   */\n\n  Message.prototype.record = null;\n  /**\n   * Message closerPeers.\n   * @member {Array.<Message.IPeer>} closerPeers\n   * @memberof Message\n   * @instance\n   */\n\n  Message.prototype.closerPeers = $util.emptyArray;\n  /**\n   * Message providerPeers.\n   * @member {Array.<Message.IPeer>} providerPeers\n   * @memberof Message\n   * @instance\n   */\n\n  Message.prototype.providerPeers = $util.emptyArray; // OneOf field names bound to virtual getters and setters\n\n  var $oneOfFields;\n  /**\n   * Message _type.\n   * @member {\"type\"|undefined} _type\n   * @memberof Message\n   * @instance\n   */\n\n  Object.defineProperty(Message.prototype, \"_type\", {\n    get: $util.oneOfGetter($oneOfFields = [\"type\"]),\n    set: $util.oneOfSetter($oneOfFields)\n  });\n  /**\n   * Message _clusterLevelRaw.\n   * @member {\"clusterLevelRaw\"|undefined} _clusterLevelRaw\n   * @memberof Message\n   * @instance\n   */\n\n  Object.defineProperty(Message.prototype, \"_clusterLevelRaw\", {\n    get: $util.oneOfGetter($oneOfFields = [\"clusterLevelRaw\"]),\n    set: $util.oneOfSetter($oneOfFields)\n  });\n  /**\n   * Message _key.\n   * @member {\"key\"|undefined} _key\n   * @memberof Message\n   * @instance\n   */\n\n  Object.defineProperty(Message.prototype, \"_key\", {\n    get: $util.oneOfGetter($oneOfFields = [\"key\"]),\n    set: $util.oneOfSetter($oneOfFields)\n  });\n  /**\n   * Message _record.\n   * @member {\"record\"|undefined} _record\n   * @memberof Message\n   * @instance\n   */\n\n  Object.defineProperty(Message.prototype, \"_record\", {\n    get: $util.oneOfGetter($oneOfFields = [\"record\"]),\n    set: $util.oneOfSetter($oneOfFields)\n  });\n  /**\n   * Encodes the specified Message message. Does not implicitly {@link Message.verify|verify} messages.\n   * @function encode\n   * @memberof Message\n   * @static\n   * @param {IMessage} m Message message or plain object to encode\n   * @param {$protobuf.Writer} [w] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n  Message.encode = function encode(m, w) {\n    if (!w) w = $Writer.create();\n    if (m.type != null && Object.hasOwnProperty.call(m, \"type\")) w.uint32(8).int32(m.type);\n    if (m.key != null && Object.hasOwnProperty.call(m, \"key\")) w.uint32(18).bytes(m.key);\n    if (m.record != null && Object.hasOwnProperty.call(m, \"record\")) w.uint32(26).bytes(m.record);\n\n    if (m.closerPeers != null && m.closerPeers.length) {\n      for (var i = 0; i < m.closerPeers.length; ++i) $root.Message.Peer.encode(m.closerPeers[i], w.uint32(66).fork()).ldelim();\n    }\n\n    if (m.providerPeers != null && m.providerPeers.length) {\n      for (var i = 0; i < m.providerPeers.length; ++i) $root.Message.Peer.encode(m.providerPeers[i], w.uint32(74).fork()).ldelim();\n    }\n\n    if (m.clusterLevelRaw != null && Object.hasOwnProperty.call(m, \"clusterLevelRaw\")) w.uint32(80).int32(m.clusterLevelRaw);\n    return w;\n  };\n  /**\n   * Decodes a Message message from the specified reader or buffer.\n   * @function decode\n   * @memberof Message\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n   * @param {number} [l] Message length if known beforehand\n   * @returns {Message} Message\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  Message.decode = function decode(r, l) {\n    if (!(r instanceof $Reader)) r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l,\n        m = new $root.Message();\n\n    while (r.pos < c) {\n      var t = r.uint32();\n\n      switch (t >>> 3) {\n        case 1:\n          m.type = r.int32();\n          break;\n\n        case 10:\n          m.clusterLevelRaw = r.int32();\n          break;\n\n        case 2:\n          m.key = r.bytes();\n          break;\n\n        case 3:\n          m.record = r.bytes();\n          break;\n\n        case 8:\n          if (!(m.closerPeers && m.closerPeers.length)) m.closerPeers = [];\n          m.closerPeers.push($root.Message.Peer.decode(r, r.uint32()));\n          break;\n\n        case 9:\n          if (!(m.providerPeers && m.providerPeers.length)) m.providerPeers = [];\n          m.providerPeers.push($root.Message.Peer.decode(r, r.uint32()));\n          break;\n\n        default:\n          r.skipType(t & 7);\n          break;\n      }\n    }\n\n    return m;\n  };\n  /**\n   * Creates a Message message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Message\n   * @static\n   * @param {Object.<string,*>} d Plain object\n   * @returns {Message} Message\n   */\n\n\n  Message.fromObject = function fromObject(d) {\n    if (d instanceof $root.Message) return d;\n    var m = new $root.Message();\n\n    switch (d.type) {\n      case \"PUT_VALUE\":\n      case 0:\n        m.type = 0;\n        break;\n\n      case \"GET_VALUE\":\n      case 1:\n        m.type = 1;\n        break;\n\n      case \"ADD_PROVIDER\":\n      case 2:\n        m.type = 2;\n        break;\n\n      case \"GET_PROVIDERS\":\n      case 3:\n        m.type = 3;\n        break;\n\n      case \"FIND_NODE\":\n      case 4:\n        m.type = 4;\n        break;\n\n      case \"PING\":\n      case 5:\n        m.type = 5;\n        break;\n    }\n\n    if (d.clusterLevelRaw != null) {\n      m.clusterLevelRaw = d.clusterLevelRaw | 0;\n    }\n\n    if (d.key != null) {\n      if (typeof d.key === \"string\") $util.base64.decode(d.key, m.key = $util.newBuffer($util.base64.length(d.key)), 0);else if (d.key.length) m.key = d.key;\n    }\n\n    if (d.record != null) {\n      if (typeof d.record === \"string\") $util.base64.decode(d.record, m.record = $util.newBuffer($util.base64.length(d.record)), 0);else if (d.record.length) m.record = d.record;\n    }\n\n    if (d.closerPeers) {\n      if (!Array.isArray(d.closerPeers)) throw TypeError(\".Message.closerPeers: array expected\");\n      m.closerPeers = [];\n\n      for (var i = 0; i < d.closerPeers.length; ++i) {\n        if (typeof d.closerPeers[i] !== \"object\") throw TypeError(\".Message.closerPeers: object expected\");\n        m.closerPeers[i] = $root.Message.Peer.fromObject(d.closerPeers[i]);\n      }\n    }\n\n    if (d.providerPeers) {\n      if (!Array.isArray(d.providerPeers)) throw TypeError(\".Message.providerPeers: array expected\");\n      m.providerPeers = [];\n\n      for (var i = 0; i < d.providerPeers.length; ++i) {\n        if (typeof d.providerPeers[i] !== \"object\") throw TypeError(\".Message.providerPeers: object expected\");\n        m.providerPeers[i] = $root.Message.Peer.fromObject(d.providerPeers[i]);\n      }\n    }\n\n    return m;\n  };\n  /**\n   * Creates a plain object from a Message message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Message\n   * @static\n   * @param {Message} m Message\n   * @param {$protobuf.IConversionOptions} [o] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  Message.toObject = function toObject(m, o) {\n    if (!o) o = {};\n    var d = {};\n\n    if (o.arrays || o.defaults) {\n      d.closerPeers = [];\n      d.providerPeers = [];\n    }\n\n    if (m.type != null && m.hasOwnProperty(\"type\")) {\n      d.type = o.enums === String ? $root.Message.MessageType[m.type] : m.type;\n      if (o.oneofs) d._type = \"type\";\n    }\n\n    if (m.key != null && m.hasOwnProperty(\"key\")) {\n      d.key = o.bytes === String ? $util.base64.encode(m.key, 0, m.key.length) : o.bytes === Array ? Array.prototype.slice.call(m.key) : m.key;\n      if (o.oneofs) d._key = \"key\";\n    }\n\n    if (m.record != null && m.hasOwnProperty(\"record\")) {\n      d.record = o.bytes === String ? $util.base64.encode(m.record, 0, m.record.length) : o.bytes === Array ? Array.prototype.slice.call(m.record) : m.record;\n      if (o.oneofs) d._record = \"record\";\n    }\n\n    if (m.closerPeers && m.closerPeers.length) {\n      d.closerPeers = [];\n\n      for (var j = 0; j < m.closerPeers.length; ++j) {\n        d.closerPeers[j] = $root.Message.Peer.toObject(m.closerPeers[j], o);\n      }\n    }\n\n    if (m.providerPeers && m.providerPeers.length) {\n      d.providerPeers = [];\n\n      for (var j = 0; j < m.providerPeers.length; ++j) {\n        d.providerPeers[j] = $root.Message.Peer.toObject(m.providerPeers[j], o);\n      }\n    }\n\n    if (m.clusterLevelRaw != null && m.hasOwnProperty(\"clusterLevelRaw\")) {\n      d.clusterLevelRaw = m.clusterLevelRaw;\n      if (o.oneofs) d._clusterLevelRaw = \"clusterLevelRaw\";\n    }\n\n    return d;\n  };\n  /**\n   * Converts this Message to JSON.\n   * @function toJSON\n   * @memberof Message\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  Message.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  /**\n   * MessageType enum.\n   * @name Message.MessageType\n   * @enum {number}\n   * @property {number} PUT_VALUE=0 PUT_VALUE value\n   * @property {number} GET_VALUE=1 GET_VALUE value\n   * @property {number} ADD_PROVIDER=2 ADD_PROVIDER value\n   * @property {number} GET_PROVIDERS=3 GET_PROVIDERS value\n   * @property {number} FIND_NODE=4 FIND_NODE value\n   * @property {number} PING=5 PING value\n   */\n\n\n  Message.MessageType = function () {\n    var valuesById = {},\n        values = Object.create(valuesById);\n    values[valuesById[0] = \"PUT_VALUE\"] = 0;\n    values[valuesById[1] = \"GET_VALUE\"] = 1;\n    values[valuesById[2] = \"ADD_PROVIDER\"] = 2;\n    values[valuesById[3] = \"GET_PROVIDERS\"] = 3;\n    values[valuesById[4] = \"FIND_NODE\"] = 4;\n    values[valuesById[5] = \"PING\"] = 5;\n    return values;\n  }();\n  /**\n   * ConnectionType enum.\n   * @name Message.ConnectionType\n   * @enum {number}\n   * @property {number} NOT_CONNECTED=0 NOT_CONNECTED value\n   * @property {number} CONNECTED=1 CONNECTED value\n   * @property {number} CAN_CONNECT=2 CAN_CONNECT value\n   * @property {number} CANNOT_CONNECT=3 CANNOT_CONNECT value\n   */\n\n\n  Message.ConnectionType = function () {\n    var valuesById = {},\n        values = Object.create(valuesById);\n    values[valuesById[0] = \"NOT_CONNECTED\"] = 0;\n    values[valuesById[1] = \"CONNECTED\"] = 1;\n    values[valuesById[2] = \"CAN_CONNECT\"] = 2;\n    values[valuesById[3] = \"CANNOT_CONNECT\"] = 3;\n    return values;\n  }();\n\n  Message.Peer = function () {\n    /**\n     * Properties of a Peer.\n     * @memberof Message\n     * @interface IPeer\n     * @property {Uint8Array|null} [id] Peer id\n     * @property {Array.<Uint8Array>|null} [addrs] Peer addrs\n     * @property {Message.ConnectionType|null} [connection] Peer connection\n     */\n\n    /**\n     * Constructs a new Peer.\n     * @memberof Message\n     * @classdesc Represents a Peer.\n     * @implements IPeer\n     * @constructor\n     * @param {Message.IPeer=} [p] Properties to set\n     */\n    function Peer(p) {\n      this.addrs = [];\n      if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n    }\n    /**\n     * Peer id.\n     * @member {Uint8Array|null|undefined} id\n     * @memberof Message.Peer\n     * @instance\n     */\n\n\n    Peer.prototype.id = null;\n    /**\n     * Peer addrs.\n     * @member {Array.<Uint8Array>} addrs\n     * @memberof Message.Peer\n     * @instance\n     */\n\n    Peer.prototype.addrs = $util.emptyArray;\n    /**\n     * Peer connection.\n     * @member {Message.ConnectionType|null|undefined} connection\n     * @memberof Message.Peer\n     * @instance\n     */\n\n    Peer.prototype.connection = null; // OneOf field names bound to virtual getters and setters\n\n    var $oneOfFields;\n    /**\n     * Peer _id.\n     * @member {\"id\"|undefined} _id\n     * @memberof Message.Peer\n     * @instance\n     */\n\n    Object.defineProperty(Peer.prototype, \"_id\", {\n      get: $util.oneOfGetter($oneOfFields = [\"id\"]),\n      set: $util.oneOfSetter($oneOfFields)\n    });\n    /**\n     * Peer _connection.\n     * @member {\"connection\"|undefined} _connection\n     * @memberof Message.Peer\n     * @instance\n     */\n\n    Object.defineProperty(Peer.prototype, \"_connection\", {\n      get: $util.oneOfGetter($oneOfFields = [\"connection\"]),\n      set: $util.oneOfSetter($oneOfFields)\n    });\n    /**\n     * Encodes the specified Peer message. Does not implicitly {@link Message.Peer.verify|verify} messages.\n     * @function encode\n     * @memberof Message.Peer\n     * @static\n     * @param {Message.IPeer} m Peer message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n\n    Peer.encode = function encode(m, w) {\n      if (!w) w = $Writer.create();\n      if (m.id != null && Object.hasOwnProperty.call(m, \"id\")) w.uint32(10).bytes(m.id);\n\n      if (m.addrs != null && m.addrs.length) {\n        for (var i = 0; i < m.addrs.length; ++i) w.uint32(18).bytes(m.addrs[i]);\n      }\n\n      if (m.connection != null && Object.hasOwnProperty.call(m, \"connection\")) w.uint32(24).int32(m.connection);\n      return w;\n    };\n    /**\n     * Decodes a Peer message from the specified reader or buffer.\n     * @function decode\n     * @memberof Message.Peer\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Message.Peer} Peer\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n\n\n    Peer.decode = function decode(r, l) {\n      if (!(r instanceof $Reader)) r = $Reader.create(r);\n      var c = l === undefined ? r.len : r.pos + l,\n          m = new $root.Message.Peer();\n\n      while (r.pos < c) {\n        var t = r.uint32();\n\n        switch (t >>> 3) {\n          case 1:\n            m.id = r.bytes();\n            break;\n\n          case 2:\n            if (!(m.addrs && m.addrs.length)) m.addrs = [];\n            m.addrs.push(r.bytes());\n            break;\n\n          case 3:\n            m.connection = r.int32();\n            break;\n\n          default:\n            r.skipType(t & 7);\n            break;\n        }\n      }\n\n      return m;\n    };\n    /**\n     * Creates a Peer message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Message.Peer\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Message.Peer} Peer\n     */\n\n\n    Peer.fromObject = function fromObject(d) {\n      if (d instanceof $root.Message.Peer) return d;\n      var m = new $root.Message.Peer();\n\n      if (d.id != null) {\n        if (typeof d.id === \"string\") $util.base64.decode(d.id, m.id = $util.newBuffer($util.base64.length(d.id)), 0);else if (d.id.length) m.id = d.id;\n      }\n\n      if (d.addrs) {\n        if (!Array.isArray(d.addrs)) throw TypeError(\".Message.Peer.addrs: array expected\");\n        m.addrs = [];\n\n        for (var i = 0; i < d.addrs.length; ++i) {\n          if (typeof d.addrs[i] === \"string\") $util.base64.decode(d.addrs[i], m.addrs[i] = $util.newBuffer($util.base64.length(d.addrs[i])), 0);else if (d.addrs[i].length) m.addrs[i] = d.addrs[i];\n        }\n      }\n\n      switch (d.connection) {\n        case \"NOT_CONNECTED\":\n        case 0:\n          m.connection = 0;\n          break;\n\n        case \"CONNECTED\":\n        case 1:\n          m.connection = 1;\n          break;\n\n        case \"CAN_CONNECT\":\n        case 2:\n          m.connection = 2;\n          break;\n\n        case \"CANNOT_CONNECT\":\n        case 3:\n          m.connection = 3;\n          break;\n      }\n\n      return m;\n    };\n    /**\n     * Creates a plain object from a Peer message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Message.Peer\n     * @static\n     * @param {Message.Peer} m Peer\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n\n\n    Peer.toObject = function toObject(m, o) {\n      if (!o) o = {};\n      var d = {};\n\n      if (o.arrays || o.defaults) {\n        d.addrs = [];\n      }\n\n      if (m.id != null && m.hasOwnProperty(\"id\")) {\n        d.id = o.bytes === String ? $util.base64.encode(m.id, 0, m.id.length) : o.bytes === Array ? Array.prototype.slice.call(m.id) : m.id;\n        if (o.oneofs) d._id = \"id\";\n      }\n\n      if (m.addrs && m.addrs.length) {\n        d.addrs = [];\n\n        for (var j = 0; j < m.addrs.length; ++j) {\n          d.addrs[j] = o.bytes === String ? $util.base64.encode(m.addrs[j], 0, m.addrs[j].length) : o.bytes === Array ? Array.prototype.slice.call(m.addrs[j]) : m.addrs[j];\n        }\n      }\n\n      if (m.connection != null && m.hasOwnProperty(\"connection\")) {\n        d.connection = o.enums === String ? $root.Message.ConnectionType[m.connection] : m.connection;\n        if (o.oneofs) d._connection = \"connection\";\n      }\n\n      return d;\n    };\n    /**\n     * Converts this Peer to JSON.\n     * @function toJSON\n     * @memberof Message.Peer\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n\n\n    Peer.prototype.toJSON = function toJSON() {\n      return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Peer;\n  }();\n\n  return Message;\n}();\n\nmodule.exports = $root;","map":{"version":3,"names":["$protobuf","require","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Record","p","ks","Object","keys","i","length","prototype","key","value","author","signature","timeReceived","$oneOfFields","defineProperty","get","oneOfGetter","set","oneOfSetter","encode","m","w","create","hasOwnProperty","call","uint32","bytes","string","decode","r","l","c","undefined","len","pos","t","skipType","fromObject","d","base64","newBuffer","String","toObject","o","Array","slice","oneofs","_key","_value","_author","_signature","_timeReceived","toJSON","constructor","toJSONOptions","Message","closerPeers","providerPeers","type","clusterLevelRaw","record","emptyArray","int32","Peer","fork","ldelim","push","isArray","TypeError","arrays","defaults","enums","MessageType","_type","_record","j","_clusterLevelRaw","valuesById","values","ConnectionType","addrs","id","connection","_id","_connection","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p-kad-dht/src/message/dht.js"],"sourcesContent":["/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"libp2p-dht-message\"] || ($protobuf.roots[\"libp2p-dht-message\"] = {});\n\n$root.Record = (function() {\n\n    /**\n     * Properties of a Record.\n     * @exports IRecord\n     * @interface IRecord\n     * @property {Uint8Array|null} [key] Record key\n     * @property {Uint8Array|null} [value] Record value\n     * @property {Uint8Array|null} [author] Record author\n     * @property {Uint8Array|null} [signature] Record signature\n     * @property {string|null} [timeReceived] Record timeReceived\n     */\n\n    /**\n     * Constructs a new Record.\n     * @exports Record\n     * @classdesc Represents a Record.\n     * @implements IRecord\n     * @constructor\n     * @param {IRecord=} [p] Properties to set\n     */\n    function Record(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Record key.\n     * @member {Uint8Array|null|undefined} key\n     * @memberof Record\n     * @instance\n     */\n    Record.prototype.key = null;\n\n    /**\n     * Record value.\n     * @member {Uint8Array|null|undefined} value\n     * @memberof Record\n     * @instance\n     */\n    Record.prototype.value = null;\n\n    /**\n     * Record author.\n     * @member {Uint8Array|null|undefined} author\n     * @memberof Record\n     * @instance\n     */\n    Record.prototype.author = null;\n\n    /**\n     * Record signature.\n     * @member {Uint8Array|null|undefined} signature\n     * @memberof Record\n     * @instance\n     */\n    Record.prototype.signature = null;\n\n    /**\n     * Record timeReceived.\n     * @member {string|null|undefined} timeReceived\n     * @memberof Record\n     * @instance\n     */\n    Record.prototype.timeReceived = null;\n\n    // OneOf field names bound to virtual getters and setters\n    var $oneOfFields;\n\n    /**\n     * Record _key.\n     * @member {\"key\"|undefined} _key\n     * @memberof Record\n     * @instance\n     */\n    Object.defineProperty(Record.prototype, \"_key\", {\n        get: $util.oneOfGetter($oneOfFields = [\"key\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Record _value.\n     * @member {\"value\"|undefined} _value\n     * @memberof Record\n     * @instance\n     */\n    Object.defineProperty(Record.prototype, \"_value\", {\n        get: $util.oneOfGetter($oneOfFields = [\"value\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Record _author.\n     * @member {\"author\"|undefined} _author\n     * @memberof Record\n     * @instance\n     */\n    Object.defineProperty(Record.prototype, \"_author\", {\n        get: $util.oneOfGetter($oneOfFields = [\"author\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Record _signature.\n     * @member {\"signature\"|undefined} _signature\n     * @memberof Record\n     * @instance\n     */\n    Object.defineProperty(Record.prototype, \"_signature\", {\n        get: $util.oneOfGetter($oneOfFields = [\"signature\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Record _timeReceived.\n     * @member {\"timeReceived\"|undefined} _timeReceived\n     * @memberof Record\n     * @instance\n     */\n    Object.defineProperty(Record.prototype, \"_timeReceived\", {\n        get: $util.oneOfGetter($oneOfFields = [\"timeReceived\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Encodes the specified Record message. Does not implicitly {@link Record.verify|verify} messages.\n     * @function encode\n     * @memberof Record\n     * @static\n     * @param {IRecord} m Record message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Record.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.key != null && Object.hasOwnProperty.call(m, \"key\"))\n            w.uint32(10).bytes(m.key);\n        if (m.value != null && Object.hasOwnProperty.call(m, \"value\"))\n            w.uint32(18).bytes(m.value);\n        if (m.author != null && Object.hasOwnProperty.call(m, \"author\"))\n            w.uint32(26).bytes(m.author);\n        if (m.signature != null && Object.hasOwnProperty.call(m, \"signature\"))\n            w.uint32(34).bytes(m.signature);\n        if (m.timeReceived != null && Object.hasOwnProperty.call(m, \"timeReceived\"))\n            w.uint32(42).string(m.timeReceived);\n        return w;\n    };\n\n    /**\n     * Decodes a Record message from the specified reader or buffer.\n     * @function decode\n     * @memberof Record\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Record} Record\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Record.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Record();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.key = r.bytes();\n                break;\n            case 2:\n                m.value = r.bytes();\n                break;\n            case 3:\n                m.author = r.bytes();\n                break;\n            case 4:\n                m.signature = r.bytes();\n                break;\n            case 5:\n                m.timeReceived = r.string();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Record message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Record\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Record} Record\n     */\n    Record.fromObject = function fromObject(d) {\n        if (d instanceof $root.Record)\n            return d;\n        var m = new $root.Record();\n        if (d.key != null) {\n            if (typeof d.key === \"string\")\n                $util.base64.decode(d.key, m.key = $util.newBuffer($util.base64.length(d.key)), 0);\n            else if (d.key.length)\n                m.key = d.key;\n        }\n        if (d.value != null) {\n            if (typeof d.value === \"string\")\n                $util.base64.decode(d.value, m.value = $util.newBuffer($util.base64.length(d.value)), 0);\n            else if (d.value.length)\n                m.value = d.value;\n        }\n        if (d.author != null) {\n            if (typeof d.author === \"string\")\n                $util.base64.decode(d.author, m.author = $util.newBuffer($util.base64.length(d.author)), 0);\n            else if (d.author.length)\n                m.author = d.author;\n        }\n        if (d.signature != null) {\n            if (typeof d.signature === \"string\")\n                $util.base64.decode(d.signature, m.signature = $util.newBuffer($util.base64.length(d.signature)), 0);\n            else if (d.signature.length)\n                m.signature = d.signature;\n        }\n        if (d.timeReceived != null) {\n            m.timeReceived = String(d.timeReceived);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Record message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Record\n     * @static\n     * @param {Record} m Record\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Record.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (m.key != null && m.hasOwnProperty(\"key\")) {\n            d.key = o.bytes === String ? $util.base64.encode(m.key, 0, m.key.length) : o.bytes === Array ? Array.prototype.slice.call(m.key) : m.key;\n            if (o.oneofs)\n                d._key = \"key\";\n        }\n        if (m.value != null && m.hasOwnProperty(\"value\")) {\n            d.value = o.bytes === String ? $util.base64.encode(m.value, 0, m.value.length) : o.bytes === Array ? Array.prototype.slice.call(m.value) : m.value;\n            if (o.oneofs)\n                d._value = \"value\";\n        }\n        if (m.author != null && m.hasOwnProperty(\"author\")) {\n            d.author = o.bytes === String ? $util.base64.encode(m.author, 0, m.author.length) : o.bytes === Array ? Array.prototype.slice.call(m.author) : m.author;\n            if (o.oneofs)\n                d._author = \"author\";\n        }\n        if (m.signature != null && m.hasOwnProperty(\"signature\")) {\n            d.signature = o.bytes === String ? $util.base64.encode(m.signature, 0, m.signature.length) : o.bytes === Array ? Array.prototype.slice.call(m.signature) : m.signature;\n            if (o.oneofs)\n                d._signature = \"signature\";\n        }\n        if (m.timeReceived != null && m.hasOwnProperty(\"timeReceived\")) {\n            d.timeReceived = m.timeReceived;\n            if (o.oneofs)\n                d._timeReceived = \"timeReceived\";\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Record to JSON.\n     * @function toJSON\n     * @memberof Record\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Record.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Record;\n})();\n\n$root.Message = (function() {\n\n    /**\n     * Properties of a Message.\n     * @exports IMessage\n     * @interface IMessage\n     * @property {Message.MessageType|null} [type] Message type\n     * @property {number|null} [clusterLevelRaw] Message clusterLevelRaw\n     * @property {Uint8Array|null} [key] Message key\n     * @property {Uint8Array|null} [record] Message record\n     * @property {Array.<Message.IPeer>|null} [closerPeers] Message closerPeers\n     * @property {Array.<Message.IPeer>|null} [providerPeers] Message providerPeers\n     */\n\n    /**\n     * Constructs a new Message.\n     * @exports Message\n     * @classdesc Represents a Message.\n     * @implements IMessage\n     * @constructor\n     * @param {IMessage=} [p] Properties to set\n     */\n    function Message(p) {\n        this.closerPeers = [];\n        this.providerPeers = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Message type.\n     * @member {Message.MessageType|null|undefined} type\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.type = null;\n\n    /**\n     * Message clusterLevelRaw.\n     * @member {number|null|undefined} clusterLevelRaw\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.clusterLevelRaw = null;\n\n    /**\n     * Message key.\n     * @member {Uint8Array|null|undefined} key\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.key = null;\n\n    /**\n     * Message record.\n     * @member {Uint8Array|null|undefined} record\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.record = null;\n\n    /**\n     * Message closerPeers.\n     * @member {Array.<Message.IPeer>} closerPeers\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.closerPeers = $util.emptyArray;\n\n    /**\n     * Message providerPeers.\n     * @member {Array.<Message.IPeer>} providerPeers\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.providerPeers = $util.emptyArray;\n\n    // OneOf field names bound to virtual getters and setters\n    var $oneOfFields;\n\n    /**\n     * Message _type.\n     * @member {\"type\"|undefined} _type\n     * @memberof Message\n     * @instance\n     */\n    Object.defineProperty(Message.prototype, \"_type\", {\n        get: $util.oneOfGetter($oneOfFields = [\"type\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Message _clusterLevelRaw.\n     * @member {\"clusterLevelRaw\"|undefined} _clusterLevelRaw\n     * @memberof Message\n     * @instance\n     */\n    Object.defineProperty(Message.prototype, \"_clusterLevelRaw\", {\n        get: $util.oneOfGetter($oneOfFields = [\"clusterLevelRaw\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Message _key.\n     * @member {\"key\"|undefined} _key\n     * @memberof Message\n     * @instance\n     */\n    Object.defineProperty(Message.prototype, \"_key\", {\n        get: $util.oneOfGetter($oneOfFields = [\"key\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Message _record.\n     * @member {\"record\"|undefined} _record\n     * @memberof Message\n     * @instance\n     */\n    Object.defineProperty(Message.prototype, \"_record\", {\n        get: $util.oneOfGetter($oneOfFields = [\"record\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Encodes the specified Message message. Does not implicitly {@link Message.verify|verify} messages.\n     * @function encode\n     * @memberof Message\n     * @static\n     * @param {IMessage} m Message message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Message.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.type != null && Object.hasOwnProperty.call(m, \"type\"))\n            w.uint32(8).int32(m.type);\n        if (m.key != null && Object.hasOwnProperty.call(m, \"key\"))\n            w.uint32(18).bytes(m.key);\n        if (m.record != null && Object.hasOwnProperty.call(m, \"record\"))\n            w.uint32(26).bytes(m.record);\n        if (m.closerPeers != null && m.closerPeers.length) {\n            for (var i = 0; i < m.closerPeers.length; ++i)\n                $root.Message.Peer.encode(m.closerPeers[i], w.uint32(66).fork()).ldelim();\n        }\n        if (m.providerPeers != null && m.providerPeers.length) {\n            for (var i = 0; i < m.providerPeers.length; ++i)\n                $root.Message.Peer.encode(m.providerPeers[i], w.uint32(74).fork()).ldelim();\n        }\n        if (m.clusterLevelRaw != null && Object.hasOwnProperty.call(m, \"clusterLevelRaw\"))\n            w.uint32(80).int32(m.clusterLevelRaw);\n        return w;\n    };\n\n    /**\n     * Decodes a Message message from the specified reader or buffer.\n     * @function decode\n     * @memberof Message\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Message} Message\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Message.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Message();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.type = r.int32();\n                break;\n            case 10:\n                m.clusterLevelRaw = r.int32();\n                break;\n            case 2:\n                m.key = r.bytes();\n                break;\n            case 3:\n                m.record = r.bytes();\n                break;\n            case 8:\n                if (!(m.closerPeers && m.closerPeers.length))\n                    m.closerPeers = [];\n                m.closerPeers.push($root.Message.Peer.decode(r, r.uint32()));\n                break;\n            case 9:\n                if (!(m.providerPeers && m.providerPeers.length))\n                    m.providerPeers = [];\n                m.providerPeers.push($root.Message.Peer.decode(r, r.uint32()));\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Message message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Message\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Message} Message\n     */\n    Message.fromObject = function fromObject(d) {\n        if (d instanceof $root.Message)\n            return d;\n        var m = new $root.Message();\n        switch (d.type) {\n        case \"PUT_VALUE\":\n        case 0:\n            m.type = 0;\n            break;\n        case \"GET_VALUE\":\n        case 1:\n            m.type = 1;\n            break;\n        case \"ADD_PROVIDER\":\n        case 2:\n            m.type = 2;\n            break;\n        case \"GET_PROVIDERS\":\n        case 3:\n            m.type = 3;\n            break;\n        case \"FIND_NODE\":\n        case 4:\n            m.type = 4;\n            break;\n        case \"PING\":\n        case 5:\n            m.type = 5;\n            break;\n        }\n        if (d.clusterLevelRaw != null) {\n            m.clusterLevelRaw = d.clusterLevelRaw | 0;\n        }\n        if (d.key != null) {\n            if (typeof d.key === \"string\")\n                $util.base64.decode(d.key, m.key = $util.newBuffer($util.base64.length(d.key)), 0);\n            else if (d.key.length)\n                m.key = d.key;\n        }\n        if (d.record != null) {\n            if (typeof d.record === \"string\")\n                $util.base64.decode(d.record, m.record = $util.newBuffer($util.base64.length(d.record)), 0);\n            else if (d.record.length)\n                m.record = d.record;\n        }\n        if (d.closerPeers) {\n            if (!Array.isArray(d.closerPeers))\n                throw TypeError(\".Message.closerPeers: array expected\");\n            m.closerPeers = [];\n            for (var i = 0; i < d.closerPeers.length; ++i) {\n                if (typeof d.closerPeers[i] !== \"object\")\n                    throw TypeError(\".Message.closerPeers: object expected\");\n                m.closerPeers[i] = $root.Message.Peer.fromObject(d.closerPeers[i]);\n            }\n        }\n        if (d.providerPeers) {\n            if (!Array.isArray(d.providerPeers))\n                throw TypeError(\".Message.providerPeers: array expected\");\n            m.providerPeers = [];\n            for (var i = 0; i < d.providerPeers.length; ++i) {\n                if (typeof d.providerPeers[i] !== \"object\")\n                    throw TypeError(\".Message.providerPeers: object expected\");\n                m.providerPeers[i] = $root.Message.Peer.fromObject(d.providerPeers[i]);\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Message message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Message\n     * @static\n     * @param {Message} m Message\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Message.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.closerPeers = [];\n            d.providerPeers = [];\n        }\n        if (m.type != null && m.hasOwnProperty(\"type\")) {\n            d.type = o.enums === String ? $root.Message.MessageType[m.type] : m.type;\n            if (o.oneofs)\n                d._type = \"type\";\n        }\n        if (m.key != null && m.hasOwnProperty(\"key\")) {\n            d.key = o.bytes === String ? $util.base64.encode(m.key, 0, m.key.length) : o.bytes === Array ? Array.prototype.slice.call(m.key) : m.key;\n            if (o.oneofs)\n                d._key = \"key\";\n        }\n        if (m.record != null && m.hasOwnProperty(\"record\")) {\n            d.record = o.bytes === String ? $util.base64.encode(m.record, 0, m.record.length) : o.bytes === Array ? Array.prototype.slice.call(m.record) : m.record;\n            if (o.oneofs)\n                d._record = \"record\";\n        }\n        if (m.closerPeers && m.closerPeers.length) {\n            d.closerPeers = [];\n            for (var j = 0; j < m.closerPeers.length; ++j) {\n                d.closerPeers[j] = $root.Message.Peer.toObject(m.closerPeers[j], o);\n            }\n        }\n        if (m.providerPeers && m.providerPeers.length) {\n            d.providerPeers = [];\n            for (var j = 0; j < m.providerPeers.length; ++j) {\n                d.providerPeers[j] = $root.Message.Peer.toObject(m.providerPeers[j], o);\n            }\n        }\n        if (m.clusterLevelRaw != null && m.hasOwnProperty(\"clusterLevelRaw\")) {\n            d.clusterLevelRaw = m.clusterLevelRaw;\n            if (o.oneofs)\n                d._clusterLevelRaw = \"clusterLevelRaw\";\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Message to JSON.\n     * @function toJSON\n     * @memberof Message\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Message.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * MessageType enum.\n     * @name Message.MessageType\n     * @enum {number}\n     * @property {number} PUT_VALUE=0 PUT_VALUE value\n     * @property {number} GET_VALUE=1 GET_VALUE value\n     * @property {number} ADD_PROVIDER=2 ADD_PROVIDER value\n     * @property {number} GET_PROVIDERS=3 GET_PROVIDERS value\n     * @property {number} FIND_NODE=4 FIND_NODE value\n     * @property {number} PING=5 PING value\n     */\n    Message.MessageType = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"PUT_VALUE\"] = 0;\n        values[valuesById[1] = \"GET_VALUE\"] = 1;\n        values[valuesById[2] = \"ADD_PROVIDER\"] = 2;\n        values[valuesById[3] = \"GET_PROVIDERS\"] = 3;\n        values[valuesById[4] = \"FIND_NODE\"] = 4;\n        values[valuesById[5] = \"PING\"] = 5;\n        return values;\n    })();\n\n    /**\n     * ConnectionType enum.\n     * @name Message.ConnectionType\n     * @enum {number}\n     * @property {number} NOT_CONNECTED=0 NOT_CONNECTED value\n     * @property {number} CONNECTED=1 CONNECTED value\n     * @property {number} CAN_CONNECT=2 CAN_CONNECT value\n     * @property {number} CANNOT_CONNECT=3 CANNOT_CONNECT value\n     */\n    Message.ConnectionType = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"NOT_CONNECTED\"] = 0;\n        values[valuesById[1] = \"CONNECTED\"] = 1;\n        values[valuesById[2] = \"CAN_CONNECT\"] = 2;\n        values[valuesById[3] = \"CANNOT_CONNECT\"] = 3;\n        return values;\n    })();\n\n    Message.Peer = (function() {\n\n        /**\n         * Properties of a Peer.\n         * @memberof Message\n         * @interface IPeer\n         * @property {Uint8Array|null} [id] Peer id\n         * @property {Array.<Uint8Array>|null} [addrs] Peer addrs\n         * @property {Message.ConnectionType|null} [connection] Peer connection\n         */\n\n        /**\n         * Constructs a new Peer.\n         * @memberof Message\n         * @classdesc Represents a Peer.\n         * @implements IPeer\n         * @constructor\n         * @param {Message.IPeer=} [p] Properties to set\n         */\n        function Peer(p) {\n            this.addrs = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Peer id.\n         * @member {Uint8Array|null|undefined} id\n         * @memberof Message.Peer\n         * @instance\n         */\n        Peer.prototype.id = null;\n\n        /**\n         * Peer addrs.\n         * @member {Array.<Uint8Array>} addrs\n         * @memberof Message.Peer\n         * @instance\n         */\n        Peer.prototype.addrs = $util.emptyArray;\n\n        /**\n         * Peer connection.\n         * @member {Message.ConnectionType|null|undefined} connection\n         * @memberof Message.Peer\n         * @instance\n         */\n        Peer.prototype.connection = null;\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * Peer _id.\n         * @member {\"id\"|undefined} _id\n         * @memberof Message.Peer\n         * @instance\n         */\n        Object.defineProperty(Peer.prototype, \"_id\", {\n            get: $util.oneOfGetter($oneOfFields = [\"id\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Peer _connection.\n         * @member {\"connection\"|undefined} _connection\n         * @memberof Message.Peer\n         * @instance\n         */\n        Object.defineProperty(Peer.prototype, \"_connection\", {\n            get: $util.oneOfGetter($oneOfFields = [\"connection\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Encodes the specified Peer message. Does not implicitly {@link Message.Peer.verify|verify} messages.\n         * @function encode\n         * @memberof Message.Peer\n         * @static\n         * @param {Message.IPeer} m Peer message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Peer.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.id != null && Object.hasOwnProperty.call(m, \"id\"))\n                w.uint32(10).bytes(m.id);\n            if (m.addrs != null && m.addrs.length) {\n                for (var i = 0; i < m.addrs.length; ++i)\n                    w.uint32(18).bytes(m.addrs[i]);\n            }\n            if (m.connection != null && Object.hasOwnProperty.call(m, \"connection\"))\n                w.uint32(24).int32(m.connection);\n            return w;\n        };\n\n        /**\n         * Decodes a Peer message from the specified reader or buffer.\n         * @function decode\n         * @memberof Message.Peer\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {Message.Peer} Peer\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Peer.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.Message.Peer();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.id = r.bytes();\n                    break;\n                case 2:\n                    if (!(m.addrs && m.addrs.length))\n                        m.addrs = [];\n                    m.addrs.push(r.bytes());\n                    break;\n                case 3:\n                    m.connection = r.int32();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates a Peer message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof Message.Peer\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {Message.Peer} Peer\n         */\n        Peer.fromObject = function fromObject(d) {\n            if (d instanceof $root.Message.Peer)\n                return d;\n            var m = new $root.Message.Peer();\n            if (d.id != null) {\n                if (typeof d.id === \"string\")\n                    $util.base64.decode(d.id, m.id = $util.newBuffer($util.base64.length(d.id)), 0);\n                else if (d.id.length)\n                    m.id = d.id;\n            }\n            if (d.addrs) {\n                if (!Array.isArray(d.addrs))\n                    throw TypeError(\".Message.Peer.addrs: array expected\");\n                m.addrs = [];\n                for (var i = 0; i < d.addrs.length; ++i) {\n                    if (typeof d.addrs[i] === \"string\")\n                        $util.base64.decode(d.addrs[i], m.addrs[i] = $util.newBuffer($util.base64.length(d.addrs[i])), 0);\n                    else if (d.addrs[i].length)\n                        m.addrs[i] = d.addrs[i];\n                }\n            }\n            switch (d.connection) {\n            case \"NOT_CONNECTED\":\n            case 0:\n                m.connection = 0;\n                break;\n            case \"CONNECTED\":\n            case 1:\n                m.connection = 1;\n                break;\n            case \"CAN_CONNECT\":\n            case 2:\n                m.connection = 2;\n                break;\n            case \"CANNOT_CONNECT\":\n            case 3:\n                m.connection = 3;\n                break;\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from a Peer message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Message.Peer\n         * @static\n         * @param {Message.Peer} m Peer\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Peer.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.arrays || o.defaults) {\n                d.addrs = [];\n            }\n            if (m.id != null && m.hasOwnProperty(\"id\")) {\n                d.id = o.bytes === String ? $util.base64.encode(m.id, 0, m.id.length) : o.bytes === Array ? Array.prototype.slice.call(m.id) : m.id;\n                if (o.oneofs)\n                    d._id = \"id\";\n            }\n            if (m.addrs && m.addrs.length) {\n                d.addrs = [];\n                for (var j = 0; j < m.addrs.length; ++j) {\n                    d.addrs[j] = o.bytes === String ? $util.base64.encode(m.addrs[j], 0, m.addrs[j].length) : o.bytes === Array ? Array.prototype.slice.call(m.addrs[j]) : m.addrs[j];\n                }\n            }\n            if (m.connection != null && m.hasOwnProperty(\"connection\")) {\n                d.connection = o.enums === String ? $root.Message.ConnectionType[m.connection] : m.connection;\n                if (o.oneofs)\n                    d._connection = \"connection\";\n            }\n            return d;\n        };\n\n        /**\n         * Converts this Peer to JSON.\n         * @function toJSON\n         * @memberof Message.Peer\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Peer.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Peer;\n    })();\n\n    return Message;\n})();\n\nmodule.exports = $root;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
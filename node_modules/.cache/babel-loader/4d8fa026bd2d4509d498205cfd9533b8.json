{"ast":null,"code":"import { makeAutoObservable, runInAction, toJS } from \"mobx\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nimport { Message } from \"../models/Message.js\";\nimport { ChatRoom } from \"../models/Room.js\";\nexport class RoomStore {\n  //TODO: avatar temporary dont forget to refactor this\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.rooms = [];\n    makeAutoObservable(this);\n  }\n\n  async init() {\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\"); // runInAction(async () => {\n    //   this.room = await this.rootStore.dataStore.ipfsNode.pubsub;\n    //   this.chatRoomMessagesDb = await this.rootStore.dataStore.orbitDb.feed(\"messages\");\n    //   await this.chatRoomMessagesDb.load();\n    //   await this.setMessagesFromDb();\n    //   await this.connectToChatRoom(\"TestChatRoom\");\n    // });\n  }\n\n  async createRoom(roomName) {\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\n    const chatRoom = new ChatRoom(this.rootStore.dataStore.ipfsNode.pubsub, this.rootStore.dataStore.orbitDb, roomName);\n    await chatRoom.init();\n    this.rooms.push(chatRoom);\n    return chatRoom;\n  }\n\n  getRoom(roomName) {\n    //TODO: kdyz nenajde apod.\n    console.log(this.rooms.find(room => roomName = room.roomName));\n    return this.rooms.find(room => roomName = room.roomName);\n  }\n\n  isChatRoomReady(roomName) {\n    const room = this.getRoom(roomName);\n    console.log(!!room);\n    return !!room;\n  }\n\n}","map":{"version":3,"names":["makeAutoObservable","runInAction","toJS","AvatarGenerator","Message","ChatRoom","RoomStore","constructor","rootStore","rooms","init","dataStore","ipfsNode","undefined","Error","orbitDb","createRoom","roomName","chatRoom","pubsub","push","getRoom","console","log","find","room","isChatRoomReady"],"sources":["C:/Users/zajan/GitHub/chatApplication/src/data/store/RoomStore.js"],"sourcesContent":["import { makeAutoObservable, runInAction, toJS } from \"mobx\";\r\nimport { AvatarGenerator } from \"random-avatar-generator\";\r\nimport { Message } from \"../models/Message.js\";\r\nimport { ChatRoom } from \"../models/Room.js\";\r\n\r\nexport class RoomStore {\r\n  //TODO: avatar temporary dont forget to refactor this\r\n  rooms;\r\n  constructor(rootStore) {\r\n    this.rootStore = rootStore;\r\n    this.rooms = [];\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  async init() {\r\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\r\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\r\n\r\n    // runInAction(async () => {\r\n    //   this.room = await this.rootStore.dataStore.ipfsNode.pubsub;\r\n    //   this.chatRoomMessagesDb = await this.rootStore.dataStore.orbitDb.feed(\"messages\");\r\n    //   await this.chatRoomMessagesDb.load();\r\n    //   await this.setMessagesFromDb();\r\n    //   await this.connectToChatRoom(\"TestChatRoom\");\r\n    // });\r\n  }\r\n  async createRoom(roomName) {\r\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\r\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\r\n    const chatRoom = new ChatRoom(this.rootStore.dataStore.ipfsNode.pubsub, this.rootStore.dataStore.orbitDb, roomName);\r\n    await chatRoom.init();\r\n    this.rooms.push(chatRoom);\r\n    return chatRoom;\r\n  }\r\n\r\n  getRoom(roomName) {\r\n    //TODO: kdyz nenajde apod.\r\n    console.log(this.rooms.find((room) => (roomName = room.roomName)));\r\n    return this.rooms.find((room) => (roomName = room.roomName));\r\n  }\r\n\r\n  isChatRoomReady(roomName) {\r\n    const room = this.getRoom(roomName);\r\n    console.log(!!room);\r\n    return !!room;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,WAA7B,EAA0CC,IAA1C,QAAsD,MAAtD;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAO,MAAMC,SAAN,CAAgB;EACrB;EAEAC,WAAW,CAACC,SAAD,EAAY;IACrB,KAAKA,SAAL,GAAiBA,SAAjB;IACA,KAAKC,KAAL,GAAa,EAAb;IACAT,kBAAkB,CAAC,IAAD,CAAlB;EACD;;EAES,MAAJU,IAAI,GAAG;IACX,IAAI,KAAKF,SAAL,CAAeG,SAAf,CAAyBC,QAAzB,KAAsCC,SAA1C,EAAqD,MAAMC,KAAK,CAAC,wBAAD,CAAX;IACrD,IAAI,KAAKN,SAAL,CAAeG,SAAf,CAAyBI,OAAzB,KAAqCF,SAAzC,EAAoD,MAAMC,KAAK,CAAC,sBAAD,CAAX,CAFzC,CAIX;IACA;IACA;IACA;IACA;IACA;IACA;EACD;;EACe,MAAVE,UAAU,CAACC,QAAD,EAAW;IACzB,IAAI,KAAKT,SAAL,CAAeG,SAAf,CAAyBC,QAAzB,KAAsCC,SAA1C,EAAqD,MAAMC,KAAK,CAAC,wBAAD,CAAX;IACrD,IAAI,KAAKN,SAAL,CAAeG,SAAf,CAAyBI,OAAzB,KAAqCF,SAAzC,EAAoD,MAAMC,KAAK,CAAC,sBAAD,CAAX;IACpD,MAAMI,QAAQ,GAAG,IAAIb,QAAJ,CAAa,KAAKG,SAAL,CAAeG,SAAf,CAAyBC,QAAzB,CAAkCO,MAA/C,EAAuD,KAAKX,SAAL,CAAeG,SAAf,CAAyBI,OAAhF,EAAyFE,QAAzF,CAAjB;IACA,MAAMC,QAAQ,CAACR,IAAT,EAAN;IACA,KAAKD,KAAL,CAAWW,IAAX,CAAgBF,QAAhB;IACA,OAAOA,QAAP;EACD;;EAEDG,OAAO,CAACJ,QAAD,EAAW;IAChB;IACAK,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWe,IAAX,CAAiBC,IAAD,IAAWR,QAAQ,GAAGQ,IAAI,CAACR,QAA3C,CAAZ;IACA,OAAO,KAAKR,KAAL,CAAWe,IAAX,CAAiBC,IAAD,IAAWR,QAAQ,GAAGQ,IAAI,CAACR,QAA3C,CAAP;EACD;;EAEDS,eAAe,CAACT,QAAD,EAAW;IACxB,MAAMQ,IAAI,GAAG,KAAKJ,OAAL,CAAaJ,QAAb,CAAb;IACAK,OAAO,CAACC,GAAR,CAAY,CAAC,CAACE,IAAd;IACA,OAAO,CAAC,CAACA,IAAT;EACD;;AAxCoB"},"metadata":{},"sourceType":"module"}
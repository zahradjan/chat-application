{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar modeToString = require('../lib/mode-to-string');\n\nvar parseMtime = require('../lib/parse-mtime');\n\nvar configure = require('../lib/configure');\n\nvar multipartRequest = require('../lib/multipart-request');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nvar abortSignal = require('../lib/abort-signal');\n\nvar _require = require('native-abort-controller'),\n    AbortController = _require.AbortController;\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {FilesAPI[\"write\"]}\n   */\n  function write(_x, _x2) {\n    return _write.apply(this, arguments);\n  }\n\n  function _write() {\n    _write = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(path, input) {\n      var options,\n          controller,\n          signal,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              // allow aborting requests on body errors\n              controller = new AbortController();\n              signal = abortSignal(controller.signal, options.signal);\n              _context.t0 = api;\n              _context.t1 = _objectSpread;\n              _context.t2 = {\n                signal: signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: path,\n                  streamChannels: true,\n                  count: options.length\n                }, options))\n              };\n              _context.next = 8;\n              return multipartRequest({\n                content: input,\n                path: 'arg',\n                mode: modeToString(options.mode),\n                mtime: parseMtime(options.mtime)\n              }, controller, options.headers);\n\n            case 8:\n              _context.t3 = _context.sent;\n              _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n              _context.next = 12;\n              return _context.t0.post.call(_context.t0, 'files/write', _context.t4);\n\n            case 12:\n              res = _context.sent;\n              _context.next = 15;\n              return res.text();\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _write.apply(this, arguments);\n  }\n\n  return write;\n});","map":{"version":3,"names":["modeToString","require","parseMtime","configure","multipartRequest","toUrlSearchParams","abortSignal","AbortController","module","exports","api","write","path","input","options","controller","signal","searchParams","arg","streamChannels","count","length","content","mode","mtime","headers","post","res","text"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/files/write.js"],"sourcesContent":["'use strict'\n\nconst modeToString = require('../lib/mode-to-string')\nconst parseMtime = require('../lib/parse-mtime')\nconst configure = require('../lib/configure')\nconst multipartRequest = require('../lib/multipart-request')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst abortSignal = require('../lib/abort-signal')\nconst { AbortController } = require('native-abort-controller')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {FilesAPI[\"write\"]}\n   */\n  async function write (path, input, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('files/write', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.length,\n        ...options\n      }),\n      ...(\n        await multipartRequest({\n          content: input,\n          path: 'arg',\n          mode: modeToString(options.mode),\n          mtime: parseMtime(options.mtime)\n        }, controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n  return write\n})\n"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,YAAY,GAAGC,OAAO,CAAC,uBAAD,CAA5B;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,oBAAD,CAA1B;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMG,gBAAgB,GAAGH,OAAO,CAAC,0BAAD,CAAhC;;AACA,IAAMI,iBAAiB,GAAGJ,OAAO,CAAC,6BAAD,CAAjC;;AACA,IAAMK,WAAW,GAAGL,OAAO,CAAC,qBAAD,CAA3B;;AACA,eAA4BA,OAAO,CAAC,yBAAD,CAAnC;AAAA,IAAQM,eAAR,YAAQA,eAAR;AAEA;AACA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiBN,SAAS,CAAC,UAAAO,GAAG,EAAI;EAChC;AACF;AACA;EAHkC,SAIjBC,KAJiB;IAAA;EAAA;;EAAA;IAAA,oEAIhC,iBAAsBC,IAAtB,EAA4BC,KAA5B;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAmCC,OAAnC,2DAA6C,EAA7C;cACE;cACMC,UAFR,GAEqB,IAAIR,eAAJ,EAFrB;cAGQS,MAHR,GAGiBV,WAAW,CAACS,UAAU,CAACC,MAAZ,EAAoBF,OAAO,CAACE,MAA5B,CAH5B;cAAA,cAKoBN,GALpB;cAAA;cAAA;gBAMIM,MAAM,EAANA,MANJ;gBAOIC,YAAY,EAAEZ,iBAAiB;kBAC7Ba,GAAG,EAAEN,IADwB;kBAE7BO,cAAc,EAAE,IAFa;kBAG7BC,KAAK,EAAEN,OAAO,CAACO;gBAHc,GAI1BP,OAJ0B;cAPnC;cAAA;cAAA,OAcYV,gBAAgB,CAAC;gBACrBkB,OAAO,EAAET,KADY;gBAErBD,IAAI,EAAE,KAFe;gBAGrBW,IAAI,EAAEvB,YAAY,CAACc,OAAO,CAACS,IAAT,CAHG;gBAIrBC,KAAK,EAAEtB,UAAU,CAACY,OAAO,CAACU,KAAT;cAJI,CAAD,EAKnBT,UALmB,EAKPD,OAAO,CAACW,OALD,CAd5B;;YAAA;cAAA;cAAA;cAAA;cAAA,mBAKwBC,IALxB,mBAK6B,aAL7B;;YAAA;cAKQC,GALR;cAAA;cAAA,OAuBQA,GAAG,CAACC,IAAJ,EAvBR;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJgC;IAAA;EAAA;;EA6BhC,OAAOjB,KAAP;AACD,CA9ByB,CAA1B"},"metadata":{},"sourceType":"script"}
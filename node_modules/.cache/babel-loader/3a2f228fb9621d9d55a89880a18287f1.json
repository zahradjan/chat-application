{"ast":null,"code":"'use strict';\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('libp2p/src/keychain')} config.keychain\n */\n\n\nmodule.exports = _ref => {\n  let {\n    keychain\n  } = _ref;\n\n  /**\n   * @type {import('ipfs-core-types/src/key').API[\"import\"]}\n   */\n  const importKey = (name, pem, password) => {\n    return keychain.importKey(name, pem, password);\n  };\n\n  return withTimeoutOption(importKey);\n};","map":{"version":3,"names":["withTimeoutOption","require","module","exports","keychain","importKey","name","pem","password"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/key/import.js"],"sourcesContent":["'use strict'\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('libp2p/src/keychain')} config.keychain\n */\nmodule.exports = ({ keychain }) => {\n  /**\n   * @type {import('ipfs-core-types/src/key').API[\"import\"]}\n   */\n  const importKey = (name, pem, password) => {\n    return keychain.importKey(name, pem, password)\n  }\n\n  return withTimeoutOption(importKey)\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,QAAkB;EAAA,IAAjB;IAAEC;EAAF,CAAiB;;EACjC;AACF;AACA;EACE,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,GAAP,EAAYC,QAAZ,KAAyB;IACzC,OAAOJ,QAAQ,CAACC,SAAT,CAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,QAA9B,CAAP;EACD,CAFD;;EAIA,OAAOR,iBAAiB,CAACK,SAAD,CAAxB;AACD,CATD"},"metadata":{},"sourceType":"script"}
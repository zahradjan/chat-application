{"ast":null,"code":"'use strict';\n\nconst PeerList = require('.');\n/**\n * @typedef {import('../').PeerData} PeerData\n */\n\n/**\n * Like PeerList but with a length restriction.\n */\n\n\nclass LimitedPeerList extends PeerList {\n  /**\n   * Create a new limited peer list.\n   *\n   * @param {number} limit\n   */\n  constructor(limit) {\n    super();\n    this.limit = limit;\n  }\n  /**\n   * Add a PeerData if it fits in the list\n   *\n   * @param {PeerData} peerData\n   */\n\n\n  push(peerData) {\n    if (this.length < this.limit) {\n      return super.push(peerData);\n    }\n\n    return false;\n  }\n\n}\n\nmodule.exports = LimitedPeerList;","map":{"version":3,"names":["PeerList","require","LimitedPeerList","constructor","limit","push","peerData","length","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p-kad-dht/src/peer-list/limited-peer-list.js"],"sourcesContent":["'use strict'\n\nconst PeerList = require('.')\n\n/**\n * @typedef {import('../').PeerData} PeerData\n */\n\n/**\n * Like PeerList but with a length restriction.\n */\nclass LimitedPeerList extends PeerList {\n  /**\n   * Create a new limited peer list.\n   *\n   * @param {number} limit\n   */\n  constructor (limit) {\n    super()\n    this.limit = limit\n  }\n\n  /**\n   * Add a PeerData if it fits in the list\n   *\n   * @param {PeerData} peerData\n   */\n  push (peerData) {\n    if (this.length < this.limit) {\n      return super.push(peerData)\n    }\n\n    return false\n  }\n}\n\nmodule.exports = LimitedPeerList\n"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,GAAD,CAAxB;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AACA,MAAMC,eAAN,SAA8BF,QAA9B,CAAuC;EACrC;AACF;AACA;AACA;AACA;EACEG,WAAW,CAAEC,KAAF,EAAS;IAClB;IACA,KAAKA,KAAL,GAAaA,KAAb;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEC,IAAI,CAAEC,QAAF,EAAY;IACd,IAAI,KAAKC,MAAL,GAAc,KAAKH,KAAvB,EAA8B;MAC5B,OAAO,MAAMC,IAAN,CAAWC,QAAX,CAAP;IACD;;IAED,OAAO,KAAP;EACD;;AAtBoC;;AAyBvCE,MAAM,CAACC,OAAP,GAAiBP,eAAjB"},"metadata":{},"sourceType":"script"}
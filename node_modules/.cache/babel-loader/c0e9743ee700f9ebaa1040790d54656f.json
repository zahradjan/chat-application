{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar ipfsUnixfs = require('ipfs-unixfs');\n\nvar persist = require('../../utils/persist.js');\n\nvar dagPb = require('@ipld/dag-pb');\n\nvar rawCodec = require('multiformats/codecs/raw');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function get() {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar dagPb__namespace = /*#__PURE__*/_interopNamespace(dagPb);\n\nvar rawCodec__namespace = /*#__PURE__*/_interopNamespace(rawCodec);\n\nfunction bufferImporter(_x, _x2, _x3) {\n  return _bufferImporter.apply(this, arguments);\n}\n\nfunction _bufferImporter() {\n  _bufferImporter = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(file, block, options) {\n    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _loop, _iterator, _step;\n\n    return _regeneratorRuntime().wrap(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context3.prev = 2;\n            _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n              var buffer;\n              return _regeneratorRuntime().wrap(function _loop$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      buffer = _step.value;\n                      _context2.next = 3;\n                      return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                        var unixfs, opts;\n                        return _regeneratorRuntime().wrap(function _callee$(_context) {\n                          while (1) {\n                            switch (_context.prev = _context.next) {\n                              case 0:\n                                options.progress(buffer.length, file.path);\n                                opts = {\n                                  codec: dagPb__namespace,\n                                  cidVersion: options.cidVersion,\n                                  hasher: options.hasher,\n                                  onlyHash: options.onlyHash\n                                };\n\n                                if (options.rawLeaves) {\n                                  opts.codec = rawCodec__namespace;\n                                  opts.cidVersion = 1;\n                                } else {\n                                  unixfs = new ipfsUnixfs.UnixFS({\n                                    type: options.leafType,\n                                    data: buffer\n                                  });\n                                  buffer = dagPb__namespace.encode({\n                                    Data: unixfs.marshal(),\n                                    Links: []\n                                  });\n                                }\n\n                                _context.next = 5;\n                                return persist(buffer, block, opts);\n\n                              case 5:\n                                _context.t0 = _context.sent;\n                                _context.t1 = unixfs;\n                                _context.t2 = buffer.length;\n                                return _context.abrupt(\"return\", {\n                                  cid: _context.t0,\n                                  unixfs: _context.t1,\n                                  size: _context.t2\n                                });\n\n                              case 9:\n                              case \"end\":\n                                return _context.stop();\n                            }\n                          }\n                        }, _callee);\n                      }));\n\n                    case 3:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _loop);\n            });\n            _iterator = _asyncIterator(file.content);\n\n          case 5:\n            _context3.next = 7;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 7:\n            if (!(_iteratorAbruptCompletion = !(_step = _context3.sent).done)) {\n              _context3.next = 12;\n              break;\n            }\n\n            return _context3.delegateYield(_loop(), \"t0\", 9);\n\n          case 9:\n            _iteratorAbruptCompletion = false;\n            _context3.next = 5;\n            break;\n\n          case 12:\n            _context3.next = 18;\n            break;\n\n          case 14:\n            _context3.prev = 14;\n            _context3.t1 = _context3[\"catch\"](2);\n            _didIteratorError = true;\n            _iteratorError = _context3.t1;\n\n          case 18:\n            _context3.prev = 18;\n            _context3.prev = 19;\n\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context3.next = 23;\n              break;\n            }\n\n            _context3.next = 23;\n            return _awaitAsyncGenerator(_iterator.return());\n\n          case 23:\n            _context3.prev = 23;\n\n            if (!_didIteratorError) {\n              _context3.next = 26;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 26:\n            return _context3.finish(23);\n\n          case 27:\n            return _context3.finish(18);\n\n          case 28:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee2, null, [[2, 14, 18, 28], [19,, 23, 27]]);\n  }));\n  return _bufferImporter.apply(this, arguments);\n}\n\nmodule.exports = bufferImporter;","map":{"version":3,"names":["ipfsUnixfs","require","persist","dagPb","rawCodec","_interopNamespace","e","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","freeze","dagPb__namespace","rawCodec__namespace","bufferImporter","file","block","options","buffer","progress","length","path","opts","codec","cidVersion","hasher","onlyHash","rawLeaves","unixfs","UnixFS","type","leafType","data","encode","Data","marshal","Links","cid","size","content","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-unixfs-importer/cjs/src/dag-builder/file/buffer-importer.js"],"sourcesContent":["'use strict';\n\nvar ipfsUnixfs = require('ipfs-unixfs');\nvar persist = require('../../utils/persist.js');\nvar dagPb = require('@ipld/dag-pb');\nvar rawCodec = require('multiformats/codecs/raw');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar dagPb__namespace = /*#__PURE__*/_interopNamespace(dagPb);\nvar rawCodec__namespace = /*#__PURE__*/_interopNamespace(rawCodec);\n\nasync function* bufferImporter(file, block, options) {\n  for await (let buffer of file.content) {\n    yield async () => {\n      options.progress(buffer.length, file.path);\n      let unixfs;\n      const opts = {\n        codec: dagPb__namespace,\n        cidVersion: options.cidVersion,\n        hasher: options.hasher,\n        onlyHash: options.onlyHash\n      };\n      if (options.rawLeaves) {\n        opts.codec = rawCodec__namespace;\n        opts.cidVersion = 1;\n      } else {\n        unixfs = new ipfsUnixfs.UnixFS({\n          type: options.leafType,\n          data: buffer\n        });\n        buffer = dagPb__namespace.encode({\n          Data: unixfs.marshal(),\n          Links: []\n        });\n      }\n      return {\n        cid: await persist(buffer, block, opts),\n        unixfs,\n        size: buffer.length\n      };\n    };\n  }\n}\n\nmodule.exports = bufferImporter;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
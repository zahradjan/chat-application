{"ast":null,"code":"const ready = require('./ready');\n\nmodule.exports = (socket, options) => {\n  options = options || {};\n  options.closeOnEnd = options.closeOnEnd !== false;\n  return async source => {\n    for await (const data of source) {\n      try {\n        await ready(socket);\n      } catch (err) {\n        if (err.message === 'socket closed') break;\n        throw err;\n      }\n\n      socket.send(data);\n    }\n\n    if (options.closeOnEnd && socket.readyState <= 1) {\n      return new Promise((resolve, reject) => {\n        socket.addEventListener('close', event => {\n          if (event.wasClean || event.code === 1006) {\n            resolve();\n          } else {\n            const err = Object.assign(new Error('ws error'), {\n              event\n            });\n            reject(err);\n          }\n        });\n        setTimeout(() => socket.close());\n      });\n    }\n  };\n};","map":{"version":3,"names":["ready","require","module","exports","socket","options","closeOnEnd","source","data","err","message","send","readyState","Promise","resolve","reject","addEventListener","event","wasClean","code","Object","assign","Error","setTimeout","close"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/it-ws/sink.js"],"sourcesContent":["const ready = require('./ready')\n\nmodule.exports = (socket, options) => {\n  options = options || {}\n  options.closeOnEnd = options.closeOnEnd !== false\n\n  return async source => {\n    for await (const data of source) {\n      try {\n        await ready(socket)\n      } catch (err) {\n        if (err.message === 'socket closed') break\n        throw err\n      }\n\n      socket.send(data)\n    }\n\n    if (options.closeOnEnd && socket.readyState <= 1) {\n      return new Promise((resolve, reject) => {\n        socket.addEventListener('close', event => {\n          if (event.wasClean || event.code === 1006) {\n            resolve()\n          } else {\n            const err = Object.assign(new Error('ws error'), { event })\n            reject(err)\n          }\n        })\n\n        setTimeout(() => socket.close())\n      })\n    }\n  }\n}\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAACC,MAAD,EAASC,OAAT,KAAqB;EACpCA,OAAO,GAAGA,OAAO,IAAI,EAArB;EACAA,OAAO,CAACC,UAAR,GAAqBD,OAAO,CAACC,UAAR,KAAuB,KAA5C;EAEA,OAAO,MAAMC,MAAN,IAAgB;IACrB,WAAW,MAAMC,IAAjB,IAAyBD,MAAzB,EAAiC;MAC/B,IAAI;QACF,MAAMP,KAAK,CAACI,MAAD,CAAX;MACD,CAFD,CAEE,OAAOK,GAAP,EAAY;QACZ,IAAIA,GAAG,CAACC,OAAJ,KAAgB,eAApB,EAAqC;QACrC,MAAMD,GAAN;MACD;;MAEDL,MAAM,CAACO,IAAP,CAAYH,IAAZ;IACD;;IAED,IAAIH,OAAO,CAACC,UAAR,IAAsBF,MAAM,CAACQ,UAAP,IAAqB,CAA/C,EAAkD;MAChD,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;QACtCX,MAAM,CAACY,gBAAP,CAAwB,OAAxB,EAAiCC,KAAK,IAAI;UACxC,IAAIA,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACE,IAAN,KAAe,IAArC,EAA2C;YACzCL,OAAO;UACR,CAFD,MAEO;YACL,MAAML,GAAG,GAAGW,MAAM,CAACC,MAAP,CAAc,IAAIC,KAAJ,CAAU,UAAV,CAAd,EAAqC;cAAEL;YAAF,CAArC,CAAZ;YACAF,MAAM,CAACN,GAAD,CAAN;UACD;QACF,CAPD;QASAc,UAAU,CAAC,MAAMnB,MAAM,CAACoB,KAAP,EAAP,CAAV;MACD,CAXM,CAAP;IAYD;EACF,CA1BD;AA2BD,CA/BD"},"metadata":{},"sourceType":"script"}
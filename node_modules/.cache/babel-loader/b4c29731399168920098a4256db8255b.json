{"ast":null,"code":"'use strict'; // @ts-ignore no types\n\nconst Varint = require('varint');\n\nconst {\n  Buffer\n} = require('buffer');\n/**\n * Encode the passed length `value` to the `target` buffer at the given `offset`\n *\n * @type {import('./types').LengthEncoderFunction}\n */\n// @ts-ignore cannot declare expected bytes property\n\n\nconst varintEncode = (value, target, offset) => {\n  const ret = Varint.encode(value, target, offset);\n  varintEncode.bytes = Varint.encode.bytes; // If no target, create Buffer from returned array\n\n  return target || Buffer.from(ret);\n};\n\nmodule.exports = varintEncode;","map":{"version":3,"names":["Varint","require","Buffer","varintEncode","value","target","offset","ret","encode","bytes","from","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/it-length-prefixed/src/varint-encode.js"],"sourcesContent":["'use strict'\n\n// @ts-ignore no types\nconst Varint = require('varint')\nconst { Buffer } = require('buffer')\n\n/**\n * Encode the passed length `value` to the `target` buffer at the given `offset`\n *\n * @type {import('./types').LengthEncoderFunction}\n */\n// @ts-ignore cannot declare expected bytes property\nconst varintEncode = (value, target, offset) => {\n  const ret = Varint.encode(value, target, offset)\n  varintEncode.bytes = Varint.encode.bytes\n  // If no target, create Buffer from returned array\n  return target || Buffer.from(ret)\n}\n\nmodule.exports = varintEncode\n"],"mappings":"AAAA,a,CAEA;;AACA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAM;EAAEC;AAAF,IAAaD,OAAO,CAAC,QAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,KAA2B;EAC9C,MAAMC,GAAG,GAAGP,MAAM,CAACQ,MAAP,CAAcJ,KAAd,EAAqBC,MAArB,EAA6BC,MAA7B,CAAZ;EACAH,YAAY,CAACM,KAAb,GAAqBT,MAAM,CAACQ,MAAP,CAAcC,KAAnC,CAF8C,CAG9C;;EACA,OAAOJ,MAAM,IAAIH,MAAM,CAACQ,IAAP,CAAYH,GAAZ,CAAjB;AACD,CALD;;AAOAI,MAAM,CAACC,OAAP,GAAiBT,YAAjB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nmodule.exports = function (iterable, mapper, opts) {\n  return new Promise(function (resolve, reject) {\n    opts = Object.assign({\n      concurrency: Infinity\n    }, opts);\n    var concurrency = opts.concurrency;\n\n    if (concurrency < 1) {\n      throw new TypeError('Expected `concurrency` to be a number from 1 and up');\n    }\n\n    var ret = [];\n    var iterator = iterable[Symbol.iterator]();\n    var isRejected = false;\n    var iterableDone = false;\n    var resolvingCount = 0;\n    var currentIdx = 0;\n\n    var next = function next() {\n      if (isRejected) {\n        return;\n      }\n\n      var nextItem = iterator.next();\n      var i = currentIdx;\n      currentIdx++;\n\n      if (nextItem.done) {\n        iterableDone = true;\n\n        if (resolvingCount === 0) {\n          resolve(ret);\n        }\n\n        return;\n      }\n\n      resolvingCount++;\n      Promise.resolve(nextItem.value).then(function (el) {\n        return mapper(el, i);\n      }).then(function (val) {\n        ret[i] = val;\n        resolvingCount--;\n        next();\n      }, function (err) {\n        isRejected = true;\n        reject(err);\n      });\n    };\n\n    for (var i = 0; i < concurrency; i++) {\n      next();\n\n      if (iterableDone) {\n        break;\n      }\n    }\n  });\n};","map":{"version":3,"names":["module","exports","iterable","mapper","opts","Promise","resolve","reject","Object","assign","concurrency","Infinity","TypeError","ret","iterator","Symbol","isRejected","iterableDone","resolvingCount","currentIdx","next","nextItem","i","done","value","then","el","val","err"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/orbit-db-docstore/node_modules/p-map/index.js"],"sourcesContent":["'use strict';\nmodule.exports = (iterable, mapper, opts) => new Promise((resolve, reject) => {\n\topts = Object.assign({\n\t\tconcurrency: Infinity\n\t}, opts);\n\n\tconst concurrency = opts.concurrency;\n\n\tif (concurrency < 1) {\n\t\tthrow new TypeError('Expected `concurrency` to be a number from 1 and up');\n\t}\n\n\tconst ret = [];\n\tconst iterator = iterable[Symbol.iterator]();\n\tlet isRejected = false;\n\tlet iterableDone = false;\n\tlet resolvingCount = 0;\n\tlet currentIdx = 0;\n\n\tconst next = () => {\n\t\tif (isRejected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst nextItem = iterator.next();\n\t\tconst i = currentIdx;\n\t\tcurrentIdx++;\n\n\t\tif (nextItem.done) {\n\t\t\titerableDone = true;\n\n\t\t\tif (resolvingCount === 0) {\n\t\t\t\tresolve(ret);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tresolvingCount++;\n\n\t\tPromise.resolve(nextItem.value)\n\t\t\t.then(el => mapper(el, i))\n\t\t\t.then(\n\t\t\t\tval => {\n\t\t\t\t\tret[i] = val;\n\t\t\t\t\tresolvingCount--;\n\t\t\t\t\tnext();\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\tisRejected = true;\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t);\n\t};\n\n\tfor (let i = 0; i < concurrency; i++) {\n\t\tnext();\n\n\t\tif (iterableDone) {\n\t\t\tbreak;\n\t\t}\n\t}\n});\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,QAAD,EAAWC,MAAX,EAAmBC,IAAnB;EAAA,OAA4B,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;IAC7EH,IAAI,GAAGI,MAAM,CAACC,MAAP,CAAc;MACpBC,WAAW,EAAEC;IADO,CAAd,EAEJP,IAFI,CAAP;IAIA,IAAMM,WAAW,GAAGN,IAAI,CAACM,WAAzB;;IAEA,IAAIA,WAAW,GAAG,CAAlB,EAAqB;MACpB,MAAM,IAAIE,SAAJ,CAAc,qDAAd,CAAN;IACA;;IAED,IAAMC,GAAG,GAAG,EAAZ;IACA,IAAMC,QAAQ,GAAGZ,QAAQ,CAACa,MAAM,CAACD,QAAR,CAAR,EAAjB;IACA,IAAIE,UAAU,GAAG,KAAjB;IACA,IAAIC,YAAY,GAAG,KAAnB;IACA,IAAIC,cAAc,GAAG,CAArB;IACA,IAAIC,UAAU,GAAG,CAAjB;;IAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;MAClB,IAAIJ,UAAJ,EAAgB;QACf;MACA;;MAED,IAAMK,QAAQ,GAAGP,QAAQ,CAACM,IAAT,EAAjB;MACA,IAAME,CAAC,GAAGH,UAAV;MACAA,UAAU;;MAEV,IAAIE,QAAQ,CAACE,IAAb,EAAmB;QAClBN,YAAY,GAAG,IAAf;;QAEA,IAAIC,cAAc,KAAK,CAAvB,EAA0B;UACzBZ,OAAO,CAACO,GAAD,CAAP;QACA;;QAED;MACA;;MAEDK,cAAc;MAEdb,OAAO,CAACC,OAAR,CAAgBe,QAAQ,CAACG,KAAzB,EACEC,IADF,CACO,UAAAC,EAAE;QAAA,OAAIvB,MAAM,CAACuB,EAAD,EAAKJ,CAAL,CAAV;MAAA,CADT,EAEEG,IAFF,CAGE,UAAAE,GAAG,EAAI;QACNd,GAAG,CAACS,CAAD,CAAH,GAASK,GAAT;QACAT,cAAc;QACdE,IAAI;MACJ,CAPH,EAQE,UAAAQ,GAAG,EAAI;QACNZ,UAAU,GAAG,IAAb;QACAT,MAAM,CAACqB,GAAD,CAAN;MACA,CAXH;IAaA,CAlCD;;IAoCA,KAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,WAApB,EAAiCY,CAAC,EAAlC,EAAsC;MACrCF,IAAI;;MAEJ,IAAIH,YAAJ,EAAkB;QACjB;MACA;IACD;EACD,CA7D4C,CAA5B;AAAA,CAAjB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar intervals = new Map();\n\nvar _generateId = function _generateId() {\n  return \"\".concat(Date.now(), \":\").concat(Math.floor(Math.random() * 1000000));\n};\n/**\n * Run a given task each {interval} ms\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {string} id\n */\n\n\nfunction _runPeriodically(_x, _x2, _x3) {\n  return _runPeriodically2.apply(this, arguments);\n}\n/**\n * Asynchronous setInterval that is properly delayed using promises and can be delayed on boot.\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {number} [delay = interval]\n * @returns {string}\n */\n\n\nfunction _runPeriodically2() {\n  _runPeriodically2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(task, interval, id) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!intervals.get(id)) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.prev = 1;\n            _context.next = 4;\n            return task();\n\n          case 4:\n            _context.next = 10;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](1);\n            // Throw global context error if handler throws\n            setTimeout(function () {\n              throw _context.t0;\n            }, 1);\n            return _context.abrupt(\"break\", 16);\n\n          case 10:\n            if (intervals.get(id)) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"break\", 16);\n\n          case 12:\n            _context.next = 14;\n            return new Promise(function (resolve) {\n              var _timeout = setTimeout(resolve, interval);\n\n              intervals.set(id, _timeout);\n            });\n\n          case 14:\n            _context.next = 0;\n            break;\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 6]]);\n  }));\n  return _runPeriodically2.apply(this, arguments);\n}\n\nfunction setDelayedInterval(task, interval, delay) {\n  delay = delay || interval;\n\n  var id = _generateId();\n\n  var _timeout = setTimeout(function () {\n    _runPeriodically(task, interval, id);\n  }, delay);\n\n  intervals.set(id, _timeout);\n  return id;\n}\n/**\n * Clear delayed interval.\n *\n * @param {string} id\n */\n\n\nfunction clearDelayedInterval(id) {\n  var _timeout = intervals.get(id);\n\n  if (_timeout) {\n    clearTimeout(_timeout);\n    intervals.delete(id);\n  }\n}\n\nmodule.exports = {\n  setDelayedInterval: setDelayedInterval,\n  clearDelayedInterval: clearDelayedInterval\n};","map":{"version":3,"names":["intervals","Map","_generateId","Date","now","Math","floor","random","_runPeriodically","task","interval","id","get","setTimeout","Promise","resolve","_timeout","set","setDelayedInterval","delay","clearDelayedInterval","clearTimeout","delete","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/set-delayed-interval/src/index.js"],"sourcesContent":["'use strict'\n\nconst intervals = new Map()\n\nconst _generateId = () => `${Date.now()}:${Math.floor(Math.random() * 1000000)}`\n\n/**\n * Run a given task each {interval} ms\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {string} id\n */\nasync function _runPeriodically (task, interval, id) {\n  while (intervals.get(id)) {\n    try {\n      await task()\n    } catch (err) {\n      // Throw global context error if handler throws\n      setTimeout(() => { throw err }, 1)\n      break\n    }\n\n    if (!intervals.get(id)) {\n      break\n    }\n\n    await new Promise(resolve => {\n      const _timeout = setTimeout(resolve, interval)\n\n      intervals.set(id, _timeout)\n    })\n  }\n}\n\n/**\n * Asynchronous setInterval that is properly delayed using promises and can be delayed on boot.\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {number} [delay = interval]\n * @returns {string}\n */\nfunction setDelayedInterval (task, interval, delay) {\n  delay = delay || interval\n\n  const id = _generateId()\n  const _timeout = setTimeout(() => {\n    _runPeriodically(task, interval, id)\n  }, delay)\n\n  intervals.set(id, _timeout)\n\n  return id\n}\n\n/**\n * Clear delayed interval.\n *\n * @param {string} id\n */\nfunction clearDelayedInterval (id) {\n  const _timeout = intervals.get(id)\n\n  if (_timeout) {\n    clearTimeout(_timeout)\n    intervals.delete(id)\n  }\n}\n\nmodule.exports = {\n  setDelayedInterval,\n  clearDelayedInterval\n}\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,SAAS,GAAG,IAAIC,GAAJ,EAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc;EAAA,iBAASC,IAAI,CAACC,GAAL,EAAT,cAAuBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,CAAvB;AAAA,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACeC,gB;;;AAsBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iFA7BA,iBAAiCC,IAAjC,EAAuCC,QAAvC,EAAiDC,EAAjD;IAAA;MAAA;QAAA;UAAA;YAAA,KACSX,SAAS,CAACY,GAAV,CAAcD,EAAd,CADT;cAAA;cAAA;YAAA;;YAAA;YAAA;YAAA,OAGYF,IAAI,EAHhB;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAKM;YACAI,UAAU,CAAC,YAAM;cAAE;YAAW,CAApB,EAAsB,CAAtB,CAAV;YANN;;UAAA;YAAA,IAUSb,SAAS,CAACY,GAAV,CAAcD,EAAd,CAVT;cAAA;cAAA;YAAA;;YAAA;;UAAA;YAAA;YAAA,OAcU,IAAIG,OAAJ,CAAY,UAAAC,OAAO,EAAI;cAC3B,IAAMC,QAAQ,GAAGH,UAAU,CAACE,OAAD,EAAUL,QAAV,CAA3B;;cAEAV,SAAS,CAACiB,GAAV,CAAcN,EAAd,EAAkBK,QAAlB;YACD,CAJK,CAdV;;UAAA;YAAA;YAAA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AA8BA,SAASE,kBAAT,CAA6BT,IAA7B,EAAmCC,QAAnC,EAA6CS,KAA7C,EAAoD;EAClDA,KAAK,GAAGA,KAAK,IAAIT,QAAjB;;EAEA,IAAMC,EAAE,GAAGT,WAAW,EAAtB;;EACA,IAAMc,QAAQ,GAAGH,UAAU,CAAC,YAAM;IAChCL,gBAAgB,CAACC,IAAD,EAAOC,QAAP,EAAiBC,EAAjB,CAAhB;EACD,CAF0B,EAExBQ,KAFwB,CAA3B;;EAIAnB,SAAS,CAACiB,GAAV,CAAcN,EAAd,EAAkBK,QAAlB;EAEA,OAAOL,EAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASS,oBAAT,CAA+BT,EAA/B,EAAmC;EACjC,IAAMK,QAAQ,GAAGhB,SAAS,CAACY,GAAV,CAAcD,EAAd,CAAjB;;EAEA,IAAIK,QAAJ,EAAc;IACZK,YAAY,CAACL,QAAD,CAAZ;IACAhB,SAAS,CAACsB,MAAV,CAAiBX,EAAjB;EACD;AACF;;AAEDY,MAAM,CAACC,OAAP,GAAiB;EACfN,kBAAkB,EAAlBA,kBADe;EAEfE,oBAAoB,EAApBA;AAFe,CAAjB"},"metadata":{},"sourceType":"script"}
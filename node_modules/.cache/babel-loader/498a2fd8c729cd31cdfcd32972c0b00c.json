{"ast":null,"code":"'use strict';\n\nconst {\n  Buffer\n} = require('buffer');\n\nexports.utf8 = exports['utf-8'] = {\n  encode: function (data) {\n    return isBinary(data) ? data : String(data);\n  },\n  decode: identity,\n  buffer: false,\n  type: 'utf8'\n};\nexports.json = {\n  encode: JSON.stringify,\n  decode: JSON.parse,\n  buffer: false,\n  type: 'json'\n};\nexports.binary = {\n  encode: function (data) {\n    return isBinary(data) ? data : Buffer.from(data);\n  },\n  decode: identity,\n  buffer: true,\n  type: 'binary'\n};\nexports.none = {\n  encode: identity,\n  decode: identity,\n  buffer: false,\n  type: 'id'\n};\nexports.id = exports.none;\nconst bufferEncodings = ['hex', 'ascii', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le'];\n\nfor (const type of bufferEncodings) {\n  exports[type] = {\n    encode: function (data) {\n      return isBinary(data) ? data : Buffer.from(data, type);\n    },\n    decode: function (buffer) {\n      return buffer.toString(type);\n    },\n    buffer: true,\n    type: type\n  };\n}\n\nfunction identity(value) {\n  return value;\n}\n\nfunction isBinary(data) {\n  return data === undefined || data === null || Buffer.isBuffer(data);\n}","map":{"version":3,"names":["Buffer","require","exports","utf8","encode","data","isBinary","String","decode","identity","buffer","type","json","JSON","stringify","parse","binary","from","none","id","bufferEncodings","toString","value","undefined","isBuffer"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/level-codec/lib/encodings.js"],"sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\n\nexports.utf8 = exports['utf-8'] = {\n  encode: function (data) {\n    return isBinary(data) ? data : String(data)\n  },\n  decode: identity,\n  buffer: false,\n  type: 'utf8'\n}\n\nexports.json = {\n  encode: JSON.stringify,\n  decode: JSON.parse,\n  buffer: false,\n  type: 'json'\n}\n\nexports.binary = {\n  encode: function (data) {\n    return isBinary(data) ? data : Buffer.from(data)\n  },\n  decode: identity,\n  buffer: true,\n  type: 'binary'\n}\n\nexports.none = {\n  encode: identity,\n  decode: identity,\n  buffer: false,\n  type: 'id'\n}\n\nexports.id = exports.none\n\nconst bufferEncodings = [\n  'hex',\n  'ascii',\n  'base64',\n  'ucs2',\n  'ucs-2',\n  'utf16le',\n  'utf-16le'\n]\n\nfor (const type of bufferEncodings) {\n  exports[type] = {\n    encode: function (data) {\n      return isBinary(data) ? data : Buffer.from(data, type)\n    },\n    decode: function (buffer) {\n      return buffer.toString(type)\n    },\n    buffer: true,\n    type: type\n  }\n}\n\nfunction identity (value) {\n  return value\n}\n\nfunction isBinary (data) {\n  return data === undefined || data === null || Buffer.isBuffer(data)\n}\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAaC,OAAO,CAAC,QAAD,CAA1B;;AAEAC,OAAO,CAACC,IAAR,GAAeD,OAAO,CAAC,OAAD,CAAP,GAAmB;EAChCE,MAAM,EAAE,UAAUC,IAAV,EAAgB;IACtB,OAAOC,QAAQ,CAACD,IAAD,CAAR,GAAiBA,IAAjB,GAAwBE,MAAM,CAACF,IAAD,CAArC;EACD,CAH+B;EAIhCG,MAAM,EAAEC,QAJwB;EAKhCC,MAAM,EAAE,KALwB;EAMhCC,IAAI,EAAE;AAN0B,CAAlC;AASAT,OAAO,CAACU,IAAR,GAAe;EACbR,MAAM,EAAES,IAAI,CAACC,SADA;EAEbN,MAAM,EAAEK,IAAI,CAACE,KAFA;EAGbL,MAAM,EAAE,KAHK;EAIbC,IAAI,EAAE;AAJO,CAAf;AAOAT,OAAO,CAACc,MAAR,GAAiB;EACfZ,MAAM,EAAE,UAAUC,IAAV,EAAgB;IACtB,OAAOC,QAAQ,CAACD,IAAD,CAAR,GAAiBA,IAAjB,GAAwBL,MAAM,CAACiB,IAAP,CAAYZ,IAAZ,CAA/B;EACD,CAHc;EAIfG,MAAM,EAAEC,QAJO;EAKfC,MAAM,EAAE,IALO;EAMfC,IAAI,EAAE;AANS,CAAjB;AASAT,OAAO,CAACgB,IAAR,GAAe;EACbd,MAAM,EAAEK,QADK;EAEbD,MAAM,EAAEC,QAFK;EAGbC,MAAM,EAAE,KAHK;EAIbC,IAAI,EAAE;AAJO,CAAf;AAOAT,OAAO,CAACiB,EAAR,GAAajB,OAAO,CAACgB,IAArB;AAEA,MAAME,eAAe,GAAG,CACtB,KADsB,EAEtB,OAFsB,EAGtB,QAHsB,EAItB,MAJsB,EAKtB,OALsB,EAMtB,SANsB,EAOtB,UAPsB,CAAxB;;AAUA,KAAK,MAAMT,IAAX,IAAmBS,eAAnB,EAAoC;EAClClB,OAAO,CAACS,IAAD,CAAP,GAAgB;IACdP,MAAM,EAAE,UAAUC,IAAV,EAAgB;MACtB,OAAOC,QAAQ,CAACD,IAAD,CAAR,GAAiBA,IAAjB,GAAwBL,MAAM,CAACiB,IAAP,CAAYZ,IAAZ,EAAkBM,IAAlB,CAA/B;IACD,CAHa;IAIdH,MAAM,EAAE,UAAUE,MAAV,EAAkB;MACxB,OAAOA,MAAM,CAACW,QAAP,CAAgBV,IAAhB,CAAP;IACD,CANa;IAOdD,MAAM,EAAE,IAPM;IAQdC,IAAI,EAAEA;EARQ,CAAhB;AAUD;;AAED,SAASF,QAAT,CAAmBa,KAAnB,EAA0B;EACxB,OAAOA,KAAP;AACD;;AAED,SAAShB,QAAT,CAAmBD,IAAnB,EAAyB;EACvB,OAAOA,IAAI,KAAKkB,SAAT,IAAsBlB,IAAI,KAAK,IAA/B,IAAuCL,MAAM,CAACwB,QAAP,CAAgBnB,IAAhB,CAA9C;AACD"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar utils = require('../../utils');\n\nvar errcode = require('err-code');\n/**\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('../../message')} Message\n */\n\n/**\n * @param {import('../../index')} dht\n */\n\n\nmodule.exports = function (dht) {\n  var log = utils.logger(dht.peerId, 'rpc:put-value');\n  /**\n   * Process `PutValue` DHT messages.\n   *\n   * @param {PeerId} peerId\n   * @param {Message} msg\n   */\n\n  function putValue(_x, _x2) {\n    return _putValue.apply(this, arguments);\n  }\n\n  function _putValue() {\n    _putValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(peerId, msg) {\n      var key, record, errMsg, recordKey;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              key = msg.key;\n              log('key: %b', key);\n              record = msg.record;\n\n              if (record) {\n                _context.next = 7;\n                break;\n              }\n\n              errMsg = \"Empty record from: \".concat(peerId.toB58String());\n              log.error(errMsg);\n              throw errcode(new Error(errMsg), 'ERR_EMPTY_RECORD');\n\n            case 7:\n              _context.next = 9;\n              return dht._verifyRecordLocally(record);\n\n            case 9:\n              record.timeReceived = new Date();\n              recordKey = utils.bufferToKey(record.key);\n              _context.next = 13;\n              return dht.datastore.put(recordKey, record.serialize());\n\n            case 13:\n              dht.onPut(record, peerId);\n              return _context.abrupt(\"return\", msg);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _putValue.apply(this, arguments);\n  }\n\n  return putValue;\n};","map":{"version":3,"names":["utils","require","errcode","module","exports","dht","log","logger","peerId","putValue","msg","key","record","errMsg","toB58String","error","Error","_verifyRecordLocally","timeReceived","Date","recordKey","bufferToKey","datastore","put","serialize","onPut"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p-kad-dht/src/rpc/handlers/put-value.js"],"sourcesContent":["'use strict'\n\nconst utils = require('../../utils')\nconst errcode = require('err-code')\n\n/**\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('../../message')} Message\n */\n\n/**\n * @param {import('../../index')} dht\n */\nmodule.exports = (dht) => {\n  const log = utils.logger(dht.peerId, 'rpc:put-value')\n\n  /**\n   * Process `PutValue` DHT messages.\n   *\n   * @param {PeerId} peerId\n   * @param {Message} msg\n   */\n  async function putValue (peerId, msg) {\n    const key = msg.key\n    log('key: %b', key)\n\n    const record = msg.record\n\n    if (!record) {\n      const errMsg = `Empty record from: ${peerId.toB58String()}`\n\n      log.error(errMsg)\n      throw errcode(new Error(errMsg), 'ERR_EMPTY_RECORD')\n    }\n\n    await dht._verifyRecordLocally(record)\n\n    record.timeReceived = new Date()\n    const recordKey = utils.bufferToKey(record.key)\n    await dht.datastore.put(recordKey, record.serialize())\n\n    dht.onPut(record, peerId)\n\n    return msg\n  }\n\n  return putValue\n}\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,aAAD,CAArB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAS;EACxB,IAAMC,GAAG,GAAGN,KAAK,CAACO,MAAN,CAAaF,GAAG,CAACG,MAAjB,EAAyB,eAAzB,CAAZ;EAEA;AACF;AACA;AACA;AACA;AACA;;EAR0B,SASTC,QATS;IAAA;EAAA;;EAAA;IAAA,uEASxB,iBAAyBD,MAAzB,EAAiCE,GAAjC;MAAA;MAAA;QAAA;UAAA;YAAA;cACQC,GADR,GACcD,GAAG,CAACC,GADlB;cAEEL,GAAG,CAAC,SAAD,EAAYK,GAAZ,CAAH;cAEMC,MAJR,GAIiBF,GAAG,CAACE,MAJrB;;cAAA,IAMOA,MANP;gBAAA;gBAAA;cAAA;;cAOUC,MAPV,gCAOyCL,MAAM,CAACM,WAAP,EAPzC;cASIR,GAAG,CAACS,KAAJ,CAAUF,MAAV;cATJ,MAUUX,OAAO,CAAC,IAAIc,KAAJ,CAAUH,MAAV,CAAD,EAAoB,kBAApB,CAVjB;;YAAA;cAAA;cAAA,OAaQR,GAAG,CAACY,oBAAJ,CAAyBL,MAAzB,CAbR;;YAAA;cAeEA,MAAM,CAACM,YAAP,GAAsB,IAAIC,IAAJ,EAAtB;cACMC,SAhBR,GAgBoBpB,KAAK,CAACqB,WAAN,CAAkBT,MAAM,CAACD,GAAzB,CAhBpB;cAAA;cAAA,OAiBQN,GAAG,CAACiB,SAAJ,CAAcC,GAAd,CAAkBH,SAAlB,EAA6BR,MAAM,CAACY,SAAP,EAA7B,CAjBR;;YAAA;cAmBEnB,GAAG,CAACoB,KAAJ,CAAUb,MAAV,EAAkBJ,MAAlB;cAnBF,iCAqBSE,GArBT;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CATwB;IAAA;EAAA;;EAiCxB,OAAOD,QAAP;AACD,CAlCD"},"metadata":{},"sourceType":"script"}
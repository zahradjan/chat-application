{"ast":null,"code":"'use strict';\n\nconst {\n  Key,\n  Errors,\n  Adapter,\n  utils: {\n    sortAll\n  }\n} = require('interface-datastore');\n\nconst filter = require('it-filter');\n\nconst map = require('it-map');\n\nconst take = require('it-take');\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').Options} QueryOptions\n */\n\n/**\n * A datastore backed by leveldb.\n *\n * @implements {Datastore}\n */\n\n\nclass LevelDatastore extends Adapter {\n  /**\n   * @param {any} path\n   * @param {Object} [opts]\n   * @param {any} [opts.db] - level db reference\n   * @param {boolean} [opts.createIfMissing]\n   * @param {boolean} [opts.errorIfExists]\n   * @param {string} [opts.prefix] - level-js option\n   * @param {number} [opts.version] - level-js option\n   * @param {number} [opts.cacheSize] - leveldown option\n   * @param {number} [opts.writeBufferSize] - leveldown option\n   * @param {number} [opts.blockSize] - leveldown option\n   * @param {number} [opts.maxOpenFiles] - leveldown option\n   * @param {number} [opts.blockRestartInterval] - leveldown option\n   * @param {number} [opts.maxFileSize] - leveldown option\n   */\n  constructor(path, opts) {\n    super();\n    this.path = path;\n    this.opts = opts;\n\n    if (opts && opts.db) {\n      this.database = opts.db;\n      delete opts.db;\n    } else {\n      // @ts-ignore\n      this.database = require('level');\n    }\n  }\n\n  _initDb() {\n    return new Promise((resolve, reject) => {\n      this.db = this.database(this.path, { ...this.opts,\n        valueEncoding: 'binary',\n        compression: false // same default as go\n\n      },\n      /** @param {Error}  [err] */\n      err => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(this.db);\n      });\n    });\n  }\n\n  async open() {\n    try {\n      if (this.db) {\n        await this.db.open();\n      } else {\n        this.db = await this._initDb();\n      }\n    } catch (err) {\n      throw Errors.dbOpenFailedError(err);\n    }\n  }\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} value\n   */\n\n\n  async put(key, value) {\n    try {\n      await this.db.put(key.toString(), value);\n    } catch (err) {\n      throw Errors.dbWriteFailedError(err);\n    }\n  }\n  /**\n   * @param {Key} key\n   * @returns {Promise<Uint8Array>}\n   */\n\n\n  async get(key) {\n    let data;\n\n    try {\n      data = await this.db.get(key.toString());\n    } catch (err) {\n      if (err.notFound) throw Errors.notFoundError(err);\n      throw Errors.dbWriteFailedError(err);\n    }\n\n    return data;\n  }\n  /**\n   * @param {Key} key\n   * @returns {Promise<boolean>}\n   */\n\n\n  async has(key) {\n    try {\n      await this.db.get(key.toString());\n    } catch (err) {\n      if (err.notFound) return false;\n      throw err;\n    }\n\n    return true;\n  }\n  /**\n   * @param {Key} key\n   * @returns {Promise<void>}\n   */\n\n\n  async delete(key) {\n    try {\n      await this.db.del(key.toString());\n    } catch (err) {\n      throw Errors.dbDeleteFailedError(err);\n    }\n  }\n\n  close() {\n    return this.db && this.db.close();\n  }\n  /**\n   * @returns {Batch}\n   */\n\n\n  batch() {\n    /** @type {{ type: string; key: string; value?: Uint8Array; }[]} */\n    const ops = [];\n    return {\n      put: (key, value) => {\n        ops.push({\n          type: 'put',\n          key: key.toString(),\n          value: value\n        });\n      },\n      delete: key => {\n        ops.push({\n          type: 'del',\n          key: key.toString()\n        });\n      },\n      commit: () => {\n        return this.db.batch(ops);\n      }\n    };\n  }\n  /**\n   * @param {Query} q\n   */\n\n\n  query(q) {\n    let it = this._query({\n      values: true,\n      prefix: q.prefix\n    });\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it);\n    }\n\n    const {\n      offset,\n      limit\n    } = q;\n\n    if (offset) {\n      let i = 0;\n      it = filter(it, () => i++ >= offset);\n    }\n\n    if (limit) {\n      it = take(it, limit);\n    }\n\n    return it;\n  }\n  /**\n   * @param {KeyQuery} q\n   */\n\n\n  queryKeys(q) {\n    let it = map(this._query({\n      values: false,\n      prefix: q.prefix\n    }), _ref => {\n      let {\n        key\n      } = _ref;\n      return key;\n    });\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it);\n    }\n\n    const {\n      offset,\n      limit\n    } = q;\n\n    if (offset) {\n      let i = 0;\n      it = filter(it, () => i++ >= offset);\n    }\n\n    if (limit) {\n      it = take(it, limit);\n    }\n\n    return it;\n  }\n  /**\n   * @param {object} opts\n   * @param {boolean} opts.values\n   * @param {string} [opts.prefix]\n   * @returns {AsyncIterable<Pair>}\n   */\n\n\n  _query(opts) {\n    const iteratorOpts = {\n      keys: true,\n      keyAsBuffer: true,\n      values: opts.values\n    }; // Let the db do the prefix matching\n\n    if (opts.prefix != null) {\n      const prefix = opts.prefix.toString(); // Match keys greater than or equal to `prefix` and\n      // @ts-ignore\n\n      iteratorOpts.gte = prefix; // less than `prefix` + \\xFF (hex escape sequence)\n      // @ts-ignore\n\n      iteratorOpts.lt = prefix + '\\xFF';\n    }\n\n    return levelIteratorToIterator(this.db.iterator(iteratorOpts));\n  }\n\n}\n/**\n * @typedef {Object} LevelIterator\n * @property {(cb: (err: Error, key: string | Uint8Array | null, value: any)=> void)=>void} next\n * @property {(cb: (err: Error) => void) => void } end\n */\n\n/**\n * @param {LevelIterator} li - Level iterator\n * @returns {AsyncIterable<Pair>}\n */\n\n\nfunction levelIteratorToIterator(li) {\n  return {\n    [Symbol.asyncIterator]() {\n      return {\n        next: () => new Promise((resolve, reject) => {\n          li.next((err, key, value) => {\n            if (err) return reject(err);\n\n            if (key == null) {\n              return li.end(err => {\n                if (err) return reject(err);\n                resolve({\n                  done: true,\n                  value: undefined\n                });\n              });\n            }\n\n            resolve({\n              done: false,\n              value: {\n                key: new Key(key, false),\n                value\n              }\n            });\n          });\n        }),\n        return: () => new Promise((resolve, reject) => {\n          li.end(err => {\n            if (err) return reject(err);\n            resolve({\n              done: true,\n              value: undefined\n            });\n          });\n        })\n      };\n    }\n\n  };\n}\n\nmodule.exports = LevelDatastore;","map":{"version":3,"names":["Key","Errors","Adapter","utils","sortAll","require","filter","map","take","LevelDatastore","constructor","path","opts","db","database","_initDb","Promise","resolve","reject","valueEncoding","compression","err","open","dbOpenFailedError","put","key","value","toString","dbWriteFailedError","get","data","notFound","notFoundError","has","delete","del","dbDeleteFailedError","close","batch","ops","push","type","commit","query","q","it","_query","values","prefix","Array","isArray","filters","reduce","f","orders","offset","limit","i","queryKeys","iteratorOpts","keys","keyAsBuffer","gte","lt","levelIteratorToIterator","iterator","li","Symbol","asyncIterator","next","end","done","undefined","return","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/datastore-level/src/index.js"],"sourcesContent":["'use strict'\n\nconst {\n  Key, Errors, Adapter,\n  utils: {\n    sortAll\n  }\n} = require('interface-datastore')\nconst filter = require('it-filter')\nconst map = require('it-map')\nconst take = require('it-take')\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').Options} QueryOptions\n */\n\n/**\n * A datastore backed by leveldb.\n *\n * @implements {Datastore}\n */\nclass LevelDatastore extends Adapter {\n  /**\n   * @param {any} path\n   * @param {Object} [opts]\n   * @param {any} [opts.db] - level db reference\n   * @param {boolean} [opts.createIfMissing]\n   * @param {boolean} [opts.errorIfExists]\n   * @param {string} [opts.prefix] - level-js option\n   * @param {number} [opts.version] - level-js option\n   * @param {number} [opts.cacheSize] - leveldown option\n   * @param {number} [opts.writeBufferSize] - leveldown option\n   * @param {number} [opts.blockSize] - leveldown option\n   * @param {number} [opts.maxOpenFiles] - leveldown option\n   * @param {number} [opts.blockRestartInterval] - leveldown option\n   * @param {number} [opts.maxFileSize] - leveldown option\n   */\n  constructor (path, opts) {\n    super()\n    this.path = path\n    this.opts = opts\n\n    if (opts && opts.db) {\n      this.database = opts.db\n      delete opts.db\n    } else {\n      // @ts-ignore\n      this.database = require('level')\n    }\n  }\n\n  _initDb () {\n    return new Promise((resolve, reject) => {\n      this.db = this.database(\n        this.path,\n        {\n          ...this.opts,\n          valueEncoding: 'binary',\n          compression: false // same default as go\n        },\n        /** @param {Error}  [err] */\n        (err) => {\n          if (err) {\n            return reject(err)\n          }\n          resolve(this.db)\n        }\n      )\n    })\n  }\n\n  async open () {\n    try {\n      if (this.db) {\n        await this.db.open()\n      } else {\n        this.db = await this._initDb()\n      }\n    } catch (err) {\n      throw Errors.dbOpenFailedError(err)\n    }\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} value\n   */\n  async put (key, value) {\n    try {\n      await this.db.put(key.toString(), value)\n    } catch (err) {\n      throw Errors.dbWriteFailedError(err)\n    }\n  }\n\n  /**\n   * @param {Key} key\n   * @returns {Promise<Uint8Array>}\n   */\n  async get (key) {\n    let data\n    try {\n      data = await this.db.get(key.toString())\n    } catch (err) {\n      if (err.notFound) throw Errors.notFoundError(err)\n      throw Errors.dbWriteFailedError(err)\n    }\n    return data\n  }\n\n  /**\n   * @param {Key} key\n   * @returns {Promise<boolean>}\n   */\n  async has (key) {\n    try {\n      await this.db.get(key.toString())\n    } catch (err) {\n      if (err.notFound) return false\n      throw err\n    }\n    return true\n  }\n\n  /**\n   * @param {Key} key\n   * @returns {Promise<void>}\n   */\n  async delete (key) {\n    try {\n      await this.db.del(key.toString())\n    } catch (err) {\n      throw Errors.dbDeleteFailedError(err)\n    }\n  }\n\n  close () {\n    return this.db && this.db.close()\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    /** @type {{ type: string; key: string; value?: Uint8Array; }[]} */\n    const ops = []\n    return {\n      put: (key, value) => {\n        ops.push({\n          type: 'put',\n          key: key.toString(),\n          value: value\n        })\n      },\n      delete: (key) => {\n        ops.push({\n          type: 'del',\n          key: key.toString()\n        })\n      },\n      commit: () => {\n        return this.db.batch(ops)\n      }\n    }\n  }\n\n  /**\n   * @param {Query} q\n   */\n  query (q) {\n    let it = this._query({\n      values: true,\n      prefix: q.prefix\n    })\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    const { offset, limit } = q\n    if (offset) {\n      let i = 0\n      it = filter(it, () => i++ >= offset)\n    }\n\n    if (limit) {\n      it = take(it, limit)\n    }\n\n    return it\n  }\n\n  /**\n   * @param {KeyQuery} q\n   */\n  queryKeys (q) {\n    let it = map(this._query({\n      values: false,\n      prefix: q.prefix\n    }), ({ key }) => key)\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    const { offset, limit } = q\n    if (offset) {\n      let i = 0\n      it = filter(it, () => i++ >= offset)\n    }\n\n    if (limit) {\n      it = take(it, limit)\n    }\n\n    return it\n  }\n\n  /**\n   * @param {object} opts\n   * @param {boolean} opts.values\n   * @param {string} [opts.prefix]\n   * @returns {AsyncIterable<Pair>}\n   */\n  _query (opts) {\n    const iteratorOpts = {\n      keys: true,\n      keyAsBuffer: true,\n      values: opts.values\n    }\n\n    // Let the db do the prefix matching\n    if (opts.prefix != null) {\n      const prefix = opts.prefix.toString()\n      // Match keys greater than or equal to `prefix` and\n      // @ts-ignore\n      iteratorOpts.gte = prefix\n      // less than `prefix` + \\xFF (hex escape sequence)\n      // @ts-ignore\n      iteratorOpts.lt = prefix + '\\xFF'\n    }\n\n    return levelIteratorToIterator(this.db.iterator(iteratorOpts))\n  }\n}\n\n/**\n * @typedef {Object} LevelIterator\n * @property {(cb: (err: Error, key: string | Uint8Array | null, value: any)=> void)=>void} next\n * @property {(cb: (err: Error) => void) => void } end\n */\n\n/**\n * @param {LevelIterator} li - Level iterator\n * @returns {AsyncIterable<Pair>}\n */\nfunction levelIteratorToIterator (li) {\n  return {\n    [Symbol.asyncIterator] () {\n      return {\n        next: () => new Promise((resolve, reject) => {\n          li.next((err, key, value) => {\n            if (err) return reject(err)\n            if (key == null) {\n              return li.end(err => {\n                if (err) return reject(err)\n                resolve({ done: true, value: undefined })\n              })\n            }\n            resolve({ done: false, value: { key: new Key(key, false), value } })\n          })\n        }),\n        return: () => new Promise((resolve, reject) => {\n          li.end(err => {\n            if (err) return reject(err)\n            resolve({ done: true, value: undefined })\n          })\n        })\n      }\n    }\n  }\n}\n\nmodule.exports = LevelDatastore\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
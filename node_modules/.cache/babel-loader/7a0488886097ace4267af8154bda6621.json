{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer; // @ts-ignore\n\n\nvar BufferList = require('bl/BufferList');\n\nvar varintEncode = require('./varint-encode');\n\nvar MIN_POOL_SIZE = 8; // Varint.encode(Number.MAX_SAFE_INTEGER).length\n\nvar DEFAULT_POOL_SIZE = 10 * 1024;\n/**\n * @param {import('./types').EncoderOptions} [options]\n */\n\nfunction encode(options) {\n  options = options || {};\n  var poolSize = Math.max(options.poolSize || DEFAULT_POOL_SIZE, options.minPoolSize || MIN_POOL_SIZE);\n  var encodeLength = options.lengthEncoder || varintEncode;\n  /**\n   * @param {AsyncIterable<BufferList>} source\n   */\n\n  var encoder = /*#__PURE__*/function () {\n    var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n      var pool, poolOffset, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk, encodedLength;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pool = Buffer.alloc(poolSize);\n              poolOffset = 0;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 4;\n              _iterator = _asyncIterator(source);\n\n            case 6:\n              _context.next = 8;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 8:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 19;\n                break;\n              }\n\n              chunk = _step.value;\n              encodeLength(chunk.length, pool, poolOffset);\n              encodedLength = pool.slice(poolOffset, poolOffset + encodeLength.bytes);\n              poolOffset += encodeLength.bytes;\n\n              if (pool.length - poolOffset < MIN_POOL_SIZE) {\n                pool = Buffer.alloc(poolSize);\n                poolOffset = 0;\n              }\n\n              _context.next = 16;\n              return new BufferList().append(encodedLength).append(chunk);\n\n            case 16:\n              _iteratorAbruptCompletion = false;\n              _context.next = 6;\n              break;\n\n            case 19:\n              _context.next = 25;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](4);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 25:\n              _context.prev = 25;\n              _context.prev = 26;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 30;\n                break;\n              }\n\n              _context.next = 30;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 30:\n              _context.prev = 30;\n\n              if (!_didIteratorError) {\n                _context.next = 33;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 33:\n              return _context.finish(30);\n\n            case 34:\n              return _context.finish(25);\n\n            case 35:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 21, 25, 35], [26,, 30, 34]]);\n    }));\n\n    return function encoder(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return encoder;\n}\n/**\n * @param {BufferList | Buffer} chunk\n * @param {import('./types').EncoderOptions} [options]\n */\n\n\nencode.single = function (chunk, options) {\n  options = options || {};\n  var encodeLength = options.lengthEncoder || varintEncode;\n  return new BufferList([encodeLength(chunk.length), chunk.slice()]);\n};\n\nmodule.exports = encode;\nmodule.exports.MIN_POOL_SIZE = MIN_POOL_SIZE;\nmodule.exports.DEFAULT_POOL_SIZE = DEFAULT_POOL_SIZE;","map":{"version":3,"names":["require","Buffer","BufferList","varintEncode","MIN_POOL_SIZE","DEFAULT_POOL_SIZE","encode","options","poolSize","Math","max","minPoolSize","encodeLength","lengthEncoder","encoder","source","pool","alloc","poolOffset","chunk","length","encodedLength","slice","bytes","append","single","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/it-length-prefixed/src/encode.js"],"sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\n// @ts-ignore\nconst BufferList = require('bl/BufferList')\nconst varintEncode = require('./varint-encode')\n\nconst MIN_POOL_SIZE = 8 // Varint.encode(Number.MAX_SAFE_INTEGER).length\nconst DEFAULT_POOL_SIZE = 10 * 1024\n\n/**\n * @param {import('./types').EncoderOptions} [options]\n */\nfunction encode (options) {\n  options = options || {}\n\n  const poolSize = Math.max(options.poolSize || DEFAULT_POOL_SIZE, options.minPoolSize || MIN_POOL_SIZE)\n  const encodeLength = options.lengthEncoder || varintEncode\n\n  /**\n   * @param {AsyncIterable<BufferList>} source\n   */\n  const encoder = async function * (source) {\n    let pool = Buffer.alloc(poolSize)\n    let poolOffset = 0\n\n    for await (const chunk of source) {\n      encodeLength(chunk.length, pool, poolOffset)\n      const encodedLength = pool.slice(poolOffset, poolOffset + encodeLength.bytes)\n      poolOffset += encodeLength.bytes\n\n      if (pool.length - poolOffset < MIN_POOL_SIZE) {\n        pool = Buffer.alloc(poolSize)\n        poolOffset = 0\n      }\n\n      yield new BufferList().append(encodedLength).append(chunk)\n      // yield Buffer.concat([encodedLength, chunk])\n    }\n  }\n\n  return encoder\n}\n\n/**\n * @param {BufferList | Buffer} chunk\n * @param {import('./types').EncoderOptions} [options]\n */\nencode.single = (chunk, options) => {\n  options = options || {}\n  const encodeLength = options.lengthEncoder || varintEncode\n  return new BufferList([encodeLength(chunk.length), chunk.slice()])\n}\n\nmodule.exports = encode\nmodule.exports.MIN_POOL_SIZE = MIN_POOL_SIZE\nmodule.exports.DEFAULT_POOL_SIZE = DEFAULT_POOL_SIZE\n"],"mappings":"AAAA;;;;;;;;;;AAEA,eAAmBA,OAAO,CAAC,QAAD,CAA1B;AAAA,IAAQC,MAAR,YAAQA,MAAR,C,CACA;;;AACA,IAAMC,UAAU,GAAGF,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMG,YAAY,GAAGH,OAAO,CAAC,iBAAD,CAA5B;;AAEA,IAAMI,aAAa,GAAG,CAAtB,C,CAAwB;;AACxB,IAAMC,iBAAiB,GAAG,KAAK,IAA/B;AAEA;AACA;AACA;;AACA,SAASC,MAAT,CAAiBC,OAAjB,EAA0B;EACxBA,OAAO,GAAGA,OAAO,IAAI,EAArB;EAEA,IAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASH,OAAO,CAACC,QAAR,IAAoBH,iBAA7B,EAAgDE,OAAO,CAACI,WAAR,IAAuBP,aAAvE,CAAjB;EACA,IAAMQ,YAAY,GAAGL,OAAO,CAACM,aAAR,IAAyBV,YAA9C;EAEA;AACF;AACA;;EACE,IAAMW,OAAO;IAAA,wEAAG,iBAAkBC,MAAlB;MAAA;;MAAA;QAAA;UAAA;YAAA;cACVC,IADU,GACHf,MAAM,CAACgB,KAAP,CAAaT,QAAb,CADG;cAEVU,UAFU,GAEG,CAFH;cAAA;cAAA;cAAA;cAAA,2BAIYH,MAJZ;;YAAA;cAAA;cAAA;;YAAA;cAAA;gBAAA;gBAAA;cAAA;;cAIGI,KAJH;cAKZP,YAAY,CAACO,KAAK,CAACC,MAAP,EAAeJ,IAAf,EAAqBE,UAArB,CAAZ;cACMG,aANM,GAMUL,IAAI,CAACM,KAAL,CAAWJ,UAAX,EAAuBA,UAAU,GAAGN,YAAY,CAACW,KAAjD,CANV;cAOZL,UAAU,IAAIN,YAAY,CAACW,KAA3B;;cAEA,IAAIP,IAAI,CAACI,MAAL,GAAcF,UAAd,GAA2Bd,aAA/B,EAA8C;gBAC5CY,IAAI,GAAGf,MAAM,CAACgB,KAAP,CAAaT,QAAb,CAAP;gBACAU,UAAU,GAAG,CAAb;cACD;;cAZW;cAcZ,OAAM,IAAIhB,UAAJ,GAAiBsB,MAAjB,CAAwBH,aAAxB,EAAuCG,MAAvC,CAA8CL,KAA9C,CAAN;;YAdY;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;cAAA;;YAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAAA;;YAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAPL,OAAO;MAAA;IAAA;EAAA,GAAb;;EAmBA,OAAOA,OAAP;AACD;AAED;AACA;AACA;AACA;;;AACAR,MAAM,CAACmB,MAAP,GAAgB,UAACN,KAAD,EAAQZ,OAAR,EAAoB;EAClCA,OAAO,GAAGA,OAAO,IAAI,EAArB;EACA,IAAMK,YAAY,GAAGL,OAAO,CAACM,aAAR,IAAyBV,YAA9C;EACA,OAAO,IAAID,UAAJ,CAAe,CAACU,YAAY,CAACO,KAAK,CAACC,MAAP,CAAb,EAA6BD,KAAK,CAACG,KAAN,EAA7B,CAAf,CAAP;AACD,CAJD;;AAMAI,MAAM,CAACC,OAAP,GAAiBrB,MAAjB;AACAoB,MAAM,CAACC,OAAP,CAAevB,aAAf,GAA+BA,aAA/B;AACAsB,MAAM,CAACC,OAAP,CAAetB,iBAAf,GAAmCA,iBAAnC"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n/**\n * Verify if two arrays of non primitive types with the \"equals\" function are equal.\n * Compatible with multiaddr, peer-id and others.\n *\n * @param {Array<*>} a\n * @param {Array<*>} b\n * @returns {boolean}\n */\n\nfunction arrayEquals(a, b) {\n  return a.length === b.length && b.sort() && a.sort().every(function (item, index) {\n    return b[index].equals(item);\n  });\n}\n\nmodule.exports = arrayEquals;","map":{"version":3,"names":["arrayEquals","a","b","length","sort","every","item","index","equals","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p-utils/src/array-equals.js"],"sourcesContent":["'use strict'\n\n/**\n * Verify if two arrays of non primitive types with the \"equals\" function are equal.\n * Compatible with multiaddr, peer-id and others.\n *\n * @param {Array<*>} a\n * @param {Array<*>} b\n * @returns {boolean}\n */\nfunction arrayEquals (a, b) {\n  return a.length === b.length && b.sort() && a.sort().every((item, index) => b[index].equals(item))\n}\n\nmodule.exports = arrayEquals\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,WAAT,CAAsBC,CAAtB,EAAyBC,CAAzB,EAA4B;EAC1B,OAAOD,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAf,IAAyBD,CAAC,CAACE,IAAF,EAAzB,IAAqCH,CAAC,CAACG,IAAF,GAASC,KAAT,CAAe,UAACC,IAAD,EAAOC,KAAP;IAAA,OAAiBL,CAAC,CAACK,KAAD,CAAD,CAASC,MAAT,CAAgBF,IAAhB,CAAjB;EAAA,CAAf,CAA5C;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiBV,WAAjB"},"metadata":{},"sourceType":"script"}
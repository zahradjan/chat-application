{"ast":null,"code":"'use strict'; // @ts-ignore\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar debounce = require('just-debounce-it');\n\nvar Message = require('../types/message');\n\nvar logger = require('../utils').logger;\n\nvar _require = require('../constants'),\n    wantlistSendDebounceMs = _require.wantlistSendDebounceMs;\n/**\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('../network')} Network\n */\n\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {PeerId} selfPeerId\n   * @param {PeerId} otherPeerId\n   * @param {Network} network\n   */\n  function MsgQueue(selfPeerId, otherPeerId, network) {\n    _classCallCheck(this, MsgQueue);\n\n    this.peerId = otherPeerId;\n    this.network = network;\n    this.refcnt = 1;\n    /**\n     * @private\n     * @type {{cid:CID, priority:number, cancel?:boolean}[]}\n     */\n\n    this._entries = [];\n    /** @private */\n\n    this._log = logger(selfPeerId, 'msgqueue');\n    this.sendEntries = debounce(this._sendEntries.bind(this), wantlistSendDebounceMs);\n  }\n  /**\n   * @param {Message} msg\n   */\n\n\n  _createClass(MsgQueue, [{\n    key: \"addMessage\",\n    value: function addMessage(msg) {\n      if (msg.empty) {\n        return;\n      }\n\n      this.send(msg);\n    }\n    /**\n     * @param {{cid:CID, priority:number}[]} entries\n     */\n\n  }, {\n    key: \"addEntries\",\n    value: function addEntries(entries) {\n      this._entries = this._entries.concat(entries);\n      this.sendEntries();\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_sendEntries\",\n    value: function _sendEntries() {\n      if (!this._entries.length) {\n        return;\n      }\n\n      var msg = new Message(false);\n\n      this._entries.forEach(function (entry) {\n        if (entry.cancel) {\n          msg.cancel(entry.cid);\n        } else {\n          msg.addEntry(entry.cid, entry.priority);\n        }\n      });\n\n      this._entries = [];\n      this.addMessage(msg);\n    }\n    /**\n     * @param {Message} msg\n     */\n\n  }, {\n    key: \"send\",\n    value: function () {\n      var _send = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(msg) {\n        var _this = this;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.network.connectTo(this.peerId);\n\n              case 3:\n                _context.next = 9;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n\n                this._log.error('cant connect to peer %s: %s', this.peerId.toB58String(), _context.t0.message);\n\n                return _context.abrupt(\"return\");\n\n              case 9:\n                this._log('sending message to peer %s', this.peerId.toB58String()); // Note: Don't wait for sendMessage() to complete\n\n\n                this.network.sendMessage(this.peerId, msg).catch(function (err) {\n                  _this._log.error('send error: %s', err.message);\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 5]]);\n      }));\n\n      function send(_x) {\n        return _send.apply(this, arguments);\n      }\n\n      return send;\n    }()\n  }]);\n\n  return MsgQueue;\n}();","map":{"version":3,"names":["debounce","require","Message","logger","wantlistSendDebounceMs","module","exports","selfPeerId","otherPeerId","network","peerId","refcnt","_entries","_log","sendEntries","_sendEntries","bind","msg","empty","send","entries","concat","length","forEach","entry","cancel","cid","addEntry","priority","addMessage","connectTo","error","toB58String","message","sendMessage","catch","err"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-bitswap/src/want-manager/msg-queue.js"],"sourcesContent":["'use strict'\n\n// @ts-ignore\nconst debounce = require('just-debounce-it')\n\nconst Message = require('../types/message')\nconst logger = require('../utils').logger\nconst { wantlistSendDebounceMs } = require('../constants')\n\n/**\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('../network')} Network\n */\n\nmodule.exports = class MsgQueue {\n  /**\n   * @param {PeerId} selfPeerId\n   * @param {PeerId} otherPeerId\n   * @param {Network} network\n   */\n  constructor (selfPeerId, otherPeerId, network) {\n    this.peerId = otherPeerId\n    this.network = network\n    this.refcnt = 1\n\n    /**\n     * @private\n     * @type {{cid:CID, priority:number, cancel?:boolean}[]}\n     */\n    this._entries = []\n    /** @private */\n    this._log = logger(selfPeerId, 'msgqueue')\n    this.sendEntries = debounce(this._sendEntries.bind(this), wantlistSendDebounceMs)\n  }\n\n  /**\n   * @param {Message} msg\n   */\n  addMessage (msg) {\n    if (msg.empty) {\n      return\n    }\n\n    this.send(msg)\n  }\n\n  /**\n   * @param {{cid:CID, priority:number}[]} entries\n   */\n  addEntries (entries) {\n    this._entries = this._entries.concat(entries)\n    this.sendEntries()\n  }\n\n  /**\n   * @private\n   */\n  _sendEntries () {\n    if (!this._entries.length) {\n      return\n    }\n\n    const msg = new Message(false)\n    this._entries.forEach((entry) => {\n      if (entry.cancel) {\n        msg.cancel(entry.cid)\n      } else {\n        msg.addEntry(entry.cid, entry.priority)\n      }\n    })\n    this._entries = []\n    this.addMessage(msg)\n  }\n\n  /**\n   * @param {Message} msg\n   */\n  async send (msg) {\n    try {\n      await this.network.connectTo(this.peerId)\n    } catch (err) {\n      this._log.error('cant connect to peer %s: %s', this.peerId.toB58String(), err.message)\n      return\n    }\n\n    this._log('sending message to peer %s', this.peerId.toB58String())\n\n    // Note: Don't wait for sendMessage() to complete\n    this.network.sendMessage(this.peerId, msg).catch((err) => {\n      this._log.error('send error: %s', err.message)\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
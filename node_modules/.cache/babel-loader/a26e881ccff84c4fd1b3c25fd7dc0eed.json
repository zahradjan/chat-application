{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar errcode = require('err-code');\n\nvar _require = require('uint8arrays/concat'),\n    uint8ArrayConcat = _require.concat;\n\nvar _require2 = require('uint8arrays/from-string'),\n    uint8ArrayFromString = _require2.fromString;\n\nvar hmac = require('../hmac');\n\nvar cipherMap = {\n  'AES-128': {\n    ivSize: 16,\n    keySize: 16\n  },\n  'AES-256': {\n    ivSize: 16,\n    keySize: 32\n  },\n  Blowfish: {\n    ivSize: 8,\n    cipherKeySize: 32\n  }\n}; // Generates a set of keys for each party by stretching the shared key.\n// (myIV, theirIV, myCipherKey, theirCipherKey, myMACKey, theirMACKey)\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cipherType, hash, secret) {\n    var cipher, allowed, cipherKeySize, ivSize, hmacKeySize, seed, resultLength, m, a, result, j, b, todo, half, resultBuffer, r1, r2, createKey;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            cipher = cipherMap[cipherType];\n\n            if (cipher) {\n              _context.next = 4;\n              break;\n            }\n\n            allowed = Object.keys(cipherMap).join(' / ');\n            throw errcode(new Error(\"unknown cipher type '\".concat(cipherType, \"'. Must be \").concat(allowed)), 'ERR_INVALID_CIPHER_TYPE');\n\n          case 4:\n            if (hash) {\n              _context.next = 6;\n              break;\n            }\n\n            throw errcode(new Error('missing hash type'), 'ERR_MISSING_HASH_TYPE');\n\n          case 6:\n            cipherKeySize = cipher.keySize;\n            ivSize = cipher.ivSize;\n            hmacKeySize = 20;\n            seed = uint8ArrayFromString('key expansion');\n            resultLength = 2 * (ivSize + cipherKeySize + hmacKeySize);\n            _context.next = 13;\n            return hmac.create(hash, secret);\n\n          case 13:\n            m = _context.sent;\n            _context.next = 16;\n            return m.digest(seed);\n\n          case 16:\n            a = _context.sent;\n            result = [];\n            j = 0;\n\n          case 19:\n            if (!(j < resultLength)) {\n              _context.next = 32;\n              break;\n            }\n\n            _context.next = 22;\n            return m.digest(uint8ArrayConcat([a, seed]));\n\n          case 22:\n            b = _context.sent;\n            todo = b.length;\n\n            if (j + todo > resultLength) {\n              todo = resultLength - j;\n            }\n\n            result.push(b);\n            j += todo;\n            _context.next = 29;\n            return m.digest(a);\n\n          case 29:\n            a = _context.sent;\n            _context.next = 19;\n            break;\n\n          case 32:\n            half = resultLength / 2;\n            resultBuffer = uint8ArrayConcat(result);\n            r1 = resultBuffer.slice(0, half);\n            r2 = resultBuffer.slice(half, resultLength);\n\n            createKey = function createKey(res) {\n              return {\n                iv: res.slice(0, ivSize),\n                cipherKey: res.slice(ivSize, ivSize + cipherKeySize),\n                macKey: res.slice(ivSize + cipherKeySize)\n              };\n            };\n\n            return _context.abrupt(\"return\", {\n              k1: createKey(r1),\n              k2: createKey(r2)\n            });\n\n          case 38:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["errcode","require","uint8ArrayConcat","concat","uint8ArrayFromString","fromString","hmac","cipherMap","ivSize","keySize","Blowfish","cipherKeySize","module","exports","cipherType","hash","secret","cipher","allowed","Object","keys","join","Error","hmacKeySize","seed","resultLength","create","m","digest","a","result","j","b","todo","length","push","half","resultBuffer","r1","slice","r2","createKey","res","iv","cipherKey","macKey","k1","k2"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p-delegated-content-routing/node_modules/libp2p-crypto/src/keys/key-stretcher.js"],"sourcesContent":["'use strict'\n\nconst errcode = require('err-code')\nconst { concat: uint8ArrayConcat } = require('uint8arrays/concat')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\nconst hmac = require('../hmac')\n\nconst cipherMap = {\n  'AES-128': {\n    ivSize: 16,\n    keySize: 16\n  },\n  'AES-256': {\n    ivSize: 16,\n    keySize: 32\n  },\n  Blowfish: {\n    ivSize: 8,\n    cipherKeySize: 32\n  }\n}\n\n// Generates a set of keys for each party by stretching the shared key.\n// (myIV, theirIV, myCipherKey, theirCipherKey, myMACKey, theirMACKey)\nmodule.exports = async (cipherType, hash, secret) => {\n  const cipher = cipherMap[cipherType]\n\n  if (!cipher) {\n    const allowed = Object.keys(cipherMap).join(' / ')\n    throw errcode(new Error(`unknown cipher type '${cipherType}'. Must be ${allowed}`), 'ERR_INVALID_CIPHER_TYPE')\n  }\n\n  if (!hash) {\n    throw errcode(new Error('missing hash type'), 'ERR_MISSING_HASH_TYPE')\n  }\n\n  const cipherKeySize = cipher.keySize\n  const ivSize = cipher.ivSize\n  const hmacKeySize = 20\n  const seed = uint8ArrayFromString('key expansion')\n  const resultLength = 2 * (ivSize + cipherKeySize + hmacKeySize)\n\n  const m = await hmac.create(hash, secret)\n  let a = await m.digest(seed)\n\n  const result = []\n  let j = 0\n\n  while (j < resultLength) {\n    const b = await m.digest(uint8ArrayConcat([a, seed]))\n    let todo = b.length\n\n    if (j + todo > resultLength) {\n      todo = resultLength - j\n    }\n\n    result.push(b)\n    j += todo\n    a = await m.digest(a)\n  }\n\n  const half = resultLength / 2\n  const resultBuffer = uint8ArrayConcat(result)\n  const r1 = resultBuffer.slice(0, half)\n  const r2 = resultBuffer.slice(half, resultLength)\n\n  const createKey = (res) => ({\n    iv: res.slice(0, ivSize),\n    cipherKey: res.slice(ivSize, ivSize + cipherKeySize),\n    macKey: res.slice(ivSize + cipherKeySize)\n  })\n\n  return {\n    k1: createKey(r1),\n    k2: createKey(r2)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
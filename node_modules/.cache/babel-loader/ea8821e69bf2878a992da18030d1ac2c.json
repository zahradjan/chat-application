{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar abortable = require('abortable-iterator');\n\nvar _require = require('./constants'),\n    CLOSE_TIMEOUT = _require.CLOSE_TIMEOUT;\n\nvar toMultiaddr = require('libp2p-utils/src/ip-port-to-multiaddr');\n\nvar pTimeout = require('p-timeout');\n\nvar debug = require('debug');\n\nvar log = debug('libp2p:websockets:socket');\nlog.error = debug('libp2p:websockets:socket:error'); // Convert a stream into a MultiaddrConnection\n// https://github.com/libp2p/interface-transport#multiaddrconnection\n\nmodule.exports = function (stream) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var maConn = {\n    sink: function sink(source) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (options.signal) {\n                  source = abortable(source, options.signal);\n                }\n\n                _context2.prev = 1;\n                _context2.next = 4;\n                return stream.sink(_wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                  var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;\n\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _iteratorAbruptCompletion = false;\n                          _didIteratorError = false;\n                          _context.prev = 2;\n                          _iterator = _asyncIterator(source);\n\n                        case 4:\n                          _context.next = 6;\n                          return _awaitAsyncGenerator(_iterator.next());\n\n                        case 6:\n                          if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                            _context.next = 13;\n                            break;\n                          }\n\n                          chunk = _step.value;\n                          _context.next = 10;\n                          return chunk instanceof Uint8Array ? chunk : chunk.slice();\n\n                        case 10:\n                          _iteratorAbruptCompletion = false;\n                          _context.next = 4;\n                          break;\n\n                        case 13:\n                          _context.next = 19;\n                          break;\n\n                        case 15:\n                          _context.prev = 15;\n                          _context.t0 = _context[\"catch\"](2);\n                          _didIteratorError = true;\n                          _iteratorError = _context.t0;\n\n                        case 19:\n                          _context.prev = 19;\n                          _context.prev = 20;\n\n                          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                            _context.next = 24;\n                            break;\n                          }\n\n                          _context.next = 24;\n                          return _awaitAsyncGenerator(_iterator.return());\n\n                        case 24:\n                          _context.prev = 24;\n\n                          if (!_didIteratorError) {\n                            _context.next = 27;\n                            break;\n                          }\n\n                          throw _iteratorError;\n\n                        case 27:\n                          return _context.finish(24);\n\n                        case 28:\n                          return _context.finish(19);\n\n                        case 29:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, null, [[2, 15, 19, 29], [20,, 24, 28]]);\n                }))());\n\n              case 4:\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](1);\n\n                if (_context2.t0.type !== 'aborted') {\n                  log.error(_context2.t0);\n                }\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 6]]);\n      }))();\n    },\n    source: options.signal ? abortable(stream.source, options.signal) : stream.source,\n    conn: stream,\n    localAddr: options.localAddr || (stream.localAddress && stream.localPort ? toMultiaddr(stream.localAddress, stream.localPort) : undefined),\n    // If the remote address was passed, use it - it may have the peer ID encapsulated\n    remoteAddr: options.remoteAddr || toMultiaddr(stream.remoteAddress, stream.remotePort),\n    timeline: {\n      open: Date.now()\n    },\n    close: function close() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var start, _maConn$remoteAddr$to, host, port;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                start = Date.now();\n                _context3.prev = 1;\n                _context3.next = 4;\n                return pTimeout(stream.close(), CLOSE_TIMEOUT);\n\n              case 4:\n                _context3.next = 11;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](1);\n                _maConn$remoteAddr$to = maConn.remoteAddr.toOptions(), host = _maConn$remoteAddr$to.host, port = _maConn$remoteAddr$to.port;\n                log('timeout closing stream to %s:%s after %dms, destroying it manually', host, port, Date.now() - start);\n                stream.destroy();\n\n              case 11:\n                _context3.prev = 11;\n                maConn.timeline.close = Date.now();\n                return _context3.finish(11);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 6, 11, 14]]);\n      }))();\n    }\n  };\n  stream.socket.once && stream.socket.once('close', function () {\n    // In instances where `close` was not explicitly called,\n    // such as an iterable stream ending, ensure we have set the close\n    // timeline\n    if (!maConn.timeline.close) {\n      maConn.timeline.close = Date.now();\n    }\n  });\n  return maConn;\n};","map":{"version":3,"names":["abortable","require","CLOSE_TIMEOUT","toMultiaddr","pTimeout","debug","log","error","module","exports","stream","options","maConn","sink","source","signal","chunk","Uint8Array","slice","type","conn","localAddr","localAddress","localPort","undefined","remoteAddr","remoteAddress","remotePort","timeline","open","Date","now","close","start","toOptions","host","port","destroy","socket","once"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p-websockets/src/socket-to-conn.js"],"sourcesContent":["'use strict'\n\nconst abortable = require('abortable-iterator')\nconst { CLOSE_TIMEOUT } = require('./constants')\nconst toMultiaddr = require('libp2p-utils/src/ip-port-to-multiaddr')\n\nconst pTimeout = require('p-timeout')\n\nconst debug = require('debug')\nconst log = debug('libp2p:websockets:socket')\nlog.error = debug('libp2p:websockets:socket:error')\n\n// Convert a stream into a MultiaddrConnection\n// https://github.com/libp2p/interface-transport#multiaddrconnection\nmodule.exports = (stream, options = {}) => {\n  const maConn = {\n    async sink (source) {\n      if (options.signal) {\n        source = abortable(source, options.signal)\n      }\n\n      try {\n        await stream.sink((async function * () {\n          for await (const chunk of source) {\n            // Convert BufferList to Buffer\n            yield chunk instanceof Uint8Array ? chunk : chunk.slice()\n          }\n        })())\n      } catch (err) {\n        if (err.type !== 'aborted') {\n          log.error(err)\n        }\n      }\n    },\n\n    source: options.signal ? abortable(stream.source, options.signal) : stream.source,\n\n    conn: stream,\n\n    localAddr: options.localAddr || (stream.localAddress && stream.localPort\n      ? toMultiaddr(stream.localAddress, stream.localPort)\n      : undefined),\n\n    // If the remote address was passed, use it - it may have the peer ID encapsulated\n    remoteAddr: options.remoteAddr || toMultiaddr(stream.remoteAddress, stream.remotePort),\n\n    timeline: { open: Date.now() },\n\n    async close () {\n      const start = Date.now()\n\n      try {\n        await pTimeout(stream.close(), CLOSE_TIMEOUT)\n      } catch (err) {\n        const { host, port } = maConn.remoteAddr.toOptions()\n        log('timeout closing stream to %s:%s after %dms, destroying it manually',\n          host, port, Date.now() - start)\n\n        stream.destroy()\n      } finally {\n        maConn.timeline.close = Date.now()\n      }\n    }\n  }\n\n  stream.socket.once && stream.socket.once('close', () => {\n    // In instances where `close` was not explicitly called,\n    // such as an iterable stream ending, ensure we have set the close\n    // timeline\n    if (!maConn.timeline.close) {\n      maConn.timeline.close = Date.now()\n    }\n  })\n\n  return maConn\n}\n"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,oBAAD,CAAzB;;AACA,eAA0BA,OAAO,CAAC,aAAD,CAAjC;AAAA,IAAQC,aAAR,YAAQA,aAAR;;AACA,IAAMC,WAAW,GAAGF,OAAO,CAAC,uCAAD,CAA3B;;AAEA,IAAMG,QAAQ,GAAGH,OAAO,CAAC,WAAD,CAAxB;;AAEA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMK,GAAG,GAAGD,KAAK,CAAC,0BAAD,CAAjB;AACAC,GAAG,CAACC,KAAJ,GAAYF,KAAK,CAAC,gCAAD,CAAjB,C,CAEA;AACA;;AACAG,MAAM,CAACC,OAAP,GAAiB,UAACC,MAAD,EAA0B;EAAA,IAAjBC,OAAiB,uEAAP,EAAO;EACzC,IAAMC,MAAM,GAAG;IACPC,IADO,gBACDC,MADC,EACO;MAAA;QAAA;UAAA;YAAA;cAAA;gBAClB,IAAIH,OAAO,CAACI,MAAZ,EAAoB;kBAClBD,MAAM,GAAGd,SAAS,CAACc,MAAD,EAASH,OAAO,CAACI,MAAjB,CAAlB;gBACD;;gBAHiB;gBAAA;gBAAA,OAMVL,MAAM,CAACG,IAAP,CAAY,6DAAC;kBAAA;;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA;0BAAA;0BAAA,2BACSC,MADT;;wBAAA;0BAAA;0BAAA;;wBAAA;0BAAA;4BAAA;4BAAA;0BAAA;;0BACAE,KADA;0BAAA;0BAGf,OAAMA,KAAK,YAAYC,UAAjB,GAA8BD,KAA9B,GAAsCA,KAAK,CAACE,KAAN,EAA5C;;wBAHe;0BAAA;0BAAA;0BAAA;;wBAAA;0BAAA;0BAAA;;wBAAA;0BAAA;0BAAA;0BAAA;0BAAA;;wBAAA;0BAAA;0BAAA;;0BAAA;4BAAA;4BAAA;0BAAA;;0BAAA;0BAAA;;wBAAA;0BAAA;;0BAAA;4BAAA;4BAAA;0BAAA;;0BAAA;;wBAAA;0BAAA;;wBAAA;0BAAA;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAD,IAAZ,CANU;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;gBAahB,IAAI,aAAIC,IAAJ,KAAa,SAAjB,EAA4B;kBAC1Bb,GAAG,CAACC,KAAJ;gBACD;;cAfe;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAiBnB,CAlBY;IAoBbO,MAAM,EAAEH,OAAO,CAACI,MAAR,GAAiBf,SAAS,CAACU,MAAM,CAACI,MAAR,EAAgBH,OAAO,CAACI,MAAxB,CAA1B,GAA4DL,MAAM,CAACI,MApB9D;IAsBbM,IAAI,EAAEV,MAtBO;IAwBbW,SAAS,EAAEV,OAAO,CAACU,SAAR,KAAsBX,MAAM,CAACY,YAAP,IAAuBZ,MAAM,CAACa,SAA9B,GAC7BpB,WAAW,CAACO,MAAM,CAACY,YAAR,EAAsBZ,MAAM,CAACa,SAA7B,CADkB,GAE7BC,SAFO,CAxBE;IA4Bb;IACAC,UAAU,EAAEd,OAAO,CAACc,UAAR,IAAsBtB,WAAW,CAACO,MAAM,CAACgB,aAAR,EAAuBhB,MAAM,CAACiB,UAA9B,CA7BhC;IA+BbC,QAAQ,EAAE;MAAEC,IAAI,EAAEC,IAAI,CAACC,GAAL;IAAR,CA/BG;IAiCPC,KAjCO,mBAiCE;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBACPC,KADO,GACCH,IAAI,CAACC,GAAL,EADD;gBAAA;gBAAA;gBAAA,OAIL3B,QAAQ,CAACM,MAAM,CAACsB,KAAP,EAAD,EAAiB9B,aAAjB,CAJH;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAAA,wBAMYU,MAAM,CAACa,UAAP,CAAkBS,SAAlB,EANZ,EAMHC,IANG,yBAMHA,IANG,EAMGC,IANH,yBAMGA,IANH;gBAOX9B,GAAG,CAAC,oEAAD,EACD6B,IADC,EACKC,IADL,EACWN,IAAI,CAACC,GAAL,KAAaE,KADxB,CAAH;gBAGAvB,MAAM,CAAC2B,OAAP;;cAVW;gBAAA;gBAYXzB,MAAM,CAACgB,QAAP,CAAgBI,KAAhB,GAAwBF,IAAI,CAACC,GAAL,EAAxB;gBAZW;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAcd;EA/CY,CAAf;EAkDArB,MAAM,CAAC4B,MAAP,CAAcC,IAAd,IAAsB7B,MAAM,CAAC4B,MAAP,CAAcC,IAAd,CAAmB,OAAnB,EAA4B,YAAM;IACtD;IACA;IACA;IACA,IAAI,CAAC3B,MAAM,CAACgB,QAAP,CAAgBI,KAArB,EAA4B;MAC1BpB,MAAM,CAACgB,QAAP,CAAgBI,KAAhB,GAAwBF,IAAI,CAACC,GAAL,EAAxB;IACD;EACF,CAPqB,CAAtB;EASA,OAAOnB,MAAP;AACD,CA7DD"},"metadata":{},"sourceType":"script"}
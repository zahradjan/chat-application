{"ast":null,"code":"\"use strict\";\n/*! noble-ed25519 - MIT License (c) Paul Miller (paulmillr.com) */\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.utils = exports.verify = exports.sign = exports.getPublicKey = exports.SignResult = exports.Signature = exports.Point = exports.ExtendedPoint = exports.CURVE = void 0;\nvar CURVE = {\n  a: -1n,\n  d: 37095705934669439343138083508754565189542113879843219016388785533085940283555n,\n  P: Math.pow(2n, 255n) - 19n,\n  n: Math.pow(2n, 252n) + 27742317777372353535851937790883648493n,\n  h: 8n,\n  Gx: 15112221349535400772501151409588531511454012693041857206046113283949847762202n,\n  Gy: 46316835694926478169428394003475163141307993866256225615783033603165251855960n\n};\nexports.CURVE = CURVE;\nvar B32 = 32;\nvar SQRT_M1 = 19681161376707505956807079304988542015446066515923890162744021073123829784752n;\nvar SQRT_AD_MINUS_ONE = 25063068953384623474111414158702152701244531502492656460079210482610430750235n;\nvar INVSQRT_A_MINUS_D = 54469307008909316920995813868745141605393597292927456921205312896311721017578n;\nvar ONE_MINUS_D_SQ = 1159843021668779879193775521855586647937357759715417654439879720876111806838n;\nvar D_MINUS_ONE_SQ = 40440834346308536858101042469323190826248399146238708352240133220865137265952n;\n\nvar ExtendedPoint = /*#__PURE__*/function () {\n  function ExtendedPoint(x, y, z, t) {\n    _classCallCheck(this, ExtendedPoint);\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.t = t;\n  }\n\n  _createClass(ExtendedPoint, [{\n    key: \"toRistrettoBytes\",\n    value: function toRistrettoBytes() {\n      var x = this.x,\n          y = this.y,\n          z = this.z,\n          t = this.t;\n      var u1 = mod((z + y) * (z - y));\n      var u2 = mod(x * y);\n\n      var _invertSqrt = invertSqrt(mod(u1 * Math.pow(u2, 2n))),\n          invsqrt = _invertSqrt.value;\n\n      var D1 = mod(invsqrt * u1);\n      var D2 = mod(invsqrt * u2);\n      var zInv = mod(D1 * D2 * t);\n      var D;\n\n      if (edIsNegative(t * zInv)) {\n        var _ref = [mod(y * SQRT_M1), mod(x * SQRT_M1)];\n        x = _ref[0];\n        y = _ref[1];\n        D = mod(D1 * INVSQRT_A_MINUS_D);\n      } else {\n        D = D2;\n      }\n\n      if (edIsNegative(x * zInv)) y = mod(-y);\n      var s = mod((z - y) * D);\n      if (edIsNegative(s)) s = mod(-s);\n      return numberToBytesPadded(s, B32);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      var a = this;\n      var b = other;\n      var _ref2 = [a.t, b.t, a.z, b.z],\n          T1 = _ref2[0],\n          T2 = _ref2[1],\n          Z1 = _ref2[2],\n          Z2 = _ref2[3];\n      return mod(T1 * Z2) === mod(T2 * Z1);\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n  }, {\n    key: \"double\",\n    value: function double() {\n      var X1 = this.x;\n      var Y1 = this.y;\n      var Z1 = this.z;\n      var a = CURVE.a;\n      var A = mod(Math.pow(X1, 2n));\n      var B = mod(Math.pow(Y1, 2n));\n      var C = mod(2n * Math.pow(Z1, 2n));\n      var D = mod(a * A);\n      var E = mod(Math.pow(X1 + Y1, 2n) - A - B);\n      var G = mod(D + B);\n      var F = mod(G - C);\n      var H = mod(D - B);\n      var X3 = mod(E * F);\n      var Y3 = mod(G * H);\n      var T3 = mod(E * H);\n      var Z3 = mod(F * G);\n      return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n  }, {\n    key: \"add\",\n    value: function add(other) {\n      var X1 = this.x;\n      var Y1 = this.y;\n      var Z1 = this.z;\n      var T1 = this.t;\n      var X2 = other.x;\n      var Y2 = other.y;\n      var Z2 = other.z;\n      var T2 = other.t;\n      var A = mod((Y1 - X1) * (Y2 + X2));\n      var B = mod((Y1 + X1) * (Y2 - X2));\n      var F = mod(B - A);\n\n      if (F === 0n) {\n        return this.double();\n      }\n\n      var C = mod(Z1 * 2n * T2);\n      var D = mod(T1 * 2n * Z2);\n      var E = mod(D + C);\n      var G = mod(B + A);\n      var H = mod(D - C);\n      var X3 = mod(E * F);\n      var Y3 = mod(G * H);\n      var T3 = mod(E * H);\n      var Z3 = mod(F * G);\n      return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(other) {\n      return this.add(other.negate());\n    }\n  }, {\n    key: \"multiplyUnsafe\",\n    value: function multiplyUnsafe(scalar) {\n      if (!isValidScalar(scalar)) throw new TypeError('Point#multiply: expected number or bigint');\n      var n = mod(BigInt(scalar), CURVE.n);\n      if (n === 1n) return this;\n      var p = ExtendedPoint.ZERO;\n      var d = this;\n\n      while (n > 0n) {\n        if (n & 1n) p = p.add(d);\n        d = d.double();\n        n >>= 1n;\n      }\n\n      return p;\n    }\n  }, {\n    key: \"precomputeWindow\",\n    value: function precomputeWindow(W) {\n      var windows = 256 / W + 1;\n      var points = [];\n      var p = this;\n      var base = p;\n\n      for (var window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n\n        for (var i = 1; i < Math.pow(2, W - 1); i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n\n        p = base.double();\n      }\n\n      return points;\n    }\n  }, {\n    key: \"wNAF\",\n    value: function wNAF(n, affinePoint) {\n      if (!affinePoint && this.equals(ExtendedPoint.BASE)) affinePoint = Point.BASE;\n      var W = affinePoint && affinePoint._WINDOW_SIZE || 1;\n\n      if (256 % W) {\n        throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n      }\n\n      var precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n\n      if (!precomputes) {\n        precomputes = this.precomputeWindow(W);\n\n        if (affinePoint && W !== 1) {\n          precomputes = ExtendedPoint.normalizeZ(precomputes);\n          pointPrecomputes.set(affinePoint, precomputes);\n        }\n      }\n\n      var p = ExtendedPoint.ZERO;\n      var f = ExtendedPoint.ZERO;\n      var windows = 256 / W + 1;\n      var windowSize = Math.pow(2, W - 1);\n      var mask = BigInt(Math.pow(2, W) - 1);\n      var maxNumber = Math.pow(2, W);\n      var shiftBy = BigInt(W);\n\n      for (var window = 0; window < windows; window++) {\n        var offset = window * windowSize;\n        var wbits = Number(n & mask);\n        n >>= shiftBy;\n\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += 1n;\n        }\n\n        if (wbits === 0) {\n          f = f.add(window % 2 ? precomputes[offset].negate() : precomputes[offset]);\n        } else {\n          var cached = precomputes[offset + Math.abs(wbits) - 1];\n          p = p.add(wbits < 0 ? cached.negate() : cached);\n        }\n      }\n\n      return [p, f];\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(scalar, affinePoint) {\n      if (!isValidScalar(scalar)) throw new TypeError('Point#multiply: expected number or bigint');\n      var n = mod(BigInt(scalar), CURVE.n);\n      return ExtendedPoint.normalizeZ(this.wNAF(n, affinePoint))[0];\n    }\n  }, {\n    key: \"toAffine\",\n    value: function toAffine() {\n      var invZ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : invert(this.z);\n      var x = mod(this.x * invZ);\n      var y = mod(this.y * invZ);\n      return new Point(x, y);\n    }\n  }], [{\n    key: \"fromAffine\",\n    value: function fromAffine(p) {\n      if (!(p instanceof Point)) {\n        throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n      }\n\n      if (p.equals(Point.ZERO)) return ExtendedPoint.ZERO;\n      return new ExtendedPoint(p.x, p.y, 1n, mod(p.x * p.y));\n    }\n  }, {\n    key: \"toAffineBatch\",\n    value: function toAffineBatch(points) {\n      var toInv = invertBatch(points.map(function (p) {\n        return p.z;\n      }));\n      return points.map(function (p, i) {\n        return p.toAffine(toInv[i]);\n      });\n    }\n  }, {\n    key: \"normalizeZ\",\n    value: function normalizeZ(points) {\n      return this.toAffineBatch(points).map(this.fromAffine);\n    }\n  }, {\n    key: \"fromRistrettoHash\",\n    value: function fromRistrettoHash(hash) {\n      var r1 = bytes255ToNumberLE(hash.slice(0, B32));\n      var R1 = this.calcElligatorRistrettoMap(r1);\n      var r2 = bytes255ToNumberLE(hash.slice(B32, B32 * 2));\n      var R2 = this.calcElligatorRistrettoMap(r2);\n      return R1.add(R2);\n    }\n  }, {\n    key: \"calcElligatorRistrettoMap\",\n    value: function calcElligatorRistrettoMap(r0) {\n      var d = CURVE.d;\n      var r = mod(SQRT_M1 * r0 * r0);\n      var Ns = mod((r + 1n) * ONE_MINUS_D_SQ);\n      var c = -1n;\n      var D = mod((c - d * r) * mod(r + d));\n\n      var _uvRatio = uvRatio(Ns, D),\n          Ns_D_is_sq = _uvRatio.isValid,\n          s = _uvRatio.value;\n\n      var s_ = mod(s * r0);\n      if (!edIsNegative(s_)) s_ = mod(-s_);\n      if (!Ns_D_is_sq) s = s_;\n      if (!Ns_D_is_sq) c = r;\n      var Nt = mod(c * (r - 1n) * D_MINUS_ONE_SQ - D);\n      var s2 = s * s;\n      var W0 = mod((s + s) * D);\n      var W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n      var W2 = mod(1n - s2);\n      var W3 = mod(1n + s2);\n      return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n  }, {\n    key: \"fromRistrettoBytes\",\n    value: function fromRistrettoBytes(bytes) {\n      var a = CURVE.a,\n          d = CURVE.d;\n      var emsg = 'ExtendedPoint.fromRistrettoBytes: Cannot convert bytes to Ristretto Point';\n      var s = bytes255ToNumberLE(bytes);\n      if (!equalBytes(numberToBytesPadded(s, B32), bytes) || edIsNegative(s)) throw new Error(emsg);\n      var s2 = mod(s * s);\n      var u1 = mod(1n + a * s2);\n      var u2 = mod(1n - a * s2);\n      var u1_2 = mod(u1 * u1);\n      var u2_2 = mod(u2 * u2);\n      var v = mod(a * d * u1_2 - u2_2);\n\n      var _invertSqrt2 = invertSqrt(mod(v * u2_2)),\n          isValid = _invertSqrt2.isValid,\n          I = _invertSqrt2.value;\n\n      var Dx = mod(I * u2);\n      var Dy = mod(I * Dx * v);\n      var x = mod((s + s) * Dx);\n      if (edIsNegative(x)) x = mod(-x);\n      var y = mod(u1 * Dy);\n      var t = mod(x * y);\n      if (!isValid || edIsNegative(t) || y === 0n) throw new Error(emsg);\n      return new ExtendedPoint(x, y, 1n, t);\n    }\n  }]);\n\n  return ExtendedPoint;\n}();\n\nexports.ExtendedPoint = ExtendedPoint;\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, 1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(0n, 1n, 1n, 0n);\nvar pointPrecomputes = new WeakMap();\n\nvar Point = /*#__PURE__*/function () {\n  function Point(x, y) {\n    _classCallCheck(this, Point);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  _createClass(Point, [{\n    key: \"_setWindowSize\",\n    value: function _setWindowSize(windowSize) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n  }, {\n    key: \"toRawBytes\",\n    value: function toRawBytes() {\n      var hex = numberToHex(this.y);\n      var u8 = new Uint8Array(B32);\n\n      for (var i = hex.length - 2, j = 0; j < B32 && i >= 0; i -= 2, j++) {\n        u8[j] = Number.parseInt(hex[i] + hex[i + 1], 16);\n      }\n\n      var mask = this.x & 1n ? 0x80 : 0;\n      u8[B32 - 1] |= mask;\n      return u8;\n    }\n  }, {\n    key: \"toHex\",\n    value: function toHex() {\n      return bytesToHex(this.toRawBytes());\n    }\n  }, {\n    key: \"toX25519\",\n    value: function toX25519() {\n      return mod((1n + this.y) * invert(1n - this.y));\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.x === other.x && this.y === other.y;\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return new Point(mod(-this.x), this.y);\n    }\n  }, {\n    key: \"add\",\n    value: function add(other) {\n      return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(other) {\n      return this.add(other.negate());\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(scalar) {\n      return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n  }], [{\n    key: \"fromHex\",\n    value: function fromHex(hash) {\n      var d = CURVE.d,\n          P = CURVE.P;\n      var bytes = hash instanceof Uint8Array ? hash : hexToBytes(hash);\n      if (bytes.length !== 32) throw new Error('Point.fromHex: expected 32 bytes');\n      var last = bytes[31];\n      var normedLast = last & ~0x80;\n      var isLastByteOdd = (last & 0x80) !== 0;\n      var normed = Uint8Array.from(Array.from(bytes.slice(0, 31)).concat(normedLast));\n      var y = bytesToNumberLE(normed);\n      if (y >= P) throw new Error('Point.fromHex expects hex <= Fp');\n      var y2 = mod(y * y);\n      var u = mod(y2 - 1n);\n      var v = mod(d * y2 + 1n);\n\n      var _uvRatio2 = uvRatio(u, v),\n          isValid = _uvRatio2.isValid,\n          x = _uvRatio2.value;\n\n      if (!isValid) throw new Error('Point.fromHex: invalid y coordinate');\n      var isXOdd = (x & 1n) === 1n;\n\n      if (isLastByteOdd !== isXOdd) {\n        x = mod(-x);\n      }\n\n      return new Point(x, y);\n    }\n  }, {\n    key: \"fromPrivateKey\",\n    value: function () {\n      var _fromPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(privateKey) {\n        var privBytes;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return exports.utils.sha512(normalizePrivateKey(privateKey));\n\n              case 2:\n                privBytes = _context.sent;\n                return _context.abrupt(\"return\", Point.BASE.multiply(encodePrivate(privBytes)));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function fromPrivateKey(_x) {\n        return _fromPrivateKey.apply(this, arguments);\n      }\n\n      return fromPrivateKey;\n    }()\n  }]);\n\n  return Point;\n}();\n\nexports.Point = Point;\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(0n, 1n);\n\nvar Signature = /*#__PURE__*/function () {\n  function Signature(r, s) {\n    _classCallCheck(this, Signature);\n\n    this.r = r;\n    this.s = s;\n  }\n\n  _createClass(Signature, [{\n    key: \"toRawBytes\",\n    value: function toRawBytes() {\n      var numberBytes = hexToBytes(numberToHex(this.s)).reverse();\n      var sBytes = new Uint8Array(B32);\n      sBytes.set(numberBytes);\n      var res = new Uint8Array(B32 * 2);\n      res.set(this.r.toRawBytes());\n      res.set(sBytes, 32);\n      return res;\n    }\n  }, {\n    key: \"toHex\",\n    value: function toHex() {\n      return bytesToHex(this.toRawBytes());\n    }\n  }], [{\n    key: \"fromHex\",\n    value: function fromHex(hex) {\n      hex = ensureBytes(hex);\n      var r = Point.fromHex(hex.slice(0, 32));\n      var s = bytesToNumberLE(hex.slice(32));\n      if (!isWithinCurveOrder(s)) throw new Error('Signature.fromHex expects s <= CURVE.n');\n      return new Signature(r, s);\n    }\n  }]);\n\n  return Signature;\n}();\n\nexports.Signature = Signature;\nexports.SignResult = Signature;\n\nfunction concatBytes() {\n  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    arrays[_key] = arguments[_key];\n  }\n\n  if (arrays.length === 1) return arrays[0];\n  var length = arrays.reduce(function (a, arr) {\n    return a + arr.length;\n  }, 0);\n  var result = new Uint8Array(length);\n\n  for (var i = 0, pad = 0; i < arrays.length; i++) {\n    var arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n\n  return result;\n}\n\nfunction bytesToHex(uint8a) {\n  var hex = '';\n\n  for (var i = 0; i < uint8a.length; i++) {\n    hex += uint8a[i].toString(16).padStart(2, '0');\n  }\n\n  return hex;\n}\n\nfunction hexToBytes(hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  var array = new Uint8Array(hex.length / 2);\n\n  for (var i = 0; i < array.length; i++) {\n    var j = i * 2;\n    array[i] = Number.parseInt(hex.slice(j, j + 2), 16);\n  }\n\n  return array;\n}\n\nfunction numberToHex(num) {\n  var hex = num.toString(16);\n  return hex.length & 1 ? \"0\".concat(hex) : hex;\n}\n\nfunction numberToBytesPadded(num) {\n  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : B32;\n  var hex = numberToHex(num).padStart(length * 2, '0');\n  return hexToBytes(hex).reverse();\n}\n\nfunction edIsNegative(num) {\n  return (mod(num) & 1n) === 1n;\n}\n\nfunction isValidScalar(num) {\n  if (typeof num === 'bigint' && num > 0n) return true;\n  if (typeof num === 'number' && num > 0 && Number.isSafeInteger(num)) return true;\n  return false;\n}\n\nfunction bytesToNumberLE(uint8a) {\n  var value = 0n;\n\n  for (var i = 0; i < uint8a.length; i++) {\n    value += BigInt(uint8a[i]) << 8n * BigInt(i);\n  }\n\n  return value;\n}\n\nfunction bytes255ToNumberLE(bytes) {\n  return mod(bytesToNumberLE(bytes) & Math.pow(2n, 255n) - 1n);\n}\n\nfunction mod(a) {\n  var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CURVE.P;\n  var res = a % b;\n  return res >= 0n ? res : b + res;\n}\n\nfunction invert(number) {\n  var modulo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CURVE.P;\n\n  if (number === 0n || modulo <= 0n) {\n    throw new Error(\"invert: expected positive integers, got n=\".concat(number, \" mod=\").concat(modulo));\n  }\n\n  var a = mod(number, modulo);\n  var b = modulo;\n  var x = 0n,\n      y = 1n,\n      u = 1n,\n      v = 0n;\n\n  while (a !== 0n) {\n    var q = b / a;\n    var r = b % a;\n    var m = x - u * q;\n    var n = y - v * q;\n    var _ref3 = [a, r];\n    b = _ref3[0];\n    a = _ref3[1];\n    x = u;\n    y = v;\n    u = m;\n    v = n;\n  }\n\n  var gcd = b;\n  if (gcd !== 1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\nfunction invertBatch(nums) {\n  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CURVE.P;\n  var len = nums.length;\n  var scratch = new Array(len);\n  var acc = 1n;\n\n  for (var i = 0; i < len; i++) {\n    if (nums[i] === 0n) continue;\n    scratch[i] = acc;\n    acc = mod(acc * nums[i], n);\n  }\n\n  acc = invert(acc, n);\n\n  for (var _i = len - 1; _i >= 0; _i--) {\n    if (nums[_i] === 0n) continue;\n    var tmp = mod(acc * nums[_i], n);\n    nums[_i] = mod(acc * scratch[_i], n);\n    acc = tmp;\n  }\n\n  return nums;\n}\n\nfunction pow2(x, power) {\n  var P = CURVE.P;\n  var res = x;\n\n  while (power-- > 0n) {\n    res *= res;\n    res %= P;\n  }\n\n  return res;\n}\n\nfunction pow_2_252_3(x) {\n  var P = CURVE.P;\n  var x2 = x * x % P;\n  var b2 = x2 * x % P;\n  var b4 = pow2(b2, 2n) * b2 % P;\n  var b5 = pow2(b4, 1n) * x % P;\n  var b10 = pow2(b5, 5n) * b5 % P;\n  var b20 = pow2(b10, 10n) * b10 % P;\n  var b40 = pow2(b20, 20n) * b20 % P;\n  var b80 = pow2(b40, 40n) * b40 % P;\n  var b160 = pow2(b80, 80n) * b80 % P;\n  var b240 = pow2(b160, 80n) * b80 % P;\n  var b250 = pow2(b240, 10n) * b10 % P;\n  var pow_p_5_8 = pow2(b250, 2n) * x % P;\n  return pow_p_5_8;\n}\n\nfunction uvRatio(u, v) {\n  var v3 = mod(v * v * v);\n  var v7 = mod(v3 * v3 * v);\n  var x = mod(u * v3 * pow_2_252_3(u * v7));\n  var vx2 = mod(v * x * x);\n  var root1 = x;\n  var root2 = mod(x * SQRT_M1);\n  var useRoot1 = vx2 === u;\n  var useRoot2 = vx2 === mod(-u);\n  var noRoot = vx2 === mod(-u * SQRT_M1);\n  if (useRoot1) x = root1;\n  if (useRoot2 || noRoot) x = root2;\n  if (edIsNegative(x)) x = mod(-x);\n  return {\n    isValid: useRoot1 || useRoot2,\n    value: x\n  };\n}\n\nfunction invertSqrt(number) {\n  return uvRatio(1n, number);\n}\n\nfunction sha512ToNumberLE() {\n  return _sha512ToNumberLE.apply(this, arguments);\n}\n\nfunction _sha512ToNumberLE() {\n  _sha512ToNumberLE = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    var messageArray,\n        hash,\n        value,\n        _args3 = arguments;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            messageArray = concatBytes.apply(void 0, _args3);\n            _context3.next = 3;\n            return exports.utils.sha512(messageArray);\n\n          case 3:\n            hash = _context3.sent;\n            value = bytesToNumberLE(hash);\n            return _context3.abrupt(\"return\", mod(value, CURVE.n));\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _sha512ToNumberLE.apply(this, arguments);\n}\n\nfunction keyPrefix(privateBytes) {\n  return privateBytes.slice(B32);\n}\n\nfunction encodePrivate(privateBytes) {\n  var last = B32 - 1;\n  var head = privateBytes.slice(0, B32);\n  head[0] &= 248;\n  head[last] &= 127;\n  head[last] |= 64;\n  return mod(bytesToNumberLE(head), CURVE.n);\n}\n\nfunction equalBytes(b1, b2) {\n  if (b1.length !== b2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < b1.length; i++) {\n    if (b1[i] !== b2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction ensureBytes(hash) {\n  return hash instanceof Uint8Array ? hash : hexToBytes(hash);\n}\n\nfunction isWithinCurveOrder(num) {\n  return 0 < num && num < CURVE.n;\n}\n\nfunction normalizePrivateKey(key) {\n  var num;\n\n  if (typeof key === 'bigint' || typeof key === 'number' && Number.isSafeInteger(key)) {\n    num = BigInt(key);\n    if (num < 0n || num > Math.pow(2n, 256n)) throw new Error('Expected 32 bytes of private key');\n    key = num.toString(16).padStart(B32 * 2, '0');\n  }\n\n  if (typeof key === 'string') {\n    if (key.length !== 64) throw new Error('Expected 32 bytes of private key');\n    return hexToBytes(key);\n  } else if (key instanceof Uint8Array) {\n    if (key.length !== 32) throw new Error('Expected 32 bytes of private key');\n    return key;\n  } else {\n    throw new TypeError('Expected valid private key');\n  }\n}\n\nfunction getPublicKey(_x2) {\n  return _getPublicKey.apply(this, arguments);\n}\n\nfunction _getPublicKey() {\n  _getPublicKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(privateKey) {\n    var key;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return Point.fromPrivateKey(privateKey);\n\n          case 2:\n            key = _context4.sent;\n            return _context4.abrupt(\"return\", typeof privateKey === 'string' ? key.toHex() : key.toRawBytes());\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getPublicKey.apply(this, arguments);\n}\n\nexports.getPublicKey = getPublicKey;\n\nfunction sign(_x3, _x4) {\n  return _sign.apply(this, arguments);\n}\n\nfunction _sign() {\n  _sign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(hash, privateKey) {\n    var privBytes, p, P, msg, r, R, h, S, sig;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return exports.utils.sha512(normalizePrivateKey(privateKey));\n\n          case 2:\n            privBytes = _context5.sent;\n            p = encodePrivate(privBytes);\n            P = Point.BASE.multiply(p);\n            msg = ensureBytes(hash);\n            _context5.next = 8;\n            return sha512ToNumberLE(keyPrefix(privBytes), msg);\n\n          case 8:\n            r = _context5.sent;\n            R = Point.BASE.multiply(r);\n            _context5.next = 12;\n            return sha512ToNumberLE(R.toRawBytes(), P.toRawBytes(), msg);\n\n          case 12:\n            h = _context5.sent;\n            S = mod(r + h * p, CURVE.n);\n            sig = new Signature(R, S);\n            return _context5.abrupt(\"return\", typeof hash === 'string' ? sig.toHex() : sig.toRawBytes());\n\n          case 16:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _sign.apply(this, arguments);\n}\n\nexports.sign = sign;\n\nfunction verify(_x5, _x6, _x7) {\n  return _verify.apply(this, arguments);\n}\n\nfunction _verify() {\n  _verify = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(signature, hash, publicKey) {\n    var hs, Ph, Gs, RPh;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            hash = ensureBytes(hash);\n            if (!(publicKey instanceof Point)) publicKey = Point.fromHex(publicKey);\n            if (!(signature instanceof Signature)) signature = Signature.fromHex(signature);\n            _context6.next = 5;\n            return sha512ToNumberLE(signature.r.toRawBytes(), publicKey.toRawBytes(), hash);\n\n          case 5:\n            hs = _context6.sent;\n            Ph = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(hs);\n            Gs = ExtendedPoint.BASE.multiply(signature.s);\n            RPh = ExtendedPoint.fromAffine(signature.r).add(Ph);\n            return _context6.abrupt(\"return\", RPh.subtract(Gs).multiplyUnsafe(8n).equals(ExtendedPoint.ZERO));\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _verify.apply(this, arguments);\n}\n\nexports.verify = verify;\n\nPoint.BASE._setWindowSize(8);\n\nvar crypto = function () {\n  var webCrypto = typeof self === 'object' && 'crypto' in self ? self.crypto : undefined;\n\n  var nodeRequire = typeof module !== 'undefined' && typeof module.require === 'function' && module.require.bind(module);\n\n  return {\n    node: nodeRequire && !webCrypto ? nodeRequire('crypto') : undefined,\n    web: webCrypto\n  };\n}();\n\nexports.utils = {\n  TORSION_SUBGROUP: ['0100000000000000000000000000000000000000000000000000000000000000', 'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a', '0000000000000000000000000000000000000000000000000000000000000080', '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05', 'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f', '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85', '0000000000000000000000000000000000000000000000000000000000000000', 'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa'],\n  randomBytes: function randomBytes() {\n    var bytesLength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;\n\n    if (crypto.web) {\n      return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    } else if (crypto.node) {\n      var randomBytes = crypto.node.randomBytes;\n      return new Uint8Array(randomBytes(bytesLength).buffer);\n    } else {\n      throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n  },\n  randomPrivateKey: function randomPrivateKey() {\n    var i = 1024;\n\n    while (i--) {\n      var b32 = exports.utils.randomBytes(32);\n      var num = bytesToNumberLE(b32);\n      if (num > 1n && num < CURVE.n) return b32;\n    }\n\n    throw new Error('Valid private key was not found in 1024 iterations. PRNG is broken');\n  },\n  sha512: function () {\n    var _sha = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(message) {\n      var buffer;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!crypto.web) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 3;\n              return crypto.web.subtle.digest('SHA-512', message.buffer);\n\n            case 3:\n              buffer = _context2.sent;\n              return _context2.abrupt(\"return\", new Uint8Array(buffer));\n\n            case 7:\n              if (!crypto.node) {\n                _context2.next = 11;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", Uint8Array.from(crypto.node.createHash('sha512').update(message).digest()));\n\n            case 11:\n              throw new Error(\"The environment doesn't have sha512 function\");\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function sha512(_x8) {\n      return _sha.apply(this, arguments);\n    }\n\n    return sha512;\n  }(),\n  precompute: function precompute() {\n    var windowSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n    var point = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Point.BASE;\n    var cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n\n    cached._setWindowSize(windowSize);\n\n    cached.multiply(1n);\n    return cached;\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","utils","verify","sign","getPublicKey","SignResult","Signature","Point","ExtendedPoint","CURVE","a","d","P","n","h","Gx","Gy","B32","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","x","y","z","t","u1","mod","u2","invertSqrt","invsqrt","D1","D2","zInv","D","edIsNegative","s","numberToBytesPadded","other","b","T1","T2","Z1","Z2","X1","Y1","A","B","C","E","G","F","H","X3","Y3","T3","Z3","X2","Y2","double","add","negate","scalar","isValidScalar","TypeError","BigInt","p","ZERO","W","windows","points","base","window","push","i","affinePoint","equals","BASE","_WINDOW_SIZE","Error","precomputes","pointPrecomputes","get","precomputeWindow","normalizeZ","set","f","windowSize","mask","maxNumber","shiftBy","offset","wbits","Number","cached","Math","abs","wNAF","invZ","invert","toInv","invertBatch","map","toAffine","toAffineBatch","fromAffine","hash","r1","bytes255ToNumberLE","slice","R1","calcElligatorRistrettoMap","r2","R2","r0","r","Ns","c","uvRatio","Ns_D_is_sq","isValid","s_","Nt","s2","W0","W1","W2","W3","bytes","emsg","equalBytes","u1_2","u2_2","v","I","Dx","Dy","WeakMap","delete","hex","numberToHex","u8","Uint8Array","length","j","parseInt","bytesToHex","toRawBytes","multiply","hexToBytes","last","normedLast","isLastByteOdd","normed","from","Array","concat","bytesToNumberLE","y2","u","isXOdd","privateKey","sha512","normalizePrivateKey","privBytes","encodePrivate","numberBytes","reverse","sBytes","res","ensureBytes","fromHex","isWithinCurveOrder","concatBytes","arrays","reduce","arr","result","pad","uint8a","toString","padStart","array","num","isSafeInteger","number","modulo","q","m","gcd","nums","len","scratch","acc","tmp","pow2","power","pow_2_252_3","x2","b2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","sha512ToNumberLE","messageArray","keyPrefix","privateBytes","head","b1","key","fromPrivateKey","toHex","msg","R","S","sig","signature","publicKey","hs","Ph","multiplyUnsafe","Gs","RPh","subtract","_setWindowSize","crypto","webCrypto","self","undefined","nodeRequire","module","require","bind","node","web","TORSION_SUBGROUP","randomBytes","bytesLength","getRandomValues","buffer","randomPrivateKey","b32","message","subtle","digest","createHash","update","precompute","point"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/noble-ed25519/index.js"],"sourcesContent":["\"use strict\";\n/*! noble-ed25519 - MIT License (c) Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utils = exports.verify = exports.sign = exports.getPublicKey = exports.SignResult = exports.Signature = exports.Point = exports.ExtendedPoint = exports.CURVE = void 0;\nconst CURVE = {\n    a: -1n,\n    d: 37095705934669439343138083508754565189542113879843219016388785533085940283555n,\n    P: 2n ** 255n - 19n,\n    n: 2n ** 252n + 27742317777372353535851937790883648493n,\n    h: 8n,\n    Gx: 15112221349535400772501151409588531511454012693041857206046113283949847762202n,\n    Gy: 46316835694926478169428394003475163141307993866256225615783033603165251855960n,\n};\nexports.CURVE = CURVE;\nconst B32 = 32;\nconst SQRT_M1 = 19681161376707505956807079304988542015446066515923890162744021073123829784752n;\nconst SQRT_AD_MINUS_ONE = 25063068953384623474111414158702152701244531502492656460079210482610430750235n;\nconst INVSQRT_A_MINUS_D = 54469307008909316920995813868745141605393597292927456921205312896311721017578n;\nconst ONE_MINUS_D_SQ = 1159843021668779879193775521855586647937357759715417654439879720876111806838n;\nconst D_MINUS_ONE_SQ = 40440834346308536858101042469323190826248399146238708352240133220865137265952n;\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, 1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    static fromRistrettoHash(hash) {\n        const r1 = bytes255ToNumberLE(hash.slice(0, B32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hash.slice(B32, B32 * 2));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return R1.add(R2);\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + 1n) * ONE_MINUS_D_SQ);\n        let c = -1n;\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - 1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(1n - s2);\n        const W3 = mod(1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static fromRistrettoBytes(bytes) {\n        const { a, d } = CURVE;\n        const emsg = 'ExtendedPoint.fromRistrettoBytes: Cannot convert bytes to Ristretto Point';\n        const s = bytes255ToNumberLE(bytes);\n        if (!equalBytes(numberToBytesPadded(s, B32), bytes) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(1n + a * s2);\n        const u2 = mod(1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === 0n)\n            throw new Error(emsg);\n        return new ExtendedPoint(x, y, 1n, t);\n    }\n    toRistrettoBytes() {\n        let { x, y, z, t } = this;\n        const u1 = mod((z + y) * (z - y));\n        const u2 = mod(x * y);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2 ** 2n));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            [x, y] = [mod(y * SQRT_M1), mod(x * SQRT_M1)];\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberToBytesPadded(s, B32);\n    }\n    equals(other) {\n        const a = this;\n        const b = other;\n        const [T1, T2, Z1, Z2] = [a.t, b.t, a.z, b.z];\n        return mod(T1 * Z2) === mod(T2 * Z1);\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const X1 = this.x;\n        const Y1 = this.y;\n        const Z1 = this.z;\n        const { a } = CURVE;\n        const A = mod(X1 ** 2n);\n        const B = mod(Y1 ** 2n);\n        const C = mod(2n * Z1 ** 2n);\n        const D = mod(a * A);\n        const E = mod((X1 + Y1) ** 2n - A - B);\n        const G = mod(D + B);\n        const F = mod(G - C);\n        const H = mod(D - B);\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        const X1 = this.x;\n        const Y1 = this.y;\n        const Z1 = this.z;\n        const T1 = this.t;\n        const X2 = other.x;\n        const Y2 = other.y;\n        const Z2 = other.z;\n        const T2 = other.t;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === 0n) {\n            return this.double();\n        }\n        const C = mod(Z1 * 2n * T2);\n        const D = mod(T1 * 2n * Z2);\n        const E = mod(D + C);\n        const G = mod(B + A);\n        const H = mod(D - C);\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        if (!isValidScalar(scalar))\n            throw new TypeError('Point#multiply: expected number or bigint');\n        let n = mod(BigInt(scalar), CURVE.n);\n        if (n === 1n)\n            return this;\n        let p = ExtendedPoint.ZERO;\n        let d = this;\n        while (n > 0n) {\n            if (n & 1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= 1n;\n        }\n        return p;\n    }\n    precomputeWindow(W) {\n        const windows = 256 / W + 1;\n        let points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 256 / W + 1;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += 1n;\n            }\n            if (wbits === 0) {\n                f = f.add(window % 2 ? precomputes[offset].negate() : precomputes[offset]);\n            }\n            else {\n                const cached = precomputes[offset + Math.abs(wbits) - 1];\n                p = p.add(wbits < 0 ? cached.negate() : cached);\n            }\n        }\n        return [p, f];\n    }\n    multiply(scalar, affinePoint) {\n        if (!isValidScalar(scalar))\n            throw new TypeError('Point#multiply: expected number or bigint');\n        const n = mod(BigInt(scalar), CURVE.n);\n        return ExtendedPoint.normalizeZ(this.wNAF(n, affinePoint))[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const x = mod(this.x * invZ);\n        const y = mod(this.y * invZ);\n        return new Point(x, y);\n    }\n}\nexports.ExtendedPoint = ExtendedPoint;\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, 1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(0n, 1n, 1n, 0n);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hash) {\n        const { d, P } = CURVE;\n        const bytes = hash instanceof Uint8Array ? hash : hexToBytes(hash);\n        if (bytes.length !== 32)\n            throw new Error('Point.fromHex: expected 32 bytes');\n        const last = bytes[31];\n        const normedLast = last & ~0x80;\n        const isLastByteOdd = (last & 0x80) !== 0;\n        const normed = Uint8Array.from(Array.from(bytes.slice(0, 31)).concat(normedLast));\n        const y = bytesToNumberLE(normed);\n        if (y >= P)\n            throw new Error('Point.fromHex expects hex <= Fp');\n        const y2 = mod(y * y);\n        const u = mod(y2 - 1n);\n        const v = mod(d * y2 + 1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & 1n) === 1n;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        const privBytes = await exports.utils.sha512(normalizePrivateKey(privateKey));\n        return Point.BASE.multiply(encodePrivate(privBytes));\n    }\n    toRawBytes() {\n        const hex = numberToHex(this.y);\n        const u8 = new Uint8Array(B32);\n        for (let i = hex.length - 2, j = 0; j < B32 && i >= 0; i -= 2, j++) {\n            u8[j] = Number.parseInt(hex[i] + hex[i + 1], 16);\n        }\n        const mask = this.x & 1n ? 0x80 : 0;\n        u8[B32 - 1] |= mask;\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        return mod((1n + this.y) * invert(1n - this.y));\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nexports.Point = Point;\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(0n, 1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex);\n        const r = Point.fromHex(hex.slice(0, 32));\n        const s = bytesToNumberLE(hex.slice(32));\n        if (!isWithinCurveOrder(s))\n            throw new Error('Signature.fromHex expects s <= CURVE.n');\n        return new Signature(r, s);\n    }\n    toRawBytes() {\n        const numberBytes = hexToBytes(numberToHex(this.s)).reverse();\n        const sBytes = new Uint8Array(B32);\n        sBytes.set(numberBytes);\n        const res = new Uint8Array(B32 * 2);\n        res.set(this.r.toRawBytes());\n        res.set(sBytes, 32);\n        return res;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexports.Signature = Signature;\nexports.SignResult = Signature;\nfunction concatBytes(...arrays) {\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction bytesToHex(uint8a) {\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += uint8a[i].toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        array[i] = Number.parseInt(hex.slice(j, j + 2), 16);\n    }\n    return array;\n}\nfunction numberToHex(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction numberToBytesPadded(num, length = B32) {\n    const hex = numberToHex(num).padStart(length * 2, '0');\n    return hexToBytes(hex).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & 1n) === 1n;\n}\nfunction isValidScalar(num) {\n    if (typeof num === 'bigint' && num > 0n)\n        return true;\n    if (typeof num === 'number' && num > 0 && Number.isSafeInteger(num))\n        return true;\n    return false;\n}\nfunction bytesToNumberLE(uint8a) {\n    let value = 0n;\n    for (let i = 0; i < uint8a.length; i++) {\n        value += BigInt(uint8a[i]) << (8n * BigInt(i));\n    }\n    return value;\n}\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & (2n ** 255n - 1n));\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= 0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === 0n || modulo <= 0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let [x, y, u, v] = [0n, 1n, 1n, 0n];\n    while (a !== 0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        [b, a] = [a, r];\n        [x, y] = [u, v];\n        [u, v] = [m, n];\n    }\n    const gcd = b;\n    if (gcd !== 1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, n = CURVE.P) {\n    const len = nums.length;\n    const scratch = new Array(len);\n    let acc = 1n;\n    for (let i = 0; i < len; i++) {\n        if (nums[i] === 0n)\n            continue;\n        scratch[i] = acc;\n        acc = mod(acc * nums[i], n);\n    }\n    acc = invert(acc, n);\n    for (let i = len - 1; i >= 0; i--) {\n        if (nums[i] === 0n)\n            continue;\n        let tmp = mod(acc * nums[i], n);\n        nums[i] = mod(acc * scratch[i], n);\n        acc = tmp;\n    }\n    return nums;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > 0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, 2n) * b2) % P;\n    const b5 = (pow2(b4, 1n) * x) % P;\n    const b10 = (pow2(b5, 5n) * b5) % P;\n    const b20 = (pow2(b10, 10n) * b10) % P;\n    const b40 = (pow2(b20, 20n) * b20) % P;\n    const b80 = (pow2(b40, 40n) * b40) % P;\n    const b160 = (pow2(b80, 80n) * b80) % P;\n    const b240 = (pow2(b160, 80n) * b80) % P;\n    const b250 = (pow2(b240, 10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, 2n) * x) % P;\n    return pow_p_5_8;\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    let x = mod(u * v3 * pow_2_252_3(u * v7));\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(1n, number);\n}\nasync function sha512ToNumberLE(...args) {\n    const messageArray = concatBytes(...args);\n    const hash = await exports.utils.sha512(messageArray);\n    const value = bytesToNumberLE(hash);\n    return mod(value, CURVE.n);\n}\nfunction keyPrefix(privateBytes) {\n    return privateBytes.slice(B32);\n}\nfunction encodePrivate(privateBytes) {\n    const last = B32 - 1;\n    const head = privateBytes.slice(0, B32);\n    head[0] &= 248;\n    head[last] &= 127;\n    head[last] |= 64;\n    return mod(bytesToNumberLE(head), CURVE.n);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hash) {\n    return hash instanceof Uint8Array ? hash : hexToBytes(hash);\n}\nfunction isWithinCurveOrder(num) {\n    return 0 < num && num < CURVE.n;\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint' || (typeof key === 'number' && Number.isSafeInteger(key))) {\n        num = BigInt(key);\n        if (num < 0n || num > 2n ** 256n)\n            throw new Error('Expected 32 bytes of private key');\n        key = num.toString(16).padStart(B32 * 2, '0');\n    }\n    if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        return hexToBytes(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        return key;\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n}\nasync function getPublicKey(privateKey) {\n    const key = await Point.fromPrivateKey(privateKey);\n    return typeof privateKey === 'string' ? key.toHex() : key.toRawBytes();\n}\nexports.getPublicKey = getPublicKey;\nasync function sign(hash, privateKey) {\n    const privBytes = await exports.utils.sha512(normalizePrivateKey(privateKey));\n    const p = encodePrivate(privBytes);\n    const P = Point.BASE.multiply(p);\n    const msg = ensureBytes(hash);\n    const r = await sha512ToNumberLE(keyPrefix(privBytes), msg);\n    const R = Point.BASE.multiply(r);\n    const h = await sha512ToNumberLE(R.toRawBytes(), P.toRawBytes(), msg);\n    const S = mod(r + h * p, CURVE.n);\n    const sig = new Signature(R, S);\n    return typeof hash === 'string' ? sig.toHex() : sig.toRawBytes();\n}\nexports.sign = sign;\nasync function verify(signature, hash, publicKey) {\n    hash = ensureBytes(hash);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey);\n    if (!(signature instanceof Signature))\n        signature = Signature.fromHex(signature);\n    const hs = await sha512ToNumberLE(signature.r.toRawBytes(), publicKey.toRawBytes(), hash);\n    const Ph = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(hs);\n    const Gs = ExtendedPoint.BASE.multiply(signature.s);\n    const RPh = ExtendedPoint.fromAffine(signature.r).add(Ph);\n    return RPh.subtract(Gs).multiplyUnsafe(8n).equals(ExtendedPoint.ZERO);\n}\nexports.verify = verify;\nPoint.BASE._setWindowSize(8);\nconst crypto = (() => {\n    const webCrypto = typeof self === 'object' && 'crypto' in self ? self.crypto : undefined;\n    const nodeRequire = typeof module !== 'undefined' &&\n        typeof module.require === 'function' &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire('crypto') : undefined,\n        web: webCrypto,\n    };\n})();\nexports.utils = {\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        let i = 1024;\n        while (i--) {\n            const b32 = exports.utils.randomBytes(32);\n            const num = bytesToNumberLE(b32);\n            if (num > 1n && num < CURVE.n)\n                return b32;\n        }\n        throw new Error('Valid private key was not found in 1024 iterations. PRNG is broken');\n    },\n    sha512: async (message) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(1n);\n        return cached;\n    },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
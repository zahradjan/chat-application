{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _createForOfIteratorHelper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _inherits = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _wrapNativeSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\n\nvar AggregateError = require('aggregate-error');\n\nvar PCancelable = require('p-cancelable');\n\nvar FilterError = /*#__PURE__*/function (_Error) {\n  _inherits(FilterError, _Error);\n\n  var _super = _createSuper(FilterError);\n\n  function FilterError() {\n    _classCallCheck(this, FilterError);\n\n    return _super.apply(this, arguments);\n  }\n\n  return _createClass(FilterError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar pSome = function pSome(iterable, options) {\n  return new PCancelable(function (resolve, reject, onCancel) {\n    var count = options.count,\n        _options$filter = options.filter,\n        filter = _options$filter === void 0 ? function () {\n      return true;\n    } : _options$filter;\n\n    if (!Number.isFinite(count)) {\n      reject(new TypeError(\"Expected a finite number, got \".concat(typeof options.count)));\n      return;\n    }\n\n    var values = [];\n    var errors = [];\n    var elementCount = 0;\n    var isSettled = false;\n    var completed = new Set();\n\n    var maybeSettle = function maybeSettle() {\n      if (values.length === count) {\n        resolve(values);\n        isSettled = true;\n      }\n\n      if (elementCount - errors.length < count) {\n        reject(new AggregateError(errors));\n        isSettled = true;\n      }\n\n      return isSettled;\n    };\n\n    var cancelPending = function cancelPending() {\n      var _iterator = _createForOfIteratorHelper(iterable),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var promise = _step.value;\n\n          if (!completed.has(promise) && typeof promise.cancel === 'function') {\n            promise.cancel();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    };\n\n    onCancel(cancelPending);\n\n    var _iterator2 = _createForOfIteratorHelper(iterable),\n        _step2;\n\n    try {\n      var _loop = function _loop() {\n        var element = _step2.value;\n        elementCount++;\n\n        _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var value;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return element;\n\n                case 3:\n                  value = _context.sent;\n\n                  if (!isSettled) {\n                    _context.next = 6;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\");\n\n                case 6:\n                  if (filter(value)) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  throw new FilterError('Value does not satisfy filter');\n\n                case 8:\n                  values.push(value);\n                  _context.next = 14;\n                  break;\n\n                case 11:\n                  _context.prev = 11;\n                  _context.t0 = _context[\"catch\"](0);\n                  errors.push(_context.t0);\n\n                case 14:\n                  _context.prev = 14;\n                  completed.add(element);\n\n                  if (!isSettled && maybeSettle()) {\n                    cancelPending();\n                  }\n\n                  return _context.finish(14);\n\n                case 18:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 11, 14, 18]]);\n        }))();\n      };\n\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    if (count > elementCount) {\n      reject(new RangeError(\"Expected input to contain at least \".concat(options.count, \" items, but contains \").concat(elementCount, \" items\")));\n      cancelPending();\n    }\n  });\n};\n\nmodule.exports = pSome;\nmodule.exports.AggregateError = AggregateError;\nmodule.exports.FilterError = FilterError;","map":{"version":3,"names":["AggregateError","require","PCancelable","FilterError","Error","pSome","iterable","options","resolve","reject","onCancel","count","filter","Number","isFinite","TypeError","values","errors","elementCount","isSettled","completed","Set","maybeSettle","length","cancelPending","promise","has","cancel","element","value","push","add","RangeError","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/p-some/index.js"],"sourcesContent":["'use strict';\nconst AggregateError = require('aggregate-error');\nconst PCancelable = require('p-cancelable');\n\nclass FilterError extends Error { }\n\nconst pSome = (iterable, options) => new PCancelable((resolve, reject, onCancel) => {\n\tconst {\n\t\tcount,\n\t\tfilter = () => true\n\t} = options;\n\n\tif (!Number.isFinite(count)) {\n\t\treject(new TypeError(`Expected a finite number, got ${typeof options.count}`));\n\t\treturn;\n\t}\n\n\tconst values = [];\n\tconst errors = [];\n\tlet elementCount = 0;\n\tlet isSettled = false;\n\n\tconst completed = new Set();\n\tconst maybeSettle = () => {\n\t\tif (values.length === count) {\n\t\t\tresolve(values);\n\t\t\tisSettled = true;\n\t\t}\n\n\t\tif (elementCount - errors.length < count) {\n\t\t\treject(new AggregateError(errors));\n\t\t\tisSettled = true;\n\t\t}\n\n\t\treturn isSettled;\n\t};\n\n\tconst cancelPending = () => {\n\t\tfor (const promise of iterable) {\n\t\t\tif (!completed.has(promise) && typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\t\t}\n\t};\n\n\tonCancel(cancelPending);\n\n\tfor (const element of iterable) {\n\t\telementCount++;\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst value = await element;\n\n\t\t\t\tif (isSettled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!filter(value)) {\n\t\t\t\t\tthrow new FilterError('Value does not satisfy filter');\n\t\t\t\t}\n\n\t\t\t\tvalues.push(value);\n\t\t\t} catch (error) {\n\t\t\t\terrors.push(error);\n\t\t\t} finally {\n\t\t\t\tcompleted.add(element);\n\n\t\t\t\tif (!isSettled && maybeSettle()) {\n\t\t\t\t\tcancelPending();\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t}\n\n\tif (count > elementCount) {\n\t\treject(new RangeError(`Expected input to contain at least ${options.count} items, but contains ${elementCount} items`));\n\t\tcancelPending();\n\t}\n});\n\nmodule.exports = pSome;\nmodule.exports.AggregateError = AggregateError;\nmodule.exports.FilterError = FilterError;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AACA,IAAMA,cAAc,GAAGC,OAAO,CAAC,iBAAD,CAA9B;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,cAAD,CAA3B;;IAEME,W;;;;;;;;;;;;iCAAoBC,K;;AAE1B,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,QAAD,EAAWC,OAAX;EAAA,OAAuB,IAAIL,WAAJ,CAAgB,UAACM,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,EAA+B;IACnF,IACCC,KADD,GAGIJ,OAHJ,CACCI,KADD;IAAA,sBAGIJ,OAHJ,CAECK,MAFD;IAAA,IAECA,MAFD,gCAEU;MAAA,OAAM,IAAN;IAAA,CAFV;;IAKA,IAAI,CAACC,MAAM,CAACC,QAAP,CAAgBH,KAAhB,CAAL,EAA6B;MAC5BF,MAAM,CAAC,IAAIM,SAAJ,yCAA+C,OAAOR,OAAO,CAACI,KAA9D,EAAD,CAAN;MACA;IACA;;IAED,IAAMK,MAAM,GAAG,EAAf;IACA,IAAMC,MAAM,GAAG,EAAf;IACA,IAAIC,YAAY,GAAG,CAAnB;IACA,IAAIC,SAAS,GAAG,KAAhB;IAEA,IAAMC,SAAS,GAAG,IAAIC,GAAJ,EAAlB;;IACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;MACzB,IAAIN,MAAM,CAACO,MAAP,KAAkBZ,KAAtB,EAA6B;QAC5BH,OAAO,CAACQ,MAAD,CAAP;QACAG,SAAS,GAAG,IAAZ;MACA;;MAED,IAAID,YAAY,GAAGD,MAAM,CAACM,MAAtB,GAA+BZ,KAAnC,EAA0C;QACzCF,MAAM,CAAC,IAAIT,cAAJ,CAAmBiB,MAAnB,CAAD,CAAN;QACAE,SAAS,GAAG,IAAZ;MACA;;MAED,OAAOA,SAAP;IACA,CAZD;;IAcA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,GAAM;MAAA,2CACLlB,QADK;MAAA;;MAAA;QAC3B,oDAAgC;UAAA,IAArBmB,OAAqB;;UAC/B,IAAI,CAACL,SAAS,CAACM,GAAV,CAAcD,OAAd,CAAD,IAA2B,OAAOA,OAAO,CAACE,MAAf,KAA0B,UAAzD,EAAqE;YACpEF,OAAO,CAACE,MAAR;UACA;QACD;MAL0B;QAAA;MAAA;QAAA;MAAA;IAM3B,CAND;;IAQAjB,QAAQ,CAACc,aAAD,CAAR;;IAvCmF,4CAyC7DlB,QAzC6D;IAAA;;IAAA;MAAA;QAAA,IAyCxEsB,OAzCwE;QA0ClFV,YAAY;;QAEZ,2DAAC;UAAA;UAAA;YAAA;cAAA;gBAAA;kBAAA;kBAAA;kBAAA,OAEqBU,OAFrB;;gBAAA;kBAEOC,KAFP;;kBAAA,KAIKV,SAJL;oBAAA;oBAAA;kBAAA;;kBAAA;;gBAAA;kBAAA,IAQMP,MAAM,CAACiB,KAAD,CARZ;oBAAA;oBAAA;kBAAA;;kBAAA,MASQ,IAAI1B,WAAJ,CAAgB,+BAAhB,CATR;;gBAAA;kBAYCa,MAAM,CAACc,IAAP,CAAYD,KAAZ;kBAZD;kBAAA;;gBAAA;kBAAA;kBAAA;kBAcCZ,MAAM,CAACa,IAAP;;gBAdD;kBAAA;kBAgBCV,SAAS,CAACW,GAAV,CAAcH,OAAd;;kBAEA,IAAI,CAACT,SAAD,IAAcG,WAAW,EAA7B,EAAiC;oBAChCE,aAAa;kBACb;;kBApBF;;gBAAA;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA,CAAD;MA5CkF;;MAyCnF,uDAAgC;QAAA;MA0B/B;IAnEkF;MAAA;IAAA;MAAA;IAAA;;IAqEnF,IAAIb,KAAK,GAAGO,YAAZ,EAA0B;MACzBT,MAAM,CAAC,IAAIuB,UAAJ,8CAAqDzB,OAAO,CAACI,KAA7D,kCAA0FO,YAA1F,YAAD,CAAN;MACAM,aAAa;IACb;EACD,CAzEoC,CAAvB;AAAA,CAAd;;AA2EAS,MAAM,CAACC,OAAP,GAAiB7B,KAAjB;AACA4B,MAAM,CAACC,OAAP,CAAelC,cAAf,GAAgCA,cAAhC;AACAiC,MAAM,CAACC,OAAP,CAAe/B,WAAf,GAA6BA,WAA7B"},"metadata":{},"sourceType":"script"}
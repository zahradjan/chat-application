{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nvar _require = require('./response-types'),\n    Value = _require.Value;\n\nvar _require2 = require('uint8arrays/from-string'),\n    uint8ArrayFromString = _require2.fromString;\n\nvar _require3 = require('uint8arrays/to-string'),\n    uint8ArrayToString = _require3.toString;\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {DHTAPI[\"get\"]}\n   */\n  function get(_x) {\n    return _get.apply(this, arguments);\n  }\n\n  function _get() {\n    _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key) {\n      var options,\n          res,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          message,\n          _args = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('dht/get', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 6;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 8:\n              _context.next = 10;\n              return _iterator.next();\n\n            case 10:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 17;\n                break;\n              }\n\n              message = _step.value;\n\n              if (!(message.Type === Value)) {\n                _context.next = 14;\n                break;\n              }\n\n              return _context.abrupt(\"return\", uint8ArrayFromString(message.Extra, 'base64pad'));\n\n            case 14:\n              _iteratorAbruptCompletion = false;\n              _context.next = 8;\n              break;\n\n            case 17:\n              _context.next = 23;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](6);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 23:\n              _context.prev = 23;\n              _context.prev = 24;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 28;\n                break;\n              }\n\n              _context.next = 28;\n              return _iterator.return();\n\n            case 28:\n              _context.prev = 28;\n\n              if (!_didIteratorError) {\n                _context.next = 31;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 31:\n              return _context.finish(28);\n\n            case 32:\n              return _context.finish(23);\n\n            case 33:\n              throw new Error('not found');\n\n            case 34:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 19, 23, 33], [24,, 28, 32]]);\n    }));\n    return _get.apply(this, arguments);\n  }\n\n  return get;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","Value","uint8ArrayFromString","fromString","uint8ArrayToString","toString","module","exports","api","get","key","options","post","signal","searchParams","arg","Uint8Array","headers","res","ndjson","message","Type","Extra","Error"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/dht/get.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst { Value } = require('./response-types')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {DHTAPI[\"get\"]}\n   */\n  async function get (key, options = {}) {\n    const res = await api.post('dht/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const message of res.ndjson()) {\n      if (message.Type === Value) {\n        return uint8ArrayFromString(message.Extra, 'base64pad')\n      }\n    }\n\n    throw new Error('not found')\n  }\n\n  return get\n})\n"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;;AACA,eAAkBA,OAAO,CAAC,kBAAD,CAAzB;AAAA,IAAQE,KAAR,YAAQA,KAAR;;AACA,gBAA6CF,OAAO,CAAC,yBAAD,CAApD;AAAA,IAAoBG,oBAApB,aAAQC,UAAR;;AACA,gBAAyCJ,OAAO,CAAC,uBAAD,CAAhD;AAAA,IAAkBK,kBAAlB,aAAQC,QAAR;AAEA;AACA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiBT,SAAS,CAAC,UAAAU,GAAG,EAAI;EAChC;AACF;AACA;EAHkC,SAIjBC,GAJiB;IAAA;EAAA;;EAAA;IAAA,kEAIhC,iBAAoBC,GAApB;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAyBC,OAAzB,2DAAmC,EAAnC;cAAA;cAAA,OACoBH,GAAG,CAACI,IAAJ,CAAS,SAAT,EAAoB;gBACpCC,MAAM,EAAEF,OAAO,CAACE,MADoB;gBAEpCC,YAAY,EAAEd,iBAAiB;kBAC7Be,GAAG,EAAEL,GAAG,YAAYM,UAAf,GAA4BZ,kBAAkB,CAACM,GAAD,CAA9C,GAAsDA;gBAD9B,GAE1BC,OAF0B,EAFK;gBAMpCM,OAAO,EAAEN,OAAO,CAACM;cANmB,CAApB,CADpB;;YAAA;cACQC,GADR;cAAA;cAAA;cAAA;cAAA,2BAU8BA,GAAG,CAACC,MAAJ,EAV9B;;YAAA;cAAA;cAAA;;YAAA;cAAA;gBAAA;gBAAA;cAAA;;cAUmBC,OAVnB;;cAAA,MAWQA,OAAO,CAACC,IAAR,KAAiBpB,KAXzB;gBAAA;gBAAA;cAAA;;cAAA,iCAYaC,oBAAoB,CAACkB,OAAO,CAACE,KAAT,EAAgB,WAAhB,CAZjC;;YAAA;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;cAAA;;YAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAAA;;YAAA;cAAA;;YAAA;cAAA,MAgBQ,IAAIC,KAAJ,CAAU,WAAV,CAhBR;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJgC;IAAA;EAAA;;EAuBhC,OAAOd,GAAP;AACD,CAxByB,CAA1B"},"metadata":{},"sourceType":"script"}
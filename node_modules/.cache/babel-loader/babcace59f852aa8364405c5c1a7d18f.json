{"ast":null,"code":"'use strict';\n/**\n * Error raised when there is lock already in place when repo is being opened.\n */\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _inherits = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _wrapNativeSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\n\nvar LockExistsError = /*#__PURE__*/function (_Error) {\n  _inherits(LockExistsError, _Error);\n\n  var _super = _createSuper(LockExistsError);\n\n  /**\n   * @param {string} [message]\n   */\n  function LockExistsError(message) {\n    var _this;\n\n    _classCallCheck(this, LockExistsError);\n\n    _this = _super.call(this, message);\n    _this.name = 'LockExistsError';\n    _this.code = LockExistsError.code;\n    return _this;\n  }\n\n  return _createClass(LockExistsError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nLockExistsError.code = 'ERR_LOCK_EXISTS';\nexports.LockExistsError = LockExistsError;\n/**\n * Error raised when requested item is not found.\n */\n\nvar NotFoundError = /*#__PURE__*/function (_Error2) {\n  _inherits(NotFoundError, _Error2);\n\n  var _super2 = _createSuper(NotFoundError);\n\n  /**\n   * @param {string} [message]\n   */\n  function NotFoundError(message) {\n    var _this2;\n\n    _classCallCheck(this, NotFoundError);\n\n    _this2 = _super2.call(this, message);\n    _this2.name = 'NotFoundError';\n    _this2.code = NotFoundError.code;\n    return _this2;\n  }\n\n  return _createClass(NotFoundError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nNotFoundError.code = 'ERR_NOT_FOUND';\nexports.NotFoundError = NotFoundError;\n/**\n * Error raised when version of the stored repo is not compatible with version of this package.\n */\n\nvar InvalidRepoVersionError = /*#__PURE__*/function (_Error3) {\n  _inherits(InvalidRepoVersionError, _Error3);\n\n  var _super3 = _createSuper(InvalidRepoVersionError);\n\n  /**\n   * @param {string} [message]\n   */\n  function InvalidRepoVersionError(message) {\n    var _this3;\n\n    _classCallCheck(this, InvalidRepoVersionError);\n\n    _this3 = _super3.call(this, message);\n    _this3.name = 'InvalidRepoVersionError';\n    _this3.code = InvalidRepoVersionError.code;\n    return _this3;\n  }\n\n  return _createClass(InvalidRepoVersionError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nInvalidRepoVersionError.code = 'ERR_INVALID_REPO_VERSION';\nexports.InvalidRepoVersionError = InvalidRepoVersionError;\nexports.ERR_REPO_NOT_INITIALIZED = 'ERR_REPO_NOT_INITIALIZED';\nexports.ERR_REPO_ALREADY_OPEN = 'ERR_REPO_ALREADY_OPEN';\nexports.ERR_REPO_ALREADY_CLOSED = 'ERR_REPO_ALREADY_CLOSED';","map":{"version":3,"names":["LockExistsError","message","name","code","Error","exports","NotFoundError","InvalidRepoVersionError","ERR_REPO_NOT_INITIALIZED","ERR_REPO_ALREADY_OPEN","ERR_REPO_ALREADY_CLOSED"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-repo/src/errors/index.js"],"sourcesContent":["'use strict'\n\n/**\n * Error raised when there is lock already in place when repo is being opened.\n */\nclass LockExistsError extends Error {\n  /**\n   * @param {string} [message]\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'LockExistsError'\n    this.code = LockExistsError.code\n  }\n}\n\nLockExistsError.code = 'ERR_LOCK_EXISTS'\nexports.LockExistsError = LockExistsError\n\n/**\n * Error raised when requested item is not found.\n */\nclass NotFoundError extends Error {\n  /**\n   * @param {string} [message]\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'NotFoundError'\n    this.code = NotFoundError.code\n  }\n}\n\nNotFoundError.code = 'ERR_NOT_FOUND'\nexports.NotFoundError = NotFoundError\n\n/**\n * Error raised when version of the stored repo is not compatible with version of this package.\n */\nclass InvalidRepoVersionError extends Error {\n  /**\n   * @param {string} [message]\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'InvalidRepoVersionError'\n    this.code = InvalidRepoVersionError.code\n  }\n}\n\nInvalidRepoVersionError.code = 'ERR_INVALID_REPO_VERSION'\nexports.InvalidRepoVersionError = InvalidRepoVersionError\n\nexports.ERR_REPO_NOT_INITIALIZED = 'ERR_REPO_NOT_INITIALIZED'\nexports.ERR_REPO_ALREADY_OPEN = 'ERR_REPO_ALREADY_OPEN'\nexports.ERR_REPO_ALREADY_CLOSED = 'ERR_REPO_ALREADY_CLOSED'\n"],"mappings":"AAAA;AAEA;AACA;AACA;;;;;;;;;;;;IACMA,e;;;;;EACJ;AACF;AACA;EACE,yBAAaC,OAAb,EAAsB;IAAA;;IAAA;;IACpB,0BAAMA,OAAN;IACA,MAAKC,IAAL,GAAY,iBAAZ;IACA,MAAKC,IAAL,GAAYH,eAAe,CAACG,IAA5B;IAHoB;EAIrB;;;iCAR2BC,K;;AAW9BJ,eAAe,CAACG,IAAhB,GAAuB,iBAAvB;AACAE,OAAO,CAACL,eAAR,GAA0BA,eAA1B;AAEA;AACA;AACA;;IACMM,a;;;;;EACJ;AACF;AACA;EACE,uBAAaL,OAAb,EAAsB;IAAA;;IAAA;;IACpB,4BAAMA,OAAN;IACA,OAAKC,IAAL,GAAY,eAAZ;IACA,OAAKC,IAAL,GAAYG,aAAa,CAACH,IAA1B;IAHoB;EAIrB;;;iCARyBC,K;;AAW5BE,aAAa,CAACH,IAAd,GAAqB,eAArB;AACAE,OAAO,CAACC,aAAR,GAAwBA,aAAxB;AAEA;AACA;AACA;;IACMC,uB;;;;;EACJ;AACF;AACA;EACE,iCAAaN,OAAb,EAAsB;IAAA;;IAAA;;IACpB,4BAAMA,OAAN;IACA,OAAKC,IAAL,GAAY,yBAAZ;IACA,OAAKC,IAAL,GAAYI,uBAAuB,CAACJ,IAApC;IAHoB;EAIrB;;;iCARmCC,K;;AAWtCG,uBAAuB,CAACJ,IAAxB,GAA+B,0BAA/B;AACAE,OAAO,CAACE,uBAAR,GAAkCA,uBAAlC;AAEAF,OAAO,CAACG,wBAAR,GAAmC,0BAAnC;AACAH,OAAO,CAACI,qBAAR,GAAgC,uBAAhC;AACAJ,OAAO,CAACK,uBAAR,GAAkC,yBAAlC"},"metadata":{},"sourceType":"script"}
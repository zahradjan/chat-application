{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _possibleConstructorReturn = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\").default;\n\nvar _inherits = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\n/*! simple-peer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nvar debug = require('debug')('simple-peer');\n\nvar getBrowserRTC = require('get-browser-rtc');\n\nvar randombytes = require('randombytes');\n\nvar stream = require('readable-stream');\n\nvar queueMicrotask = require('queue-microtask'); // TODO: remove when Node 10 is not supported\n\n\nvar errCode = require('err-code');\n\nvar MAX_BUFFERED_AMOUNT = 64 * 1024;\nvar ICECOMPLETE_TIMEOUT = 5 * 1000;\nvar CHANNEL_CLOSING_TIMEOUT = 5 * 1000; // HACK: Filter trickle lines when trickle is disabled #354\n\nfunction filterTrickle(sdp) {\n  return sdp.replace(/a=ice-options:trickle\\s\\n/g, '');\n}\n\nfunction warn(message) {\n  console.warn(message);\n}\n/**\n * WebRTC peer connection. Same API as node core `net.Socket`, plus a few extra methods.\n * Duplex stream.\n * @param {Object} opts\n */\n\n\nvar Peer = /*#__PURE__*/function (_stream$Duplex) {\n  \"use strict\";\n\n  _inherits(Peer, _stream$Duplex);\n\n  var _super = _createSuper(Peer);\n\n  function Peer(opts) {\n    var _this;\n\n    _classCallCheck(this, Peer);\n\n    opts = Object.assign({\n      allowHalfOpen: false\n    }, opts);\n    _this = _super.call(this, opts);\n    _this._id = randombytes(4).toString('hex').slice(0, 7);\n\n    _this._debug('new peer %o', opts);\n\n    _this.channelName = opts.initiator ? opts.channelName || randombytes(20).toString('hex') : null;\n    _this.initiator = opts.initiator || false;\n    _this.channelConfig = opts.channelConfig || Peer.channelConfig;\n    _this.negotiated = _this.channelConfig.negotiated;\n    _this.config = Object.assign({}, Peer.config, opts.config);\n    _this.offerOptions = opts.offerOptions || {};\n    _this.answerOptions = opts.answerOptions || {};\n\n    _this.sdpTransform = opts.sdpTransform || function (sdp) {\n      return sdp;\n    };\n\n    _this.streams = opts.streams || (opts.stream ? [opts.stream] : []); // support old \"stream\" option\n\n    _this.trickle = opts.trickle !== undefined ? opts.trickle : true;\n    _this.allowHalfTrickle = opts.allowHalfTrickle !== undefined ? opts.allowHalfTrickle : false;\n    _this.iceCompleteTimeout = opts.iceCompleteTimeout || ICECOMPLETE_TIMEOUT;\n    _this._connected = false;\n    _this.remoteAddress = undefined;\n    _this.remoteFamily = undefined;\n    _this.remotePort = undefined;\n    _this.localAddress = undefined;\n    _this.localFamily = undefined;\n    _this.localPort = undefined;\n    _this._wrtc = opts.wrtc && typeof opts.wrtc === 'object' ? opts.wrtc : getBrowserRTC();\n\n    if (!_this._wrtc) {\n      if (typeof window === 'undefined') {\n        throw errCode(new Error('No WebRTC support: Specify `opts.wrtc` option in this environment'), 'ERR_WEBRTC_SUPPORT');\n      } else {\n        throw errCode(new Error('No WebRTC support: Not a supported browser'), 'ERR_WEBRTC_SUPPORT');\n      }\n    }\n\n    _this._pcReady = false;\n    _this._channelReady = false;\n    _this._iceComplete = false; // ice candidate trickle done (got null candidate)\n\n    _this._iceCompleteTimer = null; // send an offer/answer anyway after some timeout\n\n    _this._channel = null;\n    _this._pendingCandidates = [];\n    _this._isNegotiating = _this.negotiated ? false : !_this.initiator; // is this peer waiting for negotiation to complete?\n\n    _this._batchedNegotiation = false; // batch synchronous negotiations\n\n    _this._queuedNegotiation = false; // is there a queued negotiation request?\n\n    _this._sendersAwaitingStable = [];\n    _this._senderMap = new Map();\n    _this._firstStable = true;\n    _this._closingInterval = null;\n    _this._remoteTracks = [];\n    _this._remoteStreams = [];\n    _this._chunk = null;\n    _this._cb = null;\n    _this._interval = null;\n\n    try {\n      _this._pc = new _this._wrtc.RTCPeerConnection(_this.config);\n    } catch (err) {\n      queueMicrotask(function () {\n        return _this.destroy(errCode(err, 'ERR_PC_CONSTRUCTOR'));\n      });\n      return _possibleConstructorReturn(_this);\n    } // We prefer feature detection whenever possible, but sometimes that's not\n    // possible for certain implementations.\n\n\n    _this._isReactNativeWebrtc = typeof _this._pc._peerConnectionId === 'number';\n\n    _this._pc.oniceconnectionstatechange = function () {\n      _this._onIceStateChange();\n    };\n\n    _this._pc.onicegatheringstatechange = function () {\n      _this._onIceStateChange();\n    };\n\n    _this._pc.onconnectionstatechange = function () {\n      _this._onConnectionStateChange();\n    };\n\n    _this._pc.onsignalingstatechange = function () {\n      _this._onSignalingStateChange();\n    };\n\n    _this._pc.onicecandidate = function (event) {\n      _this._onIceCandidate(event);\n    }; // Other spec events, unused by this implementation:\n    // - onconnectionstatechange\n    // - onicecandidateerror\n    // - onfingerprintfailure\n    // - onnegotiationneeded\n\n\n    if (_this.initiator || _this.negotiated) {\n      _this._setupData({\n        channel: _this._pc.createDataChannel(_this.channelName, _this.channelConfig)\n      });\n    } else {\n      _this._pc.ondatachannel = function (event) {\n        _this._setupData(event);\n      };\n    }\n\n    if (_this.streams) {\n      _this.streams.forEach(function (stream) {\n        _this.addStream(stream);\n      });\n    }\n\n    _this._pc.ontrack = function (event) {\n      _this._onTrack(event);\n    };\n\n    if (_this.initiator) {\n      _this._needsNegotiation();\n    }\n\n    _this._onFinishBound = function () {\n      _this._onFinish();\n    };\n\n    _this.once('finish', _this._onFinishBound);\n\n    return _this;\n  }\n\n  _createClass(Peer, [{\n    key: \"bufferSize\",\n    get: function get() {\n      return this._channel && this._channel.bufferedAmount || 0;\n    } // HACK: it's possible channel.readyState is \"closing\" before peer.destroy() fires\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return this._connected && this._channel.readyState === 'open';\n    }\n  }, {\n    key: \"address\",\n    value: function address() {\n      return {\n        port: this.localPort,\n        family: this.localFamily,\n        address: this.localAddress\n      };\n    }\n  }, {\n    key: \"signal\",\n    value: function signal(data) {\n      var _this2 = this;\n\n      if (this.destroyed) throw errCode(new Error('cannot signal after peer is destroyed'), 'ERR_SIGNALING');\n\n      if (typeof data === 'string') {\n        try {\n          data = JSON.parse(data);\n        } catch (err) {\n          data = {};\n        }\n      }\n\n      this._debug('signal()');\n\n      if (data.renegotiate && this.initiator) {\n        this._debug('got request to renegotiate');\n\n        this._needsNegotiation();\n      }\n\n      if (data.transceiverRequest && this.initiator) {\n        this._debug('got request for transceiver');\n\n        this.addTransceiver(data.transceiverRequest.kind, data.transceiverRequest.init);\n      }\n\n      if (data.candidate) {\n        if (this._pc.remoteDescription && this._pc.remoteDescription.type) {\n          this._addIceCandidate(data.candidate);\n        } else {\n          this._pendingCandidates.push(data.candidate);\n        }\n      }\n\n      if (data.sdp) {\n        this._pc.setRemoteDescription(new this._wrtc.RTCSessionDescription(data)).then(function () {\n          if (_this2.destroyed) return;\n\n          _this2._pendingCandidates.forEach(function (candidate) {\n            _this2._addIceCandidate(candidate);\n          });\n\n          _this2._pendingCandidates = [];\n          if (_this2._pc.remoteDescription.type === 'offer') _this2._createAnswer();\n        }).catch(function (err) {\n          _this2.destroy(errCode(err, 'ERR_SET_REMOTE_DESCRIPTION'));\n        });\n      }\n\n      if (!data.sdp && !data.candidate && !data.renegotiate && !data.transceiverRequest) {\n        this.destroy(errCode(new Error('signal() called with invalid signal data'), 'ERR_SIGNALING'));\n      }\n    }\n  }, {\n    key: \"_addIceCandidate\",\n    value: function _addIceCandidate(candidate) {\n      var _this3 = this;\n\n      var iceCandidateObj = new this._wrtc.RTCIceCandidate(candidate);\n\n      this._pc.addIceCandidate(iceCandidateObj).catch(function (err) {\n        if (!iceCandidateObj.address || iceCandidateObj.address.endsWith('.local')) {\n          warn('Ignoring unsupported ICE candidate.');\n        } else {\n          _this3.destroy(errCode(err, 'ERR_ADD_ICE_CANDIDATE'));\n        }\n      });\n    }\n    /**\n     * Send text/binary data to the remote peer.\n     * @param {ArrayBufferView|ArrayBuffer|Buffer|string|Blob} chunk\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(chunk) {\n      this._channel.send(chunk);\n    }\n    /**\n     * Add a Transceiver to the connection.\n     * @param {String} kind\n     * @param {Object} init\n     */\n\n  }, {\n    key: \"addTransceiver\",\n    value: function addTransceiver(kind, init) {\n      this._debug('addTransceiver()');\n\n      if (this.initiator) {\n        try {\n          this._pc.addTransceiver(kind, init);\n\n          this._needsNegotiation();\n        } catch (err) {\n          this.destroy(errCode(err, 'ERR_ADD_TRANSCEIVER'));\n        }\n      } else {\n        this.emit('signal', {\n          // request initiator to renegotiate\n          transceiverRequest: {\n            kind: kind,\n            init: init\n          }\n        });\n      }\n    }\n    /**\n     * Add a MediaStream to the connection.\n     * @param {MediaStream} stream\n     */\n\n  }, {\n    key: \"addStream\",\n    value: function addStream(stream) {\n      var _this4 = this;\n\n      this._debug('addStream()');\n\n      stream.getTracks().forEach(function (track) {\n        _this4.addTrack(track, stream);\n      });\n    }\n    /**\n     * Add a MediaStreamTrack to the connection.\n     * @param {MediaStreamTrack} track\n     * @param {MediaStream} stream\n     */\n\n  }, {\n    key: \"addTrack\",\n    value: function addTrack(track, stream) {\n      this._debug('addTrack()');\n\n      var submap = this._senderMap.get(track) || new Map(); // nested Maps map [track, stream] to sender\n\n      var sender = submap.get(stream);\n\n      if (!sender) {\n        sender = this._pc.addTrack(track, stream);\n        submap.set(stream, sender);\n\n        this._senderMap.set(track, submap);\n\n        this._needsNegotiation();\n      } else if (sender.removed) {\n        throw errCode(new Error('Track has been removed. You should enable/disable tracks that you want to re-add.'), 'ERR_SENDER_REMOVED');\n      } else {\n        throw errCode(new Error('Track has already been added to that stream.'), 'ERR_SENDER_ALREADY_ADDED');\n      }\n    }\n    /**\n     * Replace a MediaStreamTrack by another in the connection.\n     * @param {MediaStreamTrack} oldTrack\n     * @param {MediaStreamTrack} newTrack\n     * @param {MediaStream} stream\n     */\n\n  }, {\n    key: \"replaceTrack\",\n    value: function replaceTrack(oldTrack, newTrack, stream) {\n      this._debug('replaceTrack()');\n\n      var submap = this._senderMap.get(oldTrack);\n\n      var sender = submap ? submap.get(stream) : null;\n\n      if (!sender) {\n        throw errCode(new Error('Cannot replace track that was never added.'), 'ERR_TRACK_NOT_ADDED');\n      }\n\n      if (newTrack) this._senderMap.set(newTrack, submap);\n\n      if (sender.replaceTrack != null) {\n        sender.replaceTrack(newTrack);\n      } else {\n        this.destroy(errCode(new Error('replaceTrack is not supported in this browser'), 'ERR_UNSUPPORTED_REPLACETRACK'));\n      }\n    }\n    /**\n     * Remove a MediaStreamTrack from the connection.\n     * @param {MediaStreamTrack} track\n     * @param {MediaStream} stream\n     */\n\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack(track, stream) {\n      this._debug('removeSender()');\n\n      var submap = this._senderMap.get(track);\n\n      var sender = submap ? submap.get(stream) : null;\n\n      if (!sender) {\n        throw errCode(new Error('Cannot remove track that was never added.'), 'ERR_TRACK_NOT_ADDED');\n      }\n\n      try {\n        sender.removed = true;\n\n        this._pc.removeTrack(sender);\n      } catch (err) {\n        if (err.name === 'NS_ERROR_UNEXPECTED') {\n          this._sendersAwaitingStable.push(sender); // HACK: Firefox must wait until (signalingState === stable) https://bugzilla.mozilla.org/show_bug.cgi?id=1133874\n\n        } else {\n          this.destroy(errCode(err, 'ERR_REMOVE_TRACK'));\n        }\n      }\n\n      this._needsNegotiation();\n    }\n    /**\n     * Remove a MediaStream from the connection.\n     * @param {MediaStream} stream\n     */\n\n  }, {\n    key: \"removeStream\",\n    value: function removeStream(stream) {\n      var _this5 = this;\n\n      this._debug('removeSenders()');\n\n      stream.getTracks().forEach(function (track) {\n        _this5.removeTrack(track, stream);\n      });\n    }\n  }, {\n    key: \"_needsNegotiation\",\n    value: function _needsNegotiation() {\n      var _this6 = this;\n\n      this._debug('_needsNegotiation');\n\n      if (this._batchedNegotiation) return; // batch synchronous renegotiations\n\n      this._batchedNegotiation = true;\n      queueMicrotask(function () {\n        _this6._batchedNegotiation = false;\n\n        _this6._debug('starting batched negotiation');\n\n        _this6.negotiate();\n      });\n    }\n  }, {\n    key: \"negotiate\",\n    value: function negotiate() {\n      var _this7 = this;\n\n      if (this.initiator) {\n        if (this._isNegotiating) {\n          this._queuedNegotiation = true;\n\n          this._debug('already negotiating, queueing');\n        } else {\n          this._debug('start negotiation');\n\n          setTimeout(function () {\n            // HACK: Chrome crashes if we immediately call createOffer\n            _this7._createOffer();\n          }, 0);\n        }\n      } else {\n        if (this._isNegotiating) {\n          this._queuedNegotiation = true;\n\n          this._debug('already negotiating, queueing');\n        } else {\n          this._debug('requesting negotiation from initiator');\n\n          this.emit('signal', {\n            // request initiator to renegotiate\n            renegotiate: true\n          });\n        }\n      }\n\n      this._isNegotiating = true;\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy(err, cb) {\n      this._debug('destroy (error: %s)', err && (err.message || err));\n\n      this.readable = this.writable = false;\n      if (!this._readableState.ended) this.push(null);\n      if (!this._writableState.finished) this.end();\n      this._connected = false;\n      this._pcReady = false;\n      this._channelReady = false;\n      this._remoteTracks = null;\n      this._remoteStreams = null;\n      this._senderMap = null;\n      clearInterval(this._closingInterval);\n      this._closingInterval = null;\n      clearInterval(this._interval);\n      this._interval = null;\n      this._chunk = null;\n      this._cb = null;\n      if (this._onFinishBound) this.removeListener('finish', this._onFinishBound);\n      this._onFinishBound = null;\n\n      if (this._channel) {\n        try {\n          this._channel.close();\n        } catch (err) {}\n\n        this._channel.onmessage = null;\n        this._channel.onopen = null;\n        this._channel.onclose = null;\n        this._channel.onerror = null;\n      }\n\n      if (this._pc) {\n        try {\n          this._pc.close();\n        } catch (err) {}\n\n        this._pc.oniceconnectionstatechange = null;\n        this._pc.onicegatheringstatechange = null;\n        this._pc.onsignalingstatechange = null;\n        this._pc.onicecandidate = null;\n        this._pc.ontrack = null;\n        this._pc.ondatachannel = null;\n      }\n\n      this._pc = null;\n      this._channel = null;\n      cb(err);\n    }\n  }, {\n    key: \"_setupData\",\n    value: function _setupData(event) {\n      var _this8 = this;\n\n      if (!event.channel) {\n        // In some situations `pc.createDataChannel()` returns `undefined` (in wrtc),\n        // which is invalid behavior. Handle it gracefully.\n        // See: https://github.com/feross/simple-peer/issues/163\n        return this.destroy(errCode(new Error('Data channel event is missing `channel` property'), 'ERR_DATA_CHANNEL'));\n      }\n\n      this._channel = event.channel;\n      this._channel.binaryType = 'arraybuffer';\n\n      if (typeof this._channel.bufferedAmountLowThreshold === 'number') {\n        this._channel.bufferedAmountLowThreshold = MAX_BUFFERED_AMOUNT;\n      }\n\n      this.channelName = this._channel.label;\n\n      this._channel.onmessage = function (event) {\n        _this8._onChannelMessage(event);\n      };\n\n      this._channel.onbufferedamountlow = function () {\n        _this8._onChannelBufferedAmountLow();\n      };\n\n      this._channel.onopen = function () {\n        _this8._onChannelOpen();\n      };\n\n      this._channel.onclose = function () {\n        _this8._onChannelClose();\n      };\n\n      this._channel.onerror = function (err) {\n        _this8.destroy(errCode(err, 'ERR_DATA_CHANNEL'));\n      }; // HACK: Chrome will sometimes get stuck in readyState \"closing\", let's check for this condition\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n\n\n      var isClosing = false;\n      this._closingInterval = setInterval(function () {\n        // No \"onclosing\" event\n        if (_this8._channel && _this8._channel.readyState === 'closing') {\n          if (isClosing) _this8._onChannelClose(); // closing timed out: equivalent to onclose firing\n\n          isClosing = true;\n        } else {\n          isClosing = false;\n        }\n      }, CHANNEL_CLOSING_TIMEOUT);\n    }\n  }, {\n    key: \"_read\",\n    value: function _read() {}\n  }, {\n    key: \"_write\",\n    value: function _write(chunk, encoding, cb) {\n      if (this.destroyed) return cb(errCode(new Error('cannot write after peer is destroyed'), 'ERR_DATA_CHANNEL'));\n\n      if (this._connected) {\n        try {\n          this.send(chunk);\n        } catch (err) {\n          return this.destroy(errCode(err, 'ERR_DATA_CHANNEL'));\n        }\n\n        if (this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n          this._debug('start backpressure: bufferedAmount %d', this._channel.bufferedAmount);\n\n          this._cb = cb;\n        } else {\n          cb(null);\n        }\n      } else {\n        this._debug('write before connect');\n\n        this._chunk = chunk;\n        this._cb = cb;\n      }\n    } // When stream finishes writing, close socket. Half open connections are not\n    // supported.\n\n  }, {\n    key: \"_onFinish\",\n    value: function _onFinish() {\n      var _this9 = this;\n\n      if (this.destroyed) return; // Wait a bit before destroying so the socket flushes.\n      // TODO: is there a more reliable way to accomplish this?\n\n      var destroySoon = function destroySoon() {\n        setTimeout(function () {\n          return _this9.destroy();\n        }, 1000);\n      };\n\n      if (this._connected) {\n        destroySoon();\n      } else {\n        this.once('connect', destroySoon);\n      }\n    }\n  }, {\n    key: \"_startIceCompleteTimeout\",\n    value: function _startIceCompleteTimeout() {\n      var _this10 = this;\n\n      if (this.destroyed) return;\n      if (this._iceCompleteTimer) return;\n\n      this._debug('started iceComplete timeout');\n\n      this._iceCompleteTimer = setTimeout(function () {\n        if (!_this10._iceComplete) {\n          _this10._iceComplete = true;\n\n          _this10._debug('iceComplete timeout completed');\n\n          _this10.emit('iceTimeout');\n\n          _this10.emit('_iceComplete');\n        }\n      }, this.iceCompleteTimeout);\n    }\n  }, {\n    key: \"_createOffer\",\n    value: function _createOffer() {\n      var _this11 = this;\n\n      if (this.destroyed) return;\n\n      this._pc.createOffer(this.offerOptions).then(function (offer) {\n        if (_this11.destroyed) return;\n        if (!_this11.trickle && !_this11.allowHalfTrickle) offer.sdp = filterTrickle(offer.sdp);\n        offer.sdp = _this11.sdpTransform(offer.sdp);\n\n        var sendOffer = function sendOffer() {\n          if (_this11.destroyed) return;\n          var signal = _this11._pc.localDescription || offer;\n\n          _this11._debug('signal');\n\n          _this11.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          });\n        };\n\n        var onSuccess = function onSuccess() {\n          _this11._debug('createOffer success');\n\n          if (_this11.destroyed) return;\n          if (_this11.trickle || _this11._iceComplete) sendOffer();else _this11.once('_iceComplete', sendOffer); // wait for candidates\n        };\n\n        var onError = function onError(err) {\n          _this11.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'));\n        };\n\n        _this11._pc.setLocalDescription(offer).then(onSuccess).catch(onError);\n      }).catch(function (err) {\n        _this11.destroy(errCode(err, 'ERR_CREATE_OFFER'));\n      });\n    }\n  }, {\n    key: \"_requestMissingTransceivers\",\n    value: function _requestMissingTransceivers() {\n      var _this12 = this;\n\n      if (this._pc.getTransceivers) {\n        this._pc.getTransceivers().forEach(function (transceiver) {\n          if (!transceiver.mid && transceiver.sender.track && !transceiver.requested) {\n            transceiver.requested = true; // HACK: Safari returns negotiated transceivers with a null mid\n\n            _this12.addTransceiver(transceiver.sender.track.kind);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_createAnswer\",\n    value: function _createAnswer() {\n      var _this13 = this;\n\n      if (this.destroyed) return;\n\n      this._pc.createAnswer(this.answerOptions).then(function (answer) {\n        if (_this13.destroyed) return;\n        if (!_this13.trickle && !_this13.allowHalfTrickle) answer.sdp = filterTrickle(answer.sdp);\n        answer.sdp = _this13.sdpTransform(answer.sdp);\n\n        var sendAnswer = function sendAnswer() {\n          if (_this13.destroyed) return;\n          var signal = _this13._pc.localDescription || answer;\n\n          _this13._debug('signal');\n\n          _this13.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          });\n\n          if (!_this13.initiator) _this13._requestMissingTransceivers();\n        };\n\n        var onSuccess = function onSuccess() {\n          if (_this13.destroyed) return;\n          if (_this13.trickle || _this13._iceComplete) sendAnswer();else _this13.once('_iceComplete', sendAnswer);\n        };\n\n        var onError = function onError(err) {\n          _this13.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'));\n        };\n\n        _this13._pc.setLocalDescription(answer).then(onSuccess).catch(onError);\n      }).catch(function (err) {\n        _this13.destroy(errCode(err, 'ERR_CREATE_ANSWER'));\n      });\n    }\n  }, {\n    key: \"_onConnectionStateChange\",\n    value: function _onConnectionStateChange() {\n      if (this.destroyed) return;\n\n      if (this._pc.connectionState === 'failed') {\n        this.destroy(errCode(new Error('Connection failed.'), 'ERR_CONNECTION_FAILURE'));\n      }\n    }\n  }, {\n    key: \"_onIceStateChange\",\n    value: function _onIceStateChange() {\n      if (this.destroyed) return;\n      var iceConnectionState = this._pc.iceConnectionState;\n      var iceGatheringState = this._pc.iceGatheringState;\n\n      this._debug('iceStateChange (connection: %s) (gathering: %s)', iceConnectionState, iceGatheringState);\n\n      this.emit('iceStateChange', iceConnectionState, iceGatheringState);\n\n      if (iceConnectionState === 'connected' || iceConnectionState === 'completed') {\n        this._pcReady = true;\n\n        this._maybeReady();\n      }\n\n      if (iceConnectionState === 'failed') {\n        this.destroy(errCode(new Error('Ice connection failed.'), 'ERR_ICE_CONNECTION_FAILURE'));\n      }\n\n      if (iceConnectionState === 'closed') {\n        this.destroy(errCode(new Error('Ice connection closed.'), 'ERR_ICE_CONNECTION_CLOSED'));\n      }\n    }\n  }, {\n    key: \"getStats\",\n    value: function getStats(cb) {\n      var _this14 = this;\n\n      // statreports can come with a value array instead of properties\n      var flattenValues = function flattenValues(report) {\n        if (Object.prototype.toString.call(report.values) === '[object Array]') {\n          report.values.forEach(function (value) {\n            Object.assign(report, value);\n          });\n        }\n\n        return report;\n      }; // Promise-based getStats() (standard)\n\n\n      if (this._pc.getStats.length === 0 || this._isReactNativeWebrtc) {\n        this._pc.getStats().then(function (res) {\n          var reports = [];\n          res.forEach(function (report) {\n            reports.push(flattenValues(report));\n          });\n          cb(null, reports);\n        }, function (err) {\n          return cb(err);\n        }); // Single-parameter callback-based getStats() (non-standard)\n\n      } else if (this._pc.getStats.length > 0) {\n        this._pc.getStats(function (res) {\n          // If we destroy connection in `connect` callback this code might happen to run when actual connection is already closed\n          if (_this14.destroyed) return;\n          var reports = [];\n          res.result().forEach(function (result) {\n            var report = {};\n            result.names().forEach(function (name) {\n              report[name] = result.stat(name);\n            });\n            report.id = result.id;\n            report.type = result.type;\n            report.timestamp = result.timestamp;\n            reports.push(flattenValues(report));\n          });\n          cb(null, reports);\n        }, function (err) {\n          return cb(err);\n        }); // Unknown browser, skip getStats() since it's anyone's guess which style of\n        // getStats() they implement.\n\n      } else {\n        cb(null, []);\n      }\n    }\n  }, {\n    key: \"_maybeReady\",\n    value: function _maybeReady() {\n      var _this15 = this;\n\n      this._debug('maybeReady pc %s channel %s', this._pcReady, this._channelReady);\n\n      if (this._connected || this._connecting || !this._pcReady || !this._channelReady) return;\n      this._connecting = true; // HACK: We can't rely on order here, for details see https://github.com/js-platform/node-webrtc/issues/339\n\n      var findCandidatePair = function findCandidatePair() {\n        if (_this15.destroyed) return;\n\n        _this15.getStats(function (err, items) {\n          if (_this15.destroyed) return; // Treat getStats error as non-fatal. It's not essential.\n\n          if (err) items = [];\n          var remoteCandidates = {};\n          var localCandidates = {};\n          var candidatePairs = {};\n          var foundSelectedCandidatePair = false;\n          items.forEach(function (item) {\n            // TODO: Once all browsers support the hyphenated stats report types, remove\n            // the non-hypenated ones\n            if (item.type === 'remotecandidate' || item.type === 'remote-candidate') {\n              remoteCandidates[item.id] = item;\n            }\n\n            if (item.type === 'localcandidate' || item.type === 'local-candidate') {\n              localCandidates[item.id] = item;\n            }\n\n            if (item.type === 'candidatepair' || item.type === 'candidate-pair') {\n              candidatePairs[item.id] = item;\n            }\n          });\n\n          var setSelectedCandidatePair = function setSelectedCandidatePair(selectedCandidatePair) {\n            foundSelectedCandidatePair = true;\n            var local = localCandidates[selectedCandidatePair.localCandidateId];\n\n            if (local && (local.ip || local.address)) {\n              // Spec\n              _this15.localAddress = local.ip || local.address;\n              _this15.localPort = Number(local.port);\n            } else if (local && local.ipAddress) {\n              // Firefox\n              _this15.localAddress = local.ipAddress;\n              _this15.localPort = Number(local.portNumber);\n            } else if (typeof selectedCandidatePair.googLocalAddress === 'string') {\n              // TODO: remove this once Chrome 58 is released\n              local = selectedCandidatePair.googLocalAddress.split(':');\n              _this15.localAddress = local[0];\n              _this15.localPort = Number(local[1]);\n            }\n\n            if (_this15.localAddress) {\n              _this15.localFamily = _this15.localAddress.includes(':') ? 'IPv6' : 'IPv4';\n            }\n\n            var remote = remoteCandidates[selectedCandidatePair.remoteCandidateId];\n\n            if (remote && (remote.ip || remote.address)) {\n              // Spec\n              _this15.remoteAddress = remote.ip || remote.address;\n              _this15.remotePort = Number(remote.port);\n            } else if (remote && remote.ipAddress) {\n              // Firefox\n              _this15.remoteAddress = remote.ipAddress;\n              _this15.remotePort = Number(remote.portNumber);\n            } else if (typeof selectedCandidatePair.googRemoteAddress === 'string') {\n              // TODO: remove this once Chrome 58 is released\n              remote = selectedCandidatePair.googRemoteAddress.split(':');\n              _this15.remoteAddress = remote[0];\n              _this15.remotePort = Number(remote[1]);\n            }\n\n            if (_this15.remoteAddress) {\n              _this15.remoteFamily = _this15.remoteAddress.includes(':') ? 'IPv6' : 'IPv4';\n            }\n\n            _this15._debug('connect local: %s:%s remote: %s:%s', _this15.localAddress, _this15.localPort, _this15.remoteAddress, _this15.remotePort);\n          };\n\n          items.forEach(function (item) {\n            // Spec-compliant\n            if (item.type === 'transport' && item.selectedCandidatePairId) {\n              setSelectedCandidatePair(candidatePairs[item.selectedCandidatePairId]);\n            } // Old implementations\n\n\n            if (item.type === 'googCandidatePair' && item.googActiveConnection === 'true' || (item.type === 'candidatepair' || item.type === 'candidate-pair') && item.selected) {\n              setSelectedCandidatePair(item);\n            }\n          }); // Ignore candidate pair selection in browsers like Safari 11 that do not have any local or remote candidates\n          // But wait until at least 1 candidate pair is available\n\n          if (!foundSelectedCandidatePair && (!Object.keys(candidatePairs).length || Object.keys(localCandidates).length)) {\n            setTimeout(findCandidatePair, 100);\n            return;\n          } else {\n            _this15._connecting = false;\n            _this15._connected = true;\n          }\n\n          if (_this15._chunk) {\n            try {\n              _this15.send(_this15._chunk);\n            } catch (err) {\n              return _this15.destroy(errCode(err, 'ERR_DATA_CHANNEL'));\n            }\n\n            _this15._chunk = null;\n\n            _this15._debug('sent chunk from \"write before connect\"');\n\n            var cb = _this15._cb;\n            _this15._cb = null;\n            cb(null);\n          } // If `bufferedAmountLowThreshold` and 'onbufferedamountlow' are unsupported,\n          // fallback to using setInterval to implement backpressure.\n\n\n          if (typeof _this15._channel.bufferedAmountLowThreshold !== 'number') {\n            _this15._interval = setInterval(function () {\n              return _this15._onInterval();\n            }, 150);\n            if (_this15._interval.unref) _this15._interval.unref();\n          }\n\n          _this15._debug('connect');\n\n          _this15.emit('connect');\n        });\n      };\n\n      findCandidatePair();\n    }\n  }, {\n    key: \"_onInterval\",\n    value: function _onInterval() {\n      if (!this._cb || !this._channel || this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n        return;\n      }\n\n      this._onChannelBufferedAmountLow();\n    }\n  }, {\n    key: \"_onSignalingStateChange\",\n    value: function _onSignalingStateChange() {\n      var _this16 = this;\n\n      if (this.destroyed) return;\n\n      if (this._pc.signalingState === 'stable' && !this._firstStable) {\n        this._isNegotiating = false; // HACK: Firefox doesn't yet support removing tracks when signalingState !== 'stable'\n\n        this._debug('flushing sender queue', this._sendersAwaitingStable);\n\n        this._sendersAwaitingStable.forEach(function (sender) {\n          _this16._pc.removeTrack(sender);\n\n          _this16._queuedNegotiation = true;\n        });\n\n        this._sendersAwaitingStable = [];\n\n        if (this._queuedNegotiation) {\n          this._debug('flushing negotiation queue');\n\n          this._queuedNegotiation = false;\n\n          this._needsNegotiation(); // negotiate again\n\n        }\n\n        this._debug('negotiate');\n\n        this.emit('negotiate');\n      }\n\n      this._firstStable = false;\n\n      this._debug('signalingStateChange %s', this._pc.signalingState);\n\n      this.emit('signalingStateChange', this._pc.signalingState);\n    }\n  }, {\n    key: \"_onIceCandidate\",\n    value: function _onIceCandidate(event) {\n      if (this.destroyed) return;\n\n      if (event.candidate && this.trickle) {\n        this.emit('signal', {\n          candidate: {\n            candidate: event.candidate.candidate,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            sdpMid: event.candidate.sdpMid\n          }\n        });\n      } else if (!event.candidate && !this._iceComplete) {\n        this._iceComplete = true;\n        this.emit('_iceComplete');\n      } // as soon as we've received one valid candidate start timeout\n\n\n      if (event.candidate) {\n        this._startIceCompleteTimeout();\n      }\n    }\n  }, {\n    key: \"_onChannelMessage\",\n    value: function _onChannelMessage(event) {\n      if (this.destroyed) return;\n      var data = event.data;\n      if (data instanceof ArrayBuffer) data = new Uint8Array(data);\n      this.push(data);\n    }\n  }, {\n    key: \"_onChannelBufferedAmountLow\",\n    value: function _onChannelBufferedAmountLow() {\n      if (this.destroyed || !this._cb) return;\n\n      this._debug('ending backpressure: bufferedAmount %d', this._channel.bufferedAmount);\n\n      var cb = this._cb;\n      this._cb = null;\n      cb(null);\n    }\n  }, {\n    key: \"_onChannelOpen\",\n    value: function _onChannelOpen() {\n      if (this._connected || this.destroyed) return;\n\n      this._debug('on channel open');\n\n      this._channelReady = true;\n\n      this._maybeReady();\n    }\n  }, {\n    key: \"_onChannelClose\",\n    value: function _onChannelClose() {\n      if (this.destroyed) return;\n\n      this._debug('on channel close');\n\n      this.destroy();\n    }\n  }, {\n    key: \"_onTrack\",\n    value: function _onTrack(event) {\n      var _this17 = this;\n\n      if (this.destroyed) return;\n      event.streams.forEach(function (eventStream) {\n        _this17._debug('on track');\n\n        _this17.emit('track', event.track, eventStream);\n\n        _this17._remoteTracks.push({\n          track: event.track,\n          stream: eventStream\n        });\n\n        if (_this17._remoteStreams.some(function (remoteStream) {\n          return remoteStream.id === eventStream.id;\n        })) return; // Only fire one 'stream' event, even though there may be multiple tracks per stream\n\n        _this17._remoteStreams.push(eventStream);\n\n        queueMicrotask(function () {\n          _this17.emit('stream', eventStream); // ensure all tracks have been added\n\n        });\n      });\n    }\n  }, {\n    key: \"_debug\",\n    value: function _debug() {\n      var args = [].slice.call(arguments);\n      args[0] = '[' + this._id + '] ' + args[0];\n      debug.apply(null, args);\n    }\n  }]);\n\n  return Peer;\n}(stream.Duplex);\n\nPeer.WEBRTC_SUPPORT = !!getBrowserRTC();\n/**\n * Expose peer and data channel config for overriding all Peer\n * instances. Otherwise, just set opts.config or opts.channelConfig\n * when constructing a Peer.\n */\n\nPeer.config = {\n  iceServers: [{\n    urls: ['stun:stun.l.google.com:19302', 'stun:global.stun.twilio.com:3478']\n  }],\n  sdpSemantics: 'unified-plan'\n};\nPeer.channelConfig = {};\nmodule.exports = Peer;","map":{"version":3,"names":["debug","require","getBrowserRTC","randombytes","stream","queueMicrotask","errCode","MAX_BUFFERED_AMOUNT","ICECOMPLETE_TIMEOUT","CHANNEL_CLOSING_TIMEOUT","filterTrickle","sdp","replace","warn","message","console","Peer","opts","Object","assign","allowHalfOpen","_id","toString","slice","_debug","channelName","initiator","channelConfig","negotiated","config","offerOptions","answerOptions","sdpTransform","streams","trickle","undefined","allowHalfTrickle","iceCompleteTimeout","_connected","remoteAddress","remoteFamily","remotePort","localAddress","localFamily","localPort","_wrtc","wrtc","window","Error","_pcReady","_channelReady","_iceComplete","_iceCompleteTimer","_channel","_pendingCandidates","_isNegotiating","_batchedNegotiation","_queuedNegotiation","_sendersAwaitingStable","_senderMap","Map","_firstStable","_closingInterval","_remoteTracks","_remoteStreams","_chunk","_cb","_interval","_pc","RTCPeerConnection","err","destroy","_isReactNativeWebrtc","_peerConnectionId","oniceconnectionstatechange","_onIceStateChange","onicegatheringstatechange","onconnectionstatechange","_onConnectionStateChange","onsignalingstatechange","_onSignalingStateChange","onicecandidate","event","_onIceCandidate","_setupData","channel","createDataChannel","ondatachannel","forEach","addStream","ontrack","_onTrack","_needsNegotiation","_onFinishBound","_onFinish","once","bufferedAmount","readyState","port","family","address","data","destroyed","JSON","parse","renegotiate","transceiverRequest","addTransceiver","kind","init","candidate","remoteDescription","type","_addIceCandidate","push","setRemoteDescription","RTCSessionDescription","then","_createAnswer","catch","iceCandidateObj","RTCIceCandidate","addIceCandidate","endsWith","chunk","send","emit","getTracks","track","addTrack","submap","get","sender","set","removed","oldTrack","newTrack","replaceTrack","removeTrack","name","negotiate","setTimeout","_createOffer","cb","readable","writable","_readableState","ended","_writableState","finished","end","clearInterval","removeListener","close","onmessage","onopen","onclose","onerror","binaryType","bufferedAmountLowThreshold","label","_onChannelMessage","onbufferedamountlow","_onChannelBufferedAmountLow","_onChannelOpen","_onChannelClose","isClosing","setInterval","encoding","destroySoon","createOffer","offer","sendOffer","signal","localDescription","onSuccess","onError","setLocalDescription","getTransceivers","transceiver","mid","requested","createAnswer","answer","sendAnswer","_requestMissingTransceivers","connectionState","iceConnectionState","iceGatheringState","_maybeReady","flattenValues","report","prototype","call","values","value","getStats","length","res","reports","result","names","stat","id","timestamp","_connecting","findCandidatePair","items","remoteCandidates","localCandidates","candidatePairs","foundSelectedCandidatePair","item","setSelectedCandidatePair","selectedCandidatePair","local","localCandidateId","ip","Number","ipAddress","portNumber","googLocalAddress","split","includes","remote","remoteCandidateId","googRemoteAddress","selectedCandidatePairId","googActiveConnection","selected","keys","_onInterval","unref","signalingState","sdpMLineIndex","sdpMid","_startIceCompleteTimeout","ArrayBuffer","Uint8Array","eventStream","some","remoteStream","args","arguments","apply","Duplex","WEBRTC_SUPPORT","iceServers","urls","sdpSemantics","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p-webrtc-peer/index.js"],"sourcesContent":["/*! simple-peer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nvar debug = require('debug')('simple-peer')\nvar getBrowserRTC = require('get-browser-rtc')\nvar randombytes = require('randombytes')\nvar stream = require('readable-stream')\nvar queueMicrotask = require('queue-microtask') // TODO: remove when Node 10 is not supported\nvar errCode = require('err-code')\n\nvar MAX_BUFFERED_AMOUNT = 64 * 1024\nvar ICECOMPLETE_TIMEOUT = 5 * 1000\nvar CHANNEL_CLOSING_TIMEOUT = 5 * 1000\n\n// HACK: Filter trickle lines when trickle is disabled #354\nfunction filterTrickle (sdp) {\n  return sdp.replace(/a=ice-options:trickle\\s\\n/g, '')\n}\n\nfunction warn (message) {\n  console.warn(message)\n}\n\n/**\n * WebRTC peer connection. Same API as node core `net.Socket`, plus a few extra methods.\n * Duplex stream.\n * @param {Object} opts\n */\nclass Peer extends stream.Duplex {\n  constructor (opts) {\n    opts = Object.assign({\n      allowHalfOpen: false\n    }, opts)\n\n    super(opts)\n\n    this._id = randombytes(4).toString('hex').slice(0, 7)\n    this._debug('new peer %o', opts)\n\n    this.channelName = opts.initiator\n      ? opts.channelName || randombytes(20).toString('hex')\n      : null\n\n    this.initiator = opts.initiator || false\n    this.channelConfig = opts.channelConfig || Peer.channelConfig\n    this.negotiated = this.channelConfig.negotiated\n    this.config = Object.assign({}, Peer.config, opts.config)\n    this.offerOptions = opts.offerOptions || {}\n    this.answerOptions = opts.answerOptions || {}\n    this.sdpTransform = opts.sdpTransform || (sdp => sdp)\n    this.streams = opts.streams || (opts.stream ? [opts.stream] : []) // support old \"stream\" option\n    this.trickle = opts.trickle !== undefined ? opts.trickle : true\n    this.allowHalfTrickle = opts.allowHalfTrickle !== undefined ? opts.allowHalfTrickle : false\n    this.iceCompleteTimeout = opts.iceCompleteTimeout || ICECOMPLETE_TIMEOUT\n\n    this._connected = false\n\n    this.remoteAddress = undefined\n    this.remoteFamily = undefined\n    this.remotePort = undefined\n    this.localAddress = undefined\n    this.localFamily = undefined\n    this.localPort = undefined\n\n    this._wrtc = (opts.wrtc && typeof opts.wrtc === 'object')\n      ? opts.wrtc\n      : getBrowserRTC()\n\n    if (!this._wrtc) {\n      if (typeof window === 'undefined') {\n        throw errCode(new Error('No WebRTC support: Specify `opts.wrtc` option in this environment'), 'ERR_WEBRTC_SUPPORT')\n      } else {\n        throw errCode(new Error('No WebRTC support: Not a supported browser'), 'ERR_WEBRTC_SUPPORT')\n      }\n    }\n\n    this._pcReady = false\n    this._channelReady = false\n    this._iceComplete = false // ice candidate trickle done (got null candidate)\n    this._iceCompleteTimer = null // send an offer/answer anyway after some timeout\n    this._channel = null\n    this._pendingCandidates = []\n\n    this._isNegotiating = this.negotiated ? false : !this.initiator // is this peer waiting for negotiation to complete?\n    this._batchedNegotiation = false // batch synchronous negotiations\n    this._queuedNegotiation = false // is there a queued negotiation request?\n    this._sendersAwaitingStable = []\n    this._senderMap = new Map()\n    this._firstStable = true\n    this._closingInterval = null\n\n    this._remoteTracks = []\n    this._remoteStreams = []\n\n    this._chunk = null\n    this._cb = null\n    this._interval = null\n\n    try {\n      this._pc = new (this._wrtc.RTCPeerConnection)(this.config)\n    } catch (err) {\n      queueMicrotask(() => this.destroy(errCode(err, 'ERR_PC_CONSTRUCTOR')))\n      return\n    }\n\n    // We prefer feature detection whenever possible, but sometimes that's not\n    // possible for certain implementations.\n    this._isReactNativeWebrtc = typeof this._pc._peerConnectionId === 'number'\n\n    this._pc.oniceconnectionstatechange = () => {\n      this._onIceStateChange()\n    }\n    this._pc.onicegatheringstatechange = () => {\n      this._onIceStateChange()\n    }\n    this._pc.onconnectionstatechange = () => {\n      this._onConnectionStateChange()\n    }\n    this._pc.onsignalingstatechange = () => {\n      this._onSignalingStateChange()\n    }\n    this._pc.onicecandidate = event => {\n      this._onIceCandidate(event)\n    }\n\n    // Other spec events, unused by this implementation:\n    // - onconnectionstatechange\n    // - onicecandidateerror\n    // - onfingerprintfailure\n    // - onnegotiationneeded\n\n    if (this.initiator || this.negotiated) {\n      this._setupData({\n        channel: this._pc.createDataChannel(this.channelName, this.channelConfig)\n      })\n    } else {\n      this._pc.ondatachannel = event => {\n        this._setupData(event)\n      }\n    }\n\n    if (this.streams) {\n      this.streams.forEach(stream => {\n        this.addStream(stream)\n      })\n    }\n    this._pc.ontrack = event => {\n      this._onTrack(event)\n    }\n\n    if (this.initiator) {\n      this._needsNegotiation()\n    }\n\n    this._onFinishBound = () => {\n      this._onFinish()\n    }\n    this.once('finish', this._onFinishBound)\n  }\n\n  get bufferSize () {\n    return (this._channel && this._channel.bufferedAmount) || 0\n  }\n\n  // HACK: it's possible channel.readyState is \"closing\" before peer.destroy() fires\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n  get connected () {\n    return (this._connected && this._channel.readyState === 'open')\n  }\n\n  address () {\n    return { port: this.localPort, family: this.localFamily, address: this.localAddress }\n  }\n\n  signal (data) {\n    if (this.destroyed) throw errCode(new Error('cannot signal after peer is destroyed'), 'ERR_SIGNALING')\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data)\n      } catch (err) {\n        data = {}\n      }\n    }\n    this._debug('signal()')\n\n    if (data.renegotiate && this.initiator) {\n      this._debug('got request to renegotiate')\n      this._needsNegotiation()\n    }\n    if (data.transceiverRequest && this.initiator) {\n      this._debug('got request for transceiver')\n      this.addTransceiver(data.transceiverRequest.kind, data.transceiverRequest.init)\n    }\n    if (data.candidate) {\n      if (this._pc.remoteDescription && this._pc.remoteDescription.type) {\n        this._addIceCandidate(data.candidate)\n      } else {\n        this._pendingCandidates.push(data.candidate)\n      }\n    }\n    if (data.sdp) {\n      this._pc.setRemoteDescription(new (this._wrtc.RTCSessionDescription)(data))\n        .then(() => {\n          if (this.destroyed) return\n\n          this._pendingCandidates.forEach(candidate => {\n            this._addIceCandidate(candidate)\n          })\n          this._pendingCandidates = []\n\n          if (this._pc.remoteDescription.type === 'offer') this._createAnswer()\n        })\n        .catch(err => {\n          this.destroy(errCode(err, 'ERR_SET_REMOTE_DESCRIPTION'))\n        })\n    }\n    if (!data.sdp && !data.candidate && !data.renegotiate && !data.transceiverRequest) {\n      this.destroy(errCode(new Error('signal() called with invalid signal data'), 'ERR_SIGNALING'))\n    }\n  }\n\n  _addIceCandidate (candidate) {\n    var iceCandidateObj = new this._wrtc.RTCIceCandidate(candidate)\n    this._pc.addIceCandidate(iceCandidateObj)\n      .catch(err => {\n        if (!iceCandidateObj.address || iceCandidateObj.address.endsWith('.local')) {\n          warn('Ignoring unsupported ICE candidate.')\n        } else {\n          this.destroy(errCode(err, 'ERR_ADD_ICE_CANDIDATE'))\n        }\n      })\n  }\n\n  /**\n   * Send text/binary data to the remote peer.\n   * @param {ArrayBufferView|ArrayBuffer|Buffer|string|Blob} chunk\n   */\n  send (chunk) {\n    this._channel.send(chunk)\n  }\n\n  /**\n   * Add a Transceiver to the connection.\n   * @param {String} kind\n   * @param {Object} init\n   */\n  addTransceiver (kind, init) {\n    this._debug('addTransceiver()')\n\n    if (this.initiator) {\n      try {\n        this._pc.addTransceiver(kind, init)\n        this._needsNegotiation()\n      } catch (err) {\n        this.destroy(errCode(err, 'ERR_ADD_TRANSCEIVER'))\n      }\n    } else {\n      this.emit('signal', { // request initiator to renegotiate\n        transceiverRequest: { kind, init }\n      })\n    }\n  }\n\n  /**\n   * Add a MediaStream to the connection.\n   * @param {MediaStream} stream\n   */\n  addStream (stream) {\n    this._debug('addStream()')\n\n    stream.getTracks().forEach(track => {\n      this.addTrack(track, stream)\n    })\n  }\n\n  /**\n   * Add a MediaStreamTrack to the connection.\n   * @param {MediaStreamTrack} track\n   * @param {MediaStream} stream\n   */\n  addTrack (track, stream) {\n    this._debug('addTrack()')\n\n    var submap = this._senderMap.get(track) || new Map() // nested Maps map [track, stream] to sender\n    var sender = submap.get(stream)\n    if (!sender) {\n      sender = this._pc.addTrack(track, stream)\n      submap.set(stream, sender)\n      this._senderMap.set(track, submap)\n      this._needsNegotiation()\n    } else if (sender.removed) {\n      throw errCode(new Error('Track has been removed. You should enable/disable tracks that you want to re-add.'), 'ERR_SENDER_REMOVED')\n    } else {\n      throw errCode(new Error('Track has already been added to that stream.'), 'ERR_SENDER_ALREADY_ADDED')\n    }\n  }\n\n  /**\n   * Replace a MediaStreamTrack by another in the connection.\n   * @param {MediaStreamTrack} oldTrack\n   * @param {MediaStreamTrack} newTrack\n   * @param {MediaStream} stream\n   */\n  replaceTrack (oldTrack, newTrack, stream) {\n    this._debug('replaceTrack()')\n\n    var submap = this._senderMap.get(oldTrack)\n    var sender = submap ? submap.get(stream) : null\n    if (!sender) {\n      throw errCode(new Error('Cannot replace track that was never added.'), 'ERR_TRACK_NOT_ADDED')\n    }\n    if (newTrack) this._senderMap.set(newTrack, submap)\n\n    if (sender.replaceTrack != null) {\n      sender.replaceTrack(newTrack)\n    } else {\n      this.destroy(errCode(new Error('replaceTrack is not supported in this browser'), 'ERR_UNSUPPORTED_REPLACETRACK'))\n    }\n  }\n\n  /**\n   * Remove a MediaStreamTrack from the connection.\n   * @param {MediaStreamTrack} track\n   * @param {MediaStream} stream\n   */\n  removeTrack (track, stream) {\n    this._debug('removeSender()')\n\n    var submap = this._senderMap.get(track)\n    var sender = submap ? submap.get(stream) : null\n    if (!sender) {\n      throw errCode(new Error('Cannot remove track that was never added.'), 'ERR_TRACK_NOT_ADDED')\n    }\n    try {\n      sender.removed = true\n      this._pc.removeTrack(sender)\n    } catch (err) {\n      if (err.name === 'NS_ERROR_UNEXPECTED') {\n        this._sendersAwaitingStable.push(sender) // HACK: Firefox must wait until (signalingState === stable) https://bugzilla.mozilla.org/show_bug.cgi?id=1133874\n      } else {\n        this.destroy(errCode(err, 'ERR_REMOVE_TRACK'))\n      }\n    }\n    this._needsNegotiation()\n  }\n\n  /**\n   * Remove a MediaStream from the connection.\n   * @param {MediaStream} stream\n   */\n  removeStream (stream) {\n    this._debug('removeSenders()')\n\n    stream.getTracks().forEach(track => {\n      this.removeTrack(track, stream)\n    })\n  }\n\n  _needsNegotiation () {\n    this._debug('_needsNegotiation')\n    if (this._batchedNegotiation) return // batch synchronous renegotiations\n    this._batchedNegotiation = true\n    queueMicrotask(() => {\n      this._batchedNegotiation = false\n      this._debug('starting batched negotiation')\n      this.negotiate()\n    })\n  }\n\n  negotiate () {\n    if (this.initiator) {\n      if (this._isNegotiating) {\n        this._queuedNegotiation = true\n        this._debug('already negotiating, queueing')\n      } else {\n        this._debug('start negotiation')\n        setTimeout(() => { // HACK: Chrome crashes if we immediately call createOffer\n          this._createOffer()\n        }, 0)\n      }\n    } else {\n      if (this._isNegotiating) {\n        this._queuedNegotiation = true\n        this._debug('already negotiating, queueing')\n      } else {\n        this._debug('requesting negotiation from initiator')\n        this.emit('signal', { // request initiator to renegotiate\n          renegotiate: true\n        })\n      }\n    }\n    this._isNegotiating = true\n  }\n\n  _destroy (err, cb) {\n    this._debug('destroy (error: %s)', err && (err.message || err))\n\n    this.readable = this.writable = false\n\n    if (!this._readableState.ended) this.push(null)\n    if (!this._writableState.finished) this.end()\n\n    this._connected = false\n    this._pcReady = false\n    this._channelReady = false\n    this._remoteTracks = null\n    this._remoteStreams = null\n    this._senderMap = null\n\n    clearInterval(this._closingInterval)\n    this._closingInterval = null\n\n    clearInterval(this._interval)\n    this._interval = null\n    this._chunk = null\n    this._cb = null\n\n    if (this._onFinishBound) this.removeListener('finish', this._onFinishBound)\n    this._onFinishBound = null\n\n    if (this._channel) {\n      try {\n        this._channel.close()\n      } catch (err) {}\n\n      this._channel.onmessage = null\n      this._channel.onopen = null\n      this._channel.onclose = null\n      this._channel.onerror = null\n    }\n    if (this._pc) {\n      try {\n        this._pc.close()\n      } catch (err) {}\n\n      this._pc.oniceconnectionstatechange = null\n      this._pc.onicegatheringstatechange = null\n      this._pc.onsignalingstatechange = null\n      this._pc.onicecandidate = null\n      this._pc.ontrack = null\n      this._pc.ondatachannel = null\n    }\n    this._pc = null\n    this._channel = null\n\n    cb(err)\n  }\n\n  _setupData (event) {\n    if (!event.channel) {\n      // In some situations `pc.createDataChannel()` returns `undefined` (in wrtc),\n      // which is invalid behavior. Handle it gracefully.\n      // See: https://github.com/feross/simple-peer/issues/163\n      return this.destroy(errCode(new Error('Data channel event is missing `channel` property'), 'ERR_DATA_CHANNEL'))\n    }\n\n    this._channel = event.channel\n    this._channel.binaryType = 'arraybuffer'\n\n    if (typeof this._channel.bufferedAmountLowThreshold === 'number') {\n      this._channel.bufferedAmountLowThreshold = MAX_BUFFERED_AMOUNT\n    }\n\n    this.channelName = this._channel.label\n\n    this._channel.onmessage = event => {\n      this._onChannelMessage(event)\n    }\n    this._channel.onbufferedamountlow = () => {\n      this._onChannelBufferedAmountLow()\n    }\n    this._channel.onopen = () => {\n      this._onChannelOpen()\n    }\n    this._channel.onclose = () => {\n      this._onChannelClose()\n    }\n    this._channel.onerror = err => {\n      this.destroy(errCode(err, 'ERR_DATA_CHANNEL'))\n    }\n\n    // HACK: Chrome will sometimes get stuck in readyState \"closing\", let's check for this condition\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n    var isClosing = false\n    this._closingInterval = setInterval(() => { // No \"onclosing\" event\n      if (this._channel && this._channel.readyState === 'closing') {\n        if (isClosing) this._onChannelClose() // closing timed out: equivalent to onclose firing\n        isClosing = true\n      } else {\n        isClosing = false\n      }\n    }, CHANNEL_CLOSING_TIMEOUT)\n  }\n\n  _read () {}\n\n  _write (chunk, encoding, cb) {\n    if (this.destroyed) return cb(errCode(new Error('cannot write after peer is destroyed'), 'ERR_DATA_CHANNEL'))\n\n    if (this._connected) {\n      try {\n        this.send(chunk)\n      } catch (err) {\n        return this.destroy(errCode(err, 'ERR_DATA_CHANNEL'))\n      }\n      if (this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n        this._debug('start backpressure: bufferedAmount %d', this._channel.bufferedAmount)\n        this._cb = cb\n      } else {\n        cb(null)\n      }\n    } else {\n      this._debug('write before connect')\n      this._chunk = chunk\n      this._cb = cb\n    }\n  }\n\n  // When stream finishes writing, close socket. Half open connections are not\n  // supported.\n  _onFinish () {\n    if (this.destroyed) return\n\n    // Wait a bit before destroying so the socket flushes.\n    // TODO: is there a more reliable way to accomplish this?\n    const destroySoon = () => {\n      setTimeout(() => this.destroy(), 1000)\n    }\n\n    if (this._connected) {\n      destroySoon()\n    } else {\n      this.once('connect', destroySoon)\n    }\n  }\n\n  _startIceCompleteTimeout () {\n    if (this.destroyed) return\n    if (this._iceCompleteTimer) return\n    this._debug('started iceComplete timeout')\n    this._iceCompleteTimer = setTimeout(() => {\n      if (!this._iceComplete) {\n        this._iceComplete = true\n        this._debug('iceComplete timeout completed')\n        this.emit('iceTimeout')\n        this.emit('_iceComplete')\n      }\n    }, this.iceCompleteTimeout)\n  }\n\n  _createOffer () {\n    if (this.destroyed) return\n\n    this._pc.createOffer(this.offerOptions)\n      .then(offer => {\n        if (this.destroyed) return\n        if (!this.trickle && !this.allowHalfTrickle) offer.sdp = filterTrickle(offer.sdp)\n        offer.sdp = this.sdpTransform(offer.sdp)\n\n        const sendOffer = () => {\n          if (this.destroyed) return\n          var signal = this._pc.localDescription || offer\n          this._debug('signal')\n          this.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          })\n        }\n\n        const onSuccess = () => {\n          this._debug('createOffer success')\n          if (this.destroyed) return\n          if (this.trickle || this._iceComplete) sendOffer()\n          else this.once('_iceComplete', sendOffer) // wait for candidates\n        }\n\n        const onError = err => {\n          this.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'))\n        }\n\n        this._pc.setLocalDescription(offer)\n          .then(onSuccess)\n          .catch(onError)\n      })\n      .catch(err => {\n        this.destroy(errCode(err, 'ERR_CREATE_OFFER'))\n      })\n  }\n\n  _requestMissingTransceivers () {\n    if (this._pc.getTransceivers) {\n      this._pc.getTransceivers().forEach(transceiver => {\n        if (!transceiver.mid && transceiver.sender.track && !transceiver.requested) {\n          transceiver.requested = true // HACK: Safari returns negotiated transceivers with a null mid\n          this.addTransceiver(transceiver.sender.track.kind)\n        }\n      })\n    }\n  }\n\n  _createAnswer () {\n    if (this.destroyed) return\n\n    this._pc.createAnswer(this.answerOptions)\n      .then(answer => {\n        if (this.destroyed) return\n        if (!this.trickle && !this.allowHalfTrickle) answer.sdp = filterTrickle(answer.sdp)\n        answer.sdp = this.sdpTransform(answer.sdp)\n\n        const sendAnswer = () => {\n          if (this.destroyed) return\n          var signal = this._pc.localDescription || answer\n          this._debug('signal')\n          this.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          })\n          if (!this.initiator) this._requestMissingTransceivers()\n        }\n\n        const onSuccess = () => {\n          if (this.destroyed) return\n          if (this.trickle || this._iceComplete) sendAnswer()\n          else this.once('_iceComplete', sendAnswer)\n        }\n\n        const onError = err => {\n          this.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'))\n        }\n\n        this._pc.setLocalDescription(answer)\n          .then(onSuccess)\n          .catch(onError)\n      })\n      .catch(err => {\n        this.destroy(errCode(err, 'ERR_CREATE_ANSWER'))\n      })\n  }\n\n  _onConnectionStateChange () {\n    if (this.destroyed) return\n    if (this._pc.connectionState === 'failed') {\n      this.destroy(errCode(new Error('Connection failed.'), 'ERR_CONNECTION_FAILURE'))\n    }\n  }\n\n  _onIceStateChange () {\n    if (this.destroyed) return\n    var iceConnectionState = this._pc.iceConnectionState\n    var iceGatheringState = this._pc.iceGatheringState\n\n    this._debug(\n      'iceStateChange (connection: %s) (gathering: %s)',\n      iceConnectionState,\n      iceGatheringState\n    )\n    this.emit('iceStateChange', iceConnectionState, iceGatheringState)\n\n    if (iceConnectionState === 'connected' || iceConnectionState === 'completed') {\n      this._pcReady = true\n      this._maybeReady()\n    }\n    if (iceConnectionState === 'failed') {\n      this.destroy(errCode(new Error('Ice connection failed.'), 'ERR_ICE_CONNECTION_FAILURE'))\n    }\n    if (iceConnectionState === 'closed') {\n      this.destroy(errCode(new Error('Ice connection closed.'), 'ERR_ICE_CONNECTION_CLOSED'))\n    }\n  }\n\n  getStats (cb) {\n    // statreports can come with a value array instead of properties\n    const flattenValues = report => {\n      if (Object.prototype.toString.call(report.values) === '[object Array]') {\n        report.values.forEach(value => {\n          Object.assign(report, value)\n        })\n      }\n      return report\n    }\n\n    // Promise-based getStats() (standard)\n    if (this._pc.getStats.length === 0 || this._isReactNativeWebrtc) {\n      this._pc.getStats()\n        .then(res => {\n          var reports = []\n          res.forEach(report => {\n            reports.push(flattenValues(report))\n          })\n          cb(null, reports)\n        }, err => cb(err))\n\n    // Single-parameter callback-based getStats() (non-standard)\n    } else if (this._pc.getStats.length > 0) {\n      this._pc.getStats(res => {\n        // If we destroy connection in `connect` callback this code might happen to run when actual connection is already closed\n        if (this.destroyed) return\n\n        var reports = []\n        res.result().forEach(result => {\n          var report = {}\n          result.names().forEach(name => {\n            report[name] = result.stat(name)\n          })\n          report.id = result.id\n          report.type = result.type\n          report.timestamp = result.timestamp\n          reports.push(flattenValues(report))\n        })\n        cb(null, reports)\n      }, err => cb(err))\n\n    // Unknown browser, skip getStats() since it's anyone's guess which style of\n    // getStats() they implement.\n    } else {\n      cb(null, [])\n    }\n  }\n\n  _maybeReady () {\n    this._debug('maybeReady pc %s channel %s', this._pcReady, this._channelReady)\n    if (this._connected || this._connecting || !this._pcReady || !this._channelReady) return\n\n    this._connecting = true\n\n    // HACK: We can't rely on order here, for details see https://github.com/js-platform/node-webrtc/issues/339\n    const findCandidatePair = () => {\n      if (this.destroyed) return\n\n      this.getStats((err, items) => {\n        if (this.destroyed) return\n\n        // Treat getStats error as non-fatal. It's not essential.\n        if (err) items = []\n\n        var remoteCandidates = {}\n        var localCandidates = {}\n        var candidatePairs = {}\n        var foundSelectedCandidatePair = false\n\n        items.forEach(item => {\n          // TODO: Once all browsers support the hyphenated stats report types, remove\n          // the non-hypenated ones\n          if (item.type === 'remotecandidate' || item.type === 'remote-candidate') {\n            remoteCandidates[item.id] = item\n          }\n          if (item.type === 'localcandidate' || item.type === 'local-candidate') {\n            localCandidates[item.id] = item\n          }\n          if (item.type === 'candidatepair' || item.type === 'candidate-pair') {\n            candidatePairs[item.id] = item\n          }\n        })\n\n        const setSelectedCandidatePair = selectedCandidatePair => {\n          foundSelectedCandidatePair = true\n\n          var local = localCandidates[selectedCandidatePair.localCandidateId]\n\n          if (local && (local.ip || local.address)) {\n            // Spec\n            this.localAddress = local.ip || local.address\n            this.localPort = Number(local.port)\n          } else if (local && local.ipAddress) {\n            // Firefox\n            this.localAddress = local.ipAddress\n            this.localPort = Number(local.portNumber)\n          } else if (typeof selectedCandidatePair.googLocalAddress === 'string') {\n            // TODO: remove this once Chrome 58 is released\n            local = selectedCandidatePair.googLocalAddress.split(':')\n            this.localAddress = local[0]\n            this.localPort = Number(local[1])\n          }\n          if (this.localAddress) {\n            this.localFamily = this.localAddress.includes(':') ? 'IPv6' : 'IPv4'\n          }\n\n          var remote = remoteCandidates[selectedCandidatePair.remoteCandidateId]\n\n          if (remote && (remote.ip || remote.address)) {\n            // Spec\n            this.remoteAddress = remote.ip || remote.address\n            this.remotePort = Number(remote.port)\n          } else if (remote && remote.ipAddress) {\n            // Firefox\n            this.remoteAddress = remote.ipAddress\n            this.remotePort = Number(remote.portNumber)\n          } else if (typeof selectedCandidatePair.googRemoteAddress === 'string') {\n            // TODO: remove this once Chrome 58 is released\n            remote = selectedCandidatePair.googRemoteAddress.split(':')\n            this.remoteAddress = remote[0]\n            this.remotePort = Number(remote[1])\n          }\n          if (this.remoteAddress) {\n            this.remoteFamily = this.remoteAddress.includes(':') ? 'IPv6' : 'IPv4'\n          }\n\n          this._debug(\n            'connect local: %s:%s remote: %s:%s',\n            this.localAddress, this.localPort, this.remoteAddress, this.remotePort\n          )\n        }\n\n        items.forEach(item => {\n          // Spec-compliant\n          if (item.type === 'transport' && item.selectedCandidatePairId) {\n            setSelectedCandidatePair(candidatePairs[item.selectedCandidatePairId])\n          }\n\n          // Old implementations\n          if (\n            (item.type === 'googCandidatePair' && item.googActiveConnection === 'true') ||\n            ((item.type === 'candidatepair' || item.type === 'candidate-pair') && item.selected)\n          ) {\n            setSelectedCandidatePair(item)\n          }\n        })\n\n        // Ignore candidate pair selection in browsers like Safari 11 that do not have any local or remote candidates\n        // But wait until at least 1 candidate pair is available\n        if (!foundSelectedCandidatePair && (!Object.keys(candidatePairs).length || Object.keys(localCandidates).length)) {\n          setTimeout(findCandidatePair, 100)\n          return\n        } else {\n          this._connecting = false\n          this._connected = true\n        }\n\n        if (this._chunk) {\n          try {\n            this.send(this._chunk)\n          } catch (err) {\n            return this.destroy(errCode(err, 'ERR_DATA_CHANNEL'))\n          }\n          this._chunk = null\n          this._debug('sent chunk from \"write before connect\"')\n\n          var cb = this._cb\n          this._cb = null\n          cb(null)\n        }\n\n        // If `bufferedAmountLowThreshold` and 'onbufferedamountlow' are unsupported,\n        // fallback to using setInterval to implement backpressure.\n        if (typeof this._channel.bufferedAmountLowThreshold !== 'number') {\n          this._interval = setInterval(() => this._onInterval(), 150)\n          if (this._interval.unref) this._interval.unref()\n        }\n\n        this._debug('connect')\n        this.emit('connect')\n      })\n    }\n    findCandidatePair()\n  }\n\n  _onInterval () {\n    if (!this._cb || !this._channel || this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n      return\n    }\n    this._onChannelBufferedAmountLow()\n  }\n\n  _onSignalingStateChange () {\n    if (this.destroyed) return\n\n    if (this._pc.signalingState === 'stable' && !this._firstStable) {\n      this._isNegotiating = false\n\n      // HACK: Firefox doesn't yet support removing tracks when signalingState !== 'stable'\n      this._debug('flushing sender queue', this._sendersAwaitingStable)\n      this._sendersAwaitingStable.forEach(sender => {\n        this._pc.removeTrack(sender)\n        this._queuedNegotiation = true\n      })\n      this._sendersAwaitingStable = []\n\n      if (this._queuedNegotiation) {\n        this._debug('flushing negotiation queue')\n        this._queuedNegotiation = false\n        this._needsNegotiation() // negotiate again\n      }\n\n      this._debug('negotiate')\n      this.emit('negotiate')\n    }\n    this._firstStable = false\n\n    this._debug('signalingStateChange %s', this._pc.signalingState)\n    this.emit('signalingStateChange', this._pc.signalingState)\n  }\n\n  _onIceCandidate (event) {\n    if (this.destroyed) return\n    if (event.candidate && this.trickle) {\n      this.emit('signal', {\n        candidate: {\n          candidate: event.candidate.candidate,\n          sdpMLineIndex: event.candidate.sdpMLineIndex,\n          sdpMid: event.candidate.sdpMid\n        }\n      })\n    } else if (!event.candidate && !this._iceComplete) {\n      this._iceComplete = true\n      this.emit('_iceComplete')\n    }\n    // as soon as we've received one valid candidate start timeout\n    if (event.candidate) {\n      this._startIceCompleteTimeout()\n    }\n  }\n\n  _onChannelMessage (event) {\n    if (this.destroyed) return\n    var data = event.data\n    if (data instanceof ArrayBuffer) data = new Uint8Array(data)\n    this.push(data)\n  }\n\n  _onChannelBufferedAmountLow () {\n    if (this.destroyed || !this._cb) return\n    this._debug('ending backpressure: bufferedAmount %d', this._channel.bufferedAmount)\n    var cb = this._cb\n    this._cb = null\n    cb(null)\n  }\n\n  _onChannelOpen () {\n    if (this._connected || this.destroyed) return\n    this._debug('on channel open')\n    this._channelReady = true\n    this._maybeReady()\n  }\n\n  _onChannelClose () {\n    if (this.destroyed) return\n    this._debug('on channel close')\n    this.destroy()\n  }\n\n  _onTrack (event) {\n    if (this.destroyed) return\n\n    event.streams.forEach(eventStream => {\n      this._debug('on track')\n      this.emit('track', event.track, eventStream)\n\n      this._remoteTracks.push({\n        track: event.track,\n        stream: eventStream\n      })\n\n      if (this._remoteStreams.some(remoteStream => {\n        return remoteStream.id === eventStream.id\n      })) return // Only fire one 'stream' event, even though there may be multiple tracks per stream\n\n      this._remoteStreams.push(eventStream)\n      queueMicrotask(() => {\n        this.emit('stream', eventStream) // ensure all tracks have been added\n      })\n    })\n  }\n\n  _debug () {\n    var args = [].slice.call(arguments)\n    args[0] = '[' + this._id + '] ' + args[0]\n    debug.apply(null, args)\n  }\n}\n\nPeer.WEBRTC_SUPPORT = !!getBrowserRTC()\n\n/**\n * Expose peer and data channel config for overriding all Peer\n * instances. Otherwise, just set opts.config or opts.channelConfig\n * when constructing a Peer.\n */\nPeer.config = {\n  iceServers: [\n    {\n      urls: [\n        'stun:stun.l.google.com:19302',\n        'stun:global.stun.twilio.com:3478'\n      ]\n    }\n  ],\n  sdpSemantics: 'unified-plan'\n}\n\nPeer.channelConfig = {}\n\nmodule.exports = Peer\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
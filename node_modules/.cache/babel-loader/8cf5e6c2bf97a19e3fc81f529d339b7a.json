{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar Store = require('orbit-db-store');\n\nvar CounterIndex = require('./CounterIndex');\n\nvar Counter = require('crdts/src/G-Counter');\n\nvar CounterStore = /*#__PURE__*/function (_Store) {\n  _inherits(CounterStore, _Store);\n\n  var _super = _createSuper(CounterStore);\n\n  function CounterStore(ipfs, id, dbname) {\n    var _this;\n\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    _classCallCheck(this, CounterStore);\n\n    if (!options.Index) {\n      Object.assign(options, {\n        Index: CounterIndex\n      });\n    }\n\n    _this = _super.call(this, ipfs, id, dbname, options);\n    _this._index = new _this.options.Index(_this.identity.publicKey);\n    _this._type = 'counter';\n    return _this;\n  }\n\n  _createClass(CounterStore, [{\n    key: \"value\",\n    get: function get() {\n      return this._index.get().value;\n    }\n  }, {\n    key: \"inc\",\n    value: function inc(amount) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var counter = new Counter(this.identity.publicKey, Object.assign({}, this._index.get()._counters));\n      counter.increment(amount);\n      return this._addOperation({\n        op: 'COUNTER',\n        key: null,\n        value: counter.toJSON()\n      }, options);\n    }\n  }]);\n\n  return CounterStore;\n}(Store);\n\nmodule.exports = CounterStore;","map":{"version":3,"names":["Store","require","CounterIndex","Counter","CounterStore","ipfs","id","dbname","options","Index","Object","assign","_index","identity","publicKey","_type","get","value","amount","counter","_counters","increment","_addOperation","op","key","toJSON","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/orbit-db-counterstore/src/CounterStore.js"],"sourcesContent":["'use strict'\n\nconst Store = require('orbit-db-store')\nconst CounterIndex = require('./CounterIndex')\nconst Counter = require('crdts/src/G-Counter')\n\nclass CounterStore extends Store {\n  constructor (ipfs, id, dbname, options = {}) {\n    if (!options.Index) {\n      Object.assign(options, { Index: CounterIndex })\n    }\n    super(ipfs, id, dbname, options)\n    this._index = new this.options.Index(this.identity.publicKey)\n    this._type = 'counter'\n  }\n\n  get value () {\n    return this._index.get().value\n  }\n\n  inc (amount, options = {}) {\n    const counter = new Counter(this.identity.publicKey, Object.assign({}, this._index.get()._counters))\n    counter.increment(amount)\n    return this._addOperation({\n      op: 'COUNTER',\n      key: null,\n      value: counter.toJSON()\n    }, options)\n  }\n}\n\nmodule.exports = CounterStore\n"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA5B;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,qBAAD,CAAvB;;IAEMG,Y;;;;;EACJ,sBAAaC,IAAb,EAAmBC,EAAnB,EAAuBC,MAAvB,EAA6C;IAAA;;IAAA,IAAdC,OAAc,uEAAJ,EAAI;;IAAA;;IAC3C,IAAI,CAACA,OAAO,CAACC,KAAb,EAAoB;MAClBC,MAAM,CAACC,MAAP,CAAcH,OAAd,EAAuB;QAAEC,KAAK,EAAEP;MAAT,CAAvB;IACD;;IACD,0BAAMG,IAAN,EAAYC,EAAZ,EAAgBC,MAAhB,EAAwBC,OAAxB;IACA,MAAKI,MAAL,GAAc,IAAI,MAAKJ,OAAL,CAAaC,KAAjB,CAAuB,MAAKI,QAAL,CAAcC,SAArC,CAAd;IACA,MAAKC,KAAL,GAAa,SAAb;IAN2C;EAO5C;;;;SAED,eAAa;MACX,OAAO,KAAKH,MAAL,CAAYI,GAAZ,GAAkBC,KAAzB;IACD;;;WAED,aAAKC,MAAL,EAA2B;MAAA,IAAdV,OAAc,uEAAJ,EAAI;MACzB,IAAMW,OAAO,GAAG,IAAIhB,OAAJ,CAAY,KAAKU,QAAL,CAAcC,SAA1B,EAAqCJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,MAAL,CAAYI,GAAZ,GAAkBI,SAApC,CAArC,CAAhB;MACAD,OAAO,CAACE,SAAR,CAAkBH,MAAlB;MACA,OAAO,KAAKI,aAAL,CAAmB;QACxBC,EAAE,EAAE,SADoB;QAExBC,GAAG,EAAE,IAFmB;QAGxBP,KAAK,EAAEE,OAAO,CAACM,MAAR;MAHiB,CAAnB,EAIJjB,OAJI,CAAP;IAKD;;;;EAtBwBR,K;;AAyB3B0B,MAAM,CAACC,OAAP,GAAiBvB,YAAjB"},"metadata":{},"sourceType":"script"}
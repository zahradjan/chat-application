{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _require = require('ipfs-repo'),\n    repoVersion = _require.repoVersion;\n\nvar withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\n\n\nmodule.exports = function (_ref) {\n  var repo = _ref.repo;\n\n  /**\n   * @type {import('ipfs-core-types/src/repo').API[\"version\"]}\n   */\n  function version() {\n    return _version.apply(this, arguments);\n  }\n\n  function _version() {\n    _version = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n          match,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.prev = 1;\n              _context.next = 4;\n              return repo._checkInitialized(options);\n\n            case 4:\n              _context.next = 12;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](1);\n              // TODO: (dryajov) This is really hacky, there must be a better way\n              match = [/Key not found in database \\[\\/version\\]/, /ENOENT/, /repo is not initialized yet/].some(function (m) {\n                return m.test(_context.t0.message);\n              });\n\n              if (!match) {\n                _context.next = 11;\n                break;\n              }\n\n              return _context.abrupt(\"return\", repoVersion);\n\n            case 11:\n              throw _context.t0;\n\n            case 12:\n              return _context.abrupt(\"return\", repo.version.get());\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 6]]);\n    }));\n    return _version.apply(this, arguments);\n  }\n\n  return withTimeoutOption(version);\n};","map":{"version":3,"names":["require","repoVersion","withTimeoutOption","module","exports","repo","version","options","_checkInitialized","match","some","m","test","message","get"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/repo/version.js"],"sourcesContent":["'use strict'\n\nconst { repoVersion } = require('ipfs-repo')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nmodule.exports = ({ repo }) => {\n  /**\n   * @type {import('ipfs-core-types/src/repo').API[\"version\"]}\n   */\n  async function version (options = {}) {\n    try {\n      // @ts-ignore - not a public API\n      await repo._checkInitialized(options)\n    } catch (err) {\n      // TODO: (dryajov) This is really hacky, there must be a better way\n      const match = [\n        /Key not found in database \\[\\/version\\]/,\n        /ENOENT/,\n        /repo is not initialized yet/\n      ].some((m) => {\n        return m.test(err.message)\n      })\n      if (match) {\n        // this repo has not been initialized\n        return repoVersion\n      }\n      throw err\n    }\n\n    return repo.version.get()\n  }\n\n  return withTimeoutOption(version)\n}\n"],"mappings":"AAAA;;;;;;AAEA,eAAwBA,OAAO,CAAC,WAAD,CAA/B;AAAA,IAAQC,WAAR,YAAQA,WAAR;;AACA,IAAMC,iBAAiB,GAAGF,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,gBAAc;EAAA,IAAXC,IAAW,QAAXA,IAAW;;EAC7B;AACF;AACA;EAH+B,SAIdC,OAJc;IAAA;EAAA;;EAAA;IAAA,sEAI7B;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAwBC,OAAxB,2DAAkC,EAAlC;cAAA;cAAA;cAAA,OAGUF,IAAI,CAACG,iBAAL,CAAuBD,OAAvB,CAHV;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAKI;cACME,KANV,GAMkB,CACZ,yCADY,EAEZ,QAFY,EAGZ,6BAHY,EAIZC,IAJY,CAIP,UAACC,CAAD,EAAO;gBACZ,OAAOA,CAAC,CAACC,IAAF,CAAO,YAAIC,OAAX,CAAP;cACD,CANa,CANlB;;cAAA,KAaQJ,KAbR;gBAAA;gBAAA;cAAA;;cAAA,iCAeaR,WAfb;;YAAA;cAAA;;YAAA;cAAA,iCAoBSI,IAAI,CAACC,OAAL,CAAaQ,GAAb,EApBT;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJ6B;IAAA;EAAA;;EA2B7B,OAAOZ,iBAAiB,CAACI,OAAD,CAAxB;AACD,CA5BD"},"metadata":{},"sourceType":"script"}
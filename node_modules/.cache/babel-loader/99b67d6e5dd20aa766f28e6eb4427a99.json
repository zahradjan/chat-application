{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _require = require('multiaddr'),\n    Multiaddr = _require.Multiaddr;\n\nvar toCamel = require('../lib/object-to-camel');\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nvar multipartRequest = require('../lib/multipart-request');\n\nvar abortSignal = require('../lib/abort-signal');\n\nvar _require2 = require('native-abort-controller'),\n    AbortController = _require2.AbortController;\n\nvar _require3 = require('uint8arrays/to-string'),\n    uint8ArrayToString = _require3.toString;\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {DHTAPI[\"put\"]}\n   */\n  function put(_x, _x2) {\n    return _put.apply(this, arguments);\n  }\n\n  function _put() {\n    _put = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key, value) {\n      var options,\n          controller,\n          signal,\n          res,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          message,\n          _args = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              // allow aborting requests on body errors\n              controller = new AbortController();\n              signal = abortSignal(controller.signal, options.signal);\n              _context.t0 = _awaitAsyncGenerator;\n              _context.t1 = api;\n              _context.t2 = _objectSpread;\n              _context.t3 = {\n                signal: signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: uint8ArrayToString(key)\n                }, options))\n              };\n              _context.next = 9;\n              return _awaitAsyncGenerator(multipartRequest(value, controller, options.headers));\n\n            case 9:\n              _context.t4 = _context.sent;\n              _context.t5 = (0, _context.t2)(_context.t3, _context.t4);\n              _context.t6 = _context.t1.post.call(_context.t1, 'dht/put', _context.t5);\n              _context.next = 14;\n              return (0, _context.t0)(_context.t6);\n\n            case 14:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 17;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 19:\n              _context.next = 21;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 21:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 30;\n                break;\n              }\n\n              message = _step.value;\n              message = toCamel(message);\n\n              if (message.responses) {\n                message.responses = message.responses.map(function (\n                /** @type {{ ID: string, Addrs: string[] }} */\n                _ref) {\n                  var ID = _ref.ID,\n                      Addrs = _ref.Addrs;\n                  return {\n                    id: ID,\n                    addrs: (Addrs || []).map(function (a) {\n                      return new Multiaddr(a);\n                    })\n                  };\n                });\n              }\n\n              _context.next = 27;\n              return message;\n\n            case 27:\n              _iteratorAbruptCompletion = false;\n              _context.next = 19;\n              break;\n\n            case 30:\n              _context.next = 36;\n              break;\n\n            case 32:\n              _context.prev = 32;\n              _context.t7 = _context[\"catch\"](17);\n              _didIteratorError = true;\n              _iteratorError = _context.t7;\n\n            case 36:\n              _context.prev = 36;\n              _context.prev = 37;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 41;\n                break;\n              }\n\n              _context.next = 41;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 41:\n              _context.prev = 41;\n\n              if (!_didIteratorError) {\n                _context.next = 44;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 44:\n              return _context.finish(41);\n\n            case 45:\n              return _context.finish(36);\n\n            case 46:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[17, 32, 36, 46], [37,, 41, 45]]);\n    }));\n    return _put.apply(this, arguments);\n  }\n\n  return put;\n});","map":{"version":3,"names":["require","Multiaddr","toCamel","configure","toUrlSearchParams","multipartRequest","abortSignal","AbortController","uint8ArrayToString","toString","module","exports","api","put","key","value","options","controller","signal","searchParams","arg","headers","post","res","ndjson","message","responses","map","ID","Addrs","id","addrs","a"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/dht/put.js"],"sourcesContent":["'use strict'\n\nconst { Multiaddr } = require('multiaddr')\nconst toCamel = require('../lib/object-to-camel')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst multipartRequest = require('../lib/multipart-request')\nconst abortSignal = require('../lib/abort-signal')\nconst { AbortController } = require('native-abort-controller')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {DHTAPI[\"put\"]}\n   */\n  async function * put (key, value, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: uint8ArrayToString(key),\n        ...options\n      }),\n      ...(\n        await multipartRequest(value, controller, options.headers)\n      )\n    })\n\n    for await (let message of res.ndjson()) {\n      message = toCamel(message)\n      if (message.responses) {\n        message.responses = message.responses.map((/** @type {{ ID: string, Addrs: string[] }} */ { ID, Addrs }) => ({\n          id: ID,\n          addrs: (Addrs || []).map(a => new Multiaddr(a))\n        }))\n      }\n      yield message\n    }\n  }\n\n  return put\n})\n"],"mappings":"AAAA;;;;;;;;;;;;AAEA,eAAsBA,OAAO,CAAC,WAAD,CAA7B;AAAA,IAAQC,SAAR,YAAQA,SAAR;;AACA,IAAMC,OAAO,GAAGF,OAAO,CAAC,wBAAD,CAAvB;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMI,iBAAiB,GAAGJ,OAAO,CAAC,6BAAD,CAAjC;;AACA,IAAMK,gBAAgB,GAAGL,OAAO,CAAC,0BAAD,CAAhC;;AACA,IAAMM,WAAW,GAAGN,OAAO,CAAC,qBAAD,CAA3B;;AACA,gBAA4BA,OAAO,CAAC,yBAAD,CAAnC;AAAA,IAAQO,eAAR,aAAQA,eAAR;;AACA,gBAAyCP,OAAO,CAAC,uBAAD,CAAhD;AAAA,IAAkBQ,kBAAlB,aAAQC,QAAR;AAEA;AACA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiBR,SAAS,CAAC,UAAAS,GAAG,EAAI;EAChC;AACF;AACA;EAHkC,SAIfC,GAJe;IAAA;EAAA;;EAAA;IAAA,oEAIhC,iBAAsBC,GAAtB,EAA2BC,KAA3B;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAkCC,OAAlC,2DAA4C,EAA5C;cACE;cACMC,UAFR,GAEqB,IAAIV,eAAJ,EAFrB;cAGQW,MAHR,GAGiBZ,WAAW,CAACW,UAAU,CAACC,MAAZ,EAAoBF,OAAO,CAACE,MAA5B,CAH5B;cAAA;cAAA,cAKoBN,GALpB;cAAA;cAAA;gBAMIM,MAAM,EAANA,MANJ;gBAOIC,YAAY,EAAEf,iBAAiB;kBAC7BgB,GAAG,EAAEZ,kBAAkB,CAACM,GAAD;gBADM,GAE1BE,OAF0B;cAPnC;cAAA;cAAA,4BAYYX,gBAAgB,CAACU,KAAD,EAAQE,UAAR,EAAoBD,OAAO,CAACK,OAA5B,CAZ5B;;YAAA;cAAA;cAAA;cAAA,0BAKwBC,IALxB,mBAK6B,SAL7B;cAAA;cAAA;;YAAA;cAKQC,GALR;cAAA;cAAA;cAAA;cAAA,2BAgB4BA,GAAG,CAACC,MAAJ,EAhB5B;;YAAA;cAAA;cAAA;;YAAA;cAAA;gBAAA;gBAAA;cAAA;;cAgBiBC,OAhBjB;cAiBIA,OAAO,GAAGvB,OAAO,CAACuB,OAAD,CAAjB;;cACA,IAAIA,OAAO,CAACC,SAAZ,EAAuB;gBACrBD,OAAO,CAACC,SAAR,GAAoBD,OAAO,CAACC,SAAR,CAAkBC,GAAlB,CAAsB;gBAAC;gBAAD;kBAAA,IAAkDC,EAAlD,QAAkDA,EAAlD;kBAAA,IAAsDC,KAAtD,QAAsDA,KAAtD;kBAAA,OAAmE;oBAC3GC,EAAE,EAAEF,EADuG;oBAE3GG,KAAK,EAAE,CAACF,KAAK,IAAI,EAAV,EAAcF,GAAd,CAAkB,UAAAK,CAAC;sBAAA,OAAI,IAAI/B,SAAJ,CAAc+B,CAAd,CAAJ;oBAAA,CAAnB;kBAFoG,CAAnE;gBAAA,CAAtB,CAApB;cAID;;cAvBL;cAwBI,OAAMP,OAAN;;YAxBJ;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;cAAA;;YAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAAA;;YAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJgC;IAAA;EAAA;;EAgChC,OAAOZ,GAAP;AACD,CAjCyB,CAA1B"},"metadata":{},"sourceType":"script"}
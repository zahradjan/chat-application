{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar START_MASKS = [255, 254, 252, 248, 240, 224, 192, 128];\nvar STOP_MASKS = [1, 3, 7, 15, 31, 63, 127, 255];\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {Uint8Array} value\n   */\n  function ConsumableBuffer(value) {\n    _classCallCheck(this, ConsumableBuffer);\n\n    this._value = value;\n    this._currentBytePos = value.length - 1;\n    this._currentBitPos = 7;\n  }\n\n  _createClass(ConsumableBuffer, [{\n    key: \"availableBits\",\n    value: function availableBits() {\n      return this._currentBitPos + 1 + this._currentBytePos * 8;\n    }\n  }, {\n    key: \"totalBits\",\n    value: function totalBits() {\n      return this._value.length * 8;\n    }\n    /**\n     * @param {number} bits\n     */\n\n  }, {\n    key: \"take\",\n    value: function take(bits) {\n      var pendingBits = bits;\n      var result = 0;\n\n      while (pendingBits && this._haveBits()) {\n        var byte = this._value[this._currentBytePos];\n        var availableBits = this._currentBitPos + 1;\n        var taking = Math.min(availableBits, pendingBits);\n        var value = byteBitsToInt(byte, availableBits - taking, taking);\n        result = (result << taking) + value;\n        pendingBits -= taking;\n        this._currentBitPos -= taking;\n\n        if (this._currentBitPos < 0) {\n          this._currentBitPos = 7;\n          this._currentBytePos--;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * @param {number} bits\n     */\n\n  }, {\n    key: \"untake\",\n    value: function untake(bits) {\n      this._currentBitPos += bits;\n\n      while (this._currentBitPos > 7) {\n        this._currentBitPos -= 8;\n        this._currentBytePos += 1;\n      }\n    }\n  }, {\n    key: \"_haveBits\",\n    value: function _haveBits() {\n      return this._currentBytePos >= 0;\n    }\n  }]);\n\n  return ConsumableBuffer;\n}();\n/**\n * @param {number} byte\n * @param {number} start\n * @param {number} length\n */\n\n\nfunction byteBitsToInt(byte, start, length) {\n  var mask = maskFor(start, length);\n  return (byte & mask) >>> start;\n}\n/**\n * @param {number} start\n * @param {number} length\n */\n\n\nfunction maskFor(start, length) {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)];\n}","map":{"version":3,"names":["START_MASKS","STOP_MASKS","module","exports","value","_value","_currentBytePos","length","_currentBitPos","bits","pendingBits","result","_haveBits","byte","availableBits","taking","Math","min","byteBitsToInt","start","mask","maskFor"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/hamt-sharding/src/consumable-buffer.js"],"sourcesContent":["'use strict'\n\nconst START_MASKS = [\n  0b11111111,\n  0b11111110,\n  0b11111100,\n  0b11111000,\n  0b11110000,\n  0b11100000,\n  0b11000000,\n  0b10000000\n]\n\nconst STOP_MASKS = [\n  0b00000001,\n  0b00000011,\n  0b00000111,\n  0b00001111,\n  0b00011111,\n  0b00111111,\n  0b01111111,\n  0b11111111\n]\n\nmodule.exports = class ConsumableBuffer {\n  /**\n   * @param {Uint8Array} value\n   */\n  constructor (value) {\n    this._value = value\n    this._currentBytePos = value.length - 1\n    this._currentBitPos = 7\n  }\n\n  availableBits () {\n    return this._currentBitPos + 1 + this._currentBytePos * 8\n  }\n\n  totalBits () {\n    return this._value.length * 8\n  }\n\n  /**\n   * @param {number} bits\n   */\n  take (bits) {\n    let pendingBits = bits\n    let result = 0\n    while (pendingBits && this._haveBits()) {\n      const byte = this._value[this._currentBytePos]\n      const availableBits = this._currentBitPos + 1\n      const taking = Math.min(availableBits, pendingBits)\n      const value = byteBitsToInt(byte, availableBits - taking, taking)\n      result = (result << taking) + value\n\n      pendingBits -= taking\n\n      this._currentBitPos -= taking\n      if (this._currentBitPos < 0) {\n        this._currentBitPos = 7\n        this._currentBytePos--\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * @param {number} bits\n   */\n  untake (bits) {\n    this._currentBitPos += bits\n    while (this._currentBitPos > 7) {\n      this._currentBitPos -= 8\n      this._currentBytePos += 1\n    }\n  }\n\n  _haveBits () {\n    return this._currentBytePos >= 0\n  }\n}\n\n/**\n * @param {number} byte\n * @param {number} start\n * @param {number} length\n */\nfunction byteBitsToInt (byte, start, length) {\n  const mask = maskFor(start, length)\n  return (byte & mask) >>> start\n}\n\n/**\n * @param {number} start\n * @param {number} length\n */\nfunction maskFor (start, length) {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)]\n}\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,WAAW,GAAG,CAClB,GADkB,EAElB,GAFkB,EAGlB,GAHkB,EAIlB,GAJkB,EAKlB,GALkB,EAMlB,GANkB,EAOlB,GAPkB,EAQlB,GARkB,CAApB;AAWA,IAAMC,UAAU,GAAG,CACjB,CADiB,EAEjB,CAFiB,EAGjB,CAHiB,EAIjB,EAJiB,EAKjB,EALiB,EAMjB,EANiB,EAOjB,GAPiB,EAQjB,GARiB,CAAnB;;AAWAC,MAAM,CAACC,OAAP;EACE;AACF;AACA;EACE,0BAAaC,KAAb,EAAoB;IAAA;;IAClB,KAAKC,MAAL,GAAcD,KAAd;IACA,KAAKE,eAAL,GAAuBF,KAAK,CAACG,MAAN,GAAe,CAAtC;IACA,KAAKC,cAAL,GAAsB,CAAtB;EACD;;EARH;IAAA;IAAA,OAUE,yBAAiB;MACf,OAAO,KAAKA,cAAL,GAAsB,CAAtB,GAA0B,KAAKF,eAAL,GAAuB,CAAxD;IACD;EAZH;IAAA;IAAA,OAcE,qBAAa;MACX,OAAO,KAAKD,MAAL,CAAYE,MAAZ,GAAqB,CAA5B;IACD;IAED;AACF;AACA;;EApBA;IAAA;IAAA,OAqBE,cAAME,IAAN,EAAY;MACV,IAAIC,WAAW,GAAGD,IAAlB;MACA,IAAIE,MAAM,GAAG,CAAb;;MACA,OAAOD,WAAW,IAAI,KAAKE,SAAL,EAAtB,EAAwC;QACtC,IAAMC,IAAI,GAAG,KAAKR,MAAL,CAAY,KAAKC,eAAjB,CAAb;QACA,IAAMQ,aAAa,GAAG,KAAKN,cAAL,GAAsB,CAA5C;QACA,IAAMO,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASH,aAAT,EAAwBJ,WAAxB,CAAf;QACA,IAAMN,KAAK,GAAGc,aAAa,CAACL,IAAD,EAAOC,aAAa,GAAGC,MAAvB,EAA+BA,MAA/B,CAA3B;QACAJ,MAAM,GAAG,CAACA,MAAM,IAAII,MAAX,IAAqBX,KAA9B;QAEAM,WAAW,IAAIK,MAAf;QAEA,KAAKP,cAAL,IAAuBO,MAAvB;;QACA,IAAI,KAAKP,cAAL,GAAsB,CAA1B,EAA6B;UAC3B,KAAKA,cAAL,GAAsB,CAAtB;UACA,KAAKF,eAAL;QACD;MACF;;MAED,OAAOK,MAAP;IACD;IAED;AACF;AACA;;EA7CA;IAAA;IAAA,OA8CE,gBAAQF,IAAR,EAAc;MACZ,KAAKD,cAAL,IAAuBC,IAAvB;;MACA,OAAO,KAAKD,cAAL,GAAsB,CAA7B,EAAgC;QAC9B,KAAKA,cAAL,IAAuB,CAAvB;QACA,KAAKF,eAAL,IAAwB,CAAxB;MACD;IACF;EApDH;IAAA;IAAA,OAsDE,qBAAa;MACX,OAAO,KAAKA,eAAL,IAAwB,CAA/B;IACD;EAxDH;;EAAA;AAAA;AA2DA;AACA;AACA;AACA;AACA;;;AACA,SAASY,aAAT,CAAwBL,IAAxB,EAA8BM,KAA9B,EAAqCZ,MAArC,EAA6C;EAC3C,IAAMa,IAAI,GAAGC,OAAO,CAACF,KAAD,EAAQZ,MAAR,CAApB;EACA,OAAO,CAACM,IAAI,GAAGO,IAAR,MAAkBD,KAAzB;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASE,OAAT,CAAkBF,KAAlB,EAAyBZ,MAAzB,EAAiC;EAC/B,OAAOP,WAAW,CAACmB,KAAD,CAAX,GAAqBlB,UAAU,CAACe,IAAI,CAACC,GAAL,CAASV,MAAM,GAAGY,KAAT,GAAiB,CAA1B,EAA6B,CAA7B,CAAD,CAAtC;AACD"},"metadata":{},"sourceType":"script"}
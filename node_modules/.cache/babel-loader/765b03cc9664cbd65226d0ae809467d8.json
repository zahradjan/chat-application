{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nrequire('./index.js');\n\nvar cid = require('./cid.js');\n\nvar bytes = require('./bytes.js');\n\nconst readonly = function () {\n  let {\n    enumerable = true,\n    configurable = false\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    enumerable,\n    configurable,\n    writable: false\n  };\n};\n\nconst links = function* (source, base) {\n  if (source == null) return;\n  if (source instanceof Uint8Array) return;\n\n  for (const [key, value] of Object.entries(source)) {\n    const path = [...base, key];\n\n    if (value != null && typeof value === 'object') {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [...path, index];\n          const cid$1 = cid.CID.asCID(element);\n\n          if (cid$1) {\n            yield [elementPath.join('/'), cid$1];\n          } else if (typeof element === 'object') {\n            yield* links(element, elementPath);\n          }\n        }\n      } else {\n        const cid$1 = cid.CID.asCID(value);\n\n        if (cid$1) {\n          yield [path.join('/'), cid$1];\n        } else {\n          yield* links(value, path);\n        }\n      }\n    }\n  }\n};\n\nconst tree = function* (source, base) {\n  if (source == null) return;\n\n  for (const [key, value] of Object.entries(source)) {\n    const path = [...base, key];\n    yield path.join('/');\n\n    if (value != null && !(value instanceof Uint8Array) && typeof value === 'object' && !cid.CID.asCID(value)) {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [...path, index];\n          yield elementPath.join('/');\n\n          if (typeof element === 'object' && !cid.CID.asCID(element)) {\n            yield* tree(element, elementPath);\n          }\n        }\n      } else {\n        yield* tree(value, path);\n      }\n    }\n  }\n};\n\nconst get = (source, path) => {\n  let node = source;\n\n  for (const [index, key] of path.entries()) {\n    node = node[key];\n\n    if (node == null) {\n      throw new Error(`Object has no property at ${path.slice(0, index + 1).map(part => `[${JSON.stringify(part)}]`).join('')}`);\n    }\n\n    const cid$1 = cid.CID.asCID(node);\n\n    if (cid$1) {\n      return {\n        value: cid$1,\n        remaining: path.slice(index + 1).join('/')\n      };\n    }\n  }\n\n  return {\n    value: node\n  };\n};\n\nclass Block {\n  constructor(_ref) {\n    let {\n      cid,\n      bytes,\n      value\n    } = _ref;\n    if (!cid || !bytes || typeof value === 'undefined') throw new Error('Missing required argument');\n    this.cid = cid;\n    this.bytes = bytes;\n    this.value = value;\n    this.asBlock = this;\n    Object.defineProperties(this, {\n      cid: readonly(),\n      bytes: readonly(),\n      value: readonly(),\n      asBlock: readonly()\n    });\n  }\n\n  links() {\n    return links(this.value, []);\n  }\n\n  tree() {\n    return tree(this.value, []);\n  }\n\n  get() {\n    let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '/';\n    return get(this.value, path.split('/').filter(Boolean));\n  }\n\n}\n\nconst encode = async _ref2 => {\n  let {\n    value,\n    codec,\n    hasher\n  } = _ref2;\n  if (typeof value === 'undefined') throw new Error('Missing required argument \"value\"');\n  if (!codec || !hasher) throw new Error('Missing required argument: codec or hasher');\n  const bytes = codec.encode(value);\n  const hash = await hasher.digest(bytes);\n  const cid$1 = cid.CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid: cid$1\n  });\n};\n\nconst decode = async _ref3 => {\n  let {\n    bytes,\n    codec,\n    hasher\n  } = _ref3;\n  if (!bytes) throw new Error('Missing required argument \"bytes\"');\n  if (!codec || !hasher) throw new Error('Missing required argument: codec or hasher');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  const cid$1 = cid.CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid: cid$1\n  });\n};\n\nconst createUnsafe = _ref4 => {\n  let {\n    bytes,\n    cid,\n    value: maybeValue,\n    codec\n  } = _ref4;\n  const value = maybeValue !== undefined ? maybeValue : codec && codec.decode(bytes);\n  if (value === undefined) throw new Error('Missing required argument, must either provide \"value\" or \"codec\"');\n  return new Block({\n    cid,\n    bytes,\n    value\n  });\n};\n\nconst create = async _ref5 => {\n  let {\n    bytes: bytes$1,\n    cid,\n    hasher,\n    codec\n  } = _ref5;\n  if (!bytes$1) throw new Error('Missing required argument \"bytes\"');\n  if (!hasher) throw new Error('Missing required argument \"hasher\"');\n  const value = codec.decode(bytes$1);\n  const hash = await hasher.digest(bytes$1);\n\n  if (!bytes.equals(cid.multihash.bytes, hash.bytes)) {\n    throw new Error('CID hash does not match bytes');\n  }\n\n  return createUnsafe({\n    bytes: bytes$1,\n    cid,\n    value,\n    codec\n  });\n};\n\nexports.Block = Block;\nexports.create = create;\nexports.createUnsafe = createUnsafe;\nexports.decode = decode;\nexports.encode = encode;","map":{"version":3,"names":["Object","defineProperty","exports","value","require","cid","bytes","readonly","enumerable","configurable","writable","links","source","base","Uint8Array","key","entries","path","Array","isArray","index","element","elementPath","cid$1","CID","asCID","join","tree","get","node","Error","slice","map","part","JSON","stringify","remaining","Block","constructor","asBlock","defineProperties","split","filter","Boolean","encode","codec","hasher","hash","digest","create","code","decode","createUnsafe","maybeValue","undefined","bytes$1","equals","multihash"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/multiformats/cjs/src/block.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./index.js');\nvar cid = require('./cid.js');\nvar bytes = require('./bytes.js');\n\nconst readonly = ({enumerable = true, configurable = false} = {}) => ({\n  enumerable,\n  configurable,\n  writable: false\n});\nconst links = function* (source, base) {\n  if (source == null)\n    return;\n  if (source instanceof Uint8Array)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    if (value != null && typeof value === 'object') {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          const cid$1 = cid.CID.asCID(element);\n          if (cid$1) {\n            yield [\n              elementPath.join('/'),\n              cid$1\n            ];\n          } else if (typeof element === 'object') {\n            yield* links(element, elementPath);\n          }\n        }\n      } else {\n        const cid$1 = cid.CID.asCID(value);\n        if (cid$1) {\n          yield [\n            path.join('/'),\n            cid$1\n          ];\n        } else {\n          yield* links(value, path);\n        }\n      }\n    }\n  }\n};\nconst tree = function* (source, base) {\n  if (source == null)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    yield path.join('/');\n    if (value != null && !(value instanceof Uint8Array) && typeof value === 'object' && !cid.CID.asCID(value)) {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          yield elementPath.join('/');\n          if (typeof element === 'object' && !cid.CID.asCID(element)) {\n            yield* tree(element, elementPath);\n          }\n        }\n      } else {\n        yield* tree(value, path);\n      }\n    }\n  }\n};\nconst get = (source, path) => {\n  let node = source;\n  for (const [index, key] of path.entries()) {\n    node = node[key];\n    if (node == null) {\n      throw new Error(`Object has no property at ${ path.slice(0, index + 1).map(part => `[${ JSON.stringify(part) }]`).join('') }`);\n    }\n    const cid$1 = cid.CID.asCID(node);\n    if (cid$1) {\n      return {\n        value: cid$1,\n        remaining: path.slice(index + 1).join('/')\n      };\n    }\n  }\n  return { value: node };\n};\nclass Block {\n  constructor({cid, bytes, value}) {\n    if (!cid || !bytes || typeof value === 'undefined')\n      throw new Error('Missing required argument');\n    this.cid = cid;\n    this.bytes = bytes;\n    this.value = value;\n    this.asBlock = this;\n    Object.defineProperties(this, {\n      cid: readonly(),\n      bytes: readonly(),\n      value: readonly(),\n      asBlock: readonly()\n    });\n  }\n  links() {\n    return links(this.value, []);\n  }\n  tree() {\n    return tree(this.value, []);\n  }\n  get(path = '/') {\n    return get(this.value, path.split('/').filter(Boolean));\n  }\n}\nconst encode = async ({value, codec, hasher}) => {\n  if (typeof value === 'undefined')\n    throw new Error('Missing required argument \"value\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const bytes = codec.encode(value);\n  const hash = await hasher.digest(bytes);\n  const cid$1 = cid.CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid: cid$1\n  });\n};\nconst decode = async ({bytes, codec, hasher}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  const cid$1 = cid.CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid: cid$1\n  });\n};\nconst createUnsafe = ({\n  bytes,\n  cid,\n  value: maybeValue,\n  codec\n}) => {\n  const value = maybeValue !== undefined ? maybeValue : codec && codec.decode(bytes);\n  if (value === undefined)\n    throw new Error('Missing required argument, must either provide \"value\" or \"codec\"');\n  return new Block({\n    cid,\n    bytes,\n    value\n  });\n};\nconst create = async ({bytes: bytes$1, cid, hasher, codec}) => {\n  if (!bytes$1)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!hasher)\n    throw new Error('Missing required argument \"hasher\"');\n  const value = codec.decode(bytes$1);\n  const hash = await hasher.digest(bytes$1);\n  if (!bytes.equals(cid.multihash.bytes, hash.bytes)) {\n    throw new Error('CID hash does not match bytes');\n  }\n  return createUnsafe({\n    bytes: bytes$1,\n    cid,\n    value,\n    codec\n  });\n};\n\nexports.Block = Block;\nexports.create = create;\nexports.createUnsafe = createUnsafe;\nexports.decode = decode;\nexports.encode = encode;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
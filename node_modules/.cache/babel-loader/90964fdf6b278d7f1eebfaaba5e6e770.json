{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar BufferList = require('bl/BufferList.js');\n\nvar rabinWasm = require('rabin-wasm');\n\nvar errCode = require('err-code');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar BufferList__default = /*#__PURE__*/_interopDefaultLegacy(BufferList);\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nfunction rabinChunker(_x, _x2) {\n  return _rabinChunker.apply(this, arguments);\n}\n\nfunction _rabinChunker() {\n  _rabinChunker = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source, options) {\n    var min, max, avg, sizepow, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(options.minChunkSize && options.maxChunkSize && options.avgChunkSize)) {\n              _context.next = 6;\n              break;\n            }\n\n            avg = options.avgChunkSize;\n            min = options.minChunkSize;\n            max = options.maxChunkSize;\n            _context.next = 13;\n            break;\n\n          case 6:\n            if (options.avgChunkSize) {\n              _context.next = 10;\n              break;\n            }\n\n            throw errCode__default[\"default\"](new Error('please specify an average chunk size'), 'ERR_INVALID_AVG_CHUNK_SIZE');\n\n          case 10:\n            avg = options.avgChunkSize;\n            min = avg / 3;\n            max = avg + avg / 2;\n\n          case 13:\n            if (!(min < 16)) {\n              _context.next = 15;\n              break;\n            }\n\n            throw errCode__default[\"default\"](new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE');\n\n          case 15:\n            if (max < min) {\n              max = min;\n            }\n\n            if (avg < min) {\n              avg = min;\n            }\n\n            sizepow = Math.floor(Math.log2(avg));\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context.prev = 20;\n            _iterator = _asyncIterator(rabin(source, {\n              min: min,\n              max: max,\n              bits: sizepow,\n              window: options.window,\n              polynomial: options.polynomial\n            }));\n\n          case 22:\n            _context.next = 24;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 24:\n            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n              _context.next = 31;\n              break;\n            }\n\n            chunk = _step.value;\n            _context.next = 28;\n            return chunk;\n\n          case 28:\n            _iteratorAbruptCompletion = false;\n            _context.next = 22;\n            break;\n\n          case 31:\n            _context.next = 37;\n            break;\n\n          case 33:\n            _context.prev = 33;\n            _context.t0 = _context[\"catch\"](20);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 37:\n            _context.prev = 37;\n            _context.prev = 38;\n\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context.next = 42;\n              break;\n            }\n\n            _context.next = 42;\n            return _awaitAsyncGenerator(_iterator.return());\n\n          case 42:\n            _context.prev = 42;\n\n            if (!_didIteratorError) {\n              _context.next = 45;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 45:\n            return _context.finish(42);\n\n          case 46:\n            return _context.finish(37);\n\n          case 47:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[20, 33, 37, 47], [38,, 42, 46]]);\n  }));\n  return _rabinChunker.apply(this, arguments);\n}\n\nfunction rabin(_x3, _x4) {\n  return _rabin.apply(this, arguments);\n}\n\nfunction _rabin() {\n  _rabin = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(source, options) {\n    var r, buffers, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, chunk, sizes, i, size, buf;\n\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _awaitAsyncGenerator(rabinWasm.create(options.bits, options.min, options.max, options.window));\n\n          case 2:\n            r = _context2.sent;\n            buffers = new BufferList__default[\"default\"]();\n            _iteratorAbruptCompletion2 = false;\n            _didIteratorError2 = false;\n            _context2.prev = 6;\n            _iterator2 = _asyncIterator(source);\n\n          case 8:\n            _context2.next = 10;\n            return _awaitAsyncGenerator(_iterator2.next());\n\n          case 10:\n            if (!(_iteratorAbruptCompletion2 = !(_step2 = _context2.sent).done)) {\n              _context2.next = 27;\n              break;\n            }\n\n            chunk = _step2.value;\n            buffers.append(chunk);\n            sizes = r.fingerprint(chunk);\n            i = 0;\n\n          case 15:\n            if (!(i < sizes.length)) {\n              _context2.next = 24;\n              break;\n            }\n\n            size = sizes[i];\n            buf = buffers.slice(0, size);\n            buffers.consume(size);\n            _context2.next = 21;\n            return buf;\n\n          case 21:\n            i++;\n            _context2.next = 15;\n            break;\n\n          case 24:\n            _iteratorAbruptCompletion2 = false;\n            _context2.next = 8;\n            break;\n\n          case 27:\n            _context2.next = 33;\n            break;\n\n          case 29:\n            _context2.prev = 29;\n            _context2.t0 = _context2[\"catch\"](6);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context2.t0;\n\n          case 33:\n            _context2.prev = 33;\n            _context2.prev = 34;\n\n            if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n              _context2.next = 38;\n              break;\n            }\n\n            _context2.next = 38;\n            return _awaitAsyncGenerator(_iterator2.return());\n\n          case 38:\n            _context2.prev = 38;\n\n            if (!_didIteratorError2) {\n              _context2.next = 41;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 41:\n            return _context2.finish(38);\n\n          case 42:\n            return _context2.finish(33);\n\n          case 43:\n            if (!buffers.length) {\n              _context2.next = 46;\n              break;\n            }\n\n            _context2.next = 46;\n            return buffers.slice(0);\n\n          case 46:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[6, 29, 33, 43], [34,, 38, 42]]);\n  }));\n  return _rabin.apply(this, arguments);\n}\n\nmodule.exports = rabinChunker;","map":{"version":3,"names":["BufferList","require","rabinWasm","errCode","_interopDefaultLegacy","e","BufferList__default","errCode__default","rabinChunker","source","options","minChunkSize","maxChunkSize","avgChunkSize","avg","min","max","Error","sizepow","Math","floor","log2","rabin","bits","window","polynomial","chunk","create","r","buffers","append","sizes","fingerprint","i","length","size","buf","slice","consume","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-unixfs-importer/cjs/src/chunker/rabin.js"],"sourcesContent":["'use strict';\n\nvar BufferList = require('bl/BufferList.js');\nvar rabinWasm = require('rabin-wasm');\nvar errCode = require('err-code');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar BufferList__default = /*#__PURE__*/_interopDefaultLegacy(BufferList);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nasync function* rabinChunker(source, options) {\n  let min, max, avg;\n  if (options.minChunkSize && options.maxChunkSize && options.avgChunkSize) {\n    avg = options.avgChunkSize;\n    min = options.minChunkSize;\n    max = options.maxChunkSize;\n  } else if (!options.avgChunkSize) {\n    throw errCode__default[\"default\"](new Error('please specify an average chunk size'), 'ERR_INVALID_AVG_CHUNK_SIZE');\n  } else {\n    avg = options.avgChunkSize;\n    min = avg / 3;\n    max = avg + avg / 2;\n  }\n  if (min < 16) {\n    throw errCode__default[\"default\"](new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE');\n  }\n  if (max < min) {\n    max = min;\n  }\n  if (avg < min) {\n    avg = min;\n  }\n  const sizepow = Math.floor(Math.log2(avg));\n  for await (const chunk of rabin(source, {\n      min: min,\n      max: max,\n      bits: sizepow,\n      window: options.window,\n      polynomial: options.polynomial\n    })) {\n    yield chunk;\n  }\n}\nasync function* rabin(source, options) {\n  const r = await rabinWasm.create(options.bits, options.min, options.max, options.window);\n  const buffers = new BufferList__default[\"default\"]();\n  for await (const chunk of source) {\n    buffers.append(chunk);\n    const sizes = r.fingerprint(chunk);\n    for (let i = 0; i < sizes.length; i++) {\n      const size = sizes[i];\n      const buf = buffers.slice(0, size);\n      buffers.consume(size);\n      yield buf;\n    }\n  }\n  if (buffers.length) {\n    yield buffers.slice(0);\n  }\n}\n\nmodule.exports = rabinChunker;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
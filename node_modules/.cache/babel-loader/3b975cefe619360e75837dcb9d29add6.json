{"ast":null,"code":"import { makeAutoObservable, runInAction, toJS } from \"mobx\";\nimport { ChatRoom } from \"../models/Room.js\";\n\nvar util = require(\"util\");\n\nexport class RoomStore {\n  //TODO:load rooms from db\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.rooms = [];\n    this.selectedRoom = undefined;\n    makeAutoObservable(this);\n  }\n\n  async init() {\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\n    await this.loadRoomsDb();\n    await this.setRoomsFromDb();\n  }\n\n  async createRoom(roomName) {\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\n    console.log(roomName);\n    const chatRoom = new ChatRoom(this.rootStore.dataStore.ipfsNode, this.rootStore.dataStore.ipfsNode.pubsub, this.rootStore.dataStore.orbitDb, roomName);\n    this.rooms.push(chatRoom);\n    console.log(chatRoom);\n    const roomJSON = util.inspect(chatRoom);\n    console.log(roomJSON);\n    await this.roomsDb.add(roomJSON);\n    return chatRoom;\n  } //TODO: hodit peer == user jako propertu roomky aby byli spojeny a zaroven myslet na vice useru v jedne roomce\n\n\n  getRoom(roomName) {\n    //TODO: kdyz nenajde apod.\n    return this.rooms.find(room => roomName === room.roomName);\n  }\n\n  async loadRoomsDb() {\n    this.roomsDb = await this.rootStore.dataStore.orbitDb.feed(\"rooms\");\n    await this.roomsDb.load();\n  }\n\n  async setRoomsFromDb() {\n    const all = await toJS(this.roomsDb.all);\n    runInAction(() => {\n      all.map(e => {\n        console.log(e.payload.value);\n        return this.rooms.push(e.payload.value);\n      });\n    });\n  }\n\n  setSelectedRoom(roomName) {\n    let room;\n    runInAction(async () => {\n      room = this.getRoom(roomName);\n      if (!room) room = await this.createRoom(roomName);\n      console.log(room);\n      this.selectedRoom = room;\n    });\n  }\n\n  isChatRoomReady(roomName) {\n    const room = this.getRoom(roomName);\n    console.log(!!room);\n    return !!room;\n  }\n\n}","map":{"version":3,"names":["makeAutoObservable","runInAction","toJS","ChatRoom","util","require","RoomStore","constructor","rootStore","rooms","selectedRoom","undefined","init","dataStore","ipfsNode","Error","orbitDb","loadRoomsDb","setRoomsFromDb","createRoom","roomName","console","log","chatRoom","pubsub","push","roomJSON","inspect","roomsDb","add","getRoom","find","room","feed","load","all","map","e","payload","value","setSelectedRoom","isChatRoomReady"],"sources":["C:/Users/zajan/GitHub/chatApplication/src/data/store/RoomStore.js"],"sourcesContent":["import { makeAutoObservable, runInAction, toJS } from \"mobx\";\r\nimport { ChatRoom } from \"../models/Room.js\";\r\nvar util = require(\"util\");\r\n\r\nexport class RoomStore {\r\n  //TODO:load rooms from db\r\n  rooms;\r\n  roomsDb;\r\n  selectedRoom;\r\n  constructor(rootStore) {\r\n    this.rootStore = rootStore;\r\n    this.rooms = [];\r\n    this.selectedRoom = undefined;\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  async init() {\r\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\r\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\r\n    await this.loadRoomsDb();\r\n    await this.setRoomsFromDb();\r\n  }\r\n\r\n  async createRoom(roomName) {\r\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\r\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\r\n    console.log(roomName);\r\n\r\n    const chatRoom = new ChatRoom(\r\n      this.rootStore.dataStore.ipfsNode,\r\n      this.rootStore.dataStore.ipfsNode.pubsub,\r\n      this.rootStore.dataStore.orbitDb,\r\n      roomName\r\n    );\r\n\r\n    this.rooms.push(chatRoom);\r\n    console.log(chatRoom);\r\n    const roomJSON = util.inspect(chatRoom);\r\n    console.log(roomJSON);\r\n    await this.roomsDb.add(roomJSON);\r\n    return chatRoom;\r\n  }\r\n  //TODO: hodit peer == user jako propertu roomky aby byli spojeny a zaroven myslet na vice useru v jedne roomce\r\n  getRoom(roomName) {\r\n    //TODO: kdyz nenajde apod.\r\n    return this.rooms.find((room) => roomName === room.roomName);\r\n  }\r\n\r\n  async loadRoomsDb() {\r\n    this.roomsDb = await this.rootStore.dataStore.orbitDb.feed(\"rooms\");\r\n    await this.roomsDb.load();\r\n  }\r\n  async setRoomsFromDb() {\r\n    const all = await toJS(this.roomsDb.all);\r\n    runInAction(() => {\r\n      all.map((e) => {\r\n        console.log(e.payload.value);\r\n        return this.rooms.push(e.payload.value);\r\n      });\r\n    });\r\n  }\r\n  setSelectedRoom(roomName) {\r\n    let room;\r\n    runInAction(async () => {\r\n      room = this.getRoom(roomName);\r\n      if (!room) room = await this.createRoom(roomName);\r\n      console.log(room);\r\n      this.selectedRoom = room;\r\n    });\r\n  }\r\n\r\n  isChatRoomReady(roomName) {\r\n    const room = this.getRoom(roomName);\r\n    console.log(!!room);\r\n    return !!room;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
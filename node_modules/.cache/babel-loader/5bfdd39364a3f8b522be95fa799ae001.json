{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _require = require('multiformats/cid'),\n    CID = _require.CID;\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {FilesAPI[\"cp\"]}\n   */\n  function cp(_x, _x2) {\n    return _cp.apply(this, arguments);\n  }\n\n  function _cp() {\n    _cp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(sources, destination) {\n      var options,\n          sourceArr,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n\n              /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n              sourceArr = Array.isArray(sources) ? sources : [sources];\n              _context.next = 4;\n              return api.post('files/cp', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: sourceArr.concat(destination).map(function (src) {\n                    return CID.asCID(src) ? \"/ipfs/\".concat(src) : src;\n                  })\n                }, options)),\n                headers: options.headers\n              });\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.text();\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _cp.apply(this, arguments);\n  }\n\n  return cp;\n});","map":{"version":3,"names":["require","CID","configure","toUrlSearchParams","module","exports","api","cp","sources","destination","options","sourceArr","Array","isArray","post","signal","searchParams","arg","concat","map","src","asCID","headers","res","text"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/files/cp.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {FilesAPI[\"cp\"]}\n   */\n  async function cp (sources, destination, options = {}) {\n    /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n    const sourceArr = Array.isArray(sources) ? sources : [sources]\n\n    const res = await api.post('files/cp', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sourceArr.concat(destination).map(src => CID.asCID(src) ? `/ipfs/${src}` : src),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return cp\n})\n"],"mappings":"AAAA;;;;;;;;AAEA,eAAgBA,OAAO,CAAC,kBAAD,CAAvB;AAAA,IAAQC,GAAR,YAAQA,GAAR;;AACA,IAAMC,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAI,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAChC;AACF;AACA;EAHkC,SAIjBC,EAJiB;IAAA;EAAA;;EAAA;IAAA,iEAIhC,iBAAmBC,OAAnB,EAA4BC,WAA5B;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAyCC,OAAzC,2DAAmD,EAAnD;;cACE;cACMC,SAFR,GAEoBC,KAAK,CAACC,OAAN,CAAcL,OAAd,IAAyBA,OAAzB,GAAmC,CAACA,OAAD,CAFvD;cAAA;cAAA,OAIoBF,GAAG,CAACQ,IAAJ,CAAS,UAAT,EAAqB;gBACrCC,MAAM,EAAEL,OAAO,CAACK,MADqB;gBAErCC,YAAY,EAAEb,iBAAiB;kBAC7Bc,GAAG,EAAEN,SAAS,CAACO,MAAV,CAAiBT,WAAjB,EAA8BU,GAA9B,CAAkC,UAAAC,GAAG;oBAAA,OAAInB,GAAG,CAACoB,KAAJ,CAAUD,GAAV,oBAA0BA,GAA1B,IAAkCA,GAAtC;kBAAA,CAArC;gBADwB,GAE1BV,OAF0B,EAFM;gBAMrCY,OAAO,EAAEZ,OAAO,CAACY;cANoB,CAArB,CAJpB;;YAAA;cAIQC,GAJR;cAAA;cAAA,OAaQA,GAAG,CAACC,IAAJ,EAbR;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJgC;IAAA;EAAA;;EAmBhC,OAAOjB,EAAP;AACD,CApByB,CAA1B"},"metadata":{},"sourceType":"script"}
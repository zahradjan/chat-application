{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _require = require('./utils'),\n    isValidMultiaddr = _require.isValidMultiaddr;\n\nvar withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\n\n\nmodule.exports = function (_ref) {\n  var repo = _ref.repo;\n\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API[\"rm\"]}\n   */\n  function rm(_x) {\n    return _rm.apply(this, arguments);\n  }\n\n  function _rm() {\n    _rm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(multiaddr) {\n      var options,\n          config,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n              if (isValidMultiaddr(multiaddr)) {\n                _context.next = 3;\n                break;\n              }\n\n              throw new Error(\"\".concat(multiaddr, \" is not a valid Multiaddr\"));\n\n            case 3:\n              _context.next = 5;\n              return repo.config.getAll(options);\n\n            case 5:\n              config = _context.sent;\n              config.Bootstrap = (config.Bootstrap || []).filter(function (ma) {\n                return ma.toString() !== multiaddr.toString();\n              });\n              _context.next = 9;\n              return repo.config.replace(config);\n\n            case 9:\n              return _context.abrupt(\"return\", {\n                Peers: [multiaddr]\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _rm.apply(this, arguments);\n  }\n\n  return withTimeoutOption(rm);\n};","map":{"version":3,"names":["require","isValidMultiaddr","withTimeoutOption","module","exports","repo","rm","multiaddr","options","Error","config","getAll","Bootstrap","filter","ma","toString","replace","Peers"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/bootstrap/rm.js"],"sourcesContent":["'use strict'\n\nconst { isValidMultiaddr } = require('./utils')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nmodule.exports = ({ repo }) => {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API[\"rm\"]}\n   */\n  async function rm (multiaddr, options = {}) {\n    if (!isValidMultiaddr(multiaddr)) {\n      throw new Error(`${multiaddr} is not a valid Multiaddr`)\n    }\n\n    /** @type {import('ipfs-core-types/src/config').Config} */\n    // @ts-ignore repo returns type unknown\n    const config = await repo.config.getAll(options)\n    config.Bootstrap = (config.Bootstrap || []).filter(ma => ma.toString() !== multiaddr.toString())\n\n    await repo.config.replace(config)\n\n    return { Peers: [multiaddr] }\n  }\n\n  return withTimeoutOption(rm)\n}\n"],"mappings":"AAAA;;;;;;AAEA,eAA6BA,OAAO,CAAC,SAAD,CAApC;AAAA,IAAQC,gBAAR,YAAQA,gBAAR;;AACA,IAAMC,iBAAiB,GAAGF,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,gBAAc;EAAA,IAAXC,IAAW,QAAXA,IAAW;;EAC7B;AACF;AACA;EAH+B,SAIdC,EAJc;IAAA;EAAA;;EAAA;IAAA,iEAI7B,iBAAmBC,SAAnB;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAA8BC,OAA9B,2DAAwC,EAAxC;;cAAA,IACOP,gBAAgB,CAACM,SAAD,CADvB;gBAAA;gBAAA;cAAA;;cAAA,MAEU,IAAIE,KAAJ,WAAaF,SAAb,+BAFV;;YAAA;cAAA;cAAA,OAOuBF,IAAI,CAACK,MAAL,CAAYC,MAAZ,CAAmBH,OAAnB,CAPvB;;YAAA;cAOQE,MAPR;cAQEA,MAAM,CAACE,SAAP,GAAmB,CAACF,MAAM,CAACE,SAAP,IAAoB,EAArB,EAAyBC,MAAzB,CAAgC,UAAAC,EAAE;gBAAA,OAAIA,EAAE,CAACC,QAAH,OAAkBR,SAAS,CAACQ,QAAV,EAAtB;cAAA,CAAlC,CAAnB;cARF;cAAA,OAUQV,IAAI,CAACK,MAAL,CAAYM,OAAZ,CAAoBN,MAApB,CAVR;;YAAA;cAAA,iCAYS;gBAAEO,KAAK,EAAE,CAACV,SAAD;cAAT,CAZT;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJ6B;IAAA;EAAA;;EAmB7B,OAAOL,iBAAiB,CAACI,EAAD,CAAxB;AACD,CApBD"},"metadata":{},"sourceType":"script"}
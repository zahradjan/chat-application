{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar rmAll = require('./rm-all');\n\nvar last = require('it-last');\n\nvar configure = require('../lib/configure');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {import('../types').Options} config\n */\n\n\nmodule.exports = function (config) {\n  var all = rmAll(config);\n  return configure(function () {\n    /**\n     * @type {PinAPI[\"rm\"]}\n     */\n    function rm(_x) {\n      return _rm.apply(this, arguments);\n    }\n\n    function _rm() {\n      _rm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(path) {\n        var options,\n            _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                return _context.abrupt(\"return\", last(all([_objectSpread({\n                  path: path\n                }, options)], options)));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _rm.apply(this, arguments);\n    }\n\n    return rm;\n  })(config);\n};","map":{"version":3,"names":["rmAll","require","last","configure","module","exports","config","all","rm","path","options"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/pin/rm.js"],"sourcesContent":["'use strict'\n\nconst rmAll = require('./rm-all')\nconst last = require('it-last')\nconst configure = require('../lib/configure')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {import('../types').Options} config\n */\nmodule.exports = (config) => {\n  const all = rmAll(config)\n\n  return configure(() => {\n    /**\n     * @type {PinAPI[\"rm\"]}\n     */\n    async function rm (path, options = {}) {\n      // @ts-ignore last can return undefined\n      return last(all([{\n        path,\n        ...options\n      }], options))\n    }\n    return rm\n  })(config)\n}\n"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,SAAD,CAApB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,UAACC,MAAD,EAAY;EAC3B,IAAMC,GAAG,GAAGP,KAAK,CAACM,MAAD,CAAjB;EAEA,OAAOH,SAAS,CAAC,YAAM;IACrB;AACJ;AACA;IAHyB,SAINK,EAJM;MAAA;IAAA;;IAAA;MAAA,iEAIrB,iBAAmBC,IAAnB;QAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAyBC,OAAzB,2DAAmC,EAAnC;gBAAA,iCAESR,IAAI,CAACK,GAAG,CAAC;kBACdE,IAAI,EAAJA;gBADc,GAEXC,OAFW,EAAD,EAGXA,OAHW,CAAJ,CAFb;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAJqB;MAAA;IAAA;;IAWrB,OAAOF,EAAP;EACD,CAZe,CAAT,CAYJF,MAZI,CAAP;AAaD,CAhBD"},"metadata":{},"sourceType":"script"}
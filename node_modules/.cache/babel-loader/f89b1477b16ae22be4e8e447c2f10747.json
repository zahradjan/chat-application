{"ast":null,"code":"'use strict';\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar createExport = require('./export');\n\nvar createGet = require('./get');\n\nvar createImport = require('./import');\n\nvar createPut = require('./put');\n\nvar createResolve = require('./resolve');\n\nvar DagAPI = /*#__PURE__*/_createClass(\n/**\n * @param {Object} config\n * @param {import('ipfs-core-utils/src/multihashes')} config.hashers\n * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n * @param {import('../../types').Preload} config.preload\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nfunction DagAPI(_ref) {\n  var repo = _ref.repo,\n      codecs = _ref.codecs,\n      hashers = _ref.hashers,\n      preload = _ref.preload;\n\n  _classCallCheck(this, DagAPI);\n\n  this.export = createExport({\n    repo: repo,\n    preload: preload,\n    codecs: codecs\n  });\n  this.get = createGet({\n    codecs: codecs,\n    repo: repo,\n    preload: preload\n  });\n  this.import = createImport({\n    repo: repo\n  });\n  this.resolve = createResolve({\n    repo: repo,\n    codecs: codecs,\n    preload: preload\n  });\n  this.put = createPut({\n    repo: repo,\n    codecs: codecs,\n    hashers: hashers,\n    preload: preload\n  });\n});\n\nmodule.exports = DagAPI;","map":{"version":3,"names":["createExport","require","createGet","createImport","createPut","createResolve","DagAPI","repo","codecs","hashers","preload","export","get","import","resolve","put","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/dag/index.js"],"sourcesContent":["'use strict'\n\nconst createExport = require('./export')\nconst createGet = require('./get')\nconst createImport = require('./import')\nconst createPut = require('./put')\nconst createResolve = require('./resolve')\n\nclass DagAPI {\n  /**\n   * @param {Object} config\n   * @param {import('ipfs-core-utils/src/multihashes')} config.hashers\n   * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n   * @param {import('../../types').Preload} config.preload\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor ({ repo, codecs, hashers, preload }) {\n    this.export = createExport({ repo, preload, codecs })\n    this.get = createGet({ codecs, repo, preload })\n    this.import = createImport({ repo })\n    this.resolve = createResolve({ repo, codecs, preload })\n    this.put = createPut({ repo, codecs, hashers, preload })\n  }\n}\n\nmodule.exports = DagAPI\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,YAAY,GAAGC,OAAO,CAAC,UAAD,CAA5B;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,OAAD,CAAzB;;AACA,IAAME,YAAY,GAAGF,OAAO,CAAC,UAAD,CAA5B;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,OAAD,CAAzB;;AACA,IAAMI,aAAa,GAAGJ,OAAO,CAAC,WAAD,CAA7B;;IAEMK,M;AACJ;AACF;AACA;AACA;AACA;AACA;AACA;AACE,sBAAiD;EAAA,IAAlCC,IAAkC,QAAlCA,IAAkC;EAAA,IAA5BC,MAA4B,QAA5BA,MAA4B;EAAA,IAApBC,OAAoB,QAApBA,OAAoB;EAAA,IAAXC,OAAW,QAAXA,OAAW;;EAAA;;EAC/C,KAAKC,MAAL,GAAcX,YAAY,CAAC;IAAEO,IAAI,EAAJA,IAAF;IAAQG,OAAO,EAAPA,OAAR;IAAiBF,MAAM,EAANA;EAAjB,CAAD,CAA1B;EACA,KAAKI,GAAL,GAAWV,SAAS,CAAC;IAAEM,MAAM,EAANA,MAAF;IAAUD,IAAI,EAAJA,IAAV;IAAgBG,OAAO,EAAPA;EAAhB,CAAD,CAApB;EACA,KAAKG,MAAL,GAAcV,YAAY,CAAC;IAAEI,IAAI,EAAJA;EAAF,CAAD,CAA1B;EACA,KAAKO,OAAL,GAAeT,aAAa,CAAC;IAAEE,IAAI,EAAJA,IAAF;IAAQC,MAAM,EAANA,MAAR;IAAgBE,OAAO,EAAPA;EAAhB,CAAD,CAA5B;EACA,KAAKK,GAAL,GAAWX,SAAS,CAAC;IAAEG,IAAI,EAAJA,IAAF;IAAQC,MAAM,EAANA,MAAR;IAAgBC,OAAO,EAAPA,OAAhB;IAAyBC,OAAO,EAAPA;EAAzB,CAAD,CAApB;AACD,C;;AAGHM,MAAM,CAACC,OAAP,GAAiBX,MAAjB"},"metadata":{},"sourceType":"script"}
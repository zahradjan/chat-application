{"ast":null,"code":"/* eslint max-nested-callbacks: [\"error\", 8] */\n'use strict';\n\nvar _slicedToArray = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _toConsumableArray = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _require = require('multiformats/cid'),\n    CID = _require.CID;\n\nvar errCode = require('err-code');\n\nvar debug = require('debug');\n\nvar first = require('it-first');\n\nvar Block = require('multiformats/block');\n\nvar cborg = require('cborg');\n\nvar dagPb = require('@ipld/dag-pb');\n\nvar _require2 = require('./utils/blockstore'),\n    cidToKey = _require2.cidToKey,\n    keyToMultihash = _require2.keyToMultihash;\n\nvar walkDag = require('./utils/walk-dag');\n/**\n * @typedef {object} PinInternal\n * @property {number} depth\n * @property {import('multiformats/cid').CIDVersion} [version]\n * @property {number} [codec]\n * @property {Record<string, any>} [metadata]\n */\n\n/**\n * @typedef {import('./types').PinType} PinType\n * @typedef {import('./types').PinQueryType} PinQueryType\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('./types').PinOptions} PinOptions\n * @typedef {import('./types').AbortOptions} AbortOptions\n * @typedef {import('./types').Pins} Pins\n */\n\n/**\n * @param {string} type\n */\n\n\nfunction invalidPinTypeErr(type) {\n  var errMsg = \"Invalid type '\".concat(type, \"', must be one of {direct, indirect, recursive, all}\");\n  return errCode(new Error(errMsg), 'ERR_INVALID_PIN_TYPE');\n}\n\nvar PinTypes = {\n  /** @type {'direct'} */\n  direct: 'direct',\n\n  /** @type {'recursive'} */\n  recursive: 'recursive',\n\n  /** @type {'indirect'} */\n  indirect: 'indirect',\n\n  /** @type {'all'} */\n  all: 'all'\n};\n/**\n * @implements {Pins}\n */\n\nvar PinManager = /*#__PURE__*/function () {\n  /**\n   * @param {Object} config\n   * @param {import('interface-datastore').Datastore} config.pinstore\n   * @param {import('interface-blockstore').Blockstore} config.blockstore\n   * @param {import('./types').loadCodec} config.loadCodec\n   */\n  function PinManager(_ref) {\n    var pinstore = _ref.pinstore,\n        blockstore = _ref.blockstore,\n        loadCodec = _ref.loadCodec;\n\n    _classCallCheck(this, PinManager);\n\n    this.pinstore = pinstore;\n    this.blockstore = blockstore;\n    this.loadCodec = loadCodec;\n    this.log = debug('ipfs:repo:pin');\n    this.directPins = new Set();\n    this.recursivePins = new Set();\n  }\n  /**\n   * @param {CID} cid\n   * @param {PinOptions & AbortOptions} [options]\n   */\n\n\n  _createClass(PinManager, [{\n    key: \"pinDirectly\",\n    value: function () {\n      var _pinDirectly = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid) {\n        var options,\n            pin,\n            _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                _context.next = 3;\n                return this.blockstore.get(cid, options);\n\n              case 3:\n                /** @type {PinInternal} */\n                pin = {\n                  depth: 0\n                };\n\n                if (cid.version !== 0) {\n                  pin.version = cid.version;\n                }\n\n                if (cid.code !== dagPb.code) {\n                  pin.codec = cid.code;\n                }\n\n                if (options.metadata) {\n                  pin.metadata = options.metadata;\n                }\n\n                return _context.abrupt(\"return\", this.pinstore.put(cidToKey(cid), cborg.encode(pin)));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function pinDirectly(_x3) {\n        return _pinDirectly.apply(this, arguments);\n      }\n\n      return pinDirectly;\n    }()\n    /**\n     * @param {CID} cid\n     * @param {AbortOptions} [options]\n     */\n\n  }, {\n    key: \"unpin\",\n    value: function unpin(cid, options) {\n      return this.pinstore.delete(cidToKey(cid), options);\n    }\n    /**\n     * @param {CID} cid\n     * @param {PinOptions & AbortOptions} [options]\n     */\n\n  }, {\n    key: \"pinRecursively\",\n    value: function () {\n      var _pinRecursively = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(cid) {\n        var options,\n            pin,\n            _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n                _context2.next = 3;\n                return this.fetchCompleteDag(cid, options);\n\n              case 3:\n                /** @type {PinInternal} */\n                pin = {\n                  depth: Infinity\n                };\n\n                if (cid.version !== 0) {\n                  pin.version = cid.version;\n                }\n\n                if (cid.code !== dagPb.code) {\n                  pin.codec = cid.code;\n                }\n\n                if (options.metadata) {\n                  pin.metadata = options.metadata;\n                }\n\n                _context2.next = 9;\n                return this.pinstore.put(cidToKey(cid), cborg.encode(pin));\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function pinRecursively(_x4) {\n        return _pinRecursively.apply(this, arguments);\n      }\n\n      return pinRecursively;\n    }()\n    /**\n     * @param {AbortOptions} [options]\n     */\n\n  }, {\n    key: \"directKeys\",\n    value: function directKeys(options) {\n      var _this = this;\n\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, entry, pin, version, codec, multihash;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _iteratorAbruptCompletion = false;\n                _didIteratorError = false;\n                _context3.prev = 2;\n                _iterator = _asyncIterator(_this.pinstore.query({\n                  filters: [function (entry) {\n                    var pin = cborg.decode(entry.value);\n                    return pin.depth === 0;\n                  }]\n                }));\n\n              case 4:\n                _context3.next = 6;\n                return _awaitAsyncGenerator(_iterator.next());\n\n              case 6:\n                if (!(_iteratorAbruptCompletion = !(_step = _context3.sent).done)) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                entry = _step.value;\n                pin = cborg.decode(entry.value);\n                version = pin.version || 0;\n                codec = pin.codec != null ? pin.codec : dagPb.code;\n                multihash = keyToMultihash(entry.key);\n                _context3.next = 14;\n                return {\n                  cid: CID.create(version, codec, multihash),\n                  metadata: pin.metadata\n                };\n\n              case 14:\n                _iteratorAbruptCompletion = false;\n                _context3.next = 4;\n                break;\n\n              case 17:\n                _context3.next = 23;\n                break;\n\n              case 19:\n                _context3.prev = 19;\n                _context3.t0 = _context3[\"catch\"](2);\n                _didIteratorError = true;\n                _iteratorError = _context3.t0;\n\n              case 23:\n                _context3.prev = 23;\n                _context3.prev = 24;\n\n                if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                  _context3.next = 28;\n                  break;\n                }\n\n                _context3.next = 28;\n                return _awaitAsyncGenerator(_iterator.return());\n\n              case 28:\n                _context3.prev = 28;\n\n                if (!_didIteratorError) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 31:\n                return _context3.finish(28);\n\n              case 32:\n                return _context3.finish(23);\n\n              case 33:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[2, 19, 23, 33], [24,, 28, 32]]);\n      }))();\n    }\n    /**\n     * @param {AbortOptions} [options]\n     */\n\n  }, {\n    key: \"recursiveKeys\",\n    value: function recursiveKeys(options) {\n      var _this2 = this;\n\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, entry, pin, version, codec, multihash;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _iteratorAbruptCompletion2 = false;\n                _didIteratorError2 = false;\n                _context4.prev = 2;\n                _iterator2 = _asyncIterator(_this2.pinstore.query({\n                  filters: [function (entry) {\n                    var pin = cborg.decode(entry.value);\n                    return pin.depth === Infinity;\n                  }]\n                }));\n\n              case 4:\n                _context4.next = 6;\n                return _awaitAsyncGenerator(_iterator2.next());\n\n              case 6:\n                if (!(_iteratorAbruptCompletion2 = !(_step2 = _context4.sent).done)) {\n                  _context4.next = 17;\n                  break;\n                }\n\n                entry = _step2.value;\n                pin = cborg.decode(entry.value);\n                version = pin.version || 0;\n                codec = pin.codec != null ? pin.codec : dagPb.code;\n                multihash = keyToMultihash(entry.key);\n                _context4.next = 14;\n                return {\n                  cid: CID.create(version, codec, multihash),\n                  metadata: pin.metadata\n                };\n\n              case 14:\n                _iteratorAbruptCompletion2 = false;\n                _context4.next = 4;\n                break;\n\n              case 17:\n                _context4.next = 23;\n                break;\n\n              case 19:\n                _context4.prev = 19;\n                _context4.t0 = _context4[\"catch\"](2);\n                _didIteratorError2 = true;\n                _iteratorError2 = _context4.t0;\n\n              case 23:\n                _context4.prev = 23;\n                _context4.prev = 24;\n\n                if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                  _context4.next = 28;\n                  break;\n                }\n\n                _context4.next = 28;\n                return _awaitAsyncGenerator(_iterator2.return());\n\n              case 28:\n                _context4.prev = 28;\n\n                if (!_didIteratorError2) {\n                  _context4.next = 31;\n                  break;\n                }\n\n                throw _iteratorError2;\n\n              case 31:\n                return _context4.finish(28);\n\n              case 32:\n                return _context4.finish(23);\n\n              case 33:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[2, 19, 23, 33], [24,, 28, 32]]);\n      }))();\n    }\n    /**\n     * @param {AbortOptions} [options]\n     */\n\n  }, {\n    key: \"indirectKeys\",\n    value: function indirectKeys(options) {\n      var _this3 = this;\n\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _iteratorAbruptCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, cid, _iteratorAbruptCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, childCid, types, result;\n\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _iteratorAbruptCompletion3 = false;\n                _didIteratorError3 = false;\n                _context5.prev = 2;\n                _iterator3 = _asyncIterator(_this3.recursiveKeys());\n\n              case 4:\n                _context5.next = 6;\n                return _awaitAsyncGenerator(_iterator3.next());\n\n              case 6:\n                if (!(_iteratorAbruptCompletion3 = !(_step3 = _context5.sent).done)) {\n                  _context5.next = 46;\n                  break;\n                }\n\n                cid = _step3.value.cid;\n                _iteratorAbruptCompletion4 = false;\n                _didIteratorError4 = false;\n                _context5.prev = 10;\n                _iterator4 = _asyncIterator(walkDag(cid, _this3.blockstore, _this3.loadCodec, options));\n\n              case 12:\n                _context5.next = 14;\n                return _awaitAsyncGenerator(_iterator4.next());\n\n              case 14:\n                if (!(_iteratorAbruptCompletion4 = !(_step4 = _context5.sent).done)) {\n                  _context5.next = 27;\n                  break;\n                }\n\n                childCid = _step4.value;\n                // recursive pins override indirect pins\n                types = [PinTypes.recursive];\n                _context5.next = 19;\n                return _awaitAsyncGenerator(_this3.isPinnedWithType(childCid, types));\n\n              case 19:\n                result = _context5.sent;\n\n                if (!result.pinned) {\n                  _context5.next = 22;\n                  break;\n                }\n\n                return _context5.abrupt(\"continue\", 24);\n\n              case 22:\n                _context5.next = 24;\n                return childCid;\n\n              case 24:\n                _iteratorAbruptCompletion4 = false;\n                _context5.next = 12;\n                break;\n\n              case 27:\n                _context5.next = 33;\n                break;\n\n              case 29:\n                _context5.prev = 29;\n                _context5.t0 = _context5[\"catch\"](10);\n                _didIteratorError4 = true;\n                _iteratorError4 = _context5.t0;\n\n              case 33:\n                _context5.prev = 33;\n                _context5.prev = 34;\n\n                if (!(_iteratorAbruptCompletion4 && _iterator4.return != null)) {\n                  _context5.next = 38;\n                  break;\n                }\n\n                _context5.next = 38;\n                return _awaitAsyncGenerator(_iterator4.return());\n\n              case 38:\n                _context5.prev = 38;\n\n                if (!_didIteratorError4) {\n                  _context5.next = 41;\n                  break;\n                }\n\n                throw _iteratorError4;\n\n              case 41:\n                return _context5.finish(38);\n\n              case 42:\n                return _context5.finish(33);\n\n              case 43:\n                _iteratorAbruptCompletion3 = false;\n                _context5.next = 4;\n                break;\n\n              case 46:\n                _context5.next = 52;\n                break;\n\n              case 48:\n                _context5.prev = 48;\n                _context5.t1 = _context5[\"catch\"](2);\n                _didIteratorError3 = true;\n                _iteratorError3 = _context5.t1;\n\n              case 52:\n                _context5.prev = 52;\n                _context5.prev = 53;\n\n                if (!(_iteratorAbruptCompletion3 && _iterator3.return != null)) {\n                  _context5.next = 57;\n                  break;\n                }\n\n                _context5.next = 57;\n                return _awaitAsyncGenerator(_iterator3.return());\n\n              case 57:\n                _context5.prev = 57;\n\n                if (!_didIteratorError3) {\n                  _context5.next = 60;\n                  break;\n                }\n\n                throw _iteratorError3;\n\n              case 60:\n                return _context5.finish(57);\n\n              case 61:\n                return _context5.finish(52);\n\n              case 62:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[2, 48, 52, 62], [10, 29, 33, 43], [34,, 38, 42], [53,, 57, 61]]);\n      }))();\n    }\n    /**\n     * @param {CID} cid\n     * @param {PinQueryType|PinQueryType[]} types\n     * @param {AbortOptions} [options]\n     */\n\n  }, {\n    key: \"isPinnedWithType\",\n    value: function () {\n      var _isPinnedWithType = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(cid, types, options) {\n        var all, direct, recursive, indirect, result, pin, self, findChild, _findChild, parentCid;\n\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _findChild = function _findChild3() {\n                  _findChild = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(key, source) {\n                    var _iteratorAbruptCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, parentCid, _iteratorAbruptCompletion6, _didIteratorError6, _iteratorError6, _iterator6, _step6, childCid;\n\n                    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            _iteratorAbruptCompletion5 = false;\n                            _didIteratorError5 = false;\n                            _context6.prev = 2;\n                            _iterator5 = _asyncIterator(source);\n\n                          case 4:\n                            _context6.next = 6;\n                            return _awaitAsyncGenerator(_iterator5.next());\n\n                          case 6:\n                            if (!(_iteratorAbruptCompletion5 = !(_step5 = _context6.sent).done)) {\n                              _context6.next = 42;\n                              break;\n                            }\n\n                            parentCid = _step5.value.cid;\n                            _iteratorAbruptCompletion6 = false;\n                            _didIteratorError6 = false;\n                            _context6.prev = 10;\n                            _iterator6 = _asyncIterator(walkDag(parentCid, self.blockstore, self.loadCodec));\n\n                          case 12:\n                            _context6.next = 14;\n                            return _awaitAsyncGenerator(_iterator6.next());\n\n                          case 14:\n                            if (!(_iteratorAbruptCompletion6 = !(_step6 = _context6.sent).done)) {\n                              _context6.next = 23;\n                              break;\n                            }\n\n                            childCid = _step6.value;\n\n                            if (!childCid.equals(key)) {\n                              _context6.next = 20;\n                              break;\n                            }\n\n                            _context6.next = 19;\n                            return parentCid;\n\n                          case 19:\n                            return _context6.abrupt(\"return\");\n\n                          case 20:\n                            _iteratorAbruptCompletion6 = false;\n                            _context6.next = 12;\n                            break;\n\n                          case 23:\n                            _context6.next = 29;\n                            break;\n\n                          case 25:\n                            _context6.prev = 25;\n                            _context6.t0 = _context6[\"catch\"](10);\n                            _didIteratorError6 = true;\n                            _iteratorError6 = _context6.t0;\n\n                          case 29:\n                            _context6.prev = 29;\n                            _context6.prev = 30;\n\n                            if (!(_iteratorAbruptCompletion6 && _iterator6.return != null)) {\n                              _context6.next = 34;\n                              break;\n                            }\n\n                            _context6.next = 34;\n                            return _awaitAsyncGenerator(_iterator6.return());\n\n                          case 34:\n                            _context6.prev = 34;\n\n                            if (!_didIteratorError6) {\n                              _context6.next = 37;\n                              break;\n                            }\n\n                            throw _iteratorError6;\n\n                          case 37:\n                            return _context6.finish(34);\n\n                          case 38:\n                            return _context6.finish(29);\n\n                          case 39:\n                            _iteratorAbruptCompletion5 = false;\n                            _context6.next = 4;\n                            break;\n\n                          case 42:\n                            _context6.next = 48;\n                            break;\n\n                          case 44:\n                            _context6.prev = 44;\n                            _context6.t1 = _context6[\"catch\"](2);\n                            _didIteratorError5 = true;\n                            _iteratorError5 = _context6.t1;\n\n                          case 48:\n                            _context6.prev = 48;\n                            _context6.prev = 49;\n\n                            if (!(_iteratorAbruptCompletion5 && _iterator5.return != null)) {\n                              _context6.next = 53;\n                              break;\n                            }\n\n                            _context6.next = 53;\n                            return _awaitAsyncGenerator(_iterator5.return());\n\n                          case 53:\n                            _context6.prev = 53;\n\n                            if (!_didIteratorError5) {\n                              _context6.next = 56;\n                              break;\n                            }\n\n                            throw _iteratorError5;\n\n                          case 56:\n                            return _context6.finish(53);\n\n                          case 57:\n                            return _context6.finish(48);\n\n                          case 58:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6, null, [[2, 44, 48, 58], [10, 25, 29, 39], [30,, 34, 38], [49,, 53, 57]]);\n                  }));\n                  return _findChild.apply(this, arguments);\n                };\n\n                findChild = function _findChild2(_x, _x2) {\n                  return _findChild.apply(this, arguments);\n                };\n\n                if (!Array.isArray(types)) {\n                  types = [types];\n                }\n\n                all = types.includes(PinTypes.all);\n                direct = types.includes(PinTypes.direct);\n                recursive = types.includes(PinTypes.recursive);\n                indirect = types.includes(PinTypes.indirect);\n\n                if (!(recursive || direct || all)) {\n                  _context7.next = 14;\n                  break;\n                }\n\n                _context7.next = 10;\n                return first(this.pinstore.query({\n                  prefix: cidToKey(cid).toString(),\n                  filters: [function (entry) {\n                    if (all) {\n                      return true;\n                    }\n\n                    var pin = cborg.decode(entry.value);\n                    return types.includes(pin.depth === 0 ? PinTypes.direct : PinTypes.recursive);\n                  }],\n                  limit: 1\n                }));\n\n              case 10:\n                result = _context7.sent;\n\n                if (!result) {\n                  _context7.next = 14;\n                  break;\n                }\n\n                pin = cborg.decode(result.value);\n                return _context7.abrupt(\"return\", {\n                  cid: cid,\n                  pinned: true,\n                  reason: pin.depth === 0 ? PinTypes.direct : PinTypes.recursive,\n                  metadata: pin.metadata\n                });\n\n              case 14:\n                self = this;\n                /**\n                 * @param {CID} key\n                 * @param {AsyncIterable<{ cid: CID, metadata: any }>} source\n                 */\n\n                if (!(all || indirect)) {\n                  _context7.next = 21;\n                  break;\n                }\n\n                _context7.next = 18;\n                return first(findChild(cid, this.recursiveKeys()));\n\n              case 18:\n                parentCid = _context7.sent;\n\n                if (!parentCid) {\n                  _context7.next = 21;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", {\n                  cid: cid,\n                  pinned: true,\n                  reason: PinTypes.indirect,\n                  parent: parentCid\n                });\n\n              case 21:\n                return _context7.abrupt(\"return\", {\n                  cid: cid,\n                  pinned: false\n                });\n\n              case 22:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function isPinnedWithType(_x5, _x6, _x7) {\n        return _isPinnedWithType.apply(this, arguments);\n      }\n\n      return isPinnedWithType;\n    }()\n    /**\n     * @param {CID} cid\n     * @param {AbortOptions} options\n     */\n\n  }, {\n    key: \"fetchCompleteDag\",\n    value: function () {\n      var _fetchCompleteDag = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(cid, options) {\n        var _this4 = this;\n\n        var seen, walkDag;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                seen = new Set();\n                /**\n                 * @param {CID} cid\n                 * @param {AbortOptions} options\n                 */\n\n                walkDag = /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(cid, options) {\n                    var bytes, codec, block;\n                    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n                      while (1) {\n                        switch (_context8.prev = _context8.next) {\n                          case 0:\n                            if (!seen.has(cid.toString())) {\n                              _context8.next = 2;\n                              break;\n                            }\n\n                            return _context8.abrupt(\"return\");\n\n                          case 2:\n                            seen.add(cid.toString());\n                            _context8.next = 5;\n                            return _this4.blockstore.get(cid, options);\n\n                          case 5:\n                            bytes = _context8.sent;\n                            _context8.next = 8;\n                            return _this4.loadCodec(cid.code);\n\n                          case 8:\n                            codec = _context8.sent;\n                            block = Block.createUnsafe({\n                              bytes: bytes,\n                              cid: cid,\n                              codec: codec\n                            });\n                            _context8.next = 12;\n                            return Promise.all(_toConsumableArray(block.links()).map(function (_ref3) {\n                              var _ref4 = _slicedToArray(_ref3, 2),\n                                  childCid = _ref4[1];\n\n                              return walkDag(childCid, options);\n                            }));\n\n                          case 12:\n                          case \"end\":\n                            return _context8.stop();\n                        }\n                      }\n                    }, _callee8);\n                  }));\n\n                  return function walkDag(_x10, _x11) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }();\n\n                _context9.next = 4;\n                return walkDag(cid, options);\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function fetchCompleteDag(_x8, _x9) {\n        return _fetchCompleteDag.apply(this, arguments);\n      }\n\n      return fetchCompleteDag;\n    }()\n    /**\n     * Throws an error if the pin type is invalid\n     *\n     * @param {any} type\n     * @returns {type is PinType}\n     */\n\n  }], [{\n    key: \"checkPinType\",\n    value: function checkPinType(type) {\n      if (typeof type !== 'string' || !Object.keys(PinTypes).includes(type)) {\n        throw invalidPinTypeErr(type);\n      }\n\n      return true;\n    }\n  }]);\n\n  return PinManager;\n}();\n\nmodule.exports = {\n  PinManager: PinManager,\n  PinTypes: PinTypes\n};","map":{"version":3,"names":["require","CID","errCode","debug","first","Block","cborg","dagPb","cidToKey","keyToMultihash","walkDag","invalidPinTypeErr","type","errMsg","Error","PinTypes","direct","recursive","indirect","all","PinManager","pinstore","blockstore","loadCodec","log","directPins","Set","recursivePins","cid","options","get","pin","depth","version","code","codec","metadata","put","encode","delete","fetchCompleteDag","Infinity","query","filters","entry","decode","value","multihash","key","create","recursiveKeys","childCid","types","isPinnedWithType","result","pinned","findChild","source","parentCid","self","equals","Array","isArray","includes","prefix","toString","limit","reason","parent","seen","has","add","bytes","block","createUnsafe","Promise","links","map","Object","keys","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-repo/src/pins.js"],"sourcesContent":["/* eslint max-nested-callbacks: [\"error\", 8] */\n'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst errCode = require('err-code')\nconst debug = require('debug')\nconst first = require('it-first')\nconst Block = require('multiformats/block')\nconst cborg = require('cborg')\nconst dagPb = require('@ipld/dag-pb')\nconst {\n  cidToKey,\n  keyToMultihash\n} = require('./utils/blockstore')\nconst walkDag = require('./utils/walk-dag')\n\n/**\n * @typedef {object} PinInternal\n * @property {number} depth\n * @property {import('multiformats/cid').CIDVersion} [version]\n * @property {number} [codec]\n * @property {Record<string, any>} [metadata]\n */\n\n/**\n * @typedef {import('./types').PinType} PinType\n * @typedef {import('./types').PinQueryType} PinQueryType\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('./types').PinOptions} PinOptions\n * @typedef {import('./types').AbortOptions} AbortOptions\n * @typedef {import('./types').Pins} Pins\n */\n\n/**\n * @param {string} type\n */\nfunction invalidPinTypeErr (type) {\n  const errMsg = `Invalid type '${type}', must be one of {direct, indirect, recursive, all}`\n  return errCode(new Error(errMsg), 'ERR_INVALID_PIN_TYPE')\n}\n\nconst PinTypes = {\n  /** @type {'direct'} */\n  direct: ('direct'),\n  /** @type {'recursive'} */\n  recursive: ('recursive'),\n  /** @type {'indirect'} */\n  indirect: ('indirect'),\n  /** @type {'all'} */\n  all: ('all')\n}\n\n/**\n * @implements {Pins}\n */\nclass PinManager {\n  /**\n   * @param {Object} config\n   * @param {import('interface-datastore').Datastore} config.pinstore\n   * @param {import('interface-blockstore').Blockstore} config.blockstore\n   * @param {import('./types').loadCodec} config.loadCodec\n   */\n  constructor ({ pinstore, blockstore, loadCodec }) {\n    this.pinstore = pinstore\n    this.blockstore = blockstore\n    this.loadCodec = loadCodec\n    this.log = debug('ipfs:repo:pin')\n    this.directPins = new Set()\n    this.recursivePins = new Set()\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PinOptions & AbortOptions} [options]\n   */\n  async pinDirectly (cid, options = {}) {\n    await this.blockstore.get(cid, options)\n\n    /** @type {PinInternal} */\n    const pin = {\n      depth: 0\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.code !== dagPb.code) {\n      pin.codec = cid.code\n    }\n\n    if (options.metadata) {\n      pin.metadata = options.metadata\n    }\n\n    return this.pinstore.put(cidToKey(cid), cborg.encode(pin))\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {AbortOptions} [options]\n   */\n  unpin (cid, options) {\n    return this.pinstore.delete(cidToKey(cid), options)\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PinOptions & AbortOptions} [options]\n   */\n  async pinRecursively (cid, options = {}) {\n    await this.fetchCompleteDag(cid, options)\n\n    /** @type {PinInternal} */\n    const pin = {\n      depth: Infinity\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.code !== dagPb.code) {\n      pin.codec = cid.code\n    }\n\n    if (options.metadata) {\n      pin.metadata = options.metadata\n    }\n\n    await this.pinstore.put(cidToKey(cid), cborg.encode(pin))\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   */\n  async * directKeys (options) {\n    for await (const entry of this.pinstore.query({\n      filters: [(entry) => {\n        const pin = cborg.decode(entry.value)\n\n        return pin.depth === 0\n      }]\n    })) {\n      const pin = cborg.decode(entry.value)\n      const version = pin.version || 0\n      const codec = pin.codec != null ? pin.codec : dagPb.code\n      const multihash = keyToMultihash(entry.key)\n\n      yield {\n        cid: CID.create(version, codec, multihash),\n        metadata: pin.metadata\n      }\n    }\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   */\n  async * recursiveKeys (options) {\n    for await (const entry of this.pinstore.query({\n      filters: [(entry) => {\n        const pin = cborg.decode(entry.value)\n\n        return pin.depth === Infinity\n      }]\n    })) {\n      const pin = cborg.decode(entry.value)\n      const version = pin.version || 0\n      const codec = pin.codec != null ? pin.codec : dagPb.code\n      const multihash = keyToMultihash(entry.key)\n\n      yield {\n        cid: CID.create(version, codec, multihash),\n        metadata: pin.metadata\n      }\n    }\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   */\n  async * indirectKeys (options) {\n    for await (const { cid } of this.recursiveKeys()) {\n      for await (const childCid of walkDag(cid, this.blockstore, this.loadCodec, options)) {\n        // recursive pins override indirect pins\n        const types = [\n          PinTypes.recursive\n        ]\n\n        const result = await this.isPinnedWithType(childCid, types)\n\n        if (result.pinned) {\n          continue\n        }\n\n        yield childCid\n      }\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PinQueryType|PinQueryType[]} types\n   * @param {AbortOptions} [options]\n   */\n  async isPinnedWithType (cid, types, options) {\n    if (!Array.isArray(types)) {\n      types = [types]\n    }\n\n    const all = types.includes(PinTypes.all)\n    const direct = types.includes(PinTypes.direct)\n    const recursive = types.includes(PinTypes.recursive)\n    const indirect = types.includes(PinTypes.indirect)\n\n    if (recursive || direct || all) {\n      const result = await first(this.pinstore.query({\n        prefix: cidToKey(cid).toString(),\n        filters: [entry => {\n          if (all) {\n            return true\n          }\n\n          const pin = cborg.decode(entry.value)\n\n          return types.includes(pin.depth === 0 ? PinTypes.direct : PinTypes.recursive)\n        }],\n        limit: 1\n      }))\n\n      if (result) {\n        const pin = cborg.decode(result.value)\n\n        return {\n          cid,\n          pinned: true,\n          reason: pin.depth === 0 ? PinTypes.direct : PinTypes.recursive,\n          metadata: pin.metadata\n        }\n      }\n    }\n\n    const self = this\n\n    /**\n     * @param {CID} key\n     * @param {AsyncIterable<{ cid: CID, metadata: any }>} source\n     */\n    async function * findChild (key, source) {\n      for await (const { cid: parentCid } of source) {\n        for await (const childCid of walkDag(parentCid, self.blockstore, self.loadCodec)) {\n          if (childCid.equals(key)) {\n            yield parentCid\n            return\n          }\n        }\n      }\n    }\n\n    if (all || indirect) {\n      // indirect (default)\n      // check each recursive key to see if multihash is under it\n\n      const parentCid = await first(findChild(cid, this.recursiveKeys()))\n\n      if (parentCid) {\n        return {\n          cid,\n          pinned: true,\n          reason: PinTypes.indirect,\n          parent: parentCid\n        }\n      }\n    }\n\n    return {\n      cid,\n      pinned: false\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {AbortOptions} options\n   */\n  async fetchCompleteDag (cid, options) {\n    const seen = new Set()\n\n    /**\n     * @param {CID} cid\n     * @param {AbortOptions} options\n     */\n    const walkDag = async (cid, options) => {\n      if (seen.has(cid.toString())) {\n        return\n      }\n\n      seen.add(cid.toString())\n\n      const bytes = await this.blockstore.get(cid, options)\n      const codec = await this.loadCodec(cid.code)\n      const block = Block.createUnsafe({ bytes, cid, codec })\n\n      await Promise.all(\n        [...block.links()].map(([, childCid]) => walkDag(childCid, options))\n      )\n    }\n\n    await walkDag(cid, options)\n  }\n\n  /**\n   * Throws an error if the pin type is invalid\n   *\n   * @param {any} type\n   * @returns {type is PinType}\n   */\n  static checkPinType (type) {\n    if (typeof type !== 'string' || !Object.keys(PinTypes).includes(type)) {\n      throw invalidPinTypeErr(type)\n    }\n    return true\n  }\n}\n\nmodule.exports = {\n  PinManager,\n  PinTypes\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
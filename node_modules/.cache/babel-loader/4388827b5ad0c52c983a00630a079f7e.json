{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {ConfigAPI[\"get\"]}\n   */\n  var get = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key) {\n      var options,\n          res,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n              if (key) {\n                _context.next = 3;\n                break;\n              }\n\n              throw new Error('key argument is required');\n\n            case 3:\n              _context.next = 5;\n              return api.post('config', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: key\n                }, options)),\n                headers: options.headers\n              });\n\n            case 5:\n              res = _context.sent;\n              _context.next = 8;\n              return res.json();\n\n            case 8:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data.Value);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function get(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return get;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","module","exports","api","get","key","options","Error","post","signal","searchParams","arg","headers","res","json","data","Value"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/config/get.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ConfigAPI[\"get\"]}\n   */\n  const get = async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required')\n    }\n\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Value\n  }\n\n  return get\n})\n"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAChC;AACF;AACA;EACE,IAAMC,GAAG;IAAA,sEAAG,iBAAOC,GAAP;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAYC,OAAZ,2DAAsB,EAAtB;;cAAA,IACLD,GADK;gBAAA;gBAAA;cAAA;;cAAA,MAEF,IAAIE,KAAJ,CAAU,0BAAV,CAFE;;YAAA;cAAA;cAAA,OAKQJ,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmB;gBACnCC,MAAM,EAAEH,OAAO,CAACG,MADmB;gBAEnCC,YAAY,EAAEV,iBAAiB;kBAC7BW,GAAG,EAAEN;gBADwB,GAE1BC,OAF0B,EAFI;gBAMnCM,OAAO,EAAEN,OAAO,CAACM;cANkB,CAAnB,CALR;;YAAA;cAKJC,GALI;cAAA;cAAA,OAaSA,GAAG,CAACC,IAAJ,EAbT;;YAAA;cAaJC,IAbI;cAAA,iCAeHA,IAAI,CAACC,KAfF;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAHZ,GAAG;MAAA;IAAA;EAAA,GAAT;;EAkBA,OAAOA,GAAP;AACD,CAvByB,CAA1B"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar Logger = require('logplease');\n\nvar logger = Logger.create('cache', {\n  color: Logger.Colors.Magenta\n});\nLogger.setLogLevel('ERROR');\n\nvar Cache = /*#__PURE__*/function () {\n  function Cache(store) {\n    _classCallCheck(this, Cache);\n\n    this._store = store;\n  }\n\n  _createClass(Cache, [{\n    key: \"status\",\n    get: function get() {\n      return this._store.db.status;\n    }\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this._store) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", Promise.reject(new Error('No cache store found to close')));\n\n              case 2:\n                if (!(this.status === 'open')) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return this._store.close();\n\n              case 5:\n                return _context.abrupt(\"return\", Promise.resolve());\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }, {\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this._store) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", Promise.reject(new Error('No cache store found to open')));\n\n              case 2:\n                if (!(this.status !== 'open')) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                _context2.next = 5;\n                return this._store.open();\n\n              case 5:\n                return _context2.abrupt(\"return\", Promise.resolve());\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function open() {\n        return _open.apply(this, arguments);\n      }\n\n      return open;\n    }()\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(key) {\n        var _this = this;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this._store.get(key, function (err, value) {\n                    if (err) {\n                      // Ignore error if key was not found\n                      if (err.toString().indexOf('NotFoundError: Key not found in database') === -1 && err.toString().indexOf('NotFound') === -1) {\n                        return reject(err);\n                      }\n                    }\n\n                    resolve(value ? JSON.parse(value) : null);\n                  });\n                }));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }() // Set value in the cache and return the new value\n\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2._store.put(key, JSON.stringify(value), function (err) {\n          if (err) {\n            // Ignore error if key was not found\n            if (err.toString().indexOf('NotFoundError: Key not found in database') === -1 && err.toString().indexOf('NotFound') === -1) {\n              return reject(err);\n            }\n          }\n\n          logger.debug(\"cache: Set \".concat(key, \" to \").concat(value));\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"load\",\n    value: function load() {} // noop\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {} // noop\n    // Remove a value and key from the cache\n\n  }, {\n    key: \"del\",\n    value: function () {\n      var _del = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(key) {\n        var _this3 = this;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this3._store.del(key, function (err) {\n                    if (err) {\n                      // Ignore error if key was not found\n                      if (err.toString().indexOf('NotFoundError: Key not found in database') === -1 && err.toString().indexOf('NotFound') === -1) {\n                        return reject(err);\n                      }\n                    }\n\n                    resolve();\n                  });\n                }));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function del(_x2) {\n        return _del.apply(this, arguments);\n      }\n\n      return del;\n    }()\n  }]);\n\n  return Cache;\n}();\n\nmodule.exports = Cache;","map":{"version":3,"names":["Logger","require","logger","create","color","Colors","Magenta","setLogLevel","Cache","store","_store","db","status","Promise","reject","Error","close","resolve","open","key","get","err","value","toString","indexOf","JSON","parse","put","stringify","debug","del","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/orbit-db-cache/src/Cache.js"],"sourcesContent":["'use strict'\n\nconst Logger = require('logplease')\nconst logger = Logger.create('cache', { color: Logger.Colors.Magenta })\nLogger.setLogLevel('ERROR')\n\nclass Cache {\n  constructor (store) {\n    this._store = store\n  }\n\n  get status () { return this._store.db.status }\n\n  async close () {\n    if (!this._store) return Promise.reject(new Error('No cache store found to close'))\n    if (this.status === 'open') {\n      await this._store.close()\n      return Promise.resolve()\n    }\n  }\n\n  async open () {\n    if (!this._store) return Promise.reject(new Error('No cache store found to open'))\n    if (this.status !== 'open') {\n      await this._store.open()\n      return Promise.resolve()\n    }\n  }\n\n  async get (key) {\n    return new Promise((resolve, reject) => {\n      this._store.get(key, (err, value) => {\n        if (err) {\n          // Ignore error if key was not found\n          if (err.toString().indexOf('NotFoundError: Key not found in database') === -1 &&\n            err.toString().indexOf('NotFound') === -1) {\n            return reject(err)\n          }\n        }\n        resolve(value ? JSON.parse(value) : null)\n      })\n    })\n  }\n\n  // Set value in the cache and return the new value\n  set (key, value) {\n    return new Promise((resolve, reject) => {\n      this._store.put(key, JSON.stringify(value), (err) => {\n        if (err) {\n          // Ignore error if key was not found\n          if (err.toString().indexOf('NotFoundError: Key not found in database') === -1 &&\n            err.toString().indexOf('NotFound') === -1) {\n            return reject(err)\n          }\n        }\n        logger.debug(`cache: Set ${key} to ${value}`)\n        resolve()\n      })\n    })\n  }\n\n  load () {} // noop\n  destroy () { } // noop\n\n  // Remove a value and key from the cache\n  async del (key) {\n    return new Promise((resolve, reject) => {\n      this._store.del(key, (err) => {\n        if (err) {\n          // Ignore error if key was not found\n          if (err.toString().indexOf('NotFoundError: Key not found in database') === -1 &&\n            err.toString().indexOf('NotFound') === -1) {\n            return reject(err)\n          }\n        }\n        resolve()\n      })\n    })\n  }\n}\n\nmodule.exports = Cache\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"const source = require('./source');\n\nconst sink = require('./sink');\n\nmodule.exports = (socket, options) => {\n  options = options || {};\n\n  if (options.binaryType) {\n    socket.binaryType = options.binaryType;\n  } else if (options.binary) {\n    socket.binaryType = 'arraybuffer';\n  }\n\n  const duplex = {\n    sink: sink(socket, options),\n    source: source(socket, options),\n    connected: () => duplex.source.connected()\n  };\n  return duplex;\n};","map":{"version":3,"names":["source","require","sink","module","exports","socket","options","binaryType","binary","duplex","connected"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/it-ws/duplex.js"],"sourcesContent":["const source = require('./source')\nconst sink = require('./sink')\n\nmodule.exports = (socket, options) => {\n  options = options || {}\n\n  if (options.binaryType) {\n    socket.binaryType = options.binaryType\n  } else if (options.binary) {\n    socket.binaryType = 'arraybuffer'\n  }\n\n  const duplex = {\n    sink: sink(socket, options),\n    source: source(socket, options),\n    connected: () => duplex.source.connected()\n  }\n\n  return duplex\n}\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,CAACC,MAAD,EAASC,OAAT,KAAqB;EACpCA,OAAO,GAAGA,OAAO,IAAI,EAArB;;EAEA,IAAIA,OAAO,CAACC,UAAZ,EAAwB;IACtBF,MAAM,CAACE,UAAP,GAAoBD,OAAO,CAACC,UAA5B;EACD,CAFD,MAEO,IAAID,OAAO,CAACE,MAAZ,EAAoB;IACzBH,MAAM,CAACE,UAAP,GAAoB,aAApB;EACD;;EAED,MAAME,MAAM,GAAG;IACbP,IAAI,EAAEA,IAAI,CAACG,MAAD,EAASC,OAAT,CADG;IAEbN,MAAM,EAAEA,MAAM,CAACK,MAAD,EAASC,OAAT,CAFD;IAGbI,SAAS,EAAE,MAAMD,MAAM,CAACT,MAAP,CAAcU,SAAd;EAHJ,CAAf;EAMA,OAAOD,MAAP;AACD,CAhBD"},"metadata":{},"sourceType":"script"}
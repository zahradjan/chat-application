{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar Key = require('interface-datastore').Key;\n\nvar _require = require('uint8arrays/from-string'),\n    uint8ArrayFromString = _require.fromString;\n\nvar apiFile = new Key('api');\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\n\nmodule.exports = function (store) {\n  return {\n    /**\n     * Get the current configuration from the repo.\n     *\n     * @returns {Promise<string>}\n     */\n    get: function get() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var value;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return store.get(apiFile);\n\n              case 2:\n                value = _context.sent;\n                return _context.abrupt(\"return\", value && value.toString());\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n\n    /**\n     * Set the current configuration for this repo.\n     * TODO: fix find the proper type or remove this API\n     *\n     * @param {string} value - the api address to be written\n     */\n    set: function set(value) {\n      return store.put(apiFile, uint8ArrayFromString(value.toString()));\n    },\n\n    /**\n     * Deletes api file\n     */\n    delete: function _delete() {\n      return store.delete(apiFile);\n    }\n  };\n};","map":{"version":3,"names":["Key","require","uint8ArrayFromString","fromString","apiFile","module","exports","store","get","value","toString","set","put","delete"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-repo/src/api-addr.js"],"sourcesContent":["'use strict'\n\nconst Key = require('interface-datastore').Key\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\n\nconst apiFile = new Key('api')\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nmodule.exports = (store) => {\n  return {\n    /**\n     * Get the current configuration from the repo.\n     *\n     * @returns {Promise<string>}\n     */\n    async get () {\n      const value = await store.get(apiFile)\n      return value && value.toString()\n    },\n    /**\n     * Set the current configuration for this repo.\n     * TODO: fix find the proper type or remove this API\n     *\n     * @param {string} value - the api address to be written\n     */\n    set (value) {\n      return store.put(apiFile, uint8ArrayFromString(value.toString()))\n    },\n    /**\n     * Deletes api file\n     */\n    delete () {\n      return store.delete(apiFile)\n    }\n  }\n}\n"],"mappings":"AAAA;;;;;;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAP,CAA+BD,GAA3C;;AACA,eAA6CC,OAAO,CAAC,yBAAD,CAApD;AAAA,IAAoBC,oBAApB,YAAQC,UAAR;;AAEA,IAAMC,OAAO,GAAG,IAAIJ,GAAJ,CAAQ,KAAR,CAAhB;AAEA;AACA;AACA;AACA;;AACAK,MAAM,CAACC,OAAP,GAAiB,UAACC,KAAD,EAAW;EAC1B,OAAO;IACL;AACJ;AACA;AACA;AACA;IACUC,GAND,iBAMQ;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACSD,KAAK,CAACC,GAAN,CAAUJ,OAAV,CADT;;cAAA;gBACLK,KADK;gBAAA,iCAEJA,KAAK,IAAIA,KAAK,CAACC,QAAN,EAFL;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGZ,CATI;;IAUL;AACJ;AACA;AACA;AACA;AACA;IACIC,GAhBK,eAgBAF,KAhBA,EAgBO;MACV,OAAOF,KAAK,CAACK,GAAN,CAAUR,OAAV,EAAmBF,oBAAoB,CAACO,KAAK,CAACC,QAAN,EAAD,CAAvC,CAAP;IACD,CAlBI;;IAmBL;AACJ;AACA;IACIG,MAtBK,qBAsBK;MACR,OAAON,KAAK,CAACM,MAAN,CAAaT,OAAb,CAAP;IACD;EAxBI,CAAP;AA0BD,CA3BD"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _createForOfIteratorHelper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar dagPb = require('@ipld/dag-pb');\n\nvar hamtShardedDirectoryContent = function hamtShardedDirectoryContent(cid, node, unixfs, path, resolve, depth, blockstore) {\n  function yieldHamtDirectoryContent() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return listDirectory(node, path, resolve, depth, blockstore, options);\n  }\n\n  return yieldHamtDirectoryContent;\n};\n\nfunction listDirectory(_x, _x2, _x3, _x4, _x5, _x6) {\n  return _listDirectory.apply(this, arguments);\n}\n\nfunction _listDirectory() {\n  _listDirectory = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(node, path, resolve, depth, blockstore, options) {\n    var links, _iterator2, _step2, link, name, result, block, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, file;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            links = node.Links;\n            _iterator2 = _createForOfIteratorHelper(links);\n            _context.prev = 2;\n\n            _iterator2.s();\n\n          case 4:\n            if ((_step2 = _iterator2.n()).done) {\n              _context.next = 50;\n              break;\n            }\n\n            link = _step2.value;\n            name = link.Name != null ? link.Name.substring(2) : null;\n\n            if (!name) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 10;\n            return _awaitAsyncGenerator(resolve(link.Hash, name, \"\".concat(path, \"/\").concat(name), [], depth + 1, blockstore, options));\n\n          case 10:\n            result = _context.sent;\n            _context.next = 13;\n            return result.entry;\n\n          case 13:\n            _context.next = 48;\n            break;\n\n          case 15:\n            _context.next = 17;\n            return _awaitAsyncGenerator(blockstore.get(link.Hash));\n\n          case 17:\n            block = _context.sent;\n            node = dagPb.decode(block);\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context.prev = 21;\n            _iterator = _asyncIterator(listDirectory(node, path, resolve, depth, blockstore, options));\n\n          case 23:\n            _context.next = 25;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 25:\n            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n              _context.next = 32;\n              break;\n            }\n\n            file = _step.value;\n            _context.next = 29;\n            return file;\n\n          case 29:\n            _iteratorAbruptCompletion = false;\n            _context.next = 23;\n            break;\n\n          case 32:\n            _context.next = 38;\n            break;\n\n          case 34:\n            _context.prev = 34;\n            _context.t0 = _context[\"catch\"](21);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 38:\n            _context.prev = 38;\n            _context.prev = 39;\n\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context.next = 43;\n              break;\n            }\n\n            _context.next = 43;\n            return _awaitAsyncGenerator(_iterator.return());\n\n          case 43:\n            _context.prev = 43;\n\n            if (!_didIteratorError) {\n              _context.next = 46;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 46:\n            return _context.finish(43);\n\n          case 47:\n            return _context.finish(38);\n\n          case 48:\n            _context.next = 4;\n            break;\n\n          case 50:\n            _context.next = 55;\n            break;\n\n          case 52:\n            _context.prev = 52;\n            _context.t1 = _context[\"catch\"](2);\n\n            _iterator2.e(_context.t1);\n\n          case 55:\n            _context.prev = 55;\n\n            _iterator2.f();\n\n            return _context.finish(55);\n\n          case 58:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 52, 55, 58], [21, 34, 38, 48], [39,, 43, 47]]);\n  }));\n  return _listDirectory.apply(this, arguments);\n}\n\nmodule.exports = hamtShardedDirectoryContent;","map":{"version":3,"names":["dagPb","require","hamtShardedDirectoryContent","cid","node","unixfs","path","resolve","depth","blockstore","yieldHamtDirectoryContent","options","listDirectory","links","Links","link","name","Name","substring","Hash","result","entry","get","block","decode","file","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-unixfs-exporter/cjs/src/resolvers/unixfs-v1/content/hamt-sharded-directory.js"],"sourcesContent":["'use strict';\n\nvar dagPb = require('@ipld/dag-pb');\n\nconst hamtShardedDirectoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  function yieldHamtDirectoryContent(options = {}) {\n    return listDirectory(node, path, resolve, depth, blockstore, options);\n  }\n  return yieldHamtDirectoryContent;\n};\nasync function* listDirectory(node, path, resolve, depth, blockstore, options) {\n  const links = node.Links;\n  for (const link of links) {\n    const name = link.Name != null ? link.Name.substring(2) : null;\n    if (name) {\n      const result = await resolve(link.Hash, name, `${ path }/${ name }`, [], depth + 1, blockstore, options);\n      yield result.entry;\n    } else {\n      const block = await blockstore.get(link.Hash);\n      node = dagPb.decode(block);\n      for await (const file of listDirectory(node, path, resolve, depth, blockstore, options)) {\n        yield file;\n      }\n    }\n  }\n}\n\nmodule.exports = hamtShardedDirectoryContent;\n"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEA,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,GAAD,EAAMC,IAAN,EAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,UAA1C,EAAyD;EAC3F,SAASC,yBAAT,GAAiD;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IAC/C,OAAOC,aAAa,CAACR,IAAD,EAAOE,IAAP,EAAaC,OAAb,EAAsBC,KAAtB,EAA6BC,UAA7B,EAAyCE,OAAzC,CAApB;EACD;;EACD,OAAOD,yBAAP;AACD,CALD;;SAMgBE,a;;;;;gFAAhB,iBAA8BR,IAA9B,EAAoCE,IAApC,EAA0CC,OAA1C,EAAmDC,KAAnD,EAA0DC,UAA1D,EAAsEE,OAAtE;IAAA;;IAAA;MAAA;QAAA;UAAA;YACQE,KADR,GACgBT,IAAI,CAACU,KADrB;YAAA,wCAEqBD,KAFrB;YAAA;;YAAA;;UAAA;YAAA;cAAA;cAAA;YAAA;;YAEaE,IAFb;YAGUC,IAHV,GAGiBD,IAAI,CAACE,IAAL,IAAa,IAAb,GAAoBF,IAAI,CAACE,IAAL,CAAUC,SAAV,CAAoB,CAApB,CAApB,GAA6C,IAH9D;;YAAA,KAIQF,IAJR;cAAA;cAAA;YAAA;;YAAA;YAAA,4BAK2BT,OAAO,CAACQ,IAAI,CAACI,IAAN,EAAYH,IAAZ,YAAsBV,IAAtB,cAAgCU,IAAhC,GAAyC,EAAzC,EAA6CR,KAAK,GAAG,CAArD,EAAwDC,UAAxD,EAAoEE,OAApE,CALlC;;UAAA;YAKYS,MALZ;YAAA;YAMM,OAAMA,MAAM,CAACC,KAAb;;UANN;YAAA;YAAA;;UAAA;YAAA;YAAA,4BAQ0BZ,UAAU,CAACa,GAAX,CAAeP,IAAI,CAACI,IAApB,CAR1B;;UAAA;YAQYI,KARZ;YASMnB,IAAI,GAAGJ,KAAK,CAACwB,MAAN,CAAaD,KAAb,CAAP;YATN;YAAA;YAAA;YAAA,2BAU+BX,aAAa,CAACR,IAAD,EAAOE,IAAP,EAAaC,OAAb,EAAsBC,KAAtB,EAA6BC,UAA7B,EAAyCE,OAAzC,CAV5C;;UAAA;YAAA;YAAA;;UAAA;YAAA;cAAA;cAAA;YAAA;;YAUuBc,IAVvB;YAAA;YAWQ,OAAMA,IAAN;;UAXR;YAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;;YAAA;cAAA;cAAA;YAAA;;YAAA;YAAA;;UAAA;YAAA;;YAAA;cAAA;cAAA;YAAA;;YAAA;;UAAA;YAAA;;UAAA;YAAA;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;;YAAA;;UAAA;YAAA;;YAAA;;YAAA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAiBAC,MAAM,CAACC,OAAP,GAAiBzB,2BAAjB"},"metadata":{},"sourceType":"script"}
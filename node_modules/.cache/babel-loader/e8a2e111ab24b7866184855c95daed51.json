{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _assertThisInitialized = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _inherits = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _asyncGeneratorDelegate = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js\").default;\n\nvar _require = require('interface-datastore'),\n    Adapter = _require.Adapter,\n    Key = _require.Key,\n    Errors = _require.Errors;\n\nvar sh = require('./shard');\n\nvar KeytransformStore = require('./keytransform');\n\nvar shardKey = new Key(sh.SHARDING_FN);\nvar shardReadmeKey = new Key(sh.README_FN);\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} Options\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').QueryFilter} QueryFilter\n * @typedef {import('interface-datastore').QueryOrder} QueryOrder\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').KeyQueryFilter} KeyQueryFilter\n * @typedef {import('interface-datastore').KeyQueryOrder} KeyQueryOrder\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('./types').Shard} Shard\n *\n */\n\n/**\n * @template TValue\n * @typedef {import('interface-store').Await<TValue> } Await\n */\n\n/**\n * @template TEntry\n * @typedef {import('interface-store').AwaitIterable<TEntry>} AwaitIterable\n */\n\n/**\n * Backend independent abstraction of go-ds-flatfs.\n *\n * Wraps another datastore such that all values are stored\n * sharded according to the given sharding function.\n */\n\nvar ShardingDatastore = /*#__PURE__*/function (_Adapter) {\n  _inherits(ShardingDatastore, _Adapter);\n\n  var _super = _createSuper(ShardingDatastore);\n\n  /**\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  function ShardingDatastore(store, shard) {\n    var _this4;\n\n    _classCallCheck(this, ShardingDatastore);\n\n    _this4 = _super.call(this);\n    _this4.child = new KeytransformStore(store, {\n      convert: _this4._convertKey.bind(_assertThisInitialized(_this4)),\n      invert: _this4._invertKey.bind(_assertThisInitialized(_this4))\n    });\n    _this4.shard = shard;\n    return _this4;\n  }\n\n  _createClass(ShardingDatastore, [{\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.child.open();\n\n              case 2:\n                _context.next = 4;\n                return ShardingDatastore.create(this.child, this.shard);\n\n              case 4:\n                this.shard = _context.sent;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function open() {\n        return _open.apply(this, arguments);\n      }\n\n      return open;\n    }()\n    /**\n     * @param {Key} key\n     */\n\n  }, {\n    key: \"_convertKey\",\n    value: function _convertKey(key) {\n      var s = key.toString();\n\n      if (s === shardKey.toString() || s === shardReadmeKey.toString()) {\n        return key;\n      }\n\n      var parent = new Key(this.shard.fun(s));\n      return parent.child(key);\n    }\n    /**\n     * @param {Key} key\n     */\n\n  }, {\n    key: \"_invertKey\",\n    value: function _invertKey(key) {\n      var s = key.toString();\n\n      if (s === shardKey.toString() || s === shardReadmeKey.toString()) {\n        return key;\n      }\n\n      return Key.withNamespaces(key.list().slice(1));\n    }\n    /**\n     * @deprecated\n     * @param {Datastore} store\n     * @param {Shard} shard\n     */\n\n  }, {\n    key: \"put\",\n    value:\n    /**\n     * @param {Key} key\n     * @param {Uint8Array} val\n     * @param {Options} [options]\n     */\n    function put(key, val, options) {\n      return this.child.put(key, val, options);\n    }\n    /**\n     * @param {Key} key\n     * @param {Options} [options]\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key, options) {\n      return this.child.get(key, options);\n    }\n    /**\n     * @param {Key} key\n     * @param {Options} [options]\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(key, options) {\n      return this.child.has(key, options);\n    }\n    /**\n     * @param {Key} key\n     * @param {Options} [options]\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(key, options) {\n      return this.child.delete(key, options);\n    }\n    /**\n     * @param {AwaitIterable<Pair>} source\n     * @param {Options} [options]\n     * @returns {AsyncIterable<Pair>}\n     */\n\n  }, {\n    key: \"putMany\",\n    value: function putMany(source) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(_this.child.putMany(source, options)), _awaitAsyncGenerator), \"t0\", 1);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n    /**\n     * @param {AwaitIterable<Key>} source\n     * @param {Options} [options]\n     * @returns {AsyncIterable<Uint8Array>}\n     */\n\n  }, {\n    key: \"getMany\",\n    value: function getMany(source) {\n      var _this2 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.delegateYield(_asyncGeneratorDelegate(_asyncIterator(_this2.child.getMany(source, options)), _awaitAsyncGenerator), \"t0\", 1);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    }\n    /**\n     * @param {AwaitIterable<Key>} source\n     * @param {Options} [options]\n     * @returns {AsyncIterable<Key>}\n     */\n\n  }, {\n    key: \"deleteMany\",\n    value: function deleteMany(source) {\n      var _this3 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.delegateYield(_asyncGeneratorDelegate(_asyncIterator(_this3.child.deleteMany(source, options)), _awaitAsyncGenerator), \"t0\", 1);\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    }\n  }, {\n    key: \"batch\",\n    value: function batch() {\n      return this.child.batch();\n    }\n    /**\n     * @param {Query} q\n     * @param {Options} [options]\n     */\n\n  }, {\n    key: \"query\",\n    value: function query(q, options) {\n      var _this5 = this;\n\n      var tq = {\n        offset: q.offset,\n        limit: q.limit,\n\n        /** @type {QueryOrder[]} */\n        orders: [],\n\n        /** @type {QueryFilter[]} */\n        filters: [\n        /** @type {QueryFilter} */\n        function (e) {\n          return e.key.toString() !== shardKey.toString();\n        },\n        /** @type {QueryFilter} */\n        function (e) {\n          return e.key.toString() !== shardReadmeKey.toString();\n        }]\n      };\n      var prefix = q.prefix;\n\n      if (prefix != null) {\n        tq.filters.push(function (e) {\n          return _this5._invertKey(e.key).toString().startsWith(prefix);\n        });\n      }\n\n      if (q.filters != null) {\n        var filters = q.filters.map(function (f) {\n          /** @type {QueryFilter} */\n          var filter = function filter(_ref) {\n            var key = _ref.key,\n                value = _ref.value;\n            return f({\n              key: _this5._invertKey(key),\n              value: value\n            });\n          };\n\n          return filter;\n        });\n        tq.filters = tq.filters.concat(filters);\n      }\n\n      if (q.orders != null) {\n        tq.orders = q.orders.map(function (o) {\n          /** @type {QueryOrder} */\n          var order = function order(a, b) {\n            return o({\n              key: _this5._invertKey(a.key),\n              value: a.value\n            }, {\n              key: _this5._invertKey(b.key),\n              value: b.value\n            });\n          };\n\n          return order;\n        });\n      }\n\n      return this.child.query(tq, options);\n    }\n    /**\n     * @param {KeyQuery} q\n     * @param {Options} [options]\n     */\n\n  }, {\n    key: \"queryKeys\",\n    value: function queryKeys(q, options) {\n      var _this6 = this;\n\n      var tq = {\n        offset: q.offset,\n        limit: q.limit,\n\n        /** @type {KeyQueryOrder[]} */\n        orders: [],\n\n        /** @type {KeyQueryFilter[]} */\n        filters: [\n        /** @type {KeyQueryFilter} */\n        function (key) {\n          return key.toString() !== shardKey.toString();\n        },\n        /** @type {KeyQueryFilter} */\n        function (key) {\n          return key.toString() !== shardReadmeKey.toString();\n        }]\n      };\n      var prefix = q.prefix;\n\n      if (prefix != null) {\n        tq.filters.push(function (key) {\n          return _this6._invertKey(key).toString().startsWith(prefix);\n        });\n      }\n\n      if (q.filters != null) {\n        var filters = q.filters.map(function (f) {\n          /** @type {KeyQueryFilter} */\n          var filter = function filter(key) {\n            return f(_this6._invertKey(key));\n          };\n\n          return filter;\n        });\n        tq.filters = tq.filters.concat(filters);\n      }\n\n      if (q.orders != null) {\n        tq.orders = q.orders.map(function (o) {\n          /** @type {KeyQueryOrder} */\n          var order = function order(a, b) {\n            return o(_this6._invertKey(a), _this6._invertKey(b));\n          };\n\n          return order;\n        });\n      }\n\n      return this.child.queryKeys(tq, options);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      return this.child.close();\n    }\n  }], [{\n    key: \"createOrOpen\",\n    value: function () {\n      var _createOrOpen = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(store, shard) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return ShardingDatastore.create(store, shard);\n\n              case 3:\n                _context5.next = 9;\n                break;\n\n              case 5:\n                _context5.prev = 5;\n                _context5.t0 = _context5[\"catch\"](0);\n\n                if (!(_context5.t0 && _context5.t0.message !== 'datastore exists')) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                throw _context5.t0;\n\n              case 9:\n                return _context5.abrupt(\"return\", ShardingDatastore.open(store));\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 5]]);\n      }));\n\n      function createOrOpen(_x, _x2) {\n        return _createOrOpen.apply(this, arguments);\n      }\n\n      return createOrOpen;\n    }()\n    /**\n     * @deprecated\n     * @param {Datastore} store\n     */\n\n  }, {\n    key: \"open\",\n    value: function () {\n      var _open2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(store) {\n        var shard;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return sh.readShardFun('/', store);\n\n              case 2:\n                shard = _context6.sent;\n                return _context6.abrupt(\"return\", new ShardingDatastore(store, shard));\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function open(_x3) {\n        return _open2.apply(this, arguments);\n      }\n\n      return open;\n    }()\n    /**\n     * @param {Datastore} store\n     * @param {Shard} shard\n     */\n\n  }, {\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(store, shard) {\n        var hasShard, put, diskShard, a, b;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return store.has(shardKey);\n\n              case 2:\n                hasShard = _context7.sent;\n\n                if (!(!hasShard && !shard)) {\n                  _context7.next = 5;\n                  break;\n                }\n\n                throw Errors.dbOpenFailedError(Error('Shard is required when datastore doesn\\'t have a shard key already.'));\n\n              case 5:\n                if (hasShard) {\n                  _context7.next = 10;\n                  break;\n                }\n\n                // @ts-ignore i have no idea what putRaw is or saw any implementation\n                put = typeof store.putRaw === 'function' ? store.putRaw.bind(store) : store.put.bind(store);\n                _context7.next = 9;\n                return Promise.all([put(shardKey, new TextEncoder().encode(shard.toString() + '\\n')), put(shardReadmeKey, new TextEncoder().encode(sh.readme))]);\n\n              case 9:\n                return _context7.abrupt(\"return\", shard);\n\n              case 10:\n                _context7.next = 12;\n                return sh.readShardFun('/', store);\n\n              case 12:\n                diskShard = _context7.sent;\n                a = (diskShard || '').toString();\n                b = shard.toString();\n\n                if (!(a !== b)) {\n                  _context7.next = 17;\n                  break;\n                }\n\n                throw new Error(\"specified fun \".concat(b, \" does not match repo shard fun \").concat(a));\n\n              case 17:\n                return _context7.abrupt(\"return\", diskShard);\n\n              case 18:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function create(_x4, _x5) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }]);\n\n  return ShardingDatastore;\n}(Adapter);\n\nmodule.exports = ShardingDatastore;","map":{"version":3,"names":["require","Adapter","Key","Errors","sh","KeytransformStore","shardKey","SHARDING_FN","shardReadmeKey","README_FN","ShardingDatastore","store","shard","child","convert","_convertKey","bind","invert","_invertKey","open","create","key","s","toString","parent","fun","withNamespaces","list","slice","val","options","put","get","has","delete","source","putMany","getMany","deleteMany","batch","q","tq","offset","limit","orders","filters","e","prefix","push","startsWith","map","f","filter","value","concat","o","order","a","b","query","queryKeys","close","message","readShardFun","hasShard","dbOpenFailedError","Error","putRaw","Promise","all","TextEncoder","encode","readme","diskShard","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/datastore-core/src/sharding.js"],"sourcesContent":["'use strict'\n\nconst { Adapter, Key, Errors } = require('interface-datastore')\nconst sh = require('./shard')\nconst KeytransformStore = require('./keytransform')\n\nconst shardKey = new Key(sh.SHARDING_FN)\nconst shardReadmeKey = new Key(sh.README_FN)\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} Options\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').QueryFilter} QueryFilter\n * @typedef {import('interface-datastore').QueryOrder} QueryOrder\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').KeyQueryFilter} KeyQueryFilter\n * @typedef {import('interface-datastore').KeyQueryOrder} KeyQueryOrder\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('./types').Shard} Shard\n *\n */\n/**\n * @template TValue\n * @typedef {import('interface-store').Await<TValue> } Await\n */\n\n/**\n * @template TEntry\n * @typedef {import('interface-store').AwaitIterable<TEntry>} AwaitIterable\n */\n\n/**\n * Backend independent abstraction of go-ds-flatfs.\n *\n * Wraps another datastore such that all values are stored\n * sharded according to the given sharding function.\n */\nclass ShardingDatastore extends Adapter {\n  /**\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  constructor (store, shard) {\n    super()\n\n    this.child = new KeytransformStore(store, {\n      convert: this._convertKey.bind(this),\n      invert: this._invertKey.bind(this)\n    })\n    this.shard = shard\n  }\n\n  async open () {\n    await this.child.open()\n\n    this.shard = await ShardingDatastore.create(this.child, this.shard)\n  }\n\n  /**\n   * @param {Key} key\n   */\n  _convertKey (key) {\n    const s = key.toString()\n    if (s === shardKey.toString() || s === shardReadmeKey.toString()) {\n      return key\n    }\n\n    const parent = new Key(this.shard.fun(s))\n    return parent.child(key)\n  }\n\n  /**\n   * @param {Key} key\n   */\n  _invertKey (key) {\n    const s = key.toString()\n    if (s === shardKey.toString() || s === shardReadmeKey.toString()) {\n      return key\n    }\n    return Key.withNamespaces(key.list().slice(1))\n  }\n\n  /**\n   * @deprecated\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  static async createOrOpen (store, shard) {\n    try {\n      await ShardingDatastore.create(store, shard)\n    } catch (err) {\n      if (err && err.message !== 'datastore exists') throw err\n    }\n    return ShardingDatastore.open(store)\n  }\n\n  /**\n   * @deprecated\n   * @param {Datastore} store\n   */\n  static async open (store) {\n    const shard = await sh.readShardFun('/', store)\n    return new ShardingDatastore(store, shard)\n  }\n\n  /**\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  static async create (store, shard) {\n    const hasShard = await store.has(shardKey)\n    if (!hasShard && !shard) {\n      throw Errors.dbOpenFailedError(Error('Shard is required when datastore doesn\\'t have a shard key already.'))\n    }\n    if (!hasShard) {\n      // @ts-ignore i have no idea what putRaw is or saw any implementation\n      const put = typeof store.putRaw === 'function' ? store.putRaw.bind(store) : store.put.bind(store)\n      await Promise.all([\n        put(shardKey, new TextEncoder().encode(shard.toString() + '\\n')),\n        put(shardReadmeKey, new TextEncoder().encode(sh.readme))\n      ])\n\n      return shard\n    }\n\n    // test shards\n    const diskShard = await sh.readShardFun('/', store)\n    const a = (diskShard || '').toString()\n    const b = shard.toString()\n    if (a !== b) {\n      throw new Error(`specified fun ${b} does not match repo shard fun ${a}`)\n    }\n    return diskShard\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} val\n   * @param {Options} [options]\n   */\n  put (key, val, options) {\n    return this.child.put(key, val, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  get (key, options) {\n    return this.child.get(key, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  has (key, options) {\n    return this.child.has(key, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  delete (key, options) {\n    return this.child.delete(key, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    yield * this.child.putMany(source, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  async * getMany (source, options = {}) {\n    yield * this.child.getMany(source, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  async * deleteMany (source, options = {}) {\n    yield * this.child.deleteMany(source, options)\n  }\n\n  batch () {\n    return this.child.batch()\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    const tq = {\n      offset: q.offset,\n      limit: q.limit,\n      /** @type {QueryOrder[]} */\n      orders: [],\n      /** @type {QueryFilter[]} */\n      filters: [\n        /** @type {QueryFilter} */\n        e => e.key.toString() !== shardKey.toString(),\n        /** @type {QueryFilter} */\n        e => e.key.toString() !== shardReadmeKey.toString()\n      ]\n    }\n\n    const { prefix } = q\n    if (prefix != null) {\n      tq.filters.push((e) => {\n        return this._invertKey(e.key).toString().startsWith(prefix)\n      })\n    }\n\n    if (q.filters != null) {\n      const filters = q.filters.map(f => {\n        /** @type {QueryFilter} */\n        const filter = ({ key, value }) => {\n          return f({\n            key: this._invertKey(key),\n            value\n          })\n        }\n\n        return filter\n      })\n      tq.filters = tq.filters.concat(filters)\n    }\n\n    if (q.orders != null) {\n      tq.orders = q.orders.map(o => {\n        /** @type {QueryOrder} */\n        const order = (a, b) => {\n          return o({\n            key: this._invertKey(a.key),\n            value: a.value\n          }, {\n            key: this._invertKey(b.key),\n            value: b.value\n          })\n        }\n\n        return order\n      })\n    }\n\n    return this.child.query(tq, options)\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    const tq = {\n      offset: q.offset,\n      limit: q.limit,\n      /** @type {KeyQueryOrder[]} */\n      orders: [],\n      /** @type {KeyQueryFilter[]} */\n      filters: [\n        /** @type {KeyQueryFilter} */\n        key => key.toString() !== shardKey.toString(),\n        /** @type {KeyQueryFilter} */\n        key => key.toString() !== shardReadmeKey.toString()\n      ]\n    }\n\n    const { prefix } = q\n    if (prefix != null) {\n      tq.filters.push((key) => {\n        return this._invertKey(key).toString().startsWith(prefix)\n      })\n    }\n\n    if (q.filters != null) {\n      const filters = q.filters.map(f => {\n        /** @type {KeyQueryFilter} */\n        const filter = (key) => {\n          return f(this._invertKey(key))\n        }\n\n        return filter\n      })\n      tq.filters = tq.filters.concat(filters)\n    }\n\n    if (q.orders != null) {\n      tq.orders = q.orders.map(o => {\n        /** @type {KeyQueryOrder} */\n        const order = (a, b) => o(this._invertKey(a), this._invertKey(b))\n\n        return order\n      })\n    }\n\n    return this.child.queryKeys(tq, options)\n  }\n\n  close () {\n    return this.child.close()\n  }\n}\n\nmodule.exports = ShardingDatastore\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
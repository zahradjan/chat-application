{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar BufferList = require('bl/BufferList.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar BufferList__default = /*#__PURE__*/_interopDefaultLegacy(BufferList);\n\nfunction fixedSizeChunker(_x, _x2) {\n  return _fixedSizeChunker.apply(this, arguments);\n}\n\nfunction _fixedSizeChunker() {\n  _fixedSizeChunker = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source, options) {\n    var bl, currentLength, emitted, maxChunkSize, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, buffer, newBl;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            bl = new BufferList__default[\"default\"]();\n            currentLength = 0;\n            emitted = false;\n            maxChunkSize = options.maxChunkSize;\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context.prev = 6;\n            _iterator = _asyncIterator(source);\n\n          case 8:\n            _context.next = 10;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 10:\n            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n              _context.next = 24;\n              break;\n            }\n\n            buffer = _step.value;\n            bl.append(buffer);\n            currentLength += buffer.length;\n\n          case 14:\n            if (!(currentLength >= maxChunkSize)) {\n              _context.next = 21;\n              break;\n            }\n\n            _context.next = 17;\n            return bl.slice(0, maxChunkSize);\n\n          case 17:\n            emitted = true;\n\n            if (maxChunkSize === bl.length) {\n              bl = new BufferList__default[\"default\"]();\n              currentLength = 0;\n            } else {\n              newBl = new BufferList__default[\"default\"]();\n              newBl.append(bl.shallowSlice(maxChunkSize));\n              bl = newBl;\n              currentLength -= maxChunkSize;\n            }\n\n            _context.next = 14;\n            break;\n\n          case 21:\n            _iteratorAbruptCompletion = false;\n            _context.next = 8;\n            break;\n\n          case 24:\n            _context.next = 30;\n            break;\n\n          case 26:\n            _context.prev = 26;\n            _context.t0 = _context[\"catch\"](6);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 30:\n            _context.prev = 30;\n            _context.prev = 31;\n\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context.next = 35;\n              break;\n            }\n\n            _context.next = 35;\n            return _awaitAsyncGenerator(_iterator.return());\n\n          case 35:\n            _context.prev = 35;\n\n            if (!_didIteratorError) {\n              _context.next = 38;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 38:\n            return _context.finish(35);\n\n          case 39:\n            return _context.finish(30);\n\n          case 40:\n            if (!(!emitted || currentLength)) {\n              _context.next = 43;\n              break;\n            }\n\n            _context.next = 43;\n            return bl.slice(0, currentLength);\n\n          case 43:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 26, 30, 40], [31,, 35, 39]]);\n  }));\n  return _fixedSizeChunker.apply(this, arguments);\n}\n\nmodule.exports = fixedSizeChunker;","map":{"version":3,"names":["BufferList","require","_interopDefaultLegacy","e","BufferList__default","fixedSizeChunker","source","options","bl","currentLength","emitted","maxChunkSize","buffer","append","length","slice","newBl","shallowSlice","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-unixfs-importer/cjs/src/chunker/fixed-size.js"],"sourcesContent":["'use strict';\n\nvar BufferList = require('bl/BufferList.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar BufferList__default = /*#__PURE__*/_interopDefaultLegacy(BufferList);\n\nasync function* fixedSizeChunker(source, options) {\n  let bl = new BufferList__default[\"default\"]();\n  let currentLength = 0;\n  let emitted = false;\n  const maxChunkSize = options.maxChunkSize;\n  for await (const buffer of source) {\n    bl.append(buffer);\n    currentLength += buffer.length;\n    while (currentLength >= maxChunkSize) {\n      yield bl.slice(0, maxChunkSize);\n      emitted = true;\n      if (maxChunkSize === bl.length) {\n        bl = new BufferList__default[\"default\"]();\n        currentLength = 0;\n      } else {\n        const newBl = new BufferList__default[\"default\"]();\n        newBl.append(bl.shallowSlice(maxChunkSize));\n        bl = newBl;\n        currentLength -= maxChunkSize;\n      }\n    }\n  }\n  if (!emitted || currentLength) {\n    yield bl.slice(0, currentLength);\n  }\n}\n\nmodule.exports = fixedSizeChunker;\n"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,kBAAD,CAAxB;;AAEA,SAASC,qBAAT,CAAgCC,CAAhC,EAAmC;EAAE,OAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;IAAE,WAAWA;EAAb,CAA1D;AAA6E;;AAElH,IAAIC,mBAAmB,GAAG,aAAaF,qBAAqB,CAACF,UAAD,CAA5D;;SAEgBK,gB;;;;;mFAAhB,iBAAiCC,MAAjC,EAAyCC,OAAzC;IAAA;;IAAA;MAAA;QAAA;UAAA;YACMC,EADN,GACW,IAAIJ,mBAAmB,CAAC,SAAD,CAAvB,EADX;YAEMK,aAFN,GAEsB,CAFtB;YAGMC,OAHN,GAGgB,KAHhB;YAIQC,YAJR,GAIuBJ,OAAO,CAACI,YAJ/B;YAAA;YAAA;YAAA;YAAA,2BAK6BL,MAL7B;;UAAA;YAAA;YAAA;;UAAA;YAAA;cAAA;cAAA;YAAA;;YAKmBM,MALnB;YAMIJ,EAAE,CAACK,MAAH,CAAUD,MAAV;YACAH,aAAa,IAAIG,MAAM,CAACE,MAAxB;;UAPJ;YAAA,MAQWL,aAAa,IAAIE,YAR5B;cAAA;cAAA;YAAA;;YAAA;YASM,OAAMH,EAAE,CAACO,KAAH,CAAS,CAAT,EAAYJ,YAAZ,CAAN;;UATN;YAUMD,OAAO,GAAG,IAAV;;YACA,IAAIC,YAAY,KAAKH,EAAE,CAACM,MAAxB,EAAgC;cAC9BN,EAAE,GAAG,IAAIJ,mBAAmB,CAAC,SAAD,CAAvB,EAAL;cACAK,aAAa,GAAG,CAAhB;YACD,CAHD,MAGO;cACCO,KADD,GACS,IAAIZ,mBAAmB,CAAC,SAAD,CAAvB,EADT;cAELY,KAAK,CAACH,MAAN,CAAaL,EAAE,CAACS,YAAH,CAAgBN,YAAhB,CAAb;cACAH,EAAE,GAAGQ,KAAL;cACAP,aAAa,IAAIE,YAAjB;YACD;;YAnBP;YAAA;;UAAA;YAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;;YAAA;cAAA;cAAA;YAAA;;YAAA;YAAA;;UAAA;YAAA;;YAAA;cAAA;cAAA;YAAA;;YAAA;;UAAA;YAAA;;UAAA;YAAA;;UAAA;YAAA,MAsBM,CAACD,OAAD,IAAYD,aAtBlB;cAAA;cAAA;YAAA;;YAAA;YAuBI,OAAMD,EAAE,CAACO,KAAH,CAAS,CAAT,EAAYN,aAAZ,CAAN;;UAvBJ;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AA2BAS,MAAM,CAACC,OAAP,GAAiBd,gBAAjB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n\nvar _require = require('uint8arrays/concat'),\n    uint8ArrayConcat = _require.concat;\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\n\n\nmodule.exports = function (_ref) {\n  var repo = _ref.repo,\n      preload = _ref.preload;\n\n  var get = require('../get')({\n    repo: repo,\n    preload: preload\n  });\n\n  var put = require('../put')({\n    repo: repo,\n    preload: preload\n  });\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API[\"appendData\"]}\n   */\n\n\n  function appendData(_x, _x2) {\n    return _appendData.apply(this, arguments);\n  }\n\n  function _appendData() {\n    _appendData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid, data) {\n      var options,\n          node,\n          newData,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              _context.next = 3;\n              return get(cid, options);\n\n            case 3:\n              node = _context.sent;\n              newData = uint8ArrayConcat([node.Data || [], data]);\n              return _context.abrupt(\"return\", put(_objectSpread(_objectSpread({}, node), {}, {\n                Data: newData\n              }), options));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _appendData.apply(this, arguments);\n  }\n\n  return withTimeoutOption(appendData);\n};","map":{"version":3,"names":["withTimeoutOption","require","uint8ArrayConcat","concat","module","exports","repo","preload","get","put","appendData","cid","data","options","node","newData","Data"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-core/src/components/object/patch/append-data.js"],"sourcesContent":["'use strict'\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\nconst { concat: uint8ArrayConcat } = require('uint8arrays/concat')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\nmodule.exports = ({ repo, preload }) => {\n  const get = require('../get')({ repo, preload })\n  const put = require('../put')({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API[\"appendData\"]}\n   */\n  async function appendData (cid, data, options = {}) {\n    const node = await get(cid, options)\n    const newData = uint8ArrayConcat([node.Data || [], data])\n\n    return put({\n      ...node,\n      Data: newData\n    }, options)\n  }\n\n  return withTimeoutOption(appendData)\n}\n"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,iBAAiB,GAAGC,OAAO,CAAC,yCAAD,CAAjC;;AACA,eAAqCA,OAAO,CAAC,oBAAD,CAA5C;AAAA,IAAgBC,gBAAhB,YAAQC,MAAR;AAEA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,gBAAuB;EAAA,IAApBC,IAAoB,QAApBA,IAAoB;EAAA,IAAdC,OAAc,QAAdA,OAAc;;EACtC,IAAMC,GAAG,GAAGP,OAAO,CAAC,QAAD,CAAP,CAAkB;IAAEK,IAAI,EAAJA,IAAF;IAAQC,OAAO,EAAPA;EAAR,CAAlB,CAAZ;;EACA,IAAME,GAAG,GAAGR,OAAO,CAAC,QAAD,CAAP,CAAkB;IAAEK,IAAI,EAAJA,IAAF;IAAQC,OAAO,EAAPA;EAAR,CAAlB,CAAZ;EAEA;AACF;AACA;;;EANwC,SAOvBG,UAPuB;IAAA;EAAA;;EAAA;IAAA,yEAOtC,iBAA2BC,GAA3B,EAAgCC,IAAhC;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAsCC,OAAtC,2DAAgD,EAAhD;cAAA;cAAA,OACqBL,GAAG,CAACG,GAAD,EAAME,OAAN,CADxB;;YAAA;cACQC,IADR;cAEQC,OAFR,GAEkBb,gBAAgB,CAAC,CAACY,IAAI,CAACE,IAAL,IAAa,EAAd,EAAkBJ,IAAlB,CAAD,CAFlC;cAAA,iCAISH,GAAG,iCACLK,IADK;gBAERE,IAAI,EAAED;cAFE,IAGPF,OAHO,CAJZ;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAPsC;IAAA;EAAA;;EAiBtC,OAAOb,iBAAiB,CAACU,UAAD,CAAxB;AACD,CAlBD"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import IpfsPubsubPeerMonitor from \"ipfs-pubsub-peer-monitor\";\nimport { makeAutoObservable, runInAction, toJS } from \"mobx\";\nexport class MonitorStore {\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.monitor = undefined;\n    this.peersDb = undefined;\n    this.peers = [];\n    this.errorMessage = \"\";\n    this.login = \"Login\";\n    this.topicName = \"DecentioGlobalNetwork\";\n    this.texDecoder = new TextDecoder();\n    makeAutoObservable(this);\n  }\n\n  async init() {\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\n    runInAction(async () => {\n      await this.subscribeToOwnPubsub();\n      await this.subscribeToDecentioPubsub();\n      await this.loadPeersDb();\n      await this.setPeersFromDb();\n      this.monitor = new IpfsPubsubPeerMonitor(this.rootStore.dataStore.ipfsNode.pubsub, this.topicName);\n      await this.listenForJoinedPeers();\n      await this.listenForLeftPeers();\n    });\n  }\n\n  async isMonitorReady() {\n    return !!this.monitor;\n  }\n\n  async setPeersFromDb() {\n    const all = await toJS(this.peersDb.all);\n    runInAction(() => {\n      all.map(e => {\n        // console.log(e.payload.value);\n        return this.peers.push(e.payload.value);\n      });\n    });\n  }\n\n  async listenForJoinedPeers() {\n    this.monitor.on(\"join\", async peerJoined => {\n      console.log(\"Peer joined: \" + peerJoined);\n      console.log(`Peers on Pubsub ${this.topicName}: ` + (await this.monitor.getPeers()));\n      setTimeout(async () => {\n        let peerInDb = this.peerIsInDb(peerJoined);\n\n        if (!peerInDb) {\n          await this.sendUserDbId(peerJoined);\n        }\n      }, 2000);\n    });\n  }\n\n  async listenForLeftPeers() {\n    this.monitor.on(\"leave\", async peerLeft => {\n      console.log(\"Peer left: \" + peerLeft);\n      console.log(`Peers on Pubsub ${this.topicName}: ` + (await this.monitor.getPeers()));\n    });\n  }\n\n  setErrorMessage(errorMessage) {\n    this.errorMessage = errorMessage;\n  }\n\n  peerIsInDb(peer) {\n    console.log(peer);\n    const peers = toJS(this.peers);\n    console.log(toJS(this.peers));\n    return peers.find(item => item.data.user.peerId === peer);\n  }\n\n  setLoginForm() {\n    this.login = \"Login\";\n  }\n\n  setSignUpForm() {\n    this.login = \"SignUp\";\n  }\n\n  isLoginForm() {\n    return this.login === \"Login\";\n  }\n\n  userAlreadyExist(user) {\n    console.log(user);\n    const peers = toJS(this.peers);\n    console.log(toJS(this.peers));\n    return peers.find(item => item.data.user._username === user);\n  } // passwordCorrect(user) {\n  //   console.log(user);\n  //   const peers = toJS(this.peers);\n  //   console.log(toJS(this.peers));\n  //   return peers.find((item) => item.user._username === user);\n  // }\n\n\n  async savePeer(peer) {\n    runInAction(async () => {\n      console.log(!this.peerIsInDb(peer));\n\n      if (!this.peerIsInDb(peer)) {\n        this.peers.push(peer);\n        await this.peersDb.add(peer);\n      }\n    });\n  }\n\n  async removePeer(peer) {\n    const entry = await this.peersDb.iterator().collect().map(item => item.payload.value === peer ? item : undefined);\n    console.log(entry);\n\n    if (entry) {\n      await this.peersDb.remove(entry[0].hash);\n    }\n  }\n\n  async sendUserDbId(peer) {\n    const userDbId = await this.rootStore.userStore.getUserDbId();\n    const stringifyPayload = JSON.stringify({\n      userDb: userDbId\n    });\n    console.log(stringifyPayload);\n    await this.rootStore.dataStore.ipfsNode.pubsub.publish(peer, stringifyPayload);\n  }\n\n  async subscribeToOwnPubsub() {\n    const peerInfoId = this.rootStore.dataStore.peerId;\n    console.log(\"Peer ID: \" + peerInfoId);\n    await this.rootStore.dataStore.ipfsNode.pubsub.subscribe(peerInfoId, async msg => {\n      if (typeof msg.data === \"object\") msg.data = this.texDecoder.decode(msg.data);\n      const parsedMsg = JSON.parse(msg.data);\n\n      if (parsedMsg.userDb) {\n        await this.replicateUserDb(parsedMsg);\n      } // let targetRoom;\n      // if (parsedMsg.userDb) {\n      //   await this.replicateUserDb(parsedMsg);\n      //   targetRoom = await this.rootStore.roomStore.createRoom(msg.from);\n      //   await targetRoom.init();\n      // } else {\n      //   targetRoom = this.rootStore.roomStore.getRoom(msg.from);\n      //   console.log(targetRoom);\n      // }\n      // if (targetRoom) {\n      //   targetRoom.setMessage(msg);\n      // }\n\n    });\n  }\n\n  async subscribeToDecentioPubsub() {\n    await this.rootStore.dataStore.ipfsNode.pubsub.subscribe(\"DecentioGlobalNetwork\", () => {});\n  }\n\n  async replicateUserDb(parsedMsg) {\n    console.log(parsedMsg.userDb);\n    var peerDbOuter = await this.rootStore.dataStore.orbitDb.open(parsedMsg.userDb);\n    console.log(peerDbOuter);\n    await peerDbOuter.load();\n    peerDbOuter.events.on(\"replicated\", async () => {\n      console.log(\"DB replicated\");\n      const db = {\n        identity: parsedMsg.userDb,\n        data: peerDbOuter.all\n      };\n      console.log(db);\n      await this.peersDb.add(db);\n      console.log(this.peersDb.all);\n      this.peers.push(db);\n    });\n  }\n\n  async loadPeersDb() {\n    this.peersDb = await this.rootStore.dataStore.orbitDb.feed(\"peers\");\n    await this.peersDb.load();\n  }\n\n  replicatePeersDB() {\n    setTimeout(async () => {\n      const nodeId = await this.rootStore.dataStore.getPeerId();\n      const peersDbId = await this.peersDb.id;\n      console.log(nodeId);\n      await this.peersDb.all.map(peer => {\n        const peerId = peer.payload.value;\n\n        if (peerId !== nodeId) {\n          console.log(\"jsem tu \");\n          console.log(peerId);\n          console.log(peersDbId);\n          const stringifyPayload = JSON.stringify({\n            peerDb: peersDbId\n          });\n          this.rootStore.dataStore.ipfsNode.pubsub.publish(peerId, stringifyPayload);\n        }\n      });\n    }, 2000);\n  }\n\n  async removeDuplicateUser(duplicateUser) {\n    console.log(duplicateUser);\n    console.log(toJS(this.peers));\n    await this.peersDb.remove(duplicateUser);\n    const index = this.peers.indexOf(duplicateUser);\n    console.log(index);\n\n    if (index > -1) {\n      // only splice array when item is found\n      this.peers.splice(index, 1); // 2nd parameter means remove one item only\n    }\n  }\n\n  async queryCatalog(queryFn) {\n    //  const dbAddrs = Object.values(this.peersDb.all).map(peer => peer.pieces)\n    const allPieces = await Promise.all(this.peersDb.all.map(async addr => {\n      const db = await this.rootStore.dataStore.orbitDb.open(addr);\n      await db.load();\n      return db.query(queryFn);\n    })); // return allPieces.reduce((flatPieces, pieces) => flatPieces.concat(pieces), this.pieces.query(queryFn))\n  }\n\n  processMessage(msg) {\n    if (typeof msg.data === \"object\") msg.data = this.texDecoder.decode(msg.data);\n  }\n\n  async getPeersDbId() {\n    const id = await this.peersDb.id;\n    return id;\n  }\n\n}","map":{"version":3,"names":["IpfsPubsubPeerMonitor","makeAutoObservable","runInAction","toJS","MonitorStore","constructor","rootStore","monitor","undefined","peersDb","peers","errorMessage","login","topicName","texDecoder","TextDecoder","init","dataStore","ipfsNode","Error","orbitDb","subscribeToOwnPubsub","subscribeToDecentioPubsub","loadPeersDb","setPeersFromDb","pubsub","listenForJoinedPeers","listenForLeftPeers","isMonitorReady","all","map","e","push","payload","value","on","peerJoined","console","log","getPeers","setTimeout","peerInDb","peerIsInDb","sendUserDbId","peerLeft","setErrorMessage","peer","find","item","data","user","peerId","setLoginForm","setSignUpForm","isLoginForm","userAlreadyExist","_username","savePeer","add","removePeer","entry","iterator","collect","remove","hash","userDbId","userStore","getUserDbId","stringifyPayload","JSON","stringify","userDb","publish","peerInfoId","subscribe","msg","decode","parsedMsg","parse","replicateUserDb","peerDbOuter","open","load","events","db","identity","feed","replicatePeersDB","nodeId","getPeerId","peersDbId","id","peerDb","removeDuplicateUser","duplicateUser","index","indexOf","splice","queryCatalog","queryFn","allPieces","Promise","addr","query","processMessage","getPeersDbId"],"sources":["C:/Users/zajan/GitHub/chatApplication/src/data/store/MonitorStore.js"],"sourcesContent":["import IpfsPubsubPeerMonitor from \"ipfs-pubsub-peer-monitor\";\r\nimport { makeAutoObservable, runInAction, toJS } from \"mobx\";\r\n\r\nexport class MonitorStore {\r\n  monitor;\r\n  topicName;\r\n  peers;\r\n  peersDb;\r\n  texDecoder;\r\n  errorMessage;\r\n  login;\r\n  constructor(rootStore) {\r\n    this.rootStore = rootStore;\r\n    this.monitor = undefined;\r\n    this.peersDb = undefined;\r\n    this.peers = [];\r\n    this.errorMessage = \"\";\r\n    this.login = \"Login\";\r\n    this.topicName = \"DecentioGlobalNetwork\";\r\n    this.texDecoder = new TextDecoder();\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  async init() {\r\n    if (this.rootStore.dataStore.ipfsNode === undefined) throw Error(\"IPFS Node not defined!\");\r\n    if (this.rootStore.dataStore.orbitDb === undefined) throw Error(\"OrbitDb not defined!\");\r\n    runInAction(async () => {\r\n      await this.subscribeToOwnPubsub();\r\n      await this.subscribeToDecentioPubsub();\r\n      await this.loadPeersDb();\r\n      await this.setPeersFromDb();\r\n      this.monitor = new IpfsPubsubPeerMonitor(this.rootStore.dataStore.ipfsNode.pubsub, this.topicName);\r\n      await this.listenForJoinedPeers();\r\n      await this.listenForLeftPeers();\r\n    });\r\n  }\r\n  async isMonitorReady() {\r\n    return !!this.monitor;\r\n  }\r\n\r\n  async setPeersFromDb() {\r\n    const all = await toJS(this.peersDb.all);\r\n    runInAction(() => {\r\n      all.map((e) => {\r\n        // console.log(e.payload.value);\r\n        return this.peers.push(e.payload.value);\r\n      });\r\n    });\r\n  }\r\n\r\n  async listenForJoinedPeers() {\r\n    this.monitor.on(\"join\", async (peerJoined) => {\r\n      console.log(\"Peer joined: \" + peerJoined);\r\n      console.log(`Peers on Pubsub ${this.topicName}: ` + (await this.monitor.getPeers()));\r\n      setTimeout(async () => {\r\n        let peerInDb = this.peerIsInDb(peerJoined);\r\n\r\n        if (!peerInDb) {\r\n          await this.sendUserDbId(peerJoined);\r\n        }\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  async listenForLeftPeers() {\r\n    this.monitor.on(\"leave\", async (peerLeft) => {\r\n      console.log(\"Peer left: \" + peerLeft);\r\n      console.log(`Peers on Pubsub ${this.topicName}: ` + (await this.monitor.getPeers()));\r\n    });\r\n  }\r\n  setErrorMessage(errorMessage) {\r\n    this.errorMessage = errorMessage;\r\n  }\r\n\r\n  peerIsInDb(peer) {\r\n    console.log(peer);\r\n    const peers = toJS(this.peers);\r\n    console.log(toJS(this.peers));\r\n    return peers.find((item) => item.data.user.peerId === peer);\r\n  }\r\n\r\n  setLoginForm() {\r\n    this.login = \"Login\";\r\n  }\r\n  setSignUpForm() {\r\n    this.login = \"SignUp\";\r\n  }\r\n\r\n  isLoginForm() {\r\n    return this.login === \"Login\";\r\n  }\r\n\r\n  userAlreadyExist(user) {\r\n    console.log(user);\r\n    const peers = toJS(this.peers);\r\n    console.log(toJS(this.peers));\r\n    return peers.find((item) => item.data.user._username === user);\r\n  }\r\n\r\n  // passwordCorrect(user) {\r\n  //   console.log(user);\r\n  //   const peers = toJS(this.peers);\r\n  //   console.log(toJS(this.peers));\r\n  //   return peers.find((item) => item.user._username === user);\r\n  // }\r\n\r\n  async savePeer(peer) {\r\n    runInAction(async () => {\r\n      console.log(!this.peerIsInDb(peer));\r\n      if (!this.peerIsInDb(peer)) {\r\n        this.peers.push(peer);\r\n        await this.peersDb.add(peer);\r\n      }\r\n    });\r\n  }\r\n  async removePeer(peer) {\r\n    const entry = await this.peersDb\r\n      .iterator()\r\n      .collect()\r\n      .map((item) => (item.payload.value === peer ? item : undefined));\r\n    console.log(entry);\r\n    if (entry) {\r\n      await this.peersDb.remove(entry[0].hash);\r\n    }\r\n  }\r\n  async sendUserDbId(peer) {\r\n    const userDbId = await this.rootStore.userStore.getUserDbId();\r\n\r\n    const stringifyPayload = JSON.stringify({ userDb: userDbId });\r\n    console.log(stringifyPayload);\r\n    await this.rootStore.dataStore.ipfsNode.pubsub.publish(peer, stringifyPayload);\r\n  }\r\n\r\n  async subscribeToOwnPubsub() {\r\n    const peerInfoId = this.rootStore.dataStore.peerId;\r\n    console.log(\"Peer ID: \" + peerInfoId);\r\n    await this.rootStore.dataStore.ipfsNode.pubsub.subscribe(peerInfoId, async (msg) => {\r\n      if (typeof msg.data === \"object\") msg.data = this.texDecoder.decode(msg.data);\r\n      const parsedMsg = JSON.parse(msg.data);\r\n      if (parsedMsg.userDb) {\r\n        await this.replicateUserDb(parsedMsg);\r\n      }\r\n      // let targetRoom;\r\n      // if (parsedMsg.userDb) {\r\n      //   await this.replicateUserDb(parsedMsg);\r\n      //   targetRoom = await this.rootStore.roomStore.createRoom(msg.from);\r\n      //   await targetRoom.init();\r\n      // } else {\r\n      //   targetRoom = this.rootStore.roomStore.getRoom(msg.from);\r\n      //   console.log(targetRoom);\r\n      // }\r\n      // if (targetRoom) {\r\n      //   targetRoom.setMessage(msg);\r\n      // }\r\n    });\r\n  }\r\n\r\n  async subscribeToDecentioPubsub() {\r\n    await this.rootStore.dataStore.ipfsNode.pubsub.subscribe(\"DecentioGlobalNetwork\", () => {});\r\n  }\r\n\r\n  async replicateUserDb(parsedMsg) {\r\n    console.log(parsedMsg.userDb);\r\n    var peerDbOuter = await this.rootStore.dataStore.orbitDb.open(parsedMsg.userDb);\r\n    console.log(peerDbOuter);\r\n    await peerDbOuter.load();\r\n    peerDbOuter.events.on(\"replicated\", async () => {\r\n      console.log(\"DB replicated\");\r\n      const db = { identity: parsedMsg.userDb, data: peerDbOuter.all };\r\n      console.log(db);\r\n      await this.peersDb.add(db);\r\n      console.log(this.peersDb.all);\r\n      this.peers.push(db);\r\n    });\r\n  }\r\n\r\n  async loadPeersDb() {\r\n    this.peersDb = await this.rootStore.dataStore.orbitDb.feed(\"peers\");\r\n    await this.peersDb.load();\r\n  }\r\n\r\n  replicatePeersDB() {\r\n    setTimeout(async () => {\r\n      const nodeId = await this.rootStore.dataStore.getPeerId();\r\n      const peersDbId = await this.peersDb.id;\r\n      console.log(nodeId);\r\n      await this.peersDb.all.map((peer) => {\r\n        const peerId = peer.payload.value;\r\n        if (peerId !== nodeId) {\r\n          console.log(\"jsem tu \");\r\n          console.log(peerId);\r\n          console.log(peersDbId);\r\n          const stringifyPayload = JSON.stringify({ peerDb: peersDbId });\r\n          this.rootStore.dataStore.ipfsNode.pubsub.publish(peerId, stringifyPayload);\r\n        }\r\n      });\r\n    }, 2000);\r\n  }\r\n\r\n  async removeDuplicateUser(duplicateUser) {\r\n    console.log(duplicateUser);\r\n    console.log(toJS(this.peers));\r\n    await this.peersDb.remove(duplicateUser);\r\n    const index = this.peers.indexOf(duplicateUser);\r\n    console.log(index);\r\n    if (index > -1) {\r\n      // only splice array when item is found\r\n      this.peers.splice(index, 1); // 2nd parameter means remove one item only\r\n    }\r\n  }\r\n\r\n  async queryCatalog(queryFn) {\r\n    //  const dbAddrs = Object.values(this.peersDb.all).map(peer => peer.pieces)\r\n\r\n    const allPieces = await Promise.all(\r\n      this.peersDb.all.map(async (addr) => {\r\n        const db = await this.rootStore.dataStore.orbitDb.open(addr);\r\n        await db.load();\r\n\r\n        return db.query(queryFn);\r\n      })\r\n    );\r\n\r\n    // return allPieces.reduce((flatPieces, pieces) => flatPieces.concat(pieces), this.pieces.query(queryFn))\r\n  }\r\n\r\n  processMessage(msg) {\r\n    if (typeof msg.data === \"object\") msg.data = this.texDecoder.decode(msg.data);\r\n  }\r\n  async getPeersDbId() {\r\n    const id = await this.peersDb.id;\r\n    return id;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
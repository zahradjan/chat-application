{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar isDefined = require('./is-defined');\n\nvar Identity = /*#__PURE__*/function () {\n  function Identity(id, publicKey, idSignature, pubKeyIdSignature, type, provider) {\n    _classCallCheck(this, Identity);\n\n    if (!isDefined(id)) {\n      throw new Error('Identity id is required');\n    }\n\n    if (!isDefined(publicKey)) {\n      throw new Error('Invalid public key');\n    }\n\n    if (!isDefined(idSignature)) {\n      throw new Error('Signature of the id (idSignature) is required');\n    }\n\n    if (!isDefined(pubKeyIdSignature)) {\n      throw new Error('Signature of (publicKey + idSignature) is required');\n    }\n\n    if (!isDefined(type)) {\n      throw new Error('Identity type is required');\n    }\n\n    if (!isDefined(provider)) {\n      throw new Error('Identity provider is required');\n    }\n\n    this._id = id;\n    this._publicKey = publicKey;\n    this._signatures = Object.assign({}, {\n      id: idSignature\n    }, {\n      publicKey: pubKeyIdSignature\n    });\n    this._type = type;\n    this._provider = provider;\n  }\n  /**\n  * This is only used as a fallback to the clock id when necessary\n  * @return {string} public key hex encoded\n  */\n\n\n  _createClass(Identity, [{\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n  }, {\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n  }, {\n    key: \"signatures\",\n    get: function get() {\n      return this._signatures;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._type;\n    }\n  }, {\n    key: \"provider\",\n    get: function get() {\n      return this._provider;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        id: this.id,\n        publicKey: this.publicKey,\n        signatures: this.signatures,\n        type: this.type\n      };\n    }\n  }], [{\n    key: \"isIdentity\",\n    value: function isIdentity(identity) {\n      return identity.id !== undefined && identity.publicKey !== undefined && identity.signatures !== undefined && identity.signatures.id !== undefined && identity.signatures.publicKey !== undefined && identity.type !== undefined;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(identity) {\n      return {\n        id: identity.id,\n        publicKey: identity.publicKey,\n        signatures: identity.signatures,\n        type: identity.type\n      };\n    }\n  }]);\n\n  return Identity;\n}();\n\nmodule.exports = Identity;","map":{"version":3,"names":["isDefined","require","Identity","id","publicKey","idSignature","pubKeyIdSignature","type","provider","Error","_id","_publicKey","_signatures","Object","assign","_type","_provider","signatures","identity","undefined","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/orbit-db-identity-provider/src/identity.js"],"sourcesContent":["'use strict'\nconst isDefined = require('./is-defined')\n\nclass Identity {\n  constructor (id, publicKey, idSignature, pubKeyIdSignature, type, provider) {\n    if (!isDefined(id)) {\n      throw new Error('Identity id is required')\n    }\n\n    if (!isDefined(publicKey)) {\n      throw new Error('Invalid public key')\n    }\n\n    if (!isDefined(idSignature)) {\n      throw new Error('Signature of the id (idSignature) is required')\n    }\n\n    if (!isDefined(pubKeyIdSignature)) {\n      throw new Error('Signature of (publicKey + idSignature) is required')\n    }\n\n    if (!isDefined(type)) {\n      throw new Error('Identity type is required')\n    }\n\n    if (!isDefined(provider)) {\n      throw new Error('Identity provider is required')\n    }\n\n    this._id = id\n    this._publicKey = publicKey\n    this._signatures = Object.assign({}, { id: idSignature }, { publicKey: pubKeyIdSignature })\n    this._type = type\n    this._provider = provider\n  }\n\n  /**\n  * This is only used as a fallback to the clock id when necessary\n  * @return {string} public key hex encoded\n  */\n  get id () {\n    return this._id\n  }\n\n  get publicKey () {\n    return this._publicKey\n  }\n\n  get signatures () {\n    return this._signatures\n  }\n\n  get type () {\n    return this._type\n  }\n\n  get provider () {\n    return this._provider\n  }\n\n  toJSON () {\n    return {\n      id: this.id,\n      publicKey: this.publicKey,\n      signatures: this.signatures,\n      type: this.type\n    }\n  }\n\n  static isIdentity (identity) {\n    return identity.id !== undefined &&\n           identity.publicKey !== undefined &&\n           identity.signatures !== undefined &&\n           identity.signatures.id !== undefined &&\n           identity.signatures.publicKey !== undefined &&\n           identity.type !== undefined\n  }\n\n  static toJSON (identity) {\n    return {\n      id: identity.id,\n      publicKey: identity.publicKey,\n      signatures: identity.signatures,\n      type: identity.type\n    }\n  }\n}\n\nmodule.exports = Identity\n"],"mappings":"AAAA;;;;;;AACA,IAAMA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAzB;;IAEMC,Q;EACJ,kBAAaC,EAAb,EAAiBC,SAAjB,EAA4BC,WAA5B,EAAyCC,iBAAzC,EAA4DC,IAA5D,EAAkEC,QAAlE,EAA4E;IAAA;;IAC1E,IAAI,CAACR,SAAS,CAACG,EAAD,CAAd,EAAoB;MAClB,MAAM,IAAIM,KAAJ,CAAU,yBAAV,CAAN;IACD;;IAED,IAAI,CAACT,SAAS,CAACI,SAAD,CAAd,EAA2B;MACzB,MAAM,IAAIK,KAAJ,CAAU,oBAAV,CAAN;IACD;;IAED,IAAI,CAACT,SAAS,CAACK,WAAD,CAAd,EAA6B;MAC3B,MAAM,IAAII,KAAJ,CAAU,+CAAV,CAAN;IACD;;IAED,IAAI,CAACT,SAAS,CAACM,iBAAD,CAAd,EAAmC;MACjC,MAAM,IAAIG,KAAJ,CAAU,oDAAV,CAAN;IACD;;IAED,IAAI,CAACT,SAAS,CAACO,IAAD,CAAd,EAAsB;MACpB,MAAM,IAAIE,KAAJ,CAAU,2BAAV,CAAN;IACD;;IAED,IAAI,CAACT,SAAS,CAACQ,QAAD,CAAd,EAA0B;MACxB,MAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;IACD;;IAED,KAAKC,GAAL,GAAWP,EAAX;IACA,KAAKQ,UAAL,GAAkBP,SAAlB;IACA,KAAKQ,WAAL,GAAmBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;MAAEX,EAAE,EAAEE;IAAN,CAAlB,EAAuC;MAAED,SAAS,EAAEE;IAAb,CAAvC,CAAnB;IACA,KAAKS,KAAL,GAAaR,IAAb;IACA,KAAKS,SAAL,GAAiBR,QAAjB;EACD;EAED;AACF;AACA;AACA;;;;;SACE,eAAU;MACR,OAAO,KAAKE,GAAZ;IACD;;;SAED,eAAiB;MACf,OAAO,KAAKC,UAAZ;IACD;;;SAED,eAAkB;MAChB,OAAO,KAAKC,WAAZ;IACD;;;SAED,eAAY;MACV,OAAO,KAAKG,KAAZ;IACD;;;SAED,eAAgB;MACd,OAAO,KAAKC,SAAZ;IACD;;;WAED,kBAAU;MACR,OAAO;QACLb,EAAE,EAAE,KAAKA,EADJ;QAELC,SAAS,EAAE,KAAKA,SAFX;QAGLa,UAAU,EAAE,KAAKA,UAHZ;QAILV,IAAI,EAAE,KAAKA;MAJN,CAAP;IAMD;;;WAED,oBAAmBW,QAAnB,EAA6B;MAC3B,OAAOA,QAAQ,CAACf,EAAT,KAAgBgB,SAAhB,IACAD,QAAQ,CAACd,SAAT,KAAuBe,SADvB,IAEAD,QAAQ,CAACD,UAAT,KAAwBE,SAFxB,IAGAD,QAAQ,CAACD,UAAT,CAAoBd,EAApB,KAA2BgB,SAH3B,IAIAD,QAAQ,CAACD,UAAT,CAAoBb,SAApB,KAAkCe,SAJlC,IAKAD,QAAQ,CAACX,IAAT,KAAkBY,SALzB;IAMD;;;WAED,gBAAeD,QAAf,EAAyB;MACvB,OAAO;QACLf,EAAE,EAAEe,QAAQ,CAACf,EADR;QAELC,SAAS,EAAEc,QAAQ,CAACd,SAFf;QAGLa,UAAU,EAAEC,QAAQ,CAACD,UAHhB;QAILV,IAAI,EAAEW,QAAQ,CAACX;MAJV,CAAP;IAMD;;;;;;AAGHa,MAAM,CAACC,OAAP,GAAiBnB,QAAjB"},"metadata":{},"sourceType":"script"}
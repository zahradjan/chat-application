{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _createForOfIteratorHelper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _toConsumableArray = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _assertThisInitialized = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _inherits = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _wrapNativeSuper = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\n\nvar indentString = require('indent-string');\n\nvar cleanStack = require('clean-stack');\n\nvar cleanInternalStack = function cleanInternalStack(stack) {\n  return stack.replace(/\\s+at .*aggregate-error\\/index.js:\\d+:\\d+\\)?/g, '');\n};\n\nvar AggregateError = /*#__PURE__*/function (_Error, _Symbol$iterator) {\n  _inherits(AggregateError, _Error);\n\n  var _super = _createSuper(AggregateError);\n\n  function AggregateError(errors) {\n    var _this;\n\n    _classCallCheck(this, AggregateError);\n\n    if (!Array.isArray(errors)) {\n      throw new TypeError(\"Expected input to be an Array, got \".concat(typeof errors));\n    }\n\n    errors = _toConsumableArray(errors).map(function (error) {\n      if (error instanceof Error) {\n        return error;\n      }\n\n      if (error !== null && typeof error === 'object') {\n        // Handle plain error objects with message property and/or possibly other metadata\n        return Object.assign(new Error(error.message), error);\n      }\n\n      return new Error(error);\n    });\n    var message = errors.map(function (error) {\n      // The `stack` property is not standardized, so we can't assume it exists\n      return typeof error.stack === 'string' ? cleanInternalStack(cleanStack(error.stack)) : String(error);\n    }).join('\\n');\n    message = '\\n' + indentString(message, 4);\n    _this = _super.call(this, message);\n    _this.name = 'AggregateError';\n    Object.defineProperty(_assertThisInitialized(_this), '_errors', {\n      value: errors\n    });\n    return _this;\n  }\n\n  _createClass(AggregateError, [{\n    key: _Symbol$iterator,\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function value() {\n      var _iterator, _step, error;\n\n      return _regeneratorRuntime().wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iterator = _createForOfIteratorHelper(this._errors);\n              _context.prev = 1;\n\n              _iterator.s();\n\n            case 3:\n              if ((_step = _iterator.n()).done) {\n                _context.next = 9;\n                break;\n              }\n\n              error = _step.value;\n              _context.next = 7;\n              return error;\n\n            case 7:\n              _context.next = 3;\n              break;\n\n            case 9:\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n\n              _iterator.e(_context.t0);\n\n            case 14:\n              _context.prev = 14;\n\n              _iterator.f();\n\n              return _context.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this, [[1, 11, 14, 17]]);\n    })\n  }]);\n\n  return AggregateError;\n}( /*#__PURE__*/_wrapNativeSuper(Error), Symbol.iterator);\n\nmodule.exports = AggregateError;","map":{"version":3,"names":["indentString","require","cleanStack","cleanInternalStack","stack","replace","AggregateError","errors","Array","isArray","TypeError","map","error","Error","Object","assign","message","String","join","name","defineProperty","value","_errors","Symbol","iterator","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/aggregate-error/index.js"],"sourcesContent":["'use strict';\nconst indentString = require('indent-string');\nconst cleanStack = require('clean-stack');\n\nconst cleanInternalStack = stack => stack.replace(/\\s+at .*aggregate-error\\/index.js:\\d+:\\d+\\)?/g, '');\n\nclass AggregateError extends Error {\n\tconstructor(errors) {\n\t\tif (!Array.isArray(errors)) {\n\t\t\tthrow new TypeError(`Expected input to be an Array, got ${typeof errors}`);\n\t\t}\n\n\t\terrors = [...errors].map(error => {\n\t\t\tif (error instanceof Error) {\n\t\t\t\treturn error;\n\t\t\t}\n\n\t\t\tif (error !== null && typeof error === 'object') {\n\t\t\t\t// Handle plain error objects with message property and/or possibly other metadata\n\t\t\t\treturn Object.assign(new Error(error.message), error);\n\t\t\t}\n\n\t\t\treturn new Error(error);\n\t\t});\n\n\t\tlet message = errors\n\t\t\t.map(error => {\n\t\t\t\t// The `stack` property is not standardized, so we can't assume it exists\n\t\t\t\treturn typeof error.stack === 'string' ? cleanInternalStack(cleanStack(error.stack)) : String(error);\n\t\t\t})\n\t\t\t.join('\\n');\n\t\tmessage = '\\n' + indentString(message, 4);\n\t\tsuper(message);\n\n\t\tthis.name = 'AggregateError';\n\n\t\tObject.defineProperty(this, '_errors', {value: errors});\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const error of this._errors) {\n\t\t\tyield error;\n\t\t}\n\t}\n}\n\nmodule.exports = AggregateError;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;AACA,IAAMA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA5B;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AAEA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK;EAAA,OAAIA,KAAK,CAACC,OAAN,CAAc,+CAAd,EAA+D,EAA/D,CAAJ;AAAA,CAAhC;;IAEMC,c;;;;;EACL,wBAAYC,MAAZ,EAAoB;IAAA;;IAAA;;IACnB,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAL,EAA4B;MAC3B,MAAM,IAAIG,SAAJ,8CAAoD,OAAOH,MAA3D,EAAN;IACA;;IAEDA,MAAM,GAAG,mBAAIA,MAAJ,EAAYI,GAAZ,CAAgB,UAAAC,KAAK,EAAI;MACjC,IAAIA,KAAK,YAAYC,KAArB,EAA4B;QAC3B,OAAOD,KAAP;MACA;;MAED,IAAIA,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,QAAvC,EAAiD;QAChD;QACA,OAAOE,MAAM,CAACC,MAAP,CAAc,IAAIF,KAAJ,CAAUD,KAAK,CAACI,OAAhB,CAAd,EAAwCJ,KAAxC,CAAP;MACA;;MAED,OAAO,IAAIC,KAAJ,CAAUD,KAAV,CAAP;IACA,CAXQ,CAAT;IAaA,IAAII,OAAO,GAAGT,MAAM,CAClBI,GADY,CACR,UAAAC,KAAK,EAAI;MACb;MACA,OAAO,OAAOA,KAAK,CAACR,KAAb,KAAuB,QAAvB,GAAkCD,kBAAkB,CAACD,UAAU,CAACU,KAAK,CAACR,KAAP,CAAX,CAApD,GAAgFa,MAAM,CAACL,KAAD,CAA7F;IACA,CAJY,EAKZM,IALY,CAKP,IALO,CAAd;IAMAF,OAAO,GAAG,OAAOhB,YAAY,CAACgB,OAAD,EAAU,CAAV,CAA7B;IACA,0BAAMA,OAAN;IAEA,MAAKG,IAAL,GAAY,gBAAZ;IAEAL,MAAM,CAACM,cAAP,gCAA4B,SAA5B,EAAuC;MAACC,KAAK,EAAEd;IAAR,CAAvC;IA7BmB;EA8BnB;;;;mDAED;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA,uCACqB,KAAKe,OAD1B;cAAA;;cAAA;;YAAA;cAAA;gBAAA;gBAAA;cAAA;;cACYV,KADZ;cAAA;cAEE,OAAMA,KAAN;;YAFF;cAAA;cAAA;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;cAAA;;YAAA;cAAA;;cAAA;;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,C;;;;iCAjC4BC,K,GAiCzBU,MAAM,CAACC,Q;;AAOXC,MAAM,CAACC,OAAP,GAAiBpB,cAAjB"},"metadata":{},"sourceType":"script"}
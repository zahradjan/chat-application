{"ast":null,"code":"/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\"); // Common aliases\n\n\nvar $Reader = $protobuf.Reader,\n    $Writer = $protobuf.Writer,\n    $util = $protobuf.util; // Exported root namespace\n\nvar $root = $protobuf.roots[\"libp2p-peer-id\"] || ($protobuf.roots[\"libp2p-peer-id\"] = {});\n\n$root.PeerIdProto = function () {\n  /**\n   * Properties of a PeerIdProto.\n   * @exports IPeerIdProto\n   * @interface IPeerIdProto\n   * @property {Uint8Array} id PeerIdProto id\n   * @property {Uint8Array|null} [pubKey] PeerIdProto pubKey\n   * @property {Uint8Array|null} [privKey] PeerIdProto privKey\n   */\n\n  /**\n   * Constructs a new PeerIdProto.\n   * @exports PeerIdProto\n   * @classdesc Represents a PeerIdProto.\n   * @implements IPeerIdProto\n   * @constructor\n   * @param {IPeerIdProto=} [p] Properties to set\n   */\n  function PeerIdProto(p) {\n    if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) {\n      if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n    }\n  }\n  /**\n   * PeerIdProto id.\n   * @member {Uint8Array} id\n   * @memberof PeerIdProto\n   * @instance\n   */\n\n\n  PeerIdProto.prototype.id = $util.newBuffer([]);\n  /**\n   * PeerIdProto pubKey.\n   * @member {Uint8Array} pubKey\n   * @memberof PeerIdProto\n   * @instance\n   */\n\n  PeerIdProto.prototype.pubKey = $util.newBuffer([]);\n  /**\n   * PeerIdProto privKey.\n   * @member {Uint8Array} privKey\n   * @memberof PeerIdProto\n   * @instance\n   */\n\n  PeerIdProto.prototype.privKey = $util.newBuffer([]);\n  /**\n   * Encodes the specified PeerIdProto message. Does not implicitly {@link PeerIdProto.verify|verify} messages.\n   * @function encode\n   * @memberof PeerIdProto\n   * @static\n   * @param {IPeerIdProto} m PeerIdProto message or plain object to encode\n   * @param {$protobuf.Writer} [w] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n  PeerIdProto.encode = function encode(m, w) {\n    if (!w) w = $Writer.create();\n    w.uint32(10).bytes(m.id);\n    if (m.pubKey != null && Object.hasOwnProperty.call(m, \"pubKey\")) w.uint32(18).bytes(m.pubKey);\n    if (m.privKey != null && Object.hasOwnProperty.call(m, \"privKey\")) w.uint32(26).bytes(m.privKey);\n    return w;\n  };\n  /**\n   * Decodes a PeerIdProto message from the specified reader or buffer.\n   * @function decode\n   * @memberof PeerIdProto\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n   * @param {number} [l] Message length if known beforehand\n   * @returns {PeerIdProto} PeerIdProto\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  PeerIdProto.decode = function decode(r, l) {\n    if (!(r instanceof $Reader)) r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l,\n        m = new $root.PeerIdProto();\n\n    while (r.pos < c) {\n      var t = r.uint32();\n\n      switch (t >>> 3) {\n        case 1:\n          m.id = r.bytes();\n          break;\n\n        case 2:\n          m.pubKey = r.bytes();\n          break;\n\n        case 3:\n          m.privKey = r.bytes();\n          break;\n\n        default:\n          r.skipType(t & 7);\n          break;\n      }\n    }\n\n    if (!m.hasOwnProperty(\"id\")) throw $util.ProtocolError(\"missing required 'id'\", {\n      instance: m\n    });\n    return m;\n  };\n  /**\n   * Creates a PeerIdProto message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof PeerIdProto\n   * @static\n   * @param {Object.<string,*>} d Plain object\n   * @returns {PeerIdProto} PeerIdProto\n   */\n\n\n  PeerIdProto.fromObject = function fromObject(d) {\n    if (d instanceof $root.PeerIdProto) return d;\n    var m = new $root.PeerIdProto();\n\n    if (d.id != null) {\n      if (typeof d.id === \"string\") $util.base64.decode(d.id, m.id = $util.newBuffer($util.base64.length(d.id)), 0);else if (d.id.length) m.id = d.id;\n    }\n\n    if (d.pubKey != null) {\n      if (typeof d.pubKey === \"string\") $util.base64.decode(d.pubKey, m.pubKey = $util.newBuffer($util.base64.length(d.pubKey)), 0);else if (d.pubKey.length) m.pubKey = d.pubKey;\n    }\n\n    if (d.privKey != null) {\n      if (typeof d.privKey === \"string\") $util.base64.decode(d.privKey, m.privKey = $util.newBuffer($util.base64.length(d.privKey)), 0);else if (d.privKey.length) m.privKey = d.privKey;\n    }\n\n    return m;\n  };\n  /**\n   * Creates a plain object from a PeerIdProto message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof PeerIdProto\n   * @static\n   * @param {PeerIdProto} m PeerIdProto\n   * @param {$protobuf.IConversionOptions} [o] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  PeerIdProto.toObject = function toObject(m, o) {\n    if (!o) o = {};\n    var d = {};\n\n    if (o.defaults) {\n      if (o.bytes === String) d.id = \"\";else {\n        d.id = [];\n        if (o.bytes !== Array) d.id = $util.newBuffer(d.id);\n      }\n      if (o.bytes === String) d.pubKey = \"\";else {\n        d.pubKey = [];\n        if (o.bytes !== Array) d.pubKey = $util.newBuffer(d.pubKey);\n      }\n      if (o.bytes === String) d.privKey = \"\";else {\n        d.privKey = [];\n        if (o.bytes !== Array) d.privKey = $util.newBuffer(d.privKey);\n      }\n    }\n\n    if (m.id != null && m.hasOwnProperty(\"id\")) {\n      d.id = o.bytes === String ? $util.base64.encode(m.id, 0, m.id.length) : o.bytes === Array ? Array.prototype.slice.call(m.id) : m.id;\n    }\n\n    if (m.pubKey != null && m.hasOwnProperty(\"pubKey\")) {\n      d.pubKey = o.bytes === String ? $util.base64.encode(m.pubKey, 0, m.pubKey.length) : o.bytes === Array ? Array.prototype.slice.call(m.pubKey) : m.pubKey;\n    }\n\n    if (m.privKey != null && m.hasOwnProperty(\"privKey\")) {\n      d.privKey = o.bytes === String ? $util.base64.encode(m.privKey, 0, m.privKey.length) : o.bytes === Array ? Array.prototype.slice.call(m.privKey) : m.privKey;\n    }\n\n    return d;\n  };\n  /**\n   * Converts this PeerIdProto to JSON.\n   * @function toJSON\n   * @memberof PeerIdProto\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  PeerIdProto.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return PeerIdProto;\n}();\n\nmodule.exports = $root;","map":{"version":3,"names":["$protobuf","require","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","PeerIdProto","p","ks","Object","keys","i","length","prototype","id","newBuffer","pubKey","privKey","encode","m","w","create","uint32","bytes","hasOwnProperty","call","decode","r","l","c","undefined","len","pos","t","skipType","ProtocolError","instance","fromObject","d","base64","toObject","o","defaults","String","Array","slice","toJSON","constructor","toJSONOptions","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/peer-id/src/proto.js"],"sourcesContent":["/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"libp2p-peer-id\"] || ($protobuf.roots[\"libp2p-peer-id\"] = {});\n\n$root.PeerIdProto = (function() {\n\n    /**\n     * Properties of a PeerIdProto.\n     * @exports IPeerIdProto\n     * @interface IPeerIdProto\n     * @property {Uint8Array} id PeerIdProto id\n     * @property {Uint8Array|null} [pubKey] PeerIdProto pubKey\n     * @property {Uint8Array|null} [privKey] PeerIdProto privKey\n     */\n\n    /**\n     * Constructs a new PeerIdProto.\n     * @exports PeerIdProto\n     * @classdesc Represents a PeerIdProto.\n     * @implements IPeerIdProto\n     * @constructor\n     * @param {IPeerIdProto=} [p] Properties to set\n     */\n    function PeerIdProto(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * PeerIdProto id.\n     * @member {Uint8Array} id\n     * @memberof PeerIdProto\n     * @instance\n     */\n    PeerIdProto.prototype.id = $util.newBuffer([]);\n\n    /**\n     * PeerIdProto pubKey.\n     * @member {Uint8Array} pubKey\n     * @memberof PeerIdProto\n     * @instance\n     */\n    PeerIdProto.prototype.pubKey = $util.newBuffer([]);\n\n    /**\n     * PeerIdProto privKey.\n     * @member {Uint8Array} privKey\n     * @memberof PeerIdProto\n     * @instance\n     */\n    PeerIdProto.prototype.privKey = $util.newBuffer([]);\n\n    /**\n     * Encodes the specified PeerIdProto message. Does not implicitly {@link PeerIdProto.verify|verify} messages.\n     * @function encode\n     * @memberof PeerIdProto\n     * @static\n     * @param {IPeerIdProto} m PeerIdProto message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    PeerIdProto.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(10).bytes(m.id);\n        if (m.pubKey != null && Object.hasOwnProperty.call(m, \"pubKey\"))\n            w.uint32(18).bytes(m.pubKey);\n        if (m.privKey != null && Object.hasOwnProperty.call(m, \"privKey\"))\n            w.uint32(26).bytes(m.privKey);\n        return w;\n    };\n\n    /**\n     * Decodes a PeerIdProto message from the specified reader or buffer.\n     * @function decode\n     * @memberof PeerIdProto\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {PeerIdProto} PeerIdProto\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    PeerIdProto.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.PeerIdProto();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.id = r.bytes();\n                break;\n            case 2:\n                m.pubKey = r.bytes();\n                break;\n            case 3:\n                m.privKey = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"id\"))\n            throw $util.ProtocolError(\"missing required 'id'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates a PeerIdProto message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof PeerIdProto\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {PeerIdProto} PeerIdProto\n     */\n    PeerIdProto.fromObject = function fromObject(d) {\n        if (d instanceof $root.PeerIdProto)\n            return d;\n        var m = new $root.PeerIdProto();\n        if (d.id != null) {\n            if (typeof d.id === \"string\")\n                $util.base64.decode(d.id, m.id = $util.newBuffer($util.base64.length(d.id)), 0);\n            else if (d.id.length)\n                m.id = d.id;\n        }\n        if (d.pubKey != null) {\n            if (typeof d.pubKey === \"string\")\n                $util.base64.decode(d.pubKey, m.pubKey = $util.newBuffer($util.base64.length(d.pubKey)), 0);\n            else if (d.pubKey.length)\n                m.pubKey = d.pubKey;\n        }\n        if (d.privKey != null) {\n            if (typeof d.privKey === \"string\")\n                $util.base64.decode(d.privKey, m.privKey = $util.newBuffer($util.base64.length(d.privKey)), 0);\n            else if (d.privKey.length)\n                m.privKey = d.privKey;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a PeerIdProto message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof PeerIdProto\n     * @static\n     * @param {PeerIdProto} m PeerIdProto\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    PeerIdProto.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.id = \"\";\n            else {\n                d.id = [];\n                if (o.bytes !== Array)\n                    d.id = $util.newBuffer(d.id);\n            }\n            if (o.bytes === String)\n                d.pubKey = \"\";\n            else {\n                d.pubKey = [];\n                if (o.bytes !== Array)\n                    d.pubKey = $util.newBuffer(d.pubKey);\n            }\n            if (o.bytes === String)\n                d.privKey = \"\";\n            else {\n                d.privKey = [];\n                if (o.bytes !== Array)\n                    d.privKey = $util.newBuffer(d.privKey);\n            }\n        }\n        if (m.id != null && m.hasOwnProperty(\"id\")) {\n            d.id = o.bytes === String ? $util.base64.encode(m.id, 0, m.id.length) : o.bytes === Array ? Array.prototype.slice.call(m.id) : m.id;\n        }\n        if (m.pubKey != null && m.hasOwnProperty(\"pubKey\")) {\n            d.pubKey = o.bytes === String ? $util.base64.encode(m.pubKey, 0, m.pubKey.length) : o.bytes === Array ? Array.prototype.slice.call(m.pubKey) : m.pubKey;\n        }\n        if (m.privKey != null && m.hasOwnProperty(\"privKey\")) {\n            d.privKey = o.bytes === String ? $util.base64.encode(m.privKey, 0, m.privKey.length) : o.bytes === Array ? Array.prototype.slice.call(m.privKey) : m.privKey;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this PeerIdProto to JSON.\n     * @function toJSON\n     * @memberof PeerIdProto\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    PeerIdProto.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return PeerIdProto;\n})();\n\nmodule.exports = $root;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
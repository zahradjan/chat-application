{"ast":null,"code":"'use strict'; // @ts-ignore is-loopback-addr does not publish types\n\nconst isLoopbackAddr = require('is-loopback-addr');\n/**\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * Check if a given multiaddr is a loopback address.\n *\n * @param {Multiaddr} ma\n * @returns {boolean}\n */\n\n\nfunction isLoopback(ma) {\n  const {\n    address\n  } = ma.nodeAddress();\n  return isLoopbackAddr(address);\n}\n\nmodule.exports = isLoopback;","map":{"version":3,"names":["isLoopbackAddr","require","isLoopback","ma","address","nodeAddress","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/libp2p-utils/src/multiaddr/is-loopback.js"],"sourcesContent":["'use strict'\n\n// @ts-ignore is-loopback-addr does not publish types\nconst isLoopbackAddr = require('is-loopback-addr')\n\n/**\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * Check if a given multiaddr is a loopback address.\n *\n * @param {Multiaddr} ma\n * @returns {boolean}\n */\nfunction isLoopback (ma) {\n  const { address } = ma.nodeAddress()\n\n  return isLoopbackAddr(address)\n}\n\nmodule.exports = isLoopback\n"],"mappings":"AAAA,a,CAEA;;AACA,MAAMA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA9B;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,UAAT,CAAqBC,EAArB,EAAyB;EACvB,MAAM;IAAEC;EAAF,IAAcD,EAAE,CAACE,WAAH,EAApB;EAEA,OAAOL,cAAc,CAACI,OAAD,CAArB;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBL,UAAjB"},"metadata":{},"sourceType":"script"}
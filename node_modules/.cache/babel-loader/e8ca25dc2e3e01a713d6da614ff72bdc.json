{"ast":null,"code":"/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\"); // Common aliases\n\n\nvar $Reader = $protobuf.Reader,\n    $Writer = $protobuf.Writer,\n    $util = $protobuf.util; // Exported root namespace\n\nvar $root = $protobuf.roots[\"ipfs-ipns\"] || ($protobuf.roots[\"ipfs-ipns\"] = {});\n\n$root.IpnsEntry = function () {\n  /**\n   * Properties of an IpnsEntry.\n   * @exports IIpnsEntry\n   * @interface IIpnsEntry\n   * @property {Uint8Array|null} [value] IpnsEntry value\n   * @property {Uint8Array|null} [signature] IpnsEntry signature\n   * @property {IpnsEntry.ValidityType|null} [validityType] IpnsEntry validityType\n   * @property {Uint8Array|null} [validity] IpnsEntry validity\n   * @property {number|Long|null} [sequence] IpnsEntry sequence\n   * @property {number|Long|null} [ttl] IpnsEntry ttl\n   * @property {Uint8Array|null} [pubKey] IpnsEntry pubKey\n   * @property {Uint8Array|null} [signatureV2] IpnsEntry signatureV2\n   * @property {Uint8Array|null} [data] IpnsEntry data\n   */\n\n  /**\n   * Constructs a new IpnsEntry.\n   * @exports IpnsEntry\n   * @classdesc Represents an IpnsEntry.\n   * @implements IIpnsEntry\n   * @constructor\n   * @param {IIpnsEntry=} [p] Properties to set\n   */\n  function IpnsEntry(p) {\n    if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n  }\n  /**\n   * IpnsEntry value.\n   * @member {Uint8Array} value\n   * @memberof IpnsEntry\n   * @instance\n   */\n\n\n  IpnsEntry.prototype.value = $util.newBuffer([]);\n  /**\n   * IpnsEntry signature.\n   * @member {Uint8Array} signature\n   * @memberof IpnsEntry\n   * @instance\n   */\n\n  IpnsEntry.prototype.signature = $util.newBuffer([]);\n  /**\n   * IpnsEntry validityType.\n   * @member {IpnsEntry.ValidityType} validityType\n   * @memberof IpnsEntry\n   * @instance\n   */\n\n  IpnsEntry.prototype.validityType = 0;\n  /**\n   * IpnsEntry validity.\n   * @member {Uint8Array} validity\n   * @memberof IpnsEntry\n   * @instance\n   */\n\n  IpnsEntry.prototype.validity = $util.newBuffer([]);\n  /**\n   * IpnsEntry sequence.\n   * @member {number|Long} sequence\n   * @memberof IpnsEntry\n   * @instance\n   */\n\n  IpnsEntry.prototype.sequence = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * IpnsEntry ttl.\n   * @member {number|Long} ttl\n   * @memberof IpnsEntry\n   * @instance\n   */\n\n  IpnsEntry.prototype.ttl = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * IpnsEntry pubKey.\n   * @member {Uint8Array} pubKey\n   * @memberof IpnsEntry\n   * @instance\n   */\n\n  IpnsEntry.prototype.pubKey = $util.newBuffer([]);\n  /**\n   * IpnsEntry signatureV2.\n   * @member {Uint8Array} signatureV2\n   * @memberof IpnsEntry\n   * @instance\n   */\n\n  IpnsEntry.prototype.signatureV2 = $util.newBuffer([]);\n  /**\n   * IpnsEntry data.\n   * @member {Uint8Array} data\n   * @memberof IpnsEntry\n   * @instance\n   */\n\n  IpnsEntry.prototype.data = $util.newBuffer([]);\n  /**\n   * Encodes the specified IpnsEntry message. Does not implicitly {@link IpnsEntry.verify|verify} messages.\n   * @function encode\n   * @memberof IpnsEntry\n   * @static\n   * @param {IIpnsEntry} m IpnsEntry message or plain object to encode\n   * @param {$protobuf.Writer} [w] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n  IpnsEntry.encode = function encode(m, w) {\n    if (!w) w = $Writer.create();\n    if (m.value != null && Object.hasOwnProperty.call(m, \"value\")) w.uint32(10).bytes(m.value);\n    if (m.signature != null && Object.hasOwnProperty.call(m, \"signature\")) w.uint32(18).bytes(m.signature);\n    if (m.validityType != null && Object.hasOwnProperty.call(m, \"validityType\")) w.uint32(24).int32(m.validityType);\n    if (m.validity != null && Object.hasOwnProperty.call(m, \"validity\")) w.uint32(34).bytes(m.validity);\n    if (m.sequence != null && Object.hasOwnProperty.call(m, \"sequence\")) w.uint32(40).uint64(m.sequence);\n    if (m.ttl != null && Object.hasOwnProperty.call(m, \"ttl\")) w.uint32(48).uint64(m.ttl);\n    if (m.pubKey != null && Object.hasOwnProperty.call(m, \"pubKey\")) w.uint32(58).bytes(m.pubKey);\n    if (m.signatureV2 != null && Object.hasOwnProperty.call(m, \"signatureV2\")) w.uint32(66).bytes(m.signatureV2);\n    if (m.data != null && Object.hasOwnProperty.call(m, \"data\")) w.uint32(74).bytes(m.data);\n    return w;\n  };\n  /**\n   * Decodes an IpnsEntry message from the specified reader or buffer.\n   * @function decode\n   * @memberof IpnsEntry\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n   * @param {number} [l] Message length if known beforehand\n   * @returns {IpnsEntry} IpnsEntry\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  IpnsEntry.decode = function decode(r, l) {\n    if (!(r instanceof $Reader)) r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l,\n        m = new $root.IpnsEntry();\n\n    while (r.pos < c) {\n      var t = r.uint32();\n\n      switch (t >>> 3) {\n        case 1:\n          m.value = r.bytes();\n          break;\n\n        case 2:\n          m.signature = r.bytes();\n          break;\n\n        case 3:\n          m.validityType = r.int32();\n          break;\n\n        case 4:\n          m.validity = r.bytes();\n          break;\n\n        case 5:\n          m.sequence = r.uint64();\n          break;\n\n        case 6:\n          m.ttl = r.uint64();\n          break;\n\n        case 7:\n          m.pubKey = r.bytes();\n          break;\n\n        case 8:\n          m.signatureV2 = r.bytes();\n          break;\n\n        case 9:\n          m.data = r.bytes();\n          break;\n\n        default:\n          r.skipType(t & 7);\n          break;\n      }\n    }\n\n    return m;\n  };\n  /**\n   * Creates an IpnsEntry message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof IpnsEntry\n   * @static\n   * @param {Object.<string,*>} d Plain object\n   * @returns {IpnsEntry} IpnsEntry\n   */\n\n\n  IpnsEntry.fromObject = function fromObject(d) {\n    if (d instanceof $root.IpnsEntry) return d;\n    var m = new $root.IpnsEntry();\n\n    if (d.value != null) {\n      if (typeof d.value === \"string\") $util.base64.decode(d.value, m.value = $util.newBuffer($util.base64.length(d.value)), 0);else if (d.value.length) m.value = d.value;\n    }\n\n    if (d.signature != null) {\n      if (typeof d.signature === \"string\") $util.base64.decode(d.signature, m.signature = $util.newBuffer($util.base64.length(d.signature)), 0);else if (d.signature.length) m.signature = d.signature;\n    }\n\n    switch (d.validityType) {\n      case \"EOL\":\n      case 0:\n        m.validityType = 0;\n        break;\n    }\n\n    if (d.validity != null) {\n      if (typeof d.validity === \"string\") $util.base64.decode(d.validity, m.validity = $util.newBuffer($util.base64.length(d.validity)), 0);else if (d.validity.length) m.validity = d.validity;\n    }\n\n    if (d.sequence != null) {\n      if ($util.Long) (m.sequence = $util.Long.fromValue(d.sequence)).unsigned = true;else if (typeof d.sequence === \"string\") m.sequence = parseInt(d.sequence, 10);else if (typeof d.sequence === \"number\") m.sequence = d.sequence;else if (typeof d.sequence === \"object\") m.sequence = new $util.LongBits(d.sequence.low >>> 0, d.sequence.high >>> 0).toNumber(true);\n    }\n\n    if (d.ttl != null) {\n      if ($util.Long) (m.ttl = $util.Long.fromValue(d.ttl)).unsigned = true;else if (typeof d.ttl === \"string\") m.ttl = parseInt(d.ttl, 10);else if (typeof d.ttl === \"number\") m.ttl = d.ttl;else if (typeof d.ttl === \"object\") m.ttl = new $util.LongBits(d.ttl.low >>> 0, d.ttl.high >>> 0).toNumber(true);\n    }\n\n    if (d.pubKey != null) {\n      if (typeof d.pubKey === \"string\") $util.base64.decode(d.pubKey, m.pubKey = $util.newBuffer($util.base64.length(d.pubKey)), 0);else if (d.pubKey.length) m.pubKey = d.pubKey;\n    }\n\n    if (d.signatureV2 != null) {\n      if (typeof d.signatureV2 === \"string\") $util.base64.decode(d.signatureV2, m.signatureV2 = $util.newBuffer($util.base64.length(d.signatureV2)), 0);else if (d.signatureV2.length) m.signatureV2 = d.signatureV2;\n    }\n\n    if (d.data != null) {\n      if (typeof d.data === \"string\") $util.base64.decode(d.data, m.data = $util.newBuffer($util.base64.length(d.data)), 0);else if (d.data.length) m.data = d.data;\n    }\n\n    return m;\n  };\n  /**\n   * Creates a plain object from an IpnsEntry message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof IpnsEntry\n   * @static\n   * @param {IpnsEntry} m IpnsEntry\n   * @param {$protobuf.IConversionOptions} [o] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  IpnsEntry.toObject = function toObject(m, o) {\n    if (!o) o = {};\n    var d = {};\n\n    if (o.defaults) {\n      if (o.bytes === String) d.value = \"\";else {\n        d.value = [];\n        if (o.bytes !== Array) d.value = $util.newBuffer(d.value);\n      }\n      if (o.bytes === String) d.signature = \"\";else {\n        d.signature = [];\n        if (o.bytes !== Array) d.signature = $util.newBuffer(d.signature);\n      }\n      d.validityType = o.enums === String ? \"EOL\" : 0;\n      if (o.bytes === String) d.validity = \"\";else {\n        d.validity = [];\n        if (o.bytes !== Array) d.validity = $util.newBuffer(d.validity);\n      }\n\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.sequence = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else d.sequence = o.longs === String ? \"0\" : 0;\n\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.ttl = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else d.ttl = o.longs === String ? \"0\" : 0;\n\n      if (o.bytes === String) d.pubKey = \"\";else {\n        d.pubKey = [];\n        if (o.bytes !== Array) d.pubKey = $util.newBuffer(d.pubKey);\n      }\n      if (o.bytes === String) d.signatureV2 = \"\";else {\n        d.signatureV2 = [];\n        if (o.bytes !== Array) d.signatureV2 = $util.newBuffer(d.signatureV2);\n      }\n      if (o.bytes === String) d.data = \"\";else {\n        d.data = [];\n        if (o.bytes !== Array) d.data = $util.newBuffer(d.data);\n      }\n    }\n\n    if (m.value != null && m.hasOwnProperty(\"value\")) {\n      d.value = o.bytes === String ? $util.base64.encode(m.value, 0, m.value.length) : o.bytes === Array ? Array.prototype.slice.call(m.value) : m.value;\n    }\n\n    if (m.signature != null && m.hasOwnProperty(\"signature\")) {\n      d.signature = o.bytes === String ? $util.base64.encode(m.signature, 0, m.signature.length) : o.bytes === Array ? Array.prototype.slice.call(m.signature) : m.signature;\n    }\n\n    if (m.validityType != null && m.hasOwnProperty(\"validityType\")) {\n      d.validityType = o.enums === String ? $root.IpnsEntry.ValidityType[m.validityType] : m.validityType;\n    }\n\n    if (m.validity != null && m.hasOwnProperty(\"validity\")) {\n      d.validity = o.bytes === String ? $util.base64.encode(m.validity, 0, m.validity.length) : o.bytes === Array ? Array.prototype.slice.call(m.validity) : m.validity;\n    }\n\n    if (m.sequence != null && m.hasOwnProperty(\"sequence\")) {\n      if (typeof m.sequence === \"number\") d.sequence = o.longs === String ? String(m.sequence) : m.sequence;else d.sequence = o.longs === String ? $util.Long.prototype.toString.call(m.sequence) : o.longs === Number ? new $util.LongBits(m.sequence.low >>> 0, m.sequence.high >>> 0).toNumber(true) : m.sequence;\n    }\n\n    if (m.ttl != null && m.hasOwnProperty(\"ttl\")) {\n      if (typeof m.ttl === \"number\") d.ttl = o.longs === String ? String(m.ttl) : m.ttl;else d.ttl = o.longs === String ? $util.Long.prototype.toString.call(m.ttl) : o.longs === Number ? new $util.LongBits(m.ttl.low >>> 0, m.ttl.high >>> 0).toNumber(true) : m.ttl;\n    }\n\n    if (m.pubKey != null && m.hasOwnProperty(\"pubKey\")) {\n      d.pubKey = o.bytes === String ? $util.base64.encode(m.pubKey, 0, m.pubKey.length) : o.bytes === Array ? Array.prototype.slice.call(m.pubKey) : m.pubKey;\n    }\n\n    if (m.signatureV2 != null && m.hasOwnProperty(\"signatureV2\")) {\n      d.signatureV2 = o.bytes === String ? $util.base64.encode(m.signatureV2, 0, m.signatureV2.length) : o.bytes === Array ? Array.prototype.slice.call(m.signatureV2) : m.signatureV2;\n    }\n\n    if (m.data != null && m.hasOwnProperty(\"data\")) {\n      d.data = o.bytes === String ? $util.base64.encode(m.data, 0, m.data.length) : o.bytes === Array ? Array.prototype.slice.call(m.data) : m.data;\n    }\n\n    return d;\n  };\n  /**\n   * Converts this IpnsEntry to JSON.\n   * @function toJSON\n   * @memberof IpnsEntry\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  IpnsEntry.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  /**\n   * ValidityType enum.\n   * @name IpnsEntry.ValidityType\n   * @enum {number}\n   * @property {number} EOL=0 EOL value\n   */\n\n\n  IpnsEntry.ValidityType = function () {\n    var valuesById = {},\n        values = Object.create(valuesById);\n    values[valuesById[0] = \"EOL\"] = 0;\n    return values;\n  }();\n\n  return IpnsEntry;\n}();\n\nmodule.exports = $root;","map":{"version":3,"names":["$protobuf","require","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","IpnsEntry","p","ks","Object","keys","i","length","prototype","value","newBuffer","signature","validityType","validity","sequence","Long","fromBits","ttl","pubKey","signatureV2","data","encode","m","w","create","hasOwnProperty","call","uint32","bytes","int32","uint64","decode","r","l","c","undefined","len","pos","t","skipType","fromObject","d","base64","fromValue","unsigned","parseInt","LongBits","low","high","toNumber","toObject","o","defaults","String","Array","enums","n","longs","toString","Number","slice","ValidityType","toJSON","constructor","toJSONOptions","valuesById","values","module","exports"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipns/src/pb/ipns.js"],"sourcesContent":["/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"ipfs-ipns\"] || ($protobuf.roots[\"ipfs-ipns\"] = {});\n\n$root.IpnsEntry = (function() {\n\n    /**\n     * Properties of an IpnsEntry.\n     * @exports IIpnsEntry\n     * @interface IIpnsEntry\n     * @property {Uint8Array|null} [value] IpnsEntry value\n     * @property {Uint8Array|null} [signature] IpnsEntry signature\n     * @property {IpnsEntry.ValidityType|null} [validityType] IpnsEntry validityType\n     * @property {Uint8Array|null} [validity] IpnsEntry validity\n     * @property {number|Long|null} [sequence] IpnsEntry sequence\n     * @property {number|Long|null} [ttl] IpnsEntry ttl\n     * @property {Uint8Array|null} [pubKey] IpnsEntry pubKey\n     * @property {Uint8Array|null} [signatureV2] IpnsEntry signatureV2\n     * @property {Uint8Array|null} [data] IpnsEntry data\n     */\n\n    /**\n     * Constructs a new IpnsEntry.\n     * @exports IpnsEntry\n     * @classdesc Represents an IpnsEntry.\n     * @implements IIpnsEntry\n     * @constructor\n     * @param {IIpnsEntry=} [p] Properties to set\n     */\n    function IpnsEntry(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * IpnsEntry value.\n     * @member {Uint8Array} value\n     * @memberof IpnsEntry\n     * @instance\n     */\n    IpnsEntry.prototype.value = $util.newBuffer([]);\n\n    /**\n     * IpnsEntry signature.\n     * @member {Uint8Array} signature\n     * @memberof IpnsEntry\n     * @instance\n     */\n    IpnsEntry.prototype.signature = $util.newBuffer([]);\n\n    /**\n     * IpnsEntry validityType.\n     * @member {IpnsEntry.ValidityType} validityType\n     * @memberof IpnsEntry\n     * @instance\n     */\n    IpnsEntry.prototype.validityType = 0;\n\n    /**\n     * IpnsEntry validity.\n     * @member {Uint8Array} validity\n     * @memberof IpnsEntry\n     * @instance\n     */\n    IpnsEntry.prototype.validity = $util.newBuffer([]);\n\n    /**\n     * IpnsEntry sequence.\n     * @member {number|Long} sequence\n     * @memberof IpnsEntry\n     * @instance\n     */\n    IpnsEntry.prototype.sequence = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * IpnsEntry ttl.\n     * @member {number|Long} ttl\n     * @memberof IpnsEntry\n     * @instance\n     */\n    IpnsEntry.prototype.ttl = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * IpnsEntry pubKey.\n     * @member {Uint8Array} pubKey\n     * @memberof IpnsEntry\n     * @instance\n     */\n    IpnsEntry.prototype.pubKey = $util.newBuffer([]);\n\n    /**\n     * IpnsEntry signatureV2.\n     * @member {Uint8Array} signatureV2\n     * @memberof IpnsEntry\n     * @instance\n     */\n    IpnsEntry.prototype.signatureV2 = $util.newBuffer([]);\n\n    /**\n     * IpnsEntry data.\n     * @member {Uint8Array} data\n     * @memberof IpnsEntry\n     * @instance\n     */\n    IpnsEntry.prototype.data = $util.newBuffer([]);\n\n    /**\n     * Encodes the specified IpnsEntry message. Does not implicitly {@link IpnsEntry.verify|verify} messages.\n     * @function encode\n     * @memberof IpnsEntry\n     * @static\n     * @param {IIpnsEntry} m IpnsEntry message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    IpnsEntry.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.value != null && Object.hasOwnProperty.call(m, \"value\"))\n            w.uint32(10).bytes(m.value);\n        if (m.signature != null && Object.hasOwnProperty.call(m, \"signature\"))\n            w.uint32(18).bytes(m.signature);\n        if (m.validityType != null && Object.hasOwnProperty.call(m, \"validityType\"))\n            w.uint32(24).int32(m.validityType);\n        if (m.validity != null && Object.hasOwnProperty.call(m, \"validity\"))\n            w.uint32(34).bytes(m.validity);\n        if (m.sequence != null && Object.hasOwnProperty.call(m, \"sequence\"))\n            w.uint32(40).uint64(m.sequence);\n        if (m.ttl != null && Object.hasOwnProperty.call(m, \"ttl\"))\n            w.uint32(48).uint64(m.ttl);\n        if (m.pubKey != null && Object.hasOwnProperty.call(m, \"pubKey\"))\n            w.uint32(58).bytes(m.pubKey);\n        if (m.signatureV2 != null && Object.hasOwnProperty.call(m, \"signatureV2\"))\n            w.uint32(66).bytes(m.signatureV2);\n        if (m.data != null && Object.hasOwnProperty.call(m, \"data\"))\n            w.uint32(74).bytes(m.data);\n        return w;\n    };\n\n    /**\n     * Decodes an IpnsEntry message from the specified reader or buffer.\n     * @function decode\n     * @memberof IpnsEntry\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {IpnsEntry} IpnsEntry\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    IpnsEntry.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.IpnsEntry();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.value = r.bytes();\n                break;\n            case 2:\n                m.signature = r.bytes();\n                break;\n            case 3:\n                m.validityType = r.int32();\n                break;\n            case 4:\n                m.validity = r.bytes();\n                break;\n            case 5:\n                m.sequence = r.uint64();\n                break;\n            case 6:\n                m.ttl = r.uint64();\n                break;\n            case 7:\n                m.pubKey = r.bytes();\n                break;\n            case 8:\n                m.signatureV2 = r.bytes();\n                break;\n            case 9:\n                m.data = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates an IpnsEntry message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof IpnsEntry\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {IpnsEntry} IpnsEntry\n     */\n    IpnsEntry.fromObject = function fromObject(d) {\n        if (d instanceof $root.IpnsEntry)\n            return d;\n        var m = new $root.IpnsEntry();\n        if (d.value != null) {\n            if (typeof d.value === \"string\")\n                $util.base64.decode(d.value, m.value = $util.newBuffer($util.base64.length(d.value)), 0);\n            else if (d.value.length)\n                m.value = d.value;\n        }\n        if (d.signature != null) {\n            if (typeof d.signature === \"string\")\n                $util.base64.decode(d.signature, m.signature = $util.newBuffer($util.base64.length(d.signature)), 0);\n            else if (d.signature.length)\n                m.signature = d.signature;\n        }\n        switch (d.validityType) {\n        case \"EOL\":\n        case 0:\n            m.validityType = 0;\n            break;\n        }\n        if (d.validity != null) {\n            if (typeof d.validity === \"string\")\n                $util.base64.decode(d.validity, m.validity = $util.newBuffer($util.base64.length(d.validity)), 0);\n            else if (d.validity.length)\n                m.validity = d.validity;\n        }\n        if (d.sequence != null) {\n            if ($util.Long)\n                (m.sequence = $util.Long.fromValue(d.sequence)).unsigned = true;\n            else if (typeof d.sequence === \"string\")\n                m.sequence = parseInt(d.sequence, 10);\n            else if (typeof d.sequence === \"number\")\n                m.sequence = d.sequence;\n            else if (typeof d.sequence === \"object\")\n                m.sequence = new $util.LongBits(d.sequence.low >>> 0, d.sequence.high >>> 0).toNumber(true);\n        }\n        if (d.ttl != null) {\n            if ($util.Long)\n                (m.ttl = $util.Long.fromValue(d.ttl)).unsigned = true;\n            else if (typeof d.ttl === \"string\")\n                m.ttl = parseInt(d.ttl, 10);\n            else if (typeof d.ttl === \"number\")\n                m.ttl = d.ttl;\n            else if (typeof d.ttl === \"object\")\n                m.ttl = new $util.LongBits(d.ttl.low >>> 0, d.ttl.high >>> 0).toNumber(true);\n        }\n        if (d.pubKey != null) {\n            if (typeof d.pubKey === \"string\")\n                $util.base64.decode(d.pubKey, m.pubKey = $util.newBuffer($util.base64.length(d.pubKey)), 0);\n            else if (d.pubKey.length)\n                m.pubKey = d.pubKey;\n        }\n        if (d.signatureV2 != null) {\n            if (typeof d.signatureV2 === \"string\")\n                $util.base64.decode(d.signatureV2, m.signatureV2 = $util.newBuffer($util.base64.length(d.signatureV2)), 0);\n            else if (d.signatureV2.length)\n                m.signatureV2 = d.signatureV2;\n        }\n        if (d.data != null) {\n            if (typeof d.data === \"string\")\n                $util.base64.decode(d.data, m.data = $util.newBuffer($util.base64.length(d.data)), 0);\n            else if (d.data.length)\n                m.data = d.data;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an IpnsEntry message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof IpnsEntry\n     * @static\n     * @param {IpnsEntry} m IpnsEntry\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    IpnsEntry.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.value = \"\";\n            else {\n                d.value = [];\n                if (o.bytes !== Array)\n                    d.value = $util.newBuffer(d.value);\n            }\n            if (o.bytes === String)\n                d.signature = \"\";\n            else {\n                d.signature = [];\n                if (o.bytes !== Array)\n                    d.signature = $util.newBuffer(d.signature);\n            }\n            d.validityType = o.enums === String ? \"EOL\" : 0;\n            if (o.bytes === String)\n                d.validity = \"\";\n            else {\n                d.validity = [];\n                if (o.bytes !== Array)\n                    d.validity = $util.newBuffer(d.validity);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.sequence = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.sequence = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.ttl = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.ttl = o.longs === String ? \"0\" : 0;\n            if (o.bytes === String)\n                d.pubKey = \"\";\n            else {\n                d.pubKey = [];\n                if (o.bytes !== Array)\n                    d.pubKey = $util.newBuffer(d.pubKey);\n            }\n            if (o.bytes === String)\n                d.signatureV2 = \"\";\n            else {\n                d.signatureV2 = [];\n                if (o.bytes !== Array)\n                    d.signatureV2 = $util.newBuffer(d.signatureV2);\n            }\n            if (o.bytes === String)\n                d.data = \"\";\n            else {\n                d.data = [];\n                if (o.bytes !== Array)\n                    d.data = $util.newBuffer(d.data);\n            }\n        }\n        if (m.value != null && m.hasOwnProperty(\"value\")) {\n            d.value = o.bytes === String ? $util.base64.encode(m.value, 0, m.value.length) : o.bytes === Array ? Array.prototype.slice.call(m.value) : m.value;\n        }\n        if (m.signature != null && m.hasOwnProperty(\"signature\")) {\n            d.signature = o.bytes === String ? $util.base64.encode(m.signature, 0, m.signature.length) : o.bytes === Array ? Array.prototype.slice.call(m.signature) : m.signature;\n        }\n        if (m.validityType != null && m.hasOwnProperty(\"validityType\")) {\n            d.validityType = o.enums === String ? $root.IpnsEntry.ValidityType[m.validityType] : m.validityType;\n        }\n        if (m.validity != null && m.hasOwnProperty(\"validity\")) {\n            d.validity = o.bytes === String ? $util.base64.encode(m.validity, 0, m.validity.length) : o.bytes === Array ? Array.prototype.slice.call(m.validity) : m.validity;\n        }\n        if (m.sequence != null && m.hasOwnProperty(\"sequence\")) {\n            if (typeof m.sequence === \"number\")\n                d.sequence = o.longs === String ? String(m.sequence) : m.sequence;\n            else\n                d.sequence = o.longs === String ? $util.Long.prototype.toString.call(m.sequence) : o.longs === Number ? new $util.LongBits(m.sequence.low >>> 0, m.sequence.high >>> 0).toNumber(true) : m.sequence;\n        }\n        if (m.ttl != null && m.hasOwnProperty(\"ttl\")) {\n            if (typeof m.ttl === \"number\")\n                d.ttl = o.longs === String ? String(m.ttl) : m.ttl;\n            else\n                d.ttl = o.longs === String ? $util.Long.prototype.toString.call(m.ttl) : o.longs === Number ? new $util.LongBits(m.ttl.low >>> 0, m.ttl.high >>> 0).toNumber(true) : m.ttl;\n        }\n        if (m.pubKey != null && m.hasOwnProperty(\"pubKey\")) {\n            d.pubKey = o.bytes === String ? $util.base64.encode(m.pubKey, 0, m.pubKey.length) : o.bytes === Array ? Array.prototype.slice.call(m.pubKey) : m.pubKey;\n        }\n        if (m.signatureV2 != null && m.hasOwnProperty(\"signatureV2\")) {\n            d.signatureV2 = o.bytes === String ? $util.base64.encode(m.signatureV2, 0, m.signatureV2.length) : o.bytes === Array ? Array.prototype.slice.call(m.signatureV2) : m.signatureV2;\n        }\n        if (m.data != null && m.hasOwnProperty(\"data\")) {\n            d.data = o.bytes === String ? $util.base64.encode(m.data, 0, m.data.length) : o.bytes === Array ? Array.prototype.slice.call(m.data) : m.data;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this IpnsEntry to JSON.\n     * @function toJSON\n     * @memberof IpnsEntry\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    IpnsEntry.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * ValidityType enum.\n     * @name IpnsEntry.ValidityType\n     * @enum {number}\n     * @property {number} EOL=0 EOL value\n     */\n    IpnsEntry.ValidityType = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"EOL\"] = 0;\n        return values;\n    })();\n\n    return IpnsEntry;\n})();\n\nmodule.exports = $root;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
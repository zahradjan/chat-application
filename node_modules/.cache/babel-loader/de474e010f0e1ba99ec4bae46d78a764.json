{"ast":null,"code":"'use strict';\n\nvar varint = require('varint');\n\nvar svarint = require('signed-varint');\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar encoder = function encoder(type, encode, decode, encodingLength) {\n  encode.bytes = decode.bytes = 0;\n  return {\n    type: type,\n    encode: encode,\n    decode: decode,\n    encodingLength: encodingLength\n  };\n};\n\nexports.make = encoder;\n\nexports.bytes = function () {\n  var bufferLength = function bufferLength(val) {\n    return Buffer.isBuffer(val) ? val.length : Buffer.byteLength(val);\n  };\n\n  var encodingLength = function encodingLength(val) {\n    var len = bufferLength(val);\n    return varint.encodingLength(len) + len;\n  };\n\n  var encode = function encode(val, buffer, offset) {\n    var oldOffset = offset;\n    var len = bufferLength(val);\n    varint.encode(len, buffer, offset);\n    offset += varint.encode.bytes;\n    if (val instanceof Uint8Array) buffer.set(val, offset);else buffer.write(val, offset, len);\n    offset += len;\n    encode.bytes = offset - oldOffset;\n    return buffer;\n  };\n\n  var decode = function decode(buffer, offset) {\n    var oldOffset = offset;\n    var len = varint.decode(buffer, offset);\n    offset += varint.decode.bytes;\n    var val = buffer.slice(offset, offset + len);\n    offset += val.length;\n    decode.bytes = offset - oldOffset;\n    return val;\n  };\n\n  return encoder(2, encode, decode, encodingLength);\n}();\n\nexports.string = function () {\n  var encodingLength = function encodingLength(val) {\n    var len = Buffer.byteLength(val);\n    return varint.encodingLength(len) + len;\n  };\n\n  var encode = function encode(val, buffer, offset) {\n    var oldOffset = offset;\n    var len = Buffer.byteLength(val);\n    varint.encode(len, buffer, offset, 'utf-8');\n    offset += varint.encode.bytes;\n    buffer.write(val, offset, len);\n    offset += len;\n    encode.bytes = offset - oldOffset;\n    return buffer;\n  };\n\n  var decode = function decode(buffer, offset) {\n    var oldOffset = offset;\n    var len = varint.decode(buffer, offset);\n    offset += varint.decode.bytes;\n    var val = buffer.toString('utf-8', offset, offset + len);\n    offset += len;\n    decode.bytes = offset - oldOffset;\n    return val;\n  };\n\n  return encoder(2, encode, decode, encodingLength);\n}();\n\nexports.bool = function () {\n  var encodingLength = function encodingLength(val) {\n    return 1;\n  };\n\n  var encode = function encode(val, buffer, offset) {\n    buffer[offset] = val ? 1 : 0;\n    encode.bytes = 1;\n    return buffer;\n  };\n\n  var decode = function decode(buffer, offset) {\n    var bool = buffer[offset] > 0;\n    decode.bytes = 1;\n    return bool;\n  };\n\n  return encoder(0, encode, decode, encodingLength);\n}();\n\nexports.int32 = function () {\n  var decode = function decode(buffer, offset) {\n    var val = varint.decode(buffer, offset);\n    decode.bytes = varint.decode.bytes;\n    return val > 2147483647 ? val - 4294967296 : val;\n  };\n\n  var encode = function encode(val, buffer, offset) {\n    varint.encode(val < 0 ? val + 4294967296 : val, buffer, offset);\n    encode.bytes = varint.encode.bytes;\n    return buffer;\n  };\n\n  var encodingLength = function encodingLength(val) {\n    return varint.encodingLength(val < 0 ? val + 4294967296 : val);\n  };\n\n  return encoder(0, encode, decode, encodingLength);\n}();\n\nexports.int64 = function () {\n  var decode = function decode(buffer, offset) {\n    var val = varint.decode(buffer, offset);\n\n    if (val >= Math.pow(2, 63)) {\n      var limit = 9;\n\n      while (buffer[offset + limit - 1] === 0xff) {\n        limit--;\n      }\n\n      limit = limit || 9;\n      var subset = Buffer.allocUnsafe(limit);\n      buffer.copy(subset, 0, offset, offset + limit);\n      subset[limit - 1] = subset[limit - 1] & 0x7f;\n      val = -1 * varint.decode(subset, 0);\n      decode.bytes = 10;\n    } else {\n      decode.bytes = varint.decode.bytes;\n    }\n\n    return val;\n  };\n\n  var encode = function encode(val, buffer, offset) {\n    if (val < 0) {\n      var last = offset + 9;\n      varint.encode(val * -1, buffer, offset);\n      offset += varint.encode.bytes - 1;\n      buffer[offset] = buffer[offset] | 0x80;\n\n      while (offset < last - 1) {\n        offset++;\n        buffer[offset] = 0xff;\n      }\n\n      buffer[last] = 0x01;\n      encode.bytes = 10;\n    } else {\n      varint.encode(val, buffer, offset);\n      encode.bytes = varint.encode.bytes;\n    }\n\n    return buffer;\n  };\n\n  var encodingLength = function encodingLength(val) {\n    return val < 0 ? 10 : varint.encodingLength(val);\n  };\n\n  return encoder(0, encode, decode, encodingLength);\n}();\n\nexports.sint32 = exports.sint64 = function () {\n  return encoder(0, svarint.encode, svarint.decode, svarint.encodingLength);\n}();\n\nexports.uint32 = exports.uint64 = exports.enum = exports.varint = function () {\n  return encoder(0, varint.encode, varint.decode, varint.encodingLength);\n}(); // we cannot represent these in javascript so we just use buffers\n\n\nexports.fixed64 = exports.sfixed64 = function () {\n  var encodingLength = function encodingLength(val) {\n    return 8;\n  };\n\n  var encode = function encode(val, buffer, offset) {\n    buffer.set(val, offset);\n    encode.bytes = 8;\n    return buffer;\n  };\n\n  var decode = function decode(buffer, offset) {\n    var val = buffer.slice(offset, offset + 8);\n    decode.bytes = 8;\n    return val;\n  };\n\n  return encoder(1, encode, decode, encodingLength);\n}();\n\nexports.double = function () {\n  var encodingLength = function encodingLength(val) {\n    return 8;\n  };\n\n  var encode = function encode(val, buffer, offset) {\n    buffer.writeDoubleLE(val, offset);\n    encode.bytes = 8;\n    return buffer;\n  };\n\n  var decode = function decode(buffer, offset) {\n    var val = buffer.readDoubleLE(offset);\n    decode.bytes = 8;\n    return val;\n  };\n\n  return encoder(1, encode, decode, encodingLength);\n}();\n\nexports.fixed32 = function () {\n  var encodingLength = function encodingLength(val) {\n    return 4;\n  };\n\n  var encode = function encode(val, buffer, offset) {\n    buffer.writeUInt32LE(val, offset);\n    encode.bytes = 4;\n    return buffer;\n  };\n\n  var decode = function decode(buffer, offset) {\n    var val = buffer.readUInt32LE(offset);\n    decode.bytes = 4;\n    return val;\n  };\n\n  return encoder(5, encode, decode, encodingLength);\n}();\n\nexports.sfixed32 = function () {\n  var encodingLength = function encodingLength(val) {\n    return 4;\n  };\n\n  var encode = function encode(val, buffer, offset) {\n    buffer.writeInt32LE(val, offset);\n    encode.bytes = 4;\n    return buffer;\n  };\n\n  var decode = function decode(buffer, offset) {\n    var val = buffer.readInt32LE(offset);\n    decode.bytes = 4;\n    return val;\n  };\n\n  return encoder(5, encode, decode, encodingLength);\n}();\n\nexports.float = function () {\n  var encodingLength = function encodingLength(val) {\n    return 4;\n  };\n\n  var encode = function encode(val, buffer, offset) {\n    buffer.writeFloatLE(val, offset);\n    encode.bytes = 4;\n    return buffer;\n  };\n\n  var decode = function decode(buffer, offset) {\n    var val = buffer.readFloatLE(offset);\n    decode.bytes = 4;\n    return val;\n  };\n\n  return encoder(5, encode, decode, encodingLength);\n}();","map":{"version":3,"names":["varint","require","svarint","Buffer","encoder","type","encode","decode","encodingLength","bytes","exports","make","bufferLength","val","isBuffer","length","byteLength","len","buffer","offset","oldOffset","Uint8Array","set","write","slice","string","toString","bool","int32","int64","Math","pow","limit","subset","allocUnsafe","copy","last","sint32","sint64","uint32","uint64","enum","fixed64","sfixed64","double","writeDoubleLE","readDoubleLE","fixed32","writeUInt32LE","readUInt32LE","sfixed32","writeInt32LE","readInt32LE","float","writeFloatLE","readFloatLE"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/protons/src/compile/encodings.js"],"sourcesContent":["'use strict'\n\nvar varint = require('varint')\nvar svarint = require('signed-varint')\nconst { Buffer } = require('buffer')\n\nvar encoder = function (type, encode, decode, encodingLength) {\n  encode.bytes = decode.bytes = 0\n\n  return {\n    type: type,\n    encode: encode,\n    decode: decode,\n    encodingLength: encodingLength\n  }\n}\n\nexports.make = encoder\n\nexports.bytes = (function () {\n  var bufferLength = function (val) {\n    return Buffer.isBuffer(val) ? val.length : Buffer.byteLength(val)\n  }\n\n  var encodingLength = function (val) {\n    var len = bufferLength(val)\n    return varint.encodingLength(len) + len\n  }\n\n  var encode = function (val, buffer, offset) {\n    var oldOffset = offset\n    var len = bufferLength(val)\n\n    varint.encode(len, buffer, offset)\n    offset += varint.encode.bytes\n\n    if (val instanceof Uint8Array) buffer.set(val, offset)\n    else buffer.write(val, offset, len)\n    offset += len\n\n    encode.bytes = offset - oldOffset\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var oldOffset = offset\n\n    var len = varint.decode(buffer, offset)\n    offset += varint.decode.bytes\n\n    var val = buffer.slice(offset, offset + len)\n    offset += val.length\n\n    decode.bytes = offset - oldOffset\n    return val\n  }\n\n  return encoder(2, encode, decode, encodingLength)\n})()\n\nexports.string = (function () {\n  var encodingLength = function (val) {\n    var len = Buffer.byteLength(val)\n    return varint.encodingLength(len) + len\n  }\n\n  var encode = function (val, buffer, offset) {\n    var oldOffset = offset\n    var len = Buffer.byteLength(val)\n\n    varint.encode(len, buffer, offset, 'utf-8')\n    offset += varint.encode.bytes\n\n    buffer.write(val, offset, len)\n    offset += len\n\n    encode.bytes = offset - oldOffset\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var oldOffset = offset\n\n    var len = varint.decode(buffer, offset)\n    offset += varint.decode.bytes\n\n    var val = buffer.toString('utf-8', offset, offset + len)\n    offset += len\n\n    decode.bytes = offset - oldOffset\n    return val\n  }\n\n  return encoder(2, encode, decode, encodingLength)\n})()\n\nexports.bool = (function () {\n  var encodingLength = function (val) {\n    return 1\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer[offset] = val ? 1 : 0\n    encode.bytes = 1\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var bool = buffer[offset] > 0\n    decode.bytes = 1\n    return bool\n  }\n\n  return encoder(0, encode, decode, encodingLength)\n})()\n\nexports.int32 = (function () {\n  var decode = function (buffer, offset) {\n    var val = varint.decode(buffer, offset)\n    decode.bytes = varint.decode.bytes\n    return val > 2147483647 ? val - 4294967296 : val\n  }\n\n  var encode = function (val, buffer, offset) {\n    varint.encode(val < 0 ? val + 4294967296 : val, buffer, offset)\n    encode.bytes = varint.encode.bytes\n    return buffer\n  }\n\n  var encodingLength = function (val) {\n    return varint.encodingLength(val < 0 ? val + 4294967296 : val)\n  }\n\n  return encoder(0, encode, decode, encodingLength)\n})()\n\nexports.int64 = (function () {\n  var decode = function (buffer, offset) {\n    var val = varint.decode(buffer, offset)\n    if (val >= Math.pow(2, 63)) {\n      var limit = 9\n      while (buffer[offset + limit - 1] === 0xff) limit--\n      limit = limit || 9\n      var subset = Buffer.allocUnsafe(limit)\n      buffer.copy(subset, 0, offset, offset + limit)\n      subset[limit - 1] = subset[limit - 1] & 0x7f\n      val = -1 * varint.decode(subset, 0)\n      decode.bytes = 10\n    } else {\n      decode.bytes = varint.decode.bytes\n    }\n    return val\n  }\n\n  var encode = function (val, buffer, offset) {\n    if (val < 0) {\n      var last = offset + 9\n      varint.encode(val * -1, buffer, offset)\n      offset += varint.encode.bytes - 1\n      buffer[offset] = buffer[offset] | 0x80\n      while (offset < last - 1) {\n        offset++\n        buffer[offset] = 0xff\n      }\n      buffer[last] = 0x01\n      encode.bytes = 10\n    } else {\n      varint.encode(val, buffer, offset)\n      encode.bytes = varint.encode.bytes\n    }\n    return buffer\n  }\n\n  var encodingLength = function (val) {\n    return val < 0 ? 10 : varint.encodingLength(val)\n  }\n\n  return encoder(0, encode, decode, encodingLength)\n})()\n\nexports.sint32 =\nexports.sint64 = (function () {\n  return encoder(0, svarint.encode, svarint.decode, svarint.encodingLength)\n})()\n\nexports.uint32 =\nexports.uint64 =\nexports.enum =\nexports.varint = (function () {\n  return encoder(0, varint.encode, varint.decode, varint.encodingLength)\n})()\n\n// we cannot represent these in javascript so we just use buffers\nexports.fixed64 =\nexports.sfixed64 = (function () {\n  var encodingLength = function (val) {\n    return 8\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.set(val, offset)\n    encode.bytes = 8\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.slice(offset, offset + 8)\n    decode.bytes = 8\n    return val\n  }\n\n  return encoder(1, encode, decode, encodingLength)\n})()\n\nexports.double = (function () {\n  var encodingLength = function (val) {\n    return 8\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeDoubleLE(val, offset)\n    encode.bytes = 8\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readDoubleLE(offset)\n    decode.bytes = 8\n    return val\n  }\n\n  return encoder(1, encode, decode, encodingLength)\n})()\n\nexports.fixed32 = (function () {\n  var encodingLength = function (val) {\n    return 4\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeUInt32LE(val, offset)\n    encode.bytes = 4\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readUInt32LE(offset)\n    decode.bytes = 4\n    return val\n  }\n\n  return encoder(5, encode, decode, encodingLength)\n})()\n\nexports.sfixed32 = (function () {\n  var encodingLength = function (val) {\n    return 4\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeInt32LE(val, offset)\n    encode.bytes = 4\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readInt32LE(offset)\n    decode.bytes = 4\n    return val\n  }\n\n  return encoder(5, encode, decode, encodingLength)\n})()\n\nexports.float = (function () {\n  var encodingLength = function (val) {\n    return 4\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeFloatLE(val, offset)\n    encode.bytes = 4\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readFloatLE(offset)\n    decode.bytes = 4\n    return val\n  }\n\n  return encoder(5, encode, decode, encodingLength)\n})()\n"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,eAAD,CAArB;;AACA,eAAmBA,OAAO,CAAC,QAAD,CAA1B;AAAA,IAAQE,MAAR,YAAQA,MAAR;;AAEA,IAAIC,OAAO,GAAG,SAAVA,OAAU,CAAUC,IAAV,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,cAAhC,EAAgD;EAC5DF,MAAM,CAACG,KAAP,GAAeF,MAAM,CAACE,KAAP,GAAe,CAA9B;EAEA,OAAO;IACLJ,IAAI,EAAEA,IADD;IAELC,MAAM,EAAEA,MAFH;IAGLC,MAAM,EAAEA,MAHH;IAILC,cAAc,EAAEA;EAJX,CAAP;AAMD,CATD;;AAWAE,OAAO,CAACC,IAAR,GAAeP,OAAf;;AAEAM,OAAO,CAACD,KAAR,GAAiB,YAAY;EAC3B,IAAIG,YAAY,GAAG,SAAfA,YAAe,CAAUC,GAAV,EAAe;IAChC,OAAOV,MAAM,CAACW,QAAP,CAAgBD,GAAhB,IAAuBA,GAAG,CAACE,MAA3B,GAAoCZ,MAAM,CAACa,UAAP,CAAkBH,GAAlB,CAA3C;EACD,CAFD;;EAIA,IAAIL,cAAc,GAAG,SAAjBA,cAAiB,CAAUK,GAAV,EAAe;IAClC,IAAII,GAAG,GAAGL,YAAY,CAACC,GAAD,CAAtB;IACA,OAAOb,MAAM,CAACQ,cAAP,CAAsBS,GAAtB,IAA6BA,GAApC;EACD,CAHD;;EAKA,IAAIX,MAAM,GAAG,SAATA,MAAS,CAAUO,GAAV,EAAeK,MAAf,EAAuBC,MAAvB,EAA+B;IAC1C,IAAIC,SAAS,GAAGD,MAAhB;IACA,IAAIF,GAAG,GAAGL,YAAY,CAACC,GAAD,CAAtB;IAEAb,MAAM,CAACM,MAAP,CAAcW,GAAd,EAAmBC,MAAnB,EAA2BC,MAA3B;IACAA,MAAM,IAAInB,MAAM,CAACM,MAAP,CAAcG,KAAxB;IAEA,IAAII,GAAG,YAAYQ,UAAnB,EAA+BH,MAAM,CAACI,GAAP,CAAWT,GAAX,EAAgBM,MAAhB,EAA/B,KACKD,MAAM,CAACK,KAAP,CAAaV,GAAb,EAAkBM,MAAlB,EAA0BF,GAA1B;IACLE,MAAM,IAAIF,GAAV;IAEAX,MAAM,CAACG,KAAP,GAAeU,MAAM,GAAGC,SAAxB;IACA,OAAOF,MAAP;EACD,CAbD;;EAeA,IAAIX,MAAM,GAAG,SAATA,MAAS,CAAUW,MAAV,EAAkBC,MAAlB,EAA0B;IACrC,IAAIC,SAAS,GAAGD,MAAhB;IAEA,IAAIF,GAAG,GAAGjB,MAAM,CAACO,MAAP,CAAcW,MAAd,EAAsBC,MAAtB,CAAV;IACAA,MAAM,IAAInB,MAAM,CAACO,MAAP,CAAcE,KAAxB;IAEA,IAAII,GAAG,GAAGK,MAAM,CAACM,KAAP,CAAaL,MAAb,EAAqBA,MAAM,GAAGF,GAA9B,CAAV;IACAE,MAAM,IAAIN,GAAG,CAACE,MAAd;IAEAR,MAAM,CAACE,KAAP,GAAeU,MAAM,GAAGC,SAAxB;IACA,OAAOP,GAAP;EACD,CAXD;;EAaA,OAAOT,OAAO,CAAC,CAAD,EAAIE,MAAJ,EAAYC,MAAZ,EAAoBC,cAApB,CAAd;AACD,CAvCe,EAAhB;;AAyCAE,OAAO,CAACe,MAAR,GAAkB,YAAY;EAC5B,IAAIjB,cAAc,GAAG,SAAjBA,cAAiB,CAAUK,GAAV,EAAe;IAClC,IAAII,GAAG,GAAGd,MAAM,CAACa,UAAP,CAAkBH,GAAlB,CAAV;IACA,OAAOb,MAAM,CAACQ,cAAP,CAAsBS,GAAtB,IAA6BA,GAApC;EACD,CAHD;;EAKA,IAAIX,MAAM,GAAG,SAATA,MAAS,CAAUO,GAAV,EAAeK,MAAf,EAAuBC,MAAvB,EAA+B;IAC1C,IAAIC,SAAS,GAAGD,MAAhB;IACA,IAAIF,GAAG,GAAGd,MAAM,CAACa,UAAP,CAAkBH,GAAlB,CAAV;IAEAb,MAAM,CAACM,MAAP,CAAcW,GAAd,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAmC,OAAnC;IACAA,MAAM,IAAInB,MAAM,CAACM,MAAP,CAAcG,KAAxB;IAEAS,MAAM,CAACK,KAAP,CAAaV,GAAb,EAAkBM,MAAlB,EAA0BF,GAA1B;IACAE,MAAM,IAAIF,GAAV;IAEAX,MAAM,CAACG,KAAP,GAAeU,MAAM,GAAGC,SAAxB;IACA,OAAOF,MAAP;EACD,CAZD;;EAcA,IAAIX,MAAM,GAAG,SAATA,MAAS,CAAUW,MAAV,EAAkBC,MAAlB,EAA0B;IACrC,IAAIC,SAAS,GAAGD,MAAhB;IAEA,IAAIF,GAAG,GAAGjB,MAAM,CAACO,MAAP,CAAcW,MAAd,EAAsBC,MAAtB,CAAV;IACAA,MAAM,IAAInB,MAAM,CAACO,MAAP,CAAcE,KAAxB;IAEA,IAAII,GAAG,GAAGK,MAAM,CAACQ,QAAP,CAAgB,OAAhB,EAAyBP,MAAzB,EAAiCA,MAAM,GAAGF,GAA1C,CAAV;IACAE,MAAM,IAAIF,GAAV;IAEAV,MAAM,CAACE,KAAP,GAAeU,MAAM,GAAGC,SAAxB;IACA,OAAOP,GAAP;EACD,CAXD;;EAaA,OAAOT,OAAO,CAAC,CAAD,EAAIE,MAAJ,EAAYC,MAAZ,EAAoBC,cAApB,CAAd;AACD,CAlCgB,EAAjB;;AAoCAE,OAAO,CAACiB,IAAR,GAAgB,YAAY;EAC1B,IAAInB,cAAc,GAAG,SAAjBA,cAAiB,CAAUK,GAAV,EAAe;IAClC,OAAO,CAAP;EACD,CAFD;;EAIA,IAAIP,MAAM,GAAG,SAATA,MAAS,CAAUO,GAAV,EAAeK,MAAf,EAAuBC,MAAvB,EAA+B;IAC1CD,MAAM,CAACC,MAAD,CAAN,GAAiBN,GAAG,GAAG,CAAH,GAAO,CAA3B;IACAP,MAAM,CAACG,KAAP,GAAe,CAAf;IACA,OAAOS,MAAP;EACD,CAJD;;EAMA,IAAIX,MAAM,GAAG,SAATA,MAAS,CAAUW,MAAV,EAAkBC,MAAlB,EAA0B;IACrC,IAAIQ,IAAI,GAAGT,MAAM,CAACC,MAAD,CAAN,GAAiB,CAA5B;IACAZ,MAAM,CAACE,KAAP,GAAe,CAAf;IACA,OAAOkB,IAAP;EACD,CAJD;;EAMA,OAAOvB,OAAO,CAAC,CAAD,EAAIE,MAAJ,EAAYC,MAAZ,EAAoBC,cAApB,CAAd;AACD,CAlBc,EAAf;;AAoBAE,OAAO,CAACkB,KAAR,GAAiB,YAAY;EAC3B,IAAIrB,MAAM,GAAG,SAATA,MAAS,CAAUW,MAAV,EAAkBC,MAAlB,EAA0B;IACrC,IAAIN,GAAG,GAAGb,MAAM,CAACO,MAAP,CAAcW,MAAd,EAAsBC,MAAtB,CAAV;IACAZ,MAAM,CAACE,KAAP,GAAeT,MAAM,CAACO,MAAP,CAAcE,KAA7B;IACA,OAAOI,GAAG,GAAG,UAAN,GAAmBA,GAAG,GAAG,UAAzB,GAAsCA,GAA7C;EACD,CAJD;;EAMA,IAAIP,MAAM,GAAG,SAATA,MAAS,CAAUO,GAAV,EAAeK,MAAf,EAAuBC,MAAvB,EAA+B;IAC1CnB,MAAM,CAACM,MAAP,CAAcO,GAAG,GAAG,CAAN,GAAUA,GAAG,GAAG,UAAhB,GAA6BA,GAA3C,EAAgDK,MAAhD,EAAwDC,MAAxD;IACAb,MAAM,CAACG,KAAP,GAAeT,MAAM,CAACM,MAAP,CAAcG,KAA7B;IACA,OAAOS,MAAP;EACD,CAJD;;EAMA,IAAIV,cAAc,GAAG,SAAjBA,cAAiB,CAAUK,GAAV,EAAe;IAClC,OAAOb,MAAM,CAACQ,cAAP,CAAsBK,GAAG,GAAG,CAAN,GAAUA,GAAG,GAAG,UAAhB,GAA6BA,GAAnD,CAAP;EACD,CAFD;;EAIA,OAAOT,OAAO,CAAC,CAAD,EAAIE,MAAJ,EAAYC,MAAZ,EAAoBC,cAApB,CAAd;AACD,CAlBe,EAAhB;;AAoBAE,OAAO,CAACmB,KAAR,GAAiB,YAAY;EAC3B,IAAItB,MAAM,GAAG,SAATA,MAAS,CAAUW,MAAV,EAAkBC,MAAlB,EAA0B;IACrC,IAAIN,GAAG,GAAGb,MAAM,CAACO,MAAP,CAAcW,MAAd,EAAsBC,MAAtB,CAAV;;IACA,IAAIN,GAAG,IAAIiB,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAAX,EAA4B;MAC1B,IAAIC,KAAK,GAAG,CAAZ;;MACA,OAAOd,MAAM,CAACC,MAAM,GAAGa,KAAT,GAAiB,CAAlB,CAAN,KAA+B,IAAtC;QAA4CA,KAAK;MAAjD;;MACAA,KAAK,GAAGA,KAAK,IAAI,CAAjB;MACA,IAAIC,MAAM,GAAG9B,MAAM,CAAC+B,WAAP,CAAmBF,KAAnB,CAAb;MACAd,MAAM,CAACiB,IAAP,CAAYF,MAAZ,EAAoB,CAApB,EAAuBd,MAAvB,EAA+BA,MAAM,GAAGa,KAAxC;MACAC,MAAM,CAACD,KAAK,GAAG,CAAT,CAAN,GAAoBC,MAAM,CAACD,KAAK,GAAG,CAAT,CAAN,GAAoB,IAAxC;MACAnB,GAAG,GAAG,CAAC,CAAD,GAAKb,MAAM,CAACO,MAAP,CAAc0B,MAAd,EAAsB,CAAtB,CAAX;MACA1B,MAAM,CAACE,KAAP,GAAe,EAAf;IACD,CATD,MASO;MACLF,MAAM,CAACE,KAAP,GAAeT,MAAM,CAACO,MAAP,CAAcE,KAA7B;IACD;;IACD,OAAOI,GAAP;EACD,CAfD;;EAiBA,IAAIP,MAAM,GAAG,SAATA,MAAS,CAAUO,GAAV,EAAeK,MAAf,EAAuBC,MAAvB,EAA+B;IAC1C,IAAIN,GAAG,GAAG,CAAV,EAAa;MACX,IAAIuB,IAAI,GAAGjB,MAAM,GAAG,CAApB;MACAnB,MAAM,CAACM,MAAP,CAAcO,GAAG,GAAG,CAAC,CAArB,EAAwBK,MAAxB,EAAgCC,MAAhC;MACAA,MAAM,IAAInB,MAAM,CAACM,MAAP,CAAcG,KAAd,GAAsB,CAAhC;MACAS,MAAM,CAACC,MAAD,CAAN,GAAiBD,MAAM,CAACC,MAAD,CAAN,GAAiB,IAAlC;;MACA,OAAOA,MAAM,GAAGiB,IAAI,GAAG,CAAvB,EAA0B;QACxBjB,MAAM;QACND,MAAM,CAACC,MAAD,CAAN,GAAiB,IAAjB;MACD;;MACDD,MAAM,CAACkB,IAAD,CAAN,GAAe,IAAf;MACA9B,MAAM,CAACG,KAAP,GAAe,EAAf;IACD,CAXD,MAWO;MACLT,MAAM,CAACM,MAAP,CAAcO,GAAd,EAAmBK,MAAnB,EAA2BC,MAA3B;MACAb,MAAM,CAACG,KAAP,GAAeT,MAAM,CAACM,MAAP,CAAcG,KAA7B;IACD;;IACD,OAAOS,MAAP;EACD,CAjBD;;EAmBA,IAAIV,cAAc,GAAG,SAAjBA,cAAiB,CAAUK,GAAV,EAAe;IAClC,OAAOA,GAAG,GAAG,CAAN,GAAU,EAAV,GAAeb,MAAM,CAACQ,cAAP,CAAsBK,GAAtB,CAAtB;EACD,CAFD;;EAIA,OAAOT,OAAO,CAAC,CAAD,EAAIE,MAAJ,EAAYC,MAAZ,EAAoBC,cAApB,CAAd;AACD,CA1Ce,EAAhB;;AA4CAE,OAAO,CAAC2B,MAAR,GACA3B,OAAO,CAAC4B,MAAR,GAAkB,YAAY;EAC5B,OAAOlC,OAAO,CAAC,CAAD,EAAIF,OAAO,CAACI,MAAZ,EAAoBJ,OAAO,CAACK,MAA5B,EAAoCL,OAAO,CAACM,cAA5C,CAAd;AACD,CAFgB,EADjB;;AAKAE,OAAO,CAAC6B,MAAR,GACA7B,OAAO,CAAC8B,MAAR,GACA9B,OAAO,CAAC+B,IAAR,GACA/B,OAAO,CAACV,MAAR,GAAkB,YAAY;EAC5B,OAAOI,OAAO,CAAC,CAAD,EAAIJ,MAAM,CAACM,MAAX,EAAmBN,MAAM,CAACO,MAA1B,EAAkCP,MAAM,CAACQ,cAAzC,CAAd;AACD,CAFgB,EAHjB,C,CAOA;;;AACAE,OAAO,CAACgC,OAAR,GACAhC,OAAO,CAACiC,QAAR,GAAoB,YAAY;EAC9B,IAAInC,cAAc,GAAG,SAAjBA,cAAiB,CAAUK,GAAV,EAAe;IAClC,OAAO,CAAP;EACD,CAFD;;EAIA,IAAIP,MAAM,GAAG,SAATA,MAAS,CAAUO,GAAV,EAAeK,MAAf,EAAuBC,MAAvB,EAA+B;IAC1CD,MAAM,CAACI,GAAP,CAAWT,GAAX,EAAgBM,MAAhB;IACAb,MAAM,CAACG,KAAP,GAAe,CAAf;IACA,OAAOS,MAAP;EACD,CAJD;;EAMA,IAAIX,MAAM,GAAG,SAATA,MAAS,CAAUW,MAAV,EAAkBC,MAAlB,EAA0B;IACrC,IAAIN,GAAG,GAAGK,MAAM,CAACM,KAAP,CAAaL,MAAb,EAAqBA,MAAM,GAAG,CAA9B,CAAV;IACAZ,MAAM,CAACE,KAAP,GAAe,CAAf;IACA,OAAOI,GAAP;EACD,CAJD;;EAMA,OAAOT,OAAO,CAAC,CAAD,EAAIE,MAAJ,EAAYC,MAAZ,EAAoBC,cAApB,CAAd;AACD,CAlBkB,EADnB;;AAqBAE,OAAO,CAACkC,MAAR,GAAkB,YAAY;EAC5B,IAAIpC,cAAc,GAAG,SAAjBA,cAAiB,CAAUK,GAAV,EAAe;IAClC,OAAO,CAAP;EACD,CAFD;;EAIA,IAAIP,MAAM,GAAG,SAATA,MAAS,CAAUO,GAAV,EAAeK,MAAf,EAAuBC,MAAvB,EAA+B;IAC1CD,MAAM,CAAC2B,aAAP,CAAqBhC,GAArB,EAA0BM,MAA1B;IACAb,MAAM,CAACG,KAAP,GAAe,CAAf;IACA,OAAOS,MAAP;EACD,CAJD;;EAMA,IAAIX,MAAM,GAAG,SAATA,MAAS,CAAUW,MAAV,EAAkBC,MAAlB,EAA0B;IACrC,IAAIN,GAAG,GAAGK,MAAM,CAAC4B,YAAP,CAAoB3B,MAApB,CAAV;IACAZ,MAAM,CAACE,KAAP,GAAe,CAAf;IACA,OAAOI,GAAP;EACD,CAJD;;EAMA,OAAOT,OAAO,CAAC,CAAD,EAAIE,MAAJ,EAAYC,MAAZ,EAAoBC,cAApB,CAAd;AACD,CAlBgB,EAAjB;;AAoBAE,OAAO,CAACqC,OAAR,GAAmB,YAAY;EAC7B,IAAIvC,cAAc,GAAG,SAAjBA,cAAiB,CAAUK,GAAV,EAAe;IAClC,OAAO,CAAP;EACD,CAFD;;EAIA,IAAIP,MAAM,GAAG,SAATA,MAAS,CAAUO,GAAV,EAAeK,MAAf,EAAuBC,MAAvB,EAA+B;IAC1CD,MAAM,CAAC8B,aAAP,CAAqBnC,GAArB,EAA0BM,MAA1B;IACAb,MAAM,CAACG,KAAP,GAAe,CAAf;IACA,OAAOS,MAAP;EACD,CAJD;;EAMA,IAAIX,MAAM,GAAG,SAATA,MAAS,CAAUW,MAAV,EAAkBC,MAAlB,EAA0B;IACrC,IAAIN,GAAG,GAAGK,MAAM,CAAC+B,YAAP,CAAoB9B,MAApB,CAAV;IACAZ,MAAM,CAACE,KAAP,GAAe,CAAf;IACA,OAAOI,GAAP;EACD,CAJD;;EAMA,OAAOT,OAAO,CAAC,CAAD,EAAIE,MAAJ,EAAYC,MAAZ,EAAoBC,cAApB,CAAd;AACD,CAlBiB,EAAlB;;AAoBAE,OAAO,CAACwC,QAAR,GAAoB,YAAY;EAC9B,IAAI1C,cAAc,GAAG,SAAjBA,cAAiB,CAAUK,GAAV,EAAe;IAClC,OAAO,CAAP;EACD,CAFD;;EAIA,IAAIP,MAAM,GAAG,SAATA,MAAS,CAAUO,GAAV,EAAeK,MAAf,EAAuBC,MAAvB,EAA+B;IAC1CD,MAAM,CAACiC,YAAP,CAAoBtC,GAApB,EAAyBM,MAAzB;IACAb,MAAM,CAACG,KAAP,GAAe,CAAf;IACA,OAAOS,MAAP;EACD,CAJD;;EAMA,IAAIX,MAAM,GAAG,SAATA,MAAS,CAAUW,MAAV,EAAkBC,MAAlB,EAA0B;IACrC,IAAIN,GAAG,GAAGK,MAAM,CAACkC,WAAP,CAAmBjC,MAAnB,CAAV;IACAZ,MAAM,CAACE,KAAP,GAAe,CAAf;IACA,OAAOI,GAAP;EACD,CAJD;;EAMA,OAAOT,OAAO,CAAC,CAAD,EAAIE,MAAJ,EAAYC,MAAZ,EAAoBC,cAApB,CAAd;AACD,CAlBkB,EAAnB;;AAoBAE,OAAO,CAAC2C,KAAR,GAAiB,YAAY;EAC3B,IAAI7C,cAAc,GAAG,SAAjBA,cAAiB,CAAUK,GAAV,EAAe;IAClC,OAAO,CAAP;EACD,CAFD;;EAIA,IAAIP,MAAM,GAAG,SAATA,MAAS,CAAUO,GAAV,EAAeK,MAAf,EAAuBC,MAAvB,EAA+B;IAC1CD,MAAM,CAACoC,YAAP,CAAoBzC,GAApB,EAAyBM,MAAzB;IACAb,MAAM,CAACG,KAAP,GAAe,CAAf;IACA,OAAOS,MAAP;EACD,CAJD;;EAMA,IAAIX,MAAM,GAAG,SAATA,MAAS,CAAUW,MAAV,EAAkBC,MAAlB,EAA0B;IACrC,IAAIN,GAAG,GAAGK,MAAM,CAACqC,WAAP,CAAmBpC,MAAnB,CAAV;IACAZ,MAAM,CAACE,KAAP,GAAe,CAAf;IACA,OAAOI,GAAP;EACD,CAJD;;EAMA,OAAOT,OAAO,CAAC,CAAD,EAAIE,MAAJ,EAAYC,MAAZ,EAAoBC,cAApB,CAAd;AACD,CAlBe,EAAhB"},"metadata":{},"sourceType":"script"}
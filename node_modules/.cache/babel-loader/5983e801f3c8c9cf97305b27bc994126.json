{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _wrapAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _awaitAsyncGenerator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nvar _asyncGeneratorDelegate = require(\"C:/Users/zajan/GitHub/chatApplication/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js\").default;\n\nvar _require = require('multiformats/cid'),\n    CID = _require.CID;\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {RepoAPI[\"gc\"]}\n   */\n  function gc() {\n    return _gc.apply(this, arguments);\n  }\n\n  function _gc() {\n    _gc = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return _awaitAsyncGenerator(api.post('repo/gc', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(options),\n                headers: options.headers,\n                transform: function transform(res) {\n                  return {\n                    err: res.Error ? new Error(res.Error) : null,\n                    cid: (res.Key || {})['/'] ? CID.parse(res.Key['/']) : null\n                  };\n                }\n              }));\n\n            case 3:\n              res = _context.sent;\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(res.ndjson()), _awaitAsyncGenerator), \"t0\", 5);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _gc.apply(this, arguments);\n  }\n\n  return gc;\n});","map":{"version":3,"names":["require","CID","configure","toUrlSearchParams","module","exports","api","gc","options","post","signal","searchParams","headers","transform","res","err","Error","cid","Key","parse","ndjson"],"sources":["C:/Users/zajan/GitHub/chatApplication/node_modules/ipfs-http-client/src/repo/gc.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RepoAPI[\"gc\"]}\n   */\n  async function * gc (options = {}) {\n    const res = await api.post('repo/gc', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: (res) => {\n        return {\n          err: res.Error ? new Error(res.Error) : null,\n          cid: (res.Key || {})['/'] ? CID.parse(res.Key['/']) : null\n        }\n      }\n    })\n\n    yield * res.ndjson()\n  }\n  return gc\n})\n"],"mappings":"AAAA;;;;;;;;;;;;AAEA,eAAgBA,OAAO,CAAC,kBAAD,CAAvB;AAAA,IAAQC,GAAR,YAAQA,GAAR;;AACA,IAAMC,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAI,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAChC;AACF;AACA;EAHkC,SAIfC,EAJe;IAAA;EAAA;;EAAA;IAAA,mEAIhC;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAqBC,OAArB,2DAA+B,EAA/B;cAAA;cAAA,4BACoBF,GAAG,CAACG,IAAJ,CAAS,SAAT,EAAoB;gBACpCC,MAAM,EAAEF,OAAO,CAACE,MADoB;gBAEpCC,YAAY,EAAER,iBAAiB,CAACK,OAAD,CAFK;gBAGpCI,OAAO,EAAEJ,OAAO,CAACI,OAHmB;gBAIpCC,SAAS,EAAE,mBAACC,GAAD,EAAS;kBAClB,OAAO;oBACLC,GAAG,EAAED,GAAG,CAACE,KAAJ,GAAY,IAAIA,KAAJ,CAAUF,GAAG,CAACE,KAAd,CAAZ,GAAmC,IADnC;oBAELC,GAAG,EAAE,CAACH,GAAG,CAACI,GAAJ,IAAW,EAAZ,EAAgB,GAAhB,IAAuBjB,GAAG,CAACkB,KAAJ,CAAUL,GAAG,CAACI,GAAJ,CAAQ,GAAR,CAAV,CAAvB,GAAiD;kBAFjD,CAAP;gBAID;cATmC,CAApB,CADpB;;YAAA;cACQJ,GADR;cAaE,qEAAQA,GAAG,CAACM,MAAJ,EAAR;;YAbF;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAJgC;IAAA;EAAA;;EAmBhC,OAAOb,EAAP;AACD,CApByB,CAA1B"},"metadata":{},"sourceType":"script"}
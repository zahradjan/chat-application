{"version":3,"file":"index.js","sources":["../src/ModalContext.ts","../src/ModalRoot.tsx","../src/ModalProvider.tsx","../src/useModal.ts"],"sourcesContent":["import * as React from \"react\";\n\n/**\n * Modals are represented as react components\n *\n * This is what gets passed to useModal as the first argument.\n */\nexport type ModalType = React.FunctionComponent<any>;\n\n/**\n * The shape of the modal context\n */\nexport interface ModalContextType {\n  showModal(key: string, component: ModalType): void;\n  hideModal(key: string): void;\n}\n\n/**\n * Throw error when ModalContext is used outside of context provider\n */\nconst invariantViolation = () => {\n  throw new Error(\n    \"Attempted to call useModal outside of modal context. Make sure your app is rendered inside ModalProvider.\"\n  );\n};\n\n/**\n * Modal Context Object\n */\nexport const ModalContext = React.createContext<ModalContextType>({\n  showModal: invariantViolation,\n  hideModal: invariantViolation\n});\nModalContext.displayName = 'ModalContext';\n","import { memo, useState, useEffect } from \"react\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { ModalType } from \"./ModalContext\";\n\n/**\n * Modal Root Props\n */\ninterface ModalRootProps {\n  /**\n   * Map of modal instances associated by unique ids\n   */\n  modals: Record<string, ModalType>;\n\n  /**\n   * Container component for modals\n   *\n   * Modals will be rendered as children of this component. React.Fragment is\n   * used by defualt, specifying a different component can change the way modals\n   * are rendered across the whole application.\n   */\n  component?: React.ComponentType<any>;\n\n  /**\n   * Specifies the root element to render modals into\n   */\n  container?: Element;\n}\n\n/**\n * Modal renderer props\n */\ninterface ModalRendererProps {\n  /**\n   * Functional component representing the modal\n   */\n  component: ModalType;\n}\n\n/**\n * Component responsible for rendering the modal.\n *\n * The identity of `Component` may change dependeing on the inputs passed to\n * `useModal`. If we simply rendered `<Component />` then the modal would be\n * susceptible to rerenders whenever one of the inputs change.\n */\nconst ModalRenderer = memo(({ component, ...rest }: ModalRendererProps) =>\n  component(rest)\n);\n\n/**\n * Modal Root\n *\n * Renders modals using react portal.\n */\nexport const ModalRoot = memo(\n  ({\n    modals,\n    container,\n    component: RootComponent = React.Fragment\n  }: ModalRootProps) => {\n    const [mountNode, setMountNode] = useState<Element | undefined>(undefined);\n\n    // This effect will not be ran in the server environment\n    useEffect(() => setMountNode(container || document.body));\n\n    return mountNode\n      ? ReactDOM.createPortal(\n          <RootComponent>\n            {Object.keys(modals).map(key => (\n              <ModalRenderer key={key} component={modals[key]} />\n            ))}\n          </RootComponent>,\n          mountNode\n        )\n      : null;\n  }\n);\n","import { useCallback, useState, useMemo } from \"react\";\nimport * as React from \"react\";\nimport { ModalType, ModalContext } from \"./ModalContext\";\nimport { ModalRoot } from \"./ModalRoot\";\n\n/**\n * Modal Provider Props\n */\nexport interface ModalProviderProps {\n  /**\n   * Specifies the root element to render modals into\n   */\n  container?: Element;\n\n  /**\n   * Container component for modal nodes\n   */\n  rootComponent?: React.ComponentType<any>;\n\n  /**\n   * Subtree that will receive modal context\n   */\n  children: React.ReactNode;\n}\n\n/**\n * Modal Provider\n *\n * Provides modal context and renders ModalRoot.\n */\nexport const ModalProvider = ({\n  container,\n  rootComponent,\n  children\n}: ModalProviderProps) => {\n  if (container && !(container instanceof HTMLElement)) {\n    throw new Error(`Container must specify DOM element to mount modal root into.\n\n    This behavior has changed in 3.0.0. Please use \\`rootComponent\\` prop instead.\n    See: https://github.com/mpontus/react-modal-hook/issues/18`);\n  }\n  const [modals, setModals] = useState<Record<string, ModalType>>({});\n  const showModal = useCallback(\n    (key: string, modal: ModalType) =>\n      setModals(modals => ({\n        ...modals,\n        [key]: modal\n      })),\n    []\n  );\n  const hideModal = useCallback(\n    (key: string) =>\n      setModals(modals => {\n        if (!modals[key]) {\n          return modals;\n        }\n        const newModals = { ...modals };\n        delete newModals[key];\n        return newModals;\n      }),\n    []\n  );\n  const contextValue = useMemo(() => ({ showModal, hideModal }), []);\n\n  return (\n    <ModalContext.Provider value={contextValue}>\n      <React.Fragment>\n        {children}\n        <ModalRoot\n          modals={modals}\n          component={rootComponent}\n          container={container}\n        />\n      </React.Fragment>\n    </ModalContext.Provider>\n  );\n};\n","import { useContext, useEffect, useState, useCallback, useMemo, DependencyList } from \"react\";\nimport { ModalContext, ModalType } from \"./ModalContext\";\n\n/**\n * Callback types provided for descriptive type-hints\n */\ntype ShowModal = () => void;\ntype HideModal = () => void;\n\n/**\n * Utility function to generate unique number per component instance\n */\nconst generateModalKey = (() => {\n  let count = 0;\n\n  return () => `${++count}`;\n})();\n\n/**\n * Check whether the argument is a stateless component.\n *\n * We take advantage of the stateless nature of functional components to be\n * inline the rendering of the modal component as part of another immutable\n * component.\n *\n * This is necessary for allowing the modal to update based on the inputs passed\n * as the second argument to useModal without unmounting the previous version of\n * the modal component.\n */\nconst isFunctionalComponent = (Component: Function) => {\n  const prototype = Component.prototype;\n\n  return !prototype || !prototype.isReactComponent;\n};\n\n/**\n * React hook for showing modal windows\n */\nexport const useModal = (\n  component: ModalType,\n  inputs: DependencyList = []\n): [ShowModal, HideModal] => {\n  if (!isFunctionalComponent(component)) {\n    throw new Error(\n      \"Only stateless components can be used as an argument to useModal. You have probably passed a class component where a function was expected.\"\n    );\n  }\n\n  const key = useMemo(generateModalKey, []);\n  const modal = useMemo(() => component, inputs);\n  const context = useContext(ModalContext);\n  const [isShown, setShown] = useState<boolean>(false);\n  const showModal = useCallback(() => setShown(true), []);\n  const hideModal = useCallback(() => setShown(false), []);\n\n  useEffect(() => {\n    if (isShown) {\n      context.showModal(key, modal);\n    } else {\n      context.hideModal(key);\n    }\n\n    // Hide modal when parent component unmounts\n    return () => context.hideModal(key);\n  }, [modal, isShown]);\n\n  return [showModal, hideModal];\n};\n"],"names":["React","memo","useState","useEffect","ReactDOM","useCallback","useMemo","useContext"],"mappings":"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"}
export var bitswap: {
    options: {
        validate: {
            options: {
                allowUnknown: boolean;
                stripUnknown: boolean;
            };
            query: any;
        };
    };
    handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
};
export var repo: {
    options: {
        validate: {
            options: {
                allowUnknown: boolean;
                stripUnknown: boolean;
            };
            query: any;
        };
    };
    handler: (request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit) => Promise<import("@hapi/hapi").ResponseObject>;
};
export namespace bw {
    namespace options {
        namespace validate {
            export namespace options_1 {
                const allowUnknown: boolean;
                const stripUnknown: boolean;
            }
            export { options_1 as options };
            export const query: any;
        }
    }
    /**
     * @param {import('../../types').Request} request
     * @param {import('@hapi/hapi').ResponseToolkit} h
     */
    function handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
    /**
     * @param {import('../../types').Request} request
     * @param {import('@hapi/hapi').ResponseToolkit} h
     */
    function handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
}
//# sourceMappingURL=stats.d.ts.map
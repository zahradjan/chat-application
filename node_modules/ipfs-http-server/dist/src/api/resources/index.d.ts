export var version: {
    options: {
        validate: {
            options: {
                allowUnknown: boolean;
                stripUnknown: boolean;
            };
            query: any;
        };
    };
    handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
};
export var shutdown: {
    handler: (_request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit) => import("@hapi/hapi").ResponseObject;
};
export var id: {
    options: {
        validate: {
            options: {
                allowUnknown: boolean;
                stripUnknown: boolean;
            };
            query: any;
        };
    };
    handler: (request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit) => Promise<import("@hapi/hapi").ResponseObject>;
};
export var ping: {
    options: {
        validate: {
            options: {
                allowUnknown: boolean;
                stripUnknown: boolean;
            };
            query: any;
        };
    };
    handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
};
export var bootstrap: typeof import("./bootstrap");
export var repo: typeof import("./repo");
export var object: typeof import("./object");
export var pin: typeof import("./pin");
export var config: typeof import("./config");
export var block: typeof import("./block");
export var swarm: typeof import("./swarm");
export var bitswap: typeof import("./bitswap");
export var filesRegular: typeof import("./files-regular");
export var pubsub: typeof import("./pubsub");
export var dag: typeof import("./dag");
export var dns: {
    options: {
        validate: {
            options: {
                allowUnknown: boolean;
                stripUnknown: boolean;
            };
            query: any;
        };
    };
    handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
};
export var key: typeof import("./key");
export var stats: typeof import("./stats");
export var resolve: {
    options: {
        validate: {
            options: {
                allowUnknown: boolean;
                stripUnknown: boolean;
            };
            query: any;
        };
    };
    handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
};
export var name: typeof import("./name");
export var dht: typeof import("./dht");
export var files: typeof import("./files");
//# sourceMappingURL=index.d.ts.map
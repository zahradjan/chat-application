export = parser;
/**
 * @param {IncomingMessage} stream
 * @returns {AsyncGenerator<MultipartEntry, void, undefined>}
 */
declare function parser(stream: IncomingMessage): AsyncGenerator<MultipartEntry, void, undefined>;
declare namespace parser {
    export { MultipartUpload, IncomingMessage, Part, MultipartEntry };
}
type IncomingMessage = import('http').IncomingMessage;
type MultipartEntry = import('../types').MultipartEntry;
type MultipartUpload = {
    type: 'file' | 'directory' | 'symlink';
    name: string;
    body: AsyncIterable<Uint8Array>;
    mode?: number | undefined;
    mtime?: import("ipfs-unixfs/types/src/types").Mtime | undefined;
};
type Part = import('it-multipart').Part;
//# sourceMappingURL=multipart-request-parser.d.ts.map
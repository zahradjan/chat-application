export = BlockstoreDatastoreAdapter;
/**
 * @typedef {import('interface-blockstore').Query} Query
 * @typedef {import('interface-blockstore').KeyQuery} KeyQuery
 * @typedef {import('interface-blockstore').Pair} Pair
 * @typedef {import('interface-blockstore').Options} Options
 * @typedef {import('interface-datastore').Datastore} Datastore
 * @typedef {import('interface-blockstore').Blockstore} Blockstore
 */
/**
 * @implements {Blockstore}
 */
declare class BlockstoreDatastoreAdapter extends BlockstoreAdapter implements Blockstore {
    /**
     * @param {Datastore} datastore
     */
    constructor(datastore: Datastore);
    child: import("interface-datastore/dist/src/types").Datastore;
}
declare namespace BlockstoreDatastoreAdapter {
    export { Query, KeyQuery, Pair, Options, Datastore, Blockstore };
}
type Blockstore = import('interface-blockstore').Blockstore;
import { BlockstoreAdapter } from "interface-blockstore";
type Datastore = import('interface-datastore').Datastore;
type Query = import('interface-blockstore').Query;
type KeyQuery = import('interface-blockstore').KeyQuery;
type Pair = import('interface-blockstore').Pair;
type Options = import('interface-blockstore').Options;
//# sourceMappingURL=index.d.ts.map